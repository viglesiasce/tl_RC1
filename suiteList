lib/attachments/attachmentdownload.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/attachments/attachmentdownload.php:if ($args->id)
lib/attachments/attachmentdownload.php:	$attachmentInfo = $attachmentRepository->getAttachmentInfo($args->id);
lib/attachments/attachmentdownload.php:	if ($attachmentInfo && checkAttachmentID($db,$args->id,$attachmentInfo))
lib/attachments/attachmentdownload.php:		$content = $attachmentRepository->getAttachmentContent($args->id,$attachmentInfo);
lib/attachments/attachmentdownload.php:			header("Cache-Control: ");
lib/attachments/attachmentdownload.php:				header('Pragma: no-cache');
lib/attachments/attachmentdownload.php:			header('Content-Type: '.$attachmentInfo['file_type']);
lib/attachments/attachmentdownload.php:			header('Content-Length: '.$attachmentInfo['file_size']);
lib/attachments/attachmentdownload.php:			header("Content-Disposition: attachment; filename=\"{$attachmentInfo['file_name']}\"");
lib/attachments/attachmentdownload.php:			header("Content-Description: Download Data");
lib/attachments/attachmentdownload.php:$smarty->display('attachment404.tpl');
lib/attachments/attachmentdownload.php:	return (config_get("attachments")->enabled);
lib/attachments/attachmentdelete.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/attachments/attachmentdelete.php:if ($args->id)
lib/attachments/attachmentdelete.php:	$attachmentInfo = $attachmentRepository->getAttachmentInfo($args->id);
lib/attachments/attachmentdelete.php:	if ($attachmentInfo && checkAttachmentID($db,$args->id,$attachmentInfo))
lib/attachments/attachmentdelete.php:		$deleteDone = $attachmentRepository->deleteAttachment($args->id,$attachmentInfo);
lib/attachments/attachmentdelete.php:			              $attachmentInfo['title']),"DELETE",$args->id,"attachments");
lib/attachments/attachmentdelete.php:$smarty->assign('bDeleted',$deleteDone);
lib/attachments/attachmentdelete.php:$smarty->display('attachmentdelete.tpl');
lib/attachments/attachmentdelete.php:	return (config_get("attachments")->enabled);
lib/attachments/attachmentupload.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/attachments/attachmentupload.php:$gui->uploaded = false;
lib/attachments/attachmentupload.php:$gui->msg = null;
lib/attachments/attachmentupload.php:$gui->tableName = $args->tableName;
lib/attachments/attachmentupload.php:$gui->import_limit = TL_REPOSITORY_MAXFILESIZE;
lib/attachments/attachmentupload.php:$gui->id = $args->id;
lib/attachments/attachmentupload.php:if ($args->bPostBack)
lib/attachments/attachmentupload.php:	$gui->tableName = $_SESSION['s_upload_tableName'];
lib/attachments/attachmentupload.php:	if ($fInfo && $id && $gui->tableName != "")
lib/attachments/attachmentupload.php:			$gui->uploaded = $attachmentRepository->insertAttachment($id,$gui->tableName,$args->title,$fInfo);
lib/attachments/attachmentupload.php:			if ($gui->uploaded)
lib/attachments/attachmentupload.php:				logAuditEvent(TLS("audit_attachment_created",$args->title,$fInfo['name']),"CREATE",$id,"attachments");
lib/attachments/attachmentupload.php:				$db->exec_query("UPDATE executions e SET has_attach=true WHERE e.id=" . $id);
lib/attachments/attachmentupload.php:			$gui->msg  = getFileUploadErrorMessage($fInfo);
lib/attachments/attachmentupload.php:	$_SESSION['s_upload_tableName'] = $args->tableName;
lib/attachments/attachmentupload.php:	$_SESSION['s_upload_id'] = $args->id;
lib/attachments/attachmentupload.php:$smarty->assign('gui',$gui);
lib/attachments/attachmentupload.php:$smarty->display('attachmentupload.tpl');
lib/attachments/attachmentupload.php:	$args->bPostBack = sizeof($_POST);
lib/attachments/attachmentupload.php:	return (config_get("attachments")->enabled);
lib/bugtracking/int_trackplus.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/bugtracking/int_trackplus.php: * @author Oscar Castroviejo - 20060405 - TRA de GFI
lib/bugtracking/int_trackplus.php:		return $this->showBugURL.$id;		
lib/bugtracking/int_trackplus.php:		if (!$this->isConnected())
lib/bugtracking/int_trackplus.php:		$query = "SELECT STATE FROM {$this->dbName}.TWORKITEM WHERE WORKITEMKEY=" . $id;
lib/bugtracking/int_trackplus.php:		$result = $this->dbConnection->exec_query($query);
lib/bugtracking/int_trackplus.php:			$status = $this->dbConnection->fetch_array($result);
lib/bugtracking/int_trackplus.php:		$status = $this->getBUGStatus($id);
lib/bugtracking/int_trackplus.php:		if (!$this->isConnected())
lib/bugtracking/int_trackplus.php:		$query = "SELECT PACKAGESYNOPSYS FROM {$this->dbName}.TWORKITEM WHERE WORKITEMKEY=" . $id;
lib/bugtracking/int_trackplus.php:		$result = $this->dbConnection->exec_query($query);
lib/bugtracking/int_trackplus.php:			$summary = $this->dbConnection->fetch_array($result);
lib/bugtracking/int_bugtracking.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/bugtracking/int_bugtracking.php: *	20100823 - franciscom - BUGID 3699
lib/bugtracking/int_bugtracking.php: *	20100814 - franciscom - BUGID 3681 - new BTS youtrack (www.jetbrains.com)
lib/bugtracking/int_bugtracking.php: *	20100616 - eloff - Show error message if bts config is broken
lib/bugtracking/int_bugtracking.php: *	20100311 - Julian - BUGID 3256, BUGID 3098
lib/bugtracking/int_bugtracking.php: *	20081217 - franciscom - BUGID 1939
lib/bugtracking/int_bugtracking.php: *	20081102 - franciscom - refactored to ease configuration
lib/bugtracking/int_bugtracking.php: *	20080207 - needles - added notation for Seapine's TestTrackPro
lib/bugtracking/int_bugtracking.php: *	20070505 - franciscom - TL_INTERFACE_BUGS -> $g_interface_bugs
lib/bugtracking/int_bugtracking.php: *	20070304 - franciscom - added new method checkBugID_existence()
lib/bugtracking/int_bugtracking.php:	    $this->tlCharSet = config_get('charset');
lib/bugtracking/int_bugtracking.php:	 		$this->dbCharSet = BUG_TRACK_DB_CHARSET;
lib/bugtracking/int_bugtracking.php:			$this->dbCharSet = $this->tlCharSet;
lib/bugtracking/int_bugtracking.php:		if (is_null($this->dbHost) || is_null($this->dbUser))
lib/bugtracking/int_bugtracking.php:		$this->dbConnection = new database($this->dbType);
lib/bugtracking/int_bugtracking.php:		$result = $this->dbConnection->connect(false, $this->dbHost,$this->dbUser,$this->dbPass, $this->dbName);
lib/bugtracking/int_bugtracking.php:			$this->dbConnection = null;
lib/bugtracking/int_bugtracking.php:			$connection_args = "(interface: $bts_type - Host:$this->dbHost - DBName: $this->dbName - User: $this->dbUser) "; 
lib/bugtracking/int_bugtracking.php:			if ($this->dbCharSet == 'UTF-8')
lib/bugtracking/int_bugtracking.php:				$r = $this->dbConnection->exec_query("SET CHARACTER SET utf8");
lib/bugtracking/int_bugtracking.php:				$r = $this->dbConnection->exec_query("SET NAMES utf8");
lib/bugtracking/int_bugtracking.php:				$r = $this->dbConnection->exec_query("SET collation_connection = 'utf8_general_ci'");
lib/bugtracking/int_bugtracking.php:				$r = $this->dbConnection->exec_query("SET CHARACTER SET ".$this->dbCharSet);
lib/bugtracking/int_bugtracking.php:				$r = $this->dbConnection->exec_query("SET NAMES ".$this->dbCharSet);
lib/bugtracking/int_bugtracking.php:		$this->Connected = $result['status'] ? 1 : 0;
lib/bugtracking/int_bugtracking.php:		return $this->Connected;
lib/bugtracking/int_bugtracking.php:		return ($this->Connected && is_object($this->dbConnection)) ? 1 : 0;
lib/bugtracking/int_bugtracking.php:			$this->dbConnection->close();
lib/bugtracking/int_bugtracking.php:		$this->Connected = false;
lib/bugtracking/int_bugtracking.php:		$this->dbConnection = null;
lib/bugtracking/int_bugtracking.php:		return $this->enterBugURL;
lib/bugtracking/int_bugtracking.php:		$link = "<a href='" .$this->buildViewBugURL($bugID) . "' target='_blank'>";
lib/bugtracking/int_bugtracking.php:		$status = $this->getBugStatusString($bugID);
lib/bugtracking/int_bugtracking.php:			$status = iconv($this->dbCharSet,$this->tlCharSet,$status);
lib/bugtracking/int_bugtracking.php:			$summary = $this->getBugSummaryString($bugID);
lib/bugtracking/int_bugtracking.php:				$summary = iconv($this->dbCharSet,$this->tlCharSet,$summary);
lib/bugtracking/int_bugtracking.php:// -----------------------------------------------------------------------------------
lib/bugtracking/int_bugtracking.php:// -----------------------------------------------------------------------------------
lib/bugtracking/int_bugtracking.php:		$g_bugInterface->connect();
lib/bugtracking/int_bugtracking.php:	$g_bugInterfaceOn = ($g_bugInterface && $g_bugInterface->isConnected());
lib/bugtracking/int_seapine.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/bugtracking/int_seapine.php: * @author needles - 20080207 - created
lib/bugtracking/int_seapine.php: * 20080207 - needles - created
lib/bugtracking/int_seapine.php:		return $this->m_showBugURL.$id;		
lib/bugtracking/int_seapine.php:		if (!$this->isConnected())
lib/bugtracking/int_seapine.php:		$query = "SELECT Name as bug_status from {$this->m_dbName}.defects, {$this->m_dbName}.states
lib/bugtracking/int_seapine.php:				AND states.projectid ='{$this->m_dbProjectID}' 
lib/bugtracking/int_seapine.php:				AND defects.projectid ='{$this->m_dbProjectID}'";
lib/bugtracking/int_seapine.php:		$result = $this->m_dbConnection->exec_query($query);
lib/bugtracking/int_seapine.php:			$status = $this->m_dbConnection->fetch_array($result);
lib/bugtracking/int_seapine.php:		if (!$this->isConnected())
lib/bugtracking/int_seapine.php:		$query = "SELECT Summary as shrt_desc FROM {$this->m_dbName}.defects WHERE DefectNum='" . $id."' 
lib/bugtracking/int_seapine.php:		AND defects.projectid ='{$this->m_dbProjectID}'";
lib/bugtracking/int_seapine.php:		$result = $this->m_dbConnection->exec_query($query);
lib/bugtracking/int_seapine.php:			$summary = $this->m_dbConnection->fetch_array($result);
lib/bugtracking/int_seapine.php:	 * @author Arjen van Summeren - changed to return correct status STRING and not status ID
lib/bugtracking/int_seapine.php:		$status = $this->getBUGStatus($id);
lib/bugtracking/int_jira.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/bugtracking/int_jira.php: * 20070818 - franciscom - BUGID 973 - Patch by hseffler
lib/bugtracking/int_jira.php: * 20070421 - franciscom - BUGID 805
lib/bugtracking/int_jira.php: * 20070403 - franciscom - 
lib/bugtracking/int_jira.php:		return $this->showBugURL.$id;		
lib/bugtracking/int_jira.php: 	 * 2005119 - scs - fixed using of wrong index
lib/bugtracking/int_jira.php:		if (!$this->isConnected())
lib/bugtracking/int_jira.php:		// 20070818 - francisco.mancardi@gruppotesi.com
lib/bugtracking/int_jira.php:		$result = $this->dbConnection->exec_query($query);
lib/bugtracking/int_jira.php:			$status = $this->dbConnection->fetch_array($result);
lib/bugtracking/int_jira.php:	 *      20070818 - franciscom - BUGID
lib/bugtracking/int_jira.php:		$status = $this->getBugStatus($id);
lib/bugtracking/int_jira.php:			$str = $str . " - " . $status;
lib/bugtracking/int_jira.php:		if (!$this->isConnected())
lib/bugtracking/int_jira.php:		$result = $this->dbConnection->exec_query($query);
lib/bugtracking/int_jira.php:			$summary = $this->dbConnection->fetch_array($result);
lib/bugtracking/int_trac.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/bugtracking/int_trac.php: * The interefaces of TestLink - Trac (BTS).
lib/bugtracking/int_trac.php: * TestLink connect to Trac via XML-RPC.
lib/bugtracking/int_trac.php: * @link http://trac-hacks.swapoff.org/wiki/XmlRpcPlugin/ "Trac XmlRpcPlugin"
lib/bugtracking/int_trac.php:// This class use XML-RPC.
lib/bugtracking/int_trac.php:require_once(TL_ABS_PATH . 'third_party/xml-rpc/class-IXR.php');
lib/bugtracking/int_trac.php:        $this->bConnected = true;      
lib/bugtracking/int_trac.php:        return $this->bConnected;
lib/bugtracking/int_trac.php:        return $this->bConnected;
lib/bugtracking/int_trac.php:        $this->bConnected = false;
lib/bugtracking/int_trac.php:        $this->checkConnectionViaXmarpc();
lib/bugtracking/int_trac.php:        $ticketUrl = $this->showBugURL . "/$id";
lib/bugtracking/int_trac.php:        if($this->checkConnectionViaXmarpc() == false) {
lib/bugtracking/int_trac.php:        if ($this->xmlrpcClient->query('ticket.get', $id)) {
lib/bugtracking/int_trac.php:            $xmlrpcResponse = $this->xmlrpcClient->getResponse();
lib/bugtracking/int_trac.php:        if($this->checkConnectionViaXmarpc() == false) {
lib/bugtracking/int_trac.php:        if ($this->xmlrpcClient->query('ticket.get', $id)) {
lib/bugtracking/int_trac.php:            $xmlrpc_response = $this->xmlrpcClient->getResponse();
lib/bugtracking/int_trac.php:		$this->checkConnectionViaXmarpc();
lib/bugtracking/int_trac.php:		return $this->enterBugURL;
lib/bugtracking/int_trac.php:		$link = "<a href='" .$this->buildViewBugURL($bugID) . "' target='_blank'>";
lib/bugtracking/int_trac.php:		$status = $this->getBugStatusString($bugID);
lib/bugtracking/int_trac.php:			$summary = $this->getBugSummaryString($bugID);
lib/bugtracking/int_trac.php:				$link .= " - " . $summary;
lib/bugtracking/int_trac.php:        $this->checkConnectionViaXmarpc();
lib/bugtracking/int_trac.php:        $statusOk = $this->xmlrpcClient->query('ticket.get', $id);
lib/bugtracking/int_trac.php:     * Check the connection of XML-RPC each Test Project
lib/bugtracking/int_trac.php:        if ($this->currentTestProjectName != $tprojectName) {
lib/bugtracking/int_trac.php:                $this->bConnected = false;
lib/bugtracking/int_trac.php:            $this->currentTestProjectName = $tprojectName;
lib/bugtracking/int_trac.php:            $this->dbHost = BUG_TRACK_DB_HOST . $tracProjectName;
lib/bugtracking/int_trac.php:            $this->xmlrpcClient = new IXR_Client($this->dbHost . '/xmlrpc');
lib/bugtracking/int_trac.php:            $this->enterBugURL = $this->dbHost . BUG_TRACK_ENTER_BUG_HREF;
lib/bugtracking/int_trac.php:			$this->showBugURL = $this->dbHost . BUG_TRACK_HREF;
lib/bugtracking/int_mantis.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/bugtracking/int_mantis.php: * 20100313 - franciscom - BUGID 3195
lib/bugtracking/int_mantis.php: * 20080523 - franciscom - 
lib/bugtracking/int_mantis.php: * Contribution Peter Rooms - BUGID 1534 -
lib/bugtracking/int_mantis.php: * 20070304 - franciscom - 
lib/bugtracking/int_mantis.php: * 20070302 - BUGID 
lib/bugtracking/int_mantis.php: * On MS-SQL fetch_array() does not returns numeric indexes, then
lib/bugtracking/int_mantis.php: * Removed also DBNAME on Queries because causes problems with MS-SQL
lib/bugtracking/int_mantis.php:                                  'resolved'     => '#cceedd', # buish-green
lib/bugtracking/int_mantis.php:		return $this->showBugURL.urlencode($id);
lib/bugtracking/int_mantis.php:		if (!$this->isConnected())
lib/bugtracking/int_mantis.php:		$result = $this->dbConnection->exec_query($query);
lib/bugtracking/int_mantis.php:			$status_rs = $this->dbConnection->fetch_array($result);
lib/bugtracking/int_mantis.php:				if( isset($this->code_status[$status_rs['status']]) )
lib/bugtracking/int_mantis.php:			  		$status = $this->code_status[$status_rs['status']];
lib/bugtracking/int_mantis.php:		$status = $this->getBugStatus($id);
lib/bugtracking/int_mantis.php:      		// 20080523 - franciscom - BUGID 1534
lib/bugtracking/int_mantis.php:		if (!$this->isConnected())
lib/bugtracking/int_mantis.php:		// Problems with MS-SQL
lib/bugtracking/int_mantis.php:		$result = $this->dbConnection->exec_query($query);
lib/bugtracking/int_mantis.php:			$summary = $this->dbConnection->fetch_array($result);
lib/bugtracking/int_mantis.php:			// 20070302 - BUGID - on MS-SQL fetch_array() does not returns numeric indexes, then
lib/bugtracking/int_mantis.php:		$result = $this->dbConnection->exec_query($query);
lib/bugtracking/int_mantis.php:		if ($result && ($this->dbConnection->num_rows($result) == 1))
lib/bugtracking/int_mantis.php:      $status = $this->getBugStatus($bugID);
lib/bugtracking/int_mantis.php:      $color = isset($this->status_color[$status]) ? $this->status_color[$status] : 'white';
lib/bugtracking/int_redmine.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/bugtracking/int_redmine.php:		return $this->showBugURL.urlencode($id);
lib/bugtracking/int_redmine.php:		if (!$this->isConnected())
lib/bugtracking/int_redmine.php:		$result = $this->dbConnection->exec_query($query);
lib/bugtracking/int_redmine.php:			$status = $this->dbConnection->fetch_array($result);
lib/bugtracking/int_redmine.php:		$status = $this->getBugStatus($id);
lib/bugtracking/int_redmine.php:			$query_results = $this->dbConnection->exec_query($query);
lib/bugtracking/int_redmine.php:				$result = $this->dbConnection->fetch_array($query_results);
lib/bugtracking/int_redmine.php:		if (!$this->isConnected())
lib/bugtracking/int_redmine.php:		$query_results = $this->dbConnection->exec_query($query);
lib/bugtracking/int_redmine.php:			$summary = $this->dbConnection->fetch_array($query_results);
lib/bugtracking/int_redmine.php:		$query_results = $this->dbConnection->exec_query($query);
lib/bugtracking/int_redmine.php:		if ($query_results && ($this->dbConnection->num_rows($query_results) == 1))
lib/bugtracking/int_bugzilla.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/bugtracking/int_bugzilla.php: * @author Arjen van Summeren - 20051010 - inserted function getBugSummary($id) again, 
lib/bugtracking/int_bugzilla.php: * @author Raphael Bosshard - 20051010 - inserted function getBugSummary($id) again
lib/bugtracking/int_bugzilla.php: * @author Francisco Mancardi - 20050916 - refactoring
lib/bugtracking/int_bugzilla.php: * 20100308 - Julian - added function checkBugID_existence()
lib/bugtracking/int_bugzilla.php: * 20080321 - franciscom - BUGID 1444 - user contribution pvmeerbe
lib/bugtracking/int_bugzilla.php: * 20051202 - scs - added returning null in some cases
lib/bugtracking/int_bugzilla.php: * 20051229 - scs - added ADOdb support
lib/bugtracking/int_bugzilla.php:	    	$this->dbSchema = BUG_TRACK_DB_SCHEMA;
lib/bugtracking/int_bugzilla.php:		return $this->showBugURL.$id;		
lib/bugtracking/int_bugzilla.php:		if (!$this->isConnected())
lib/bugtracking/int_bugzilla.php:		$query = "SELECT bug_status FROM {$this->dbSchema}.bugs WHERE bug_id='" . $id."'";
lib/bugtracking/int_bugzilla.php:		$result = $this->dbConnection->exec_query($query);
lib/bugtracking/int_bugzilla.php:			$status = $this->dbConnection->fetch_array($result);
lib/bugtracking/int_bugzilla.php:                if (!$this->isConnected())
lib/bugtracking/int_bugzilla.php:                $query = "SELECT bug_severity FROM {$this->dbSchema}.bugs WHERE bug_id='" . $id."'";
lib/bugtracking/int_bugzilla.php:                $result = $this->dbConnection->exec_query($query);
lib/bugtracking/int_bugzilla.php:                        $severity = $this->dbConnection->fetch_array($result);
lib/bugtracking/int_bugzilla.php:		if (!$this->isConnected())
lib/bugtracking/int_bugzilla.php:		$query = "SELECT short_desc FROM {$this->dbSchema}.bugs WHERE bug_id='" . $id."'";
lib/bugtracking/int_bugzilla.php:		$result = $this->dbConnection->exec_query($query);
lib/bugtracking/int_bugzilla.php:			$summary = $this->dbConnection->fetch_array($result);
lib/bugtracking/int_bugzilla.php:	 * @author Arjen van Summeren - changed to return correct status STRING and not status ID
lib/bugtracking/int_bugzilla.php:		$status = $this->getBugStatus($id);
lib/bugtracking/int_bugzilla.php:		$severity = $this->getBugSeverity($id);
lib/bugtracking/int_bugzilla.php:				$str = "<del>$severity - " . htmlspecialchars($id). "</del>";
lib/bugtracking/int_bugzilla.php:		$query = "SELECT bug_status FROM {$this->dbSchema}.bugs WHERE bug_id=".$id."";
lib/bugtracking/int_bugzilla.php:		$result = $this->dbConnection->exec_query($query);
lib/bugtracking/int_bugzilla.php:		if ($result && ($this->dbConnection->num_rows($result) == 1) )
lib/bugtracking/int_eventum.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/bugtracking/int_eventum.php:		return $this->showBugURL.urlencode($id);
lib/bugtracking/int_eventum.php:		if (!$this->isConnected())
lib/bugtracking/int_eventum.php:		$result = $this->dbConnection->exec_query($query);
lib/bugtracking/int_eventum.php:			$status = $this->dbConnection->fetch_array($result);
lib/bugtracking/int_eventum.php:		$status = $this->getBugStatus($id);
lib/bugtracking/int_eventum.php:		if (!$this->isConnected())
lib/bugtracking/int_eventum.php:		$result = $this->dbConnection->exec_query($query);
lib/bugtracking/int_eventum.php:			$summary = $this->dbConnection->fetch_array($result);
lib/bugtracking/int_eventum.php:		$result = $this->dbConnection->exec_query($query);
lib/bugtracking/int_eventum.php:		if ($result && ($this->dbConnection->num_rows($result) == 1))
lib/bugtracking/int_gforge.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/bugtracking/int_gforge.php: * @author John Wanke - 20080825 - initial revision.
lib/bugtracking/int_gforge.php:   *         added query for gfproject name and replacement in $this->showBugURL.
lib/bugtracking/int_gforge.php:		if ($this->isConnected())
lib/bugtracking/int_gforge.php:			$result = $this->dbConnection->exec_query($query);
lib/bugtracking/int_gforge.php:				$gfproject = $this->dbConnection->fetch_array($result);
lib/bugtracking/int_gforge.php:					$this->showBugURL = preg_replace('/'.$URLsubstring_to_replace.'/',
lib/bugtracking/int_gforge.php:					                                   $gfproject['unix_name'],$this->showBugURL);
lib/bugtracking/int_gforge.php:		return $this->showBugURL.$id;		
lib/bugtracking/int_gforge.php:	 *         updated $query value to be GForge-specific.
lib/bugtracking/int_gforge.php:		if (!$this->isConnected())
lib/bugtracking/int_gforge.php:		$result = $this->dbConnection->exec_query($query);
lib/bugtracking/int_gforge.php:			$status = $this->dbConnection->fetch_array($result);
lib/bugtracking/int_gforge.php:	 *         updated $query value to be GForge-specific.
lib/bugtracking/int_gforge.php:		if (!$this->isConnected())
lib/bugtracking/int_gforge.php:		$result = $this->dbConnection->exec_query($query);
lib/bugtracking/int_gforge.php:			$summary = $this->dbConnection->fetch_array($result);
lib/bugtracking/int_gforge.php:	 * @author Arjen van Summeren - changed to return correct status STRING and not status ID
lib/bugtracking/int_gforge.php:         *         corrected $this->getBUGStatus($id) to be $this->getBugStatus($id)
lib/bugtracking/int_gforge.php:		$status = $this->getBugStatus($id);
lib/bugtracking/int_gforge.php:		$result = $this->dbConnection->exec_query($query);
lib/bugtracking/int_gforge.php:		if ($result && ($this->dbConnection->num_rows($result) == 1))
lib/bugtracking/int_fogbugz.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/bugtracking/int_fogbugz.php:		return $this->showBugURL.urlencode($id);
lib/bugtracking/int_fogbugz.php:		if (!$this->isConnected())
lib/bugtracking/int_fogbugz.php:		$result = $this->dbConnection->exec_query($query);
lib/bugtracking/int_fogbugz.php:			$status = $this->dbConnection->fetch_array($result);
lib/bugtracking/int_fogbugz.php:		if (!$this->isConnected())
lib/bugtracking/int_fogbugz.php:		$result = $this->dbConnection->exec_query($query);
lib/bugtracking/int_fogbugz.php:			$open = $this->dbConnection->fetch_array($result);
lib/bugtracking/int_fogbugz.php:		$status = $this->getBugStatus($id);
lib/bugtracking/int_fogbugz.php:		$open = $this->getBugOpen($id);
lib/bugtracking/int_fogbugz.php:		if (!$this->isConnected())
lib/bugtracking/int_fogbugz.php:		$result = $this->dbConnection->exec_query($query);
lib/bugtracking/int_fogbugz.php:			$summary = $this->dbConnection->fetch_array($result);
lib/bugtracking/int_fogbugz.php:		$result = $this->dbConnection->exec_query($query);
lib/bugtracking/int_fogbugz.php:		if ($result && ($this->dbConnection->num_rows($result) == 1))
lib/bugtracking/int_jirasoap.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/bugtracking/int_jirasoap.php: * 20100316 - amitkhullar - BugID 3287
lib/bugtracking/int_jirasoap.php:        $soapURL =  $this->baseURL . BUG_TRACK_SOAP_HREF;
lib/bugtracking/int_jirasoap.php:        $this->showBugURL =  $this->baseURL . BUG_TRACK_SHOW_BUG_HREF;
lib/bugtracking/int_jirasoap.php:        $this->enterBugURL = $this->baseURL . BUG_TRACK_ENTER_BUG_HREF;
lib/bugtracking/int_jirasoap.php:        $checkURL = $this->is_valid_url(($this->soapURL));
lib/bugtracking/int_jirasoap.php:            $this->client = new soapclient($soapURL);
lib/bugtracking/int_jirasoap.php:            $soap_token = $this->soap_login();
lib/bugtracking/int_jirasoap.php:            $status = $this->client->getStatuses($soap_token);
lib/bugtracking/int_jirasoap.php:            	$this->status_map[$pair->name]=$pair->id;
lib/bugtracking/int_jirasoap.php:            $token = $this->client->login($this->jiraUsername, $this->jiraPassword);
lib/bugtracking/int_jirasoap.php:         	tLog($e->getMessage(), 'WARNING');
lib/bugtracking/int_jirasoap.php:            $soap_token = $this->soap_login();
lib/bugtracking/int_jirasoap.php:                $issue = $this->client->getIssue($soap_token, $jira_key);
lib/bugtracking/int_jirasoap.php:                    $issue_status_id = $issue->status;
lib/bugtracking/int_jirasoap.php:                    $issue_summary = $issue->summary;
lib/bugtracking/int_jirasoap.php:                    $issue_due_date = !is_null($issue->duedate)? ($issue->duedate): null;
lib/bugtracking/int_jirasoap.php:         	tLog($jira_key . "-" . $e->getMessage(), 'WARNING');
lib/bugtracking/int_jirasoap.php:        $this->connected = true;
lib/bugtracking/int_jirasoap.php:        return $this->connected;
lib/bugtracking/int_jirasoap.php:        return $this->connected;
lib/bugtracking/int_jirasoap.php:        $this->connected = false;
lib/bugtracking/int_jirasoap.php:        return ($this->showBugURL.$id);
lib/bugtracking/int_jirasoap.php:        $jira_id = $this->soap_request($id);
lib/bugtracking/int_jirasoap.php:            $status_desc = array_search($jira_id, $this->status_map);
lib/bugtracking/int_jirasoap.php:            $status_desc = "The BUG Id-".$id." does not exist in BTS";
lib/bugtracking/int_jirasoap.php:        $jira_summary  = $this->soap_request($id,TRUE);
lib/bugtracking/int_jirasoap.php:            $due_date = $this->parse_date($issue_due_date);
lib/bugtracking/int_jirasoap.php:        return $this->enterBugURL;
lib/bugtracking/int_jirasoap.php:        $link = "<a href='" .$this->buildViewBugURL($bugID) . "' target='_blank'>";
lib/bugtracking/int_jirasoap.php:        $status = $this->getBugStatusString($bugID);
lib/bugtracking/int_jirasoap.php:            $summary = $this->getBugSummaryString($bugID);
lib/bugtracking/int_jirasoap.php:                $link .= " - " . $summary;
lib/bugtracking/int_jirasoap.php:        $status = $this->checkBugID($id);
lib/bugtracking/int_jirasoap.php:            $issue_exists = $this->getBugStatusString($id);
lib/bugtracking/int_jirasoap.php:        $this->message = $message;
lib/bugtracking/int_jirasoap.php:        $this->code = $code;
lib/bugtracking/int_jirasoap.php:        $this->severity = $severity;
lib/bugtracking/int_jirasoap.php:        $this->file = $filename;
lib/bugtracking/int_jirasoap.php:        $this->line = $lineno;
lib/bugtracking/int_jirasoap.php:       	return $this->severity;
lib/bugtracking/int_youtrack.php:        $this->urlRest = $this->baseURL . 'rest/';
lib/bugtracking/int_youtrack.php:        $this->urlStates = $this->urlRest . BUG_TRACK_REST_STATES;
lib/bugtracking/int_youtrack.php:        $this->urlLogin = $this->urlRest . BUG_TRACK_REST_LOGIN;
lib/bugtracking/int_youtrack.php:        $this->urlIssue = $this->urlRest . BUG_TRACK_SHOW_ISSUE;
lib/bugtracking/int_youtrack.php:        $this->urlCreateIssue = $this->urlIssue;
lib/bugtracking/int_youtrack.php:        $this->urlGetIssue = $this->urlIssue;
lib/bugtracking/int_youtrack.php:        $this->showBugURL = $this->baseURL . BUG_TRACK_SHOW_ISSUE;
lib/bugtracking/int_youtrack.php:        $this->enterBugURL = $this->baseURL . BUG_TRACK_NEW_ISSUE;
lib/bugtracking/int_youtrack.php:            $this->session = curl_init($this->urlLogin);
lib/bugtracking/int_youtrack.php:            $this->login();
lib/bugtracking/int_youtrack.php:            $this->getStatuses();
lib/bugtracking/int_youtrack.php:            tLog($e->getMessage(), 'ERROR');
lib/bugtracking/int_youtrack.php:        $loginData = 'login=' . $this->username . '&password=' . $this->password;
lib/bugtracking/int_youtrack.php:            $this->session = curl_init();
lib/bugtracking/int_youtrack.php:            curl_setopt($this->session, CURLOPT_URL, $this->urlLogin);
lib/bugtracking/int_youtrack.php:            curl_setopt($this->session, CURLOPT_POST, true);
lib/bugtracking/int_youtrack.php:            curl_setopt($this->session, CURLOPT_POSTFIELDS, $loginData);
lib/bugtracking/int_youtrack.php:            curl_setopt($this->session, CURLOPT_HEADER, false);
lib/bugtracking/int_youtrack.php:            curl_setopt($this->session, CURLOPT_HEADERFUNCTION, array($this, 'readHeader'));
lib/bugtracking/int_youtrack.php:            curl_setopt($this->session, CURLOPT_RETURNTRANSFER, true);
lib/bugtracking/int_youtrack.php:            curl_close($this->session);
lib/bugtracking/int_youtrack.php:            return $this->session;
lib/bugtracking/int_youtrack.php:            tLog($e->getMessage(), 'WARNING');
lib/bugtracking/int_youtrack.php:        $tmp = $this->urlRest . 'user/current';
lib/bugtracking/int_youtrack.php:            curl_setopt($session, CURLOPT_COOKIE, $this->cookie);
lib/bugtracking/int_youtrack.php:            tLog($e->getMessage(), 'WARNING');
lib/bugtracking/int_youtrack.php:     * @param  $string - HTTP response headers
lib/bugtracking/int_youtrack.php:        if (!strncmp($string, "Set-Cookie:", 11)) {
lib/bugtracking/int_youtrack.php:            $cookie_str = trim(substr($string, 11, -1));
lib/bugtracking/int_youtrack.php:            $this->cookie = explode("\n", $cookie_str);
lib/bugtracking/int_youtrack.php:            $this->cookie = explode('=', $this->cookie[0]);
lib/bugtracking/int_youtrack.php:            $cookie_name = trim(array_shift($this->cookie));
lib/bugtracking/int_youtrack.php:            $cookiearr[$cookie_name] = trim(implode('=', $this->cookie));
lib/bugtracking/int_youtrack.php:        $this->cookie = "";
lib/bugtracking/int_youtrack.php:                $this->cookie .= "$key=$value; ";
lib/bugtracking/int_youtrack.php:     * @param  $id - issue ID in YouTrack
lib/bugtracking/int_youtrack.php:        $this->session = curl_init();
lib/bugtracking/int_youtrack.php:        $get_issue_url = $this->urlGetIssue . $id;
lib/bugtracking/int_youtrack.php:            curl_setopt($this->session, CURLOPT_URL, $get_issue_url);
lib/bugtracking/int_youtrack.php:            curl_setopt($this->session, CURLOPT_POST, false);
lib/bugtracking/int_youtrack.php:            curl_setopt($this->session, CURLOPT_HEADER, false);
lib/bugtracking/int_youtrack.php:            curl_setopt($this->session, CURLOPT_RETURNTRANSFER, true);
lib/bugtracking/int_youtrack.php:            curl_setopt($this->session, CURLOPT_COOKIE, $this->cookie);
lib/bugtracking/int_youtrack.php:            curl_setopt($this->session, CURLOPT_VERBOSE, false);
lib/bugtracking/int_youtrack.php:            $response = curl_exec($this->session);
lib/bugtracking/int_youtrack.php:            curl_close($this->session);
lib/bugtracking/int_youtrack.php:            tLog($e->getMessage(), 'WARNING');
lib/bugtracking/int_youtrack.php:        $this->session = curl_init();
lib/bugtracking/int_youtrack.php:        $get_issue_exists = $this->urlGetIssue . $id . "/exists";
lib/bugtracking/int_youtrack.php:            curl_setopt($this->session, CURLOPT_URL, $get_issue_exists);
lib/bugtracking/int_youtrack.php:            curl_setopt($this->session, CURLOPT_POST, false);
lib/bugtracking/int_youtrack.php:            curl_setopt($this->session, CURLOPT_HEADER, false);
lib/bugtracking/int_youtrack.php:            curl_setopt($this->session, CURLOPT_RETURNTRANSFER, true);
lib/bugtracking/int_youtrack.php:            curl_setopt($this->session, CURLOPT_COOKIE, $this->cookie);
lib/bugtracking/int_youtrack.php:            curl_setopt($this->session, CURLOPT_VERBOSE, false);
lib/bugtracking/int_youtrack.php:            $response = curl_exec($this->session);
lib/bugtracking/int_youtrack.php:            curl_close($this->session);
lib/bugtracking/int_youtrack.php:            tLog($e->getMessage(), 'WARNING');
lib/bugtracking/int_youtrack.php:            curl_setopt($session, CURLOPT_URL, $this->urlStates);
lib/bugtracking/int_youtrack.php:            curl_setopt($session, CURLOPT_COOKIE, $this->cookie);
lib/bugtracking/int_youtrack.php:            tLog($e->getMessage(), 'WARNING');
lib/bugtracking/int_youtrack.php:            foreach ($xml->state as $state)
lib/bugtracking/int_youtrack.php:                $this->statusMap[(string) $state['name']] = (string) $state['resolved'];
lib/bugtracking/int_youtrack.php:            tLog($e->getMessage(), 'WARNING');
lib/bugtracking/int_youtrack.php:        $this->Connected = true;
lib/bugtracking/int_youtrack.php:        return $this->Connected;
lib/bugtracking/int_youtrack.php:        return $this->Connected;
lib/bugtracking/int_youtrack.php:        $this->Connected = false;
lib/bugtracking/int_youtrack.php:        return ($this->showBugURL . $id);
lib/bugtracking/int_youtrack.php:     * @param  $id - bug id in YouTrack
lib/bugtracking/int_youtrack.php:            $issueXml = $this->getIssue($id);
lib/bugtracking/int_youtrack.php:            foreach ($xml->field as $field) {
lib/bugtracking/int_youtrack.php:                        $issue_status_id = (string) $field->value;
lib/bugtracking/int_youtrack.php:            tLog($e->getMessage(), 'WARNING');
lib/bugtracking/int_youtrack.php:        $status = $this->getBugStatus($id);
lib/bugtracking/int_youtrack.php:        $status_completion = $this->statusMap["$status"];
lib/bugtracking/int_youtrack.php:        $issueXml = $this->getIssue($id);
lib/bugtracking/int_youtrack.php:            foreach ($xml->field as $field) {
lib/bugtracking/int_youtrack.php:                        $issue_summary = (string) $field->value;
lib/bugtracking/int_youtrack.php:            tLog($e->getMessage(), 'WARNING');
lib/bugtracking/int_youtrack.php:        $link = "<a href='" . $this->buildViewBugURL($bugID) . "' target='_blank'>";
lib/bugtracking/int_youtrack.php:        $status = $this->getBugStatusString($bugID);
lib/bugtracking/int_youtrack.php:            $summary = $this->getBugSummaryString($bugID);
lib/bugtracking/int_youtrack.php:            $responseXML = $this->isIssueExists($id);
lib/bugtracking/int_youtrack.php:            tLog($e->getMessage(), 'WARNING');
lib/usermanagement/usersAssign.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/usermanagement/usersAssign.php: * @copyright 	2005-2010, TestLink community
lib/usermanagement/usersAssign.php: *	20100313 - erikeloff - BUGID 3271 - show only active users on assign to project/test plan
lib/usermanagement/usersAssign.php: *	20091129 - franciscom - ISSUE 2554 - colouring
lib/usermanagement/usersAssign.php:$gui->highlight = initialize_tabsmenu();
lib/usermanagement/usersAssign.php:$gui->user_feedback = '';
lib/usermanagement/usersAssign.php:$gui->no_features = '';
lib/usermanagement/usersAssign.php:$gui->roles_updated = '';
lib/usermanagement/usersAssign.php:$gui->tproject_name = $args->testprojectName;
lib/usermanagement/usersAssign.php:$gui->optRights = tlRole::getAll($db,null,null,null,tlRole::TLOBJ_O_GET_DETAIL_MINIMUM);
lib/usermanagement/usersAssign.php:$gui->features = null;
lib/usermanagement/usersAssign.php:$gui->featureType = $args->featureType;
lib/usermanagement/usersAssign.php:$gui->featureID = null;
lib/usermanagement/usersAssign.php:$gui->role_colour = null;
lib/usermanagement/usersAssign.php:if($guiCfg->usersAssignGlobalRoleColoring == ENABLED) 
lib/usermanagement/usersAssign.php:	$gui->role_colour = tlRole::getRoleColourCfg($db);
lib/usermanagement/usersAssign.php:$target->testprojectID = null;
lib/usermanagement/usersAssign.php:$target->testplanID = null;
lib/usermanagement/usersAssign.php:switch($args->featureType)
lib/usermanagement/usersAssign.php:    	$gui->highlight->assign_users_tproject = 1;
lib/usermanagement/usersAssign.php:    	$gui->roles_updated = lang_get("test_project_user_roles_updated");
lib/usermanagement/usersAssign.php:    	$gui->not_for_you = lang_get("testproject_roles_assign_disabled");
lib/usermanagement/usersAssign.php:    	$assignRolesFor = $args->featureType;
lib/usermanagement/usersAssign.php:    	$target->testprojectID = $args->featureID > 0 ? $args->featureID : null;
lib/usermanagement/usersAssign.php:      	$gui->highlight->assign_users_tplan = 1;
lib/usermanagement/usersAssign.php:    	$gui->roles_updated = lang_get("test_plan_user_roles_updated");
lib/usermanagement/usersAssign.php:    	$gui->not_for_you = lang_get("testplan_roles_assign_disabled");
lib/usermanagement/usersAssign.php:    	$assignRolesFor = $args->featureType;
lib/usermanagement/usersAssign.php:    	$target->testprojectID = $args->testprojectID;
lib/usermanagement/usersAssign.php:if ($args->featureID && $args->doUpdate && $featureMgr)
lib/usermanagement/usersAssign.php:    if(checkRightsForUpdate($db,$args->user,$args->testprojectID,$args->featureType,$args->featureID))
lib/usermanagement/usersAssign.php:        $gui->user_feedback = $gui->roles_updated;
lib/usermanagement/usersAssign.php:// --------------------------------------------------------------------------
lib/usermanagement/usersAssign.php:$gui->users = tlUser::getAll($db,"WHERE active=1",null,null,tlUser::TLOBJ_O_GET_DETAIL_MINIMUM);
lib/usermanagement/usersAssign.php:$args->user = $_SESSION['currentUser'];
lib/usermanagement/usersAssign.php:// --------------------------------------------------------------------------
lib/usermanagement/usersAssign.php:        $info = getTestProjectEffectiveRoles($db,$tprojectMgr,$args,$gui->users);
lib/usermanagement/usersAssign.php:        list($gui->userFeatureRoles,$gui->features,$gui->featureID) = $info;
lib/usermanagement/usersAssign.php:        $target->testprojectID = $gui->featureID;
lib/usermanagement/usersAssign.php:        $info = getTestPlanEffectiveRoles($db,$tplanMgr,$tprojectMgr,$args,$gui->users);
lib/usermanagement/usersAssign.php:        list($gui->userFeatureRoles,$gui->features,$gui->featureID)=$info;
lib/usermanagement/usersAssign.php:$gui->grants = getGrantsForUserMgmt($db,$args->user,$target->testprojectID,-1);
lib/usermanagement/usersAssign.php:if(is_null($gui->features) || count($gui->features) == 0)
lib/usermanagement/usersAssign.php:    $gui->features = null;
lib/usermanagement/usersAssign.php:	$gui->user_feedback = $gui->not_for_you;
lib/usermanagement/usersAssign.php:$smarty->assign('gui',$gui);
lib/usermanagement/usersAssign.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/usermanagement/usersAssign.php:	$args->featureType = $pParams["featureType"];
lib/usermanagement/usersAssign.php:    $args->featureID = $pParams["featureID"];
lib/usermanagement/usersAssign.php:    $args->map_userid_roleid = $pParams["userRole"];
lib/usermanagement/usersAssign.php:    $args->doUpdate = ($pParams["do_update"] != "") ? 1 : 0;
lib/usermanagement/usersAssign.php:    $args->testprojectID = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/usermanagement/usersAssign.php:    $args->testprojectName = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : null;
lib/usermanagement/usersAssign.php:    $args->testplanID = isset($_SESSION['testplanID']) ? $_SESSION['testplanID'] : 0;
lib/usermanagement/usersAssign.php:    $args->user = $_SESSION['currentUser'];
lib/usermanagement/usersAssign.php:    $args->userID = $args->user->dbID;
lib/usermanagement/usersAssign.php:    $answers->role_management = $user->hasRight($db,"role_management");
lib/usermanagement/usersAssign.php:    $answers->testplan_user_role_assignment = $user->hasRight($db,"testplan_user_role_assignment",$args->testprojectID,-1);
lib/usermanagement/usersAssign.php:    if($answers->testplan_user_role_assignment != "yes")
lib/usermanagement/usersAssign.php:        if($args->featureType == 'testplan')
lib/usermanagement/usersAssign.php:            $targetTestPlanID = $args->featureID;
lib/usermanagement/usersAssign.php:        $answers->testplan_user_role_assignment = $user->hasRight($db,"testplan_user_role_assignment",null,$targetTestPlanID);
lib/usermanagement/usersAssign.php:    $answers->user_role_assignment = $user->hasRight($db,"user_role_assignment",null,-1);
lib/usermanagement/usersAssign.php:        $answers->$key = $value == "yes" ? true : false;
lib/usermanagement/usersAssign.php:        $result = $result | $answers->$key; 
lib/usermanagement/usersAssign.php:	if(!$result && ($args->featureType == 'testproject'))
lib/usermanagement/usersAssign.php:	    $feature2check = $args->featureID;
lib/usermanagement/usersAssign.php:	    if($args->featureID == 0 || is_null($args->featureID))
lib/usermanagement/usersAssign.php:	        $feature2check = $args->testprojectID; 
lib/usermanagement/usersAssign.php:        if($user->hasRight($db,"testproject_user_role_assignment",$feature2check,-1) == "yes") 	    
lib/usermanagement/usersAssign.php:            if($user->hasRight($dbHandler,"user_role_assignment",$featureID) == "yes" ||
lib/usermanagement/usersAssign.php:                $user->hasRight($dbHandler,"testproject_user_role_assignment",$featureID,-1,true) == "yes")
lib/usermanagement/usersAssign.php:            $yes_no = $user->hasRight($dbHandler,"testplan_user_role_assignment",
lib/usermanagement/usersAssign.php:	$order_by = $gui_cfg->tprojects_combo_order_by;
lib/usermanagement/usersAssign.php:	$testprojects = $objMgr->get_accessible_for_user($argsObj->userID,'array_of_map',$order_by);
lib/usermanagement/usersAssign.php:	if($argsObj->user->hasRight($dbHandler,"mgt_users"))
lib/usermanagement/usersAssign.php:		    $answer = $argsObj->user->hasRight($dbHandler,"testproject_user_role_assignment",$testprojects[$idx]['id'],-1);
lib/usermanagement/usersAssign.php:	if (!$argsObj->featureID)
lib/usermanagement/usersAssign.php:		if ($argsObj->testprojectID)
lib/usermanagement/usersAssign.php:			$argsObj->featureID = $argsObj->testprojectID;
lib/usermanagement/usersAssign.php:			$argsObj->featureID = $features[0]['id'];
lib/usermanagement/usersAssign.php:		$user->readTestProjectRoles($dbHandler,$argsObj->featureID);
lib/usermanagement/usersAssign.php:	$effectiveRoles = get_tproject_effective_role($dbHandler,$argsObj->featureID,null,$users);
lib/usermanagement/usersAssign.php:	return array($effectiveRoles,$features,$argsObj->featureID);
lib/usermanagement/usersAssign.php:	$activeTestplans = $tprojectMgr->get_all_testplans($argsObj->testprojectID, array('plan_status' => 1));
lib/usermanagement/usersAssign.php:	if($argsObj->user->hasRight($dbHandler,"mgt_users"))
lib/usermanagement/usersAssign.php:			if($argsObj->user->hasRight($dbHandler,"testplan_user_role_assignment",null,$activeTestplans[$idx]['id']) == "yes")
lib/usermanagement/usersAssign.php:	if (!$argsObj->featureID)
lib/usermanagement/usersAssign.php:			if ($argsObj->testplanID)
lib/usermanagement/usersAssign.php:					if ($argsObj->testplanID == $features[$idx]['id'])
lib/usermanagement/usersAssign.php:						$argsObj->featureID = $argsObj->testplanID;
lib/usermanagement/usersAssign.php:			if (!$argsObj->featureID)
lib/usermanagement/usersAssign.php:				$argsObj->featureID = $features[0]['id'];
lib/usermanagement/usersAssign.php:		$user->readTestProjectRoles($dbHandler,$argsObj->testprojectID);
lib/usermanagement/usersAssign.php:		$user->readTestPlanRoles($dbHandler,$argsObj->featureID);
lib/usermanagement/usersAssign.php:	$effectiveRoles = get_tplan_effective_role($dbHandler,$argsObj->featureID,$argsObj->testprojectID,null,$users);
lib/usermanagement/usersAssign.php: 	return array($effectiveRoles,$features,$argsObj->featureID);
lib/usermanagement/usersAssign.php:	$featureMgr->deleteUserRoles($argsObj->featureID);
lib/usermanagement/usersAssign.php:	foreach($argsObj->map_userid_roleid as $user_id => $role_id)
lib/usermanagement/usersAssign.php:			$featureMgr->addUserRole($user_id,$argsObj->featureID,$role_id);
lib/usermanagement/rolesView.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/usermanagement/rolesView.php:switch ($args->doAction)
lib/usermanagement/rolesView.php:		$role = tlRole::getByID($db,$args->roleid,tlRole::TLOBJ_O_GET_DETAIL_MINIMUM);
lib/usermanagement/rolesView.php:			$affectedUsers = $role->getAllUsersWithRole($db);
lib/usermanagement/rolesView.php:	$userFeedback = deleteRole($db,$args->roleid);
lib/usermanagement/rolesView.php:$highlight->view_roles = 1;
lib/usermanagement/rolesView.php:$smarty->assign('highlight',$highlight);
lib/usermanagement/rolesView.php:$smarty->assign('grants',getGrantsForUserMgmt($db,$args->currentUser));
lib/usermanagement/rolesView.php:$smarty->assign('roles',$roles);
lib/usermanagement/rolesView.php:$smarty->assign('id',$args->roleid);
lib/usermanagement/rolesView.php:$smarty->assign('sqlResult',$userFeedback);
lib/usermanagement/rolesView.php:$smarty->assign('affectedUsers',$affectedUsers);
lib/usermanagement/rolesView.php:$smarty->assign('role_id_replacement',config_get('role_replace_for_deleted_roles'));
lib/usermanagement/rolesView.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/usermanagement/rolesView.php:	$args->currentUser = $_SESSION['currentUser'];
lib/usermanagement/rolesView.php:	return $user->hasRight($db,"role_management");
lib/usermanagement/usersEdit.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/usermanagement/usersEdit.php: * @copyright 	2005-2010, TestLink community
lib/usermanagement/usersEdit.php: *	20100502 - franciscom - BUGID 3417
lib/usermanagement/usersEdit.php:$op->user_feedback = '';
lib/usermanagement/usersEdit.php:switch($args->doAction)
lib/usermanagement/usersEdit.php:		$highlight->edit_user = 1;
lib/usermanagement/usersEdit.php:		$user = new tlUser($args->user_id);
lib/usermanagement/usersEdit.php:		$user->readFromDB($db);
lib/usermanagement/usersEdit.php:		$highlight->create_user = 1;
lib/usermanagement/usersEdit.php:		$user = $op->user;
lib/usermanagement/usersEdit.php:		$templateCfg->template = $op->template;
lib/usermanagement/usersEdit.php:		$highlight->edit_user = 1;
lib/usermanagement/usersEdit.php:		$sessionUserID = $_SESSION['currentUser']->dbID;
lib/usermanagement/usersEdit.php:		$user = $op->user;
lib/usermanagement/usersEdit.php:		$highlight->edit_user = 1;
lib/usermanagement/usersEdit.php:		$user = new tlUser($args->user_id);
lib/usermanagement/usersEdit.php:		$user->readFromDB($db);
lib/usermanagement/usersEdit.php:		$highlight->create_user = 1;
lib/usermanagement/usersEdit.php:$op->operation = $actionOperation[$args->doAction];
lib/usermanagement/usersEdit.php:$smarty->assign('highlight',$highlight);
lib/usermanagement/usersEdit.php:$smarty->assign('operation',$op->operation);
lib/usermanagement/usersEdit.php:$smarty->assign('user_feedback',$op->user_feedback);
lib/usermanagement/usersEdit.php:$smarty->assign('external_password_mgmt', tlUser::isPasswordMgtExternal());
lib/usermanagement/usersEdit.php:$smarty->assign('mgt_view_events',$_SESSION['currentUser']->hasRight($db,"mgt_view_events"));
lib/usermanagement/usersEdit.php:$smarty->assign('grants',getGrantsForUserMgmt($db,$_SESSION['currentUser']));
lib/usermanagement/usersEdit.php:$smarty->assign('optRights',$roles);
lib/usermanagement/usersEdit.php:$smarty->assign('userData', $user);
lib/usermanagement/usersEdit.php:                     null -> viewer logic will choose template
lib/usermanagement/usersEdit.php:                     other value -> viever logic will use this template.
lib/usermanagement/usersEdit.php:	$op->user = new tlUser();
lib/usermanagement/usersEdit.php:	$op->status = $op->user->setPassword($argsObj->password);
lib/usermanagement/usersEdit.php:	$op->template = 'usersEdit.tpl';
lib/usermanagement/usersEdit.php:	$op->operation = '';
lib/usermanagement/usersEdit.php:	if ($op->status >= tl::OK)
lib/usermanagement/usersEdit.php:	  	initializeUserProperties($op->user,$argsObj);
lib/usermanagement/usersEdit.php:		$op->status = $op->user->writeToDB($dbHandler);
lib/usermanagement/usersEdit.php:		if($op->status >= tl::OK)
lib/usermanagement/usersEdit.php:		      $op->template = null;
lib/usermanagement/usersEdit.php:		      logAuditEvent(TLS("audit_user_created",$op->user->login),"CREATE",$op->user->dbID,"users");
lib/usermanagement/usersEdit.php:		      $op->user_feedback = sprintf(lang_get('user_created'),$op->user->login);
lib/usermanagement/usersEdit.php:	    $op->operation = 'create';
lib/usermanagement/usersEdit.php:	    $op->user_feedback = getUserErrorMessage($op->status);
lib/usermanagement/usersEdit.php:    $op->user_feedback = '';
lib/usermanagement/usersEdit.php:    $op->user = new tlUser($argsObj->user_id);
lib/usermanagement/usersEdit.php:	$op->status = $op->user->readFromDB($dbHandler);
lib/usermanagement/usersEdit.php:	if ($op->status >= tl::OK)
lib/usermanagement/usersEdit.php:		initializeUserProperties($op->user,$argsObj);
lib/usermanagement/usersEdit.php:		$op->status = $op->user->writeToDB($dbHandler);
lib/usermanagement/usersEdit.php:		if ($op->status >= tl::OK)
lib/usermanagement/usersEdit.php:			logAuditEvent(TLS("audit_user_saved",$op->user->login),"SAVE",$op->user->dbID,"users");
lib/usermanagement/usersEdit.php:			if ($sessionUserID == $argsObj->user_id)
lib/usermanagement/usersEdit.php:				$_SESSION['currentUser'] = $op->user;
lib/usermanagement/usersEdit.php:				setUserSession($dbHandler,$op->user->login, $argsObj->user_id,
lib/usermanagement/usersEdit.php:				               $op->user->globalRoleID, $op->user->emailAddress, $op->user->locale);
lib/usermanagement/usersEdit.php:				if (!$argsObj->user_is_active)
lib/usermanagement/usersEdit.php:		$op->user_feedback = getUserErrorMessage($op->status);
lib/usermanagement/usersEdit.php: *	20100502 - franciscom - BUGID 3417
lib/usermanagement/usersEdit.php:	$op->user_feedback = '';
lib/usermanagement/usersEdit.php:	if( $validator->isValid($smtp_host) )
lib/usermanagement/usersEdit.php:		$op->status = resetPassword($dbHandler,$argsObj->user_id,$op->user_feedback);
lib/usermanagement/usersEdit.php:		if ($op->status >= tl::OK)
lib/usermanagement/usersEdit.php:			logAuditEvent(TLS("audit_pwd_reset_requested",$userObj->login),"PWD_RESET",$argsObj->user_id,"users");
lib/usermanagement/usersEdit.php:			$op->user_feedback = lang_get('password_reseted');
lib/usermanagement/usersEdit.php:			$op->user_feedback = sprintf(lang_get('password_cannot_be_reseted_reason'),$op->user_feedback);
lib/usermanagement/usersEdit.php:		$op->status = tl::ERROR;
lib/usermanagement/usersEdit.php:		$op->user_feedback = lang_get('password_cannot_be_reseted_invalid_smtp_hostname');
lib/usermanagement/usersEdit.php:  returns: -
lib/usermanagement/usersEdit.php:	if (!is_null($argsObj->login))
lib/usermanagement/usersEdit.php:    	$userObj->login = $argsObj->login;
lib/usermanagement/usersEdit.php:	$userObj->emailAddress = $argsObj->emailAddress;
lib/usermanagement/usersEdit.php:	$userObj->firstName = $argsObj->firstName;
lib/usermanagement/usersEdit.php:	$userObj->lastName = $argsObj->lastName;
lib/usermanagement/usersEdit.php:	$userObj->globalRoleID = $argsObj->rights_id;
lib/usermanagement/usersEdit.php:	$userObj->locale = $argsObj->locale;
lib/usermanagement/usersEdit.php:	$userObj->isActive = $argsObj->user_is_active;
lib/usermanagement/usersEdit.php:    return $roleInfo->name;
lib/usermanagement/usersEdit.php:    switch($argsObj->doAction)
lib/usermanagement/usersEdit.php:    		$tpl = $templateCfg->default_template;
lib/usermanagement/usersEdit.php:        if(!is_null($templateCfg->template))
lib/usermanagement/usersEdit.php:            $tpl = $templateCfg->template;
lib/usermanagement/usersEdit.php:        $smartyObj->display($templateCfg->template_dir . $tpl);
lib/usermanagement/usersEdit.php:	return $user->hasRight($db,'mgt_users');
lib/usermanagement/userInfo.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/usermanagement/userInfo.php: * @author 		-
lib/usermanagement/userInfo.php: * @copyright 	2007-2009, TestLink community 
lib/usermanagement/userInfo.php: *	20100106 - franciscom - security improvement - checkDoAction()
lib/usermanagement/userInfo.php: *                        - BUGID 3043 -  genApiKey -> genAPIKey
lib/usermanagement/userInfo.php:$user = new tlUser($args->userID);
lib/usermanagement/userInfo.php:$user->readFromDB($db);
lib/usermanagement/userInfo.php:$op->auditMsg = null;
lib/usermanagement/userInfo.php:$op->user_feedback = null;
lib/usermanagement/userInfo.php:$op->status = tl::OK;
lib/usermanagement/userInfo.php:switch($args->doAction)
lib/usermanagement/userInfo.php:		foreach($args->user as $key => $value)
lib/usermanagement/userInfo.php:			$user->$key = $value;
lib/usermanagement/userInfo.php:		$op->status = tl::OK;
lib/usermanagement/userInfo.php:		$op->auditMsg = "audit_user_saved";
lib/usermanagement/userInfo.php:		$op->user_feedback = lang_get('result_user_changed');
lib/usermanagement/userInfo.php:	    $doUpdate = ($op->status >= tl::OK);
lib/usermanagement/userInfo.php:	$op->status = $user->writeToDB($db);
lib/usermanagement/userInfo.php:	if ($op->status >= tl::OK)
lib/usermanagement/userInfo.php:		logAuditEvent(TLS($op->auditMsg,$user->login),"SAVE",$user->dbID,"users");
lib/usermanagement/userInfo.php:		setUserSession($db,$user->login, $args->userID, $user->globalRoleID, $user->emailAddress, $user->locale);
lib/usermanagement/userInfo.php:$loginHistory->failed = $g_tlLogger->getAuditEventsFor($args->userID,"users","LOGIN_FAILED",10);
lib/usermanagement/userInfo.php:$loginHistory->ok = $g_tlLogger->getAuditEventsFor($args->userID,"users","LOGIN",10);
lib/usermanagement/userInfo.php:if ($op->status != tl::OK)
lib/usermanagement/userInfo.php:	$op->user_feedback = getUserErrorMessage($op->status);
lib/usermanagement/userInfo.php:$user->readFromDB($db);
lib/usermanagement/userInfo.php:if (null == $user->userApiKey)
lib/usermanagement/userInfo.php:	$user->userApiKey = TLS('none');
lib/usermanagement/userInfo.php:$smarty->assign('external_password_mgmt',tlUser::isPasswordMgtExternal());
lib/usermanagement/userInfo.php:$smarty->assign('user',$user);
lib/usermanagement/userInfo.php:$smarty->assign('api_ui_show',$user);
lib/usermanagement/userInfo.php:$smarty->assign('mgt_view_events',$user->hasRight($db,"mgt_view_events"));
lib/usermanagement/userInfo.php:$smarty->assign('loginHistory', $loginHistory);
lib/usermanagement/userInfo.php:$smarty->assign('user_feedback', $op->user_feedback);
lib/usermanagement/userInfo.php:$smarty->assign('update_title_bar',0);
lib/usermanagement/userInfo.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/usermanagement/userInfo.php:    $args->user = new stdClass();
lib/usermanagement/userInfo.php: 	$args->user->firstName = $pParams["firstName"];
lib/usermanagement/userInfo.php:	$args->user->lastName = $pParams["lastName"];
lib/usermanagement/userInfo.php:	$args->user->emailAddress = $pParams["emailAddress"];
lib/usermanagement/userInfo.php:	$args->user->locale = $pParams["locale"];
lib/usermanagement/userInfo.php:	$args->oldpassword = $pParams["oldpassword"];
lib/usermanagement/userInfo.php:	$args->newpassword = $pParams["newpassword"];
lib/usermanagement/userInfo.php:	$args->doAction = $pParams["doAction"];
lib/usermanagement/userInfo.php:	$args->userID = isset($_SESSION['currentUser']) ? $_SESSION['currentUser']->dbID : 0;
lib/usermanagement/userInfo.php:    $op->status = $userMgr->comparePassword($argsObj->oldpassword);
lib/usermanagement/userInfo.php:    $op->user_feedback = '';
lib/usermanagement/userInfo.php:    $op->auditMsg = '';
lib/usermanagement/userInfo.php:	if ($op->status == tl::OK)
lib/usermanagement/userInfo.php:		$userMgr->setPassword($argsObj->newpassword);
lib/usermanagement/userInfo.php:		$op->user_feedback = lang_get('result_password_changed');
lib/usermanagement/userInfo.php:		$op->auditMsg = "audit_user_pwd_saved";
lib/usermanagement/userInfo.php:    $op->status = tl::OK;
lib/usermanagement/userInfo.php:    $op->user_feedback = null;
lib/usermanagement/userInfo.php:	    if ($APIKey->addKeyForUser($argsObj->userID) < tl::OK)
lib/usermanagement/userInfo.php:			logAuditEvent(TLS("audit_user_apikey_set",$user->login),"CREATE",$user->login,"users");
lib/usermanagement/userInfo.php:			$op->user_feedback = lang_get('result_apikey_create_ok');
lib/usermanagement/usersView.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/usermanagement/usersView.php: * @author 		-
lib/usermanagement/usersView.php: * @copyright 	2007-2009, TestLink community 
lib/usermanagement/usersView.php: *  20100419 - franciscom - BUGID 3355: A user can not be deleted from the list
lib/usermanagement/usersView.php: *	20100326 - franciscom - BUGID 3324
lib/usermanagement/usersView.php: *	20100106 - franciscom - security improvement - checkUserOrderBy()
lib/usermanagement/usersView.php:$grants = getGrantsForUserMgmt($db,$args->currentUser);
lib/usermanagement/usersView.php:$orderBy->type = 'order_by_login';
lib/usermanagement/usersView.php:$orderBy->dir = array('order_by_login_dir' => 'asc');
lib/usermanagement/usersView.php:switch($args->operation)
lib/usermanagement/usersView.php:		if ($args->user_id != $args->currentUserID)
lib/usermanagement/usersView.php:			$user = new tlUser($args->user_id);
lib/usermanagement/usersView.php:			$sqlResult = $user->readFromDB($db);
lib/usermanagement/usersView.php:				$userLogin = $user->login;
lib/usermanagement/usersView.php:				$sqlResult = $user->setActive($db,0);
lib/usermanagement/usersView.php:					logAuditEvent(TLS("audit_user_disabled",$user->login),"DISABLE",$args->user_id,"users");
lib/usermanagement/usersView.php:		$orderBy->type = $args->user_order_by;
lib/usermanagement/usersView.php:		$orderBy->dir = $args->order_by_dir;
lib/usermanagement/usersView.php:	// 	if ($args->user_id != $args->currentUserID)
lib/usermanagement/usersView.php:	// 		$user = new tlUser($args->user_id);
lib/usermanagement/usersView.php:	// 		$sqlResult = $user->readFromDB($db);
lib/usermanagement/usersView.php:	// 			$userLogin = $user->login;
lib/usermanagement/usersView.php:	// 			$sqlResult = $user->deleteFromDB($db);
lib/usermanagement/usersView.php:	// 				logAuditEvent(TLS("audit_user_deleted",$user->login),"DELETE",$args->user_id,"users");
lib/usermanagement/usersView.php:	// 	$orderBy->type = $args->user_order_by;
lib/usermanagement/usersView.php:	// 	$orderBy->dir = $args->order_by_dir;
lib/usermanagement/usersView.php:		$orderBy->type = $args->operation;
lib/usermanagement/usersView.php:		$orderBy->dir = $args->order_by_dir;
lib/usermanagement/usersView.php:		$args->user_order_by = $args->operation;
lib/usermanagement/usersView.php:		$the_k = $args->operation . "_dir";
lib/usermanagement/usersView.php:		$args->order_by_dir[$the_k] = $args->order_by_dir[$the_k] == 'asc' ? 'desc' : 'asc';
lib/usermanagement/usersView.php:// $body_onload = "onload=\"toggleRowByClass('hide_inactive_users','inactive_user','table-row')\"";
lib/usermanagement/usersView.php:$highlight->view_users = 1;
lib/usermanagement/usersView.php:$smarty->assign('highlight',$highlight);
lib/usermanagement/usersView.php:$smarty->assign('user_feedback',$user_feedback);
lib/usermanagement/usersView.php:$smarty->assign('user_order_by',$args->user_order_by);
lib/usermanagement/usersView.php:$smarty->assign('order_by_role_dir',$args->order_by_dir['order_by_role_dir']);
lib/usermanagement/usersView.php:$smarty->assign('order_by_login_dir',$args->order_by_dir['order_by_login_dir']);
lib/usermanagement/usersView.php:$smarty->assign('role_colour',getRoleColourCfg($db));
lib/usermanagement/usersView.php:$smarty->assign('update_title_bar',0);
lib/usermanagement/usersView.php:$smarty->assign('reload',0);
lib/usermanagement/usersView.php:$smarty->assign('users',$users);
lib/usermanagement/usersView.php:$smarty->assign('result',$sqlResult);
lib/usermanagement/usersView.php:$smarty->assign('action',$action);
lib/usermanagement/usersView.php:$smarty->assign('base_href', $args->basehref);
lib/usermanagement/usersView.php:$smarty->assign('grants',$grants);
lib/usermanagement/usersView.php:$smarty->assign('body_onload',$args->body_onload);
lib/usermanagement/usersView.php:$smarty->assign('checked_hide_inactive_users',$args->checked_hide_inactive_users);
lib/usermanagement/usersView.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/usermanagement/usersView.php:	switch($order->type)
lib/usermanagement/usersView.php:			$order_by_clause = " ORDER BY description " . $order->dir['order_by_role_dir'];
lib/usermanagement/usersView.php:			$order_by_clause = " ORDER BY login " . $order->dir['order_by_login_dir'];
lib/usermanagement/usersView.php:	$args->operation = $pParams["operation"];
lib/usermanagement/usersView.php:    $args->user_order_by = ($pParams["user_order_by"] != '') ? $pParams["user_order_by"] : 'order_by_login';
lib/usermanagement/usersView.php:    $args->order_by_dir["order_by_role_dir"] = ($pParams["order_by_role_dir"] != '') ? $pParams["order_by_role_dir"] : 'asc';
lib/usermanagement/usersView.php:    $args->order_by_dir["order_by_login_dir"] = ($pParams["order_by_login_dir"] != '') ? $pParams["order_by_login_dir"] : 'asc';
lib/usermanagement/usersView.php:    $args->user_id = $pParams['user'];
lib/usermanagement/usersView.php:	$args->hide_inactive_users = $pParams["hide_inactive_users"];
lib/usermanagement/usersView.php:	$args->checked_hide_inactive_users = $args->hide_inactive_users ? 'checked="checked"' : '';
lib/usermanagement/usersView.php:	$display = $args->hide_inactive_users ? 'none' : 'table-row';
lib/usermanagement/usersView.php:	$args->body_onload = "onload=\"toggleRowByClass('hide_inactive_users','inactive_user','{$display}')\"";
lib/usermanagement/usersView.php:    $args->currentUser = $_SESSION['currentUser'];
lib/usermanagement/usersView.php:    $args->currentUserID = $_SESSION['currentUser']->dbID;
lib/usermanagement/usersView.php:    $args->basehref =  $_SESSION['basehref'];
lib/usermanagement/usersView.php:    	if(!isset($role_colour[$roleObj->name]))
lib/usermanagement/usersView.php:            $role_colour[$roleObj->name] = '';
lib/usermanagement/usersView.php:	return $user->hasRight($db,'mgt_users');
lib/usermanagement/rolesEdit.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/usermanagement/rolesEdit.php: *	20091124 - franciscom - added contribution item template
lib/usermanagement/rolesEdit.php: *	20081030 - franciscom - added system_mgmt member on getRightsCfg()
lib/usermanagement/rolesEdit.php: *	20080827 - franciscom - BUGID 1692
lib/usermanagement/rolesEdit.php:$owebeditor = web_editor('notes',$args->basehref,$editorCfg) ;
lib/usermanagement/rolesEdit.php:$owebeditor->Value = getItemTemplateContents('role_template', $owebeditor->InstanceName, null);
lib/usermanagement/rolesEdit.php:switch($args->doAction)
lib/usermanagement/rolesEdit.php:	    $op->role = tlRole::getByID($db,$args->roleid);
lib/usermanagement/rolesEdit.php:	  	  	$op = doOperation($db,$args,$args->doAction);
lib/usermanagement/rolesEdit.php:	  	  	$templateCfg->template = $op->template;
lib/usermanagement/rolesEdit.php:$gui = complete_gui($db,$gui,$args,$op->role,$owebeditor);
lib/usermanagement/rolesEdit.php:$gui->userFeedback = $op->userFeedback;
lib/usermanagement/rolesEdit.php:$smarty->assign('gui',$gui);
lib/usermanagement/rolesEdit.php:$smarty->assign('highlight',$gui->highlight);
lib/usermanagement/rolesEdit.php:	$args->basehref = $_SESSION['basehref'];
lib/usermanagement/rolesEdit.php:	$rights = implode("','",array_keys($argsObj->grant));
lib/usermanagement/rolesEdit.php: 	$op->role = new tlRole();
lib/usermanagement/rolesEdit.php:	$op->role->rights = tlRight::getAll($dbHandler,"WHERE description IN ('{$rights}')");
lib/usermanagement/rolesEdit.php:	$op->role->name = $argsObj->rolename;
lib/usermanagement/rolesEdit.php:	$op->role->description = $argsObj->notes;
lib/usermanagement/rolesEdit.php:	$op->role->dbID = $argsObj->roleid;
lib/usermanagement/rolesEdit.php:	$op->userFeedback = null;
lib/usermanagement/rolesEdit.php:	$op->template = 'rolesEdit.tpl';
lib/usermanagement/rolesEdit.php:	$result = $op->role->writeToDB($dbHandler);
lib/usermanagement/rolesEdit.php:		logAuditEvent(TLS($auditCfg['msg'],$argsObj->rolename),$auditCfg['activity'],$op->role->dbID,"roles");
lib/usermanagement/rolesEdit.php:		$op->template = null;
lib/usermanagement/rolesEdit.php:    	$op->userFeedback = getRoleErrorMessage($result);
lib/usermanagement/rolesEdit.php:    switch($argsObj->doAction)
lib/usermanagement/rolesEdit.php:    		$tpl = $templateCfg->default_template;
lib/usermanagement/rolesEdit.php:        	if(!is_null($templateCfg->template))
lib/usermanagement/rolesEdit.php:            	$tpl = $templateCfg->template;
lib/usermanagement/rolesEdit.php:		$smartyObj->display($templateCfg->template_dir . $tpl);
lib/usermanagement/rolesEdit.php:  args : -
lib/usermanagement/rolesEdit.php:  rev: 20081030 - franciscom - added system_mgmt member
lib/usermanagement/rolesEdit.php:    $cfg->tplan_mgmt = config_get('rights_tp');
lib/usermanagement/rolesEdit.php:    $cfg->tcase_mgmt = config_get('rights_mgttc');
lib/usermanagement/rolesEdit.php:    $cfg->kword_mgmt = config_get('rights_kw');
lib/usermanagement/rolesEdit.php:    $cfg->tproject_mgmt = config_get('rights_product');
lib/usermanagement/rolesEdit.php:    $cfg->user_mgmt = config_get('rights_users');
lib/usermanagement/rolesEdit.php:    $cfg->req_mgmt = config_get('rights_req');
lib/usermanagement/rolesEdit.php:    $cfg->cfield_mgmt = config_get('rights_cf');
lib/usermanagement/rolesEdit.php:    $cfg->system_mgmt = config_get('rights_system');
lib/usermanagement/rolesEdit.php:    $cfg->platform_mgmt = config_get('rights_platforms');
lib/usermanagement/rolesEdit.php:    $gui->checkboxStatus = null;
lib/usermanagement/rolesEdit.php:    $gui->userFeedback = null;
lib/usermanagement/rolesEdit.php:    $gui->affectedUsers = null;
lib/usermanagement/rolesEdit.php:    $gui->highlight = initialize_tabsmenu();
lib/usermanagement/rolesEdit.php:    $gui->editorType = $editorType;
lib/usermanagement/rolesEdit.php:    $op->role = new tlRole();
lib/usermanagement/rolesEdit.php:    $op->userFeedback = '';
lib/usermanagement/rolesEdit.php:    $guiObj->highlight->$actionCfg['highlight'][$argsObj->doAction] = 1;
lib/usermanagement/rolesEdit.php:    $guiObj->operation = $actionCfg['operation'][$argsObj->doAction];
lib/usermanagement/rolesEdit.php:    $guiObj->role = $roleObj;
lib/usermanagement/rolesEdit.php:    $guiObj->grants = getGrantsForUserMgmt($dbHandler,$_SESSION['currentUser']);
lib/usermanagement/rolesEdit.php:    $guiObj->rightsCfg = getRightsCfg();
lib/usermanagement/rolesEdit.php:	$guiObj->mgt_view_events = $_SESSION['currentUser']->hasRight($db,"mgt_view_events");
lib/usermanagement/rolesEdit.php:    foreach($guiObj->rightsCfg as $grantDetails)
lib/usermanagement/rolesEdit.php:			$guiObj->checkboxStatus[$grantCode] = "";
lib/usermanagement/rolesEdit.php:    if($roleObj->dbID)
lib/usermanagement/rolesEdit.php:    	$webEditorObj->Value = $roleObj->description;
lib/usermanagement/rolesEdit.php:    	if(sizeof($roleObj->rights))
lib/usermanagement/rolesEdit.php:    	    foreach($roleObj->rights as $key => $right)
lib/usermanagement/rolesEdit.php:    	    	$guiObj->checkboxStatus[$right->name] = "checked=\"checked\"";
lib/usermanagement/rolesEdit.php:		$guiObj->affectedUsers = $roleObj->getAllUsersWithRole($dbHandler);
lib/usermanagement/rolesEdit.php:    $guiObj->notes = $webEditorObj->CreateHTML();
lib/usermanagement/rolesEdit.php:	return $user->hasRight($db,"role_management");
lib/inventory/inventoryView.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/inventory/inventoryView.php:$gui->rightEdit = has_rights($db,"project_inventory_management");
lib/inventory/inventoryView.php:$gui->rightView = has_rights($db,"project_inventory_view");
lib/inventory/inventoryView.php:$smarty->assign('gui',$gui);
lib/inventory/inventoryView.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/inventory/setInventory.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/inventory/setInventory.php:if ($_SESSION['currentUser']->hasRight($db,"project_inventory_management"))
lib/inventory/setInventory.php:	$data['success'] = $tlIs->setInventory($args);
lib/inventory/setInventory.php:	$data['success'] = ($data['success'] == 1 /*$tlIs->OK*/) ? true : false;
lib/inventory/setInventory.php:	$data['userfeedback'] = $tlIs->getUserFeedback();
lib/inventory/setInventory.php:	$data['record'] = $tlIs->getCurrentData();
lib/inventory/getInventory.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/inventory/getInventory.php:$data = $tlIs->getAll();
lib/inventory/getInventory.php:$users = $tlUser->getNames($db);
lib/inventory/deleteInventory.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/inventory/deleteInventory.php:if ($_SESSION['currentUser']->hasRight($db,"project_inventory_management"))
lib/inventory/deleteInventory.php:	$tlIs = new tlInventory($args->testprojectId, $db);
lib/inventory/deleteInventory.php:	$data['success'] = $tlIs->deleteInventory($args->machineID);
lib/inventory/deleteInventory.php:	$data['success'] = ($data['success'] == 1 /*$tlIs->OK*/) ? true : false;
lib/inventory/deleteInventory.php:	$data['userfeedback'] = $tlIs->getUserFeedback();
lib/inventory/deleteInventory.php:    $args->testprojectId = $_SESSION['testprojectID'];
lib/inventory/deleteInventory.php:    $args->userId = $_SESSION['userID'];
lib/inventory/deleteInventory.php:	return $user->hasRight($db,"project_inventory_management");
lib/cfields/cfieldsImport.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/cfields/cfieldsImport.php: * @copyright 	2005-2009, TestLink community 
lib/cfields/cfieldsImport.php: * 20100315 - franciscom - added tlInputParameter() on init_args
lib/cfields/cfieldsImport.php: * 20090719 - franciscom - db table prefix management		
lib/cfields/cfieldsImport.php:$gui->page_title=lang_get('import_cfields');
lib/cfields/cfieldsImport.php:$gui->goback_url = !is_null($args->goback_url) ? $args->goback_url : ''; 
lib/cfields/cfieldsImport.php:$gui->file_check = array('show_results' => 0, 'status_ok' => 1, 
lib/cfields/cfieldsImport.php:switch( $args->doAction )
lib/cfields/cfieldsImport.php:        $gui->file_check = doImport($db);
lib/cfields/cfieldsImport.php:$gui->importTypes = array('XML' => 'XML');
lib/cfields/cfieldsImport.php:$gui->importLimitKB = (config_get('import_file_max_size_bytes') / 1024);
lib/cfields/cfieldsImport.php:$smarty->assign('gui',$gui);  
lib/cfields/cfieldsImport.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/cfields/cfieldsImport.php:  	// $args->doAction = isset($_REQUEST['doAction']) ? $_REQUEST['doAction'] : null;
lib/cfields/cfieldsImport.php:  	// $args->export_filename=isset($_REQUEST['export_filename']) ? $_REQUEST['export_filename'] : null;
lib/cfields/cfieldsImport.php:  	// $args->goback_url = isset($_REQUEST['goback_url']) ? $_REQUEST['goback_url'] : null;
lib/cfields/cfieldsImport.php:  	$args->userID = $_SESSION['userID'];
lib/cfields/cfieldsImport.php:	$dest = TL_TEMP_PATH . session_id(). "-import_cfields.tmp";
lib/cfields/cfieldsImport.php:                if( is_null($cfield_mgr->get_by_name($cf->name)) )
lib/cfields/cfieldsImport.php:                    $cfield_mgr->create((array) $cf);
lib/cfields/cfieldsImport.php:                    $import_msg['ok'][]=sprintf(lang_get('custom_field_imported'),$cf->name);              
lib/cfields/cfieldsImport.php:                    $import_msg['ko'][]=sprintf(lang_get('custom_field_already_exists'),$cf->name);              
lib/cfields/cfieldsImport.php:	return $user->hasRight($db,"cfield_management");
lib/cfields/cfieldsTprojectAssign.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/cfields/cfieldsTprojectAssign.php:switch($args->doAction)
lib/cfields/cfieldsTprojectAssign.php:	    $cfield_ids = array_keys($args->cfield);
lib/cfields/cfieldsTprojectAssign.php:	    $cfield_mgr->link_to_testproject($args->testproject_id,$cfield_ids);
lib/cfields/cfieldsTprojectAssign.php:	    $cfield_ids = array_keys($args->cfield);
lib/cfields/cfieldsTprojectAssign.php:	    $cfield_mgr->unlink_from_testproject($args->testproject_id,$cfield_ids);
lib/cfields/cfieldsTprojectAssign.php:	    $cfield_ids = array_keys($args->display_order);
lib/cfields/cfieldsTprojectAssign.php:	    $cfield_mgr->set_display_order($args->testproject_id,$args->display_order);
lib/cfields/cfieldsTprojectAssign.php:        if( !is_null($args->location) )
lib/cfields/cfieldsTprojectAssign.php:        	$cfield_mgr->setDisplayLocation($args->testproject_id,$args->location);
lib/cfields/cfieldsTprojectAssign.php:		$my_cf = array_keys($args->hidden_active_cfield);
lib/cfields/cfieldsTprojectAssign.php:		if(!isset($args->active_cfield))
lib/cfields/cfieldsTprojectAssign.php:			$cfield_mgr->set_active_for_testproject($args->testproject_id,$my_cf,0);
lib/cfields/cfieldsTprojectAssign.php:				if(isset($args->active_cfield[$cf_id]))
lib/cfields/cfieldsTprojectAssign.php:				$cfield_mgr->set_active_for_testproject($args->testproject_id,$active,1);
lib/cfields/cfieldsTprojectAssign.php:				$cfield_mgr->set_active_for_testproject($args->testproject_id,$inactive,0);
lib/cfields/cfieldsTprojectAssign.php:$cfield_map = $cfield_mgr->get_all();
lib/cfields/cfieldsTprojectAssign.php:$gui->locations=createLocationsMenu($cfield_mgr->getLocations());
lib/cfields/cfieldsTprojectAssign.php:$gui->tproject_name = $args->testproject_name;
lib/cfields/cfieldsTprojectAssign.php:$gui->my_cf = $cfield_mgr->get_linked_to_testproject($args->testproject_id);
lib/cfields/cfieldsTprojectAssign.php:$cf2exclude = is_null($gui->my_cf) ? null :array_keys($gui->my_cf);
lib/cfields/cfieldsTprojectAssign.php:$gui->other_cf = $cfield_mgr->get_all($cf2exclude);
lib/cfields/cfieldsTprojectAssign.php:$gui->cf_available_types = $cfield_mgr->get_available_types();
lib/cfields/cfieldsTprojectAssign.php:$gui->cf_allowed_nodes = array();
lib/cfields/cfieldsTprojectAssign.php:$allowed_nodes = $cfield_mgr->get_allowed_nodes();
lib/cfields/cfieldsTprojectAssign.php:	$gui->cf_allowed_nodes[$type_id] = lang_get($verbose_type);
lib/cfields/cfieldsTprojectAssign.php:$smarty->assign('gui',$gui);
lib/cfields/cfieldsTprojectAssign.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/cfields/cfieldsTprojectAssign.php:        $args->$key = isset($_REQUEST[$key]) ? $_REQUEST[$key] : null;
lib/cfields/cfieldsTprojectAssign.php:    if (!$args->cfield)
lib/cfields/cfieldsTprojectAssign.php:	  $args->cfield = array();
lib/cfields/cfieldsTprojectAssign.php:	$args->testproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/cfields/cfieldsTprojectAssign.php:	$args->testproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : 0;
lib/cfields/cfieldsTprojectAssign.php:	return $user->hasRight($db,"cfield_management");
lib/cfields/cfieldsView.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/cfields/cfieldsView.php:$gui->cf_map = $cfield_mgr->get_all();
lib/cfields/cfieldsView.php:$gui->cf_types = $cfield_mgr->get_available_types();
lib/cfields/cfieldsView.php:$smarty->assign('gui',$gui);
lib/cfields/cfieldsView.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/cfields/cfieldsView.php:	return $user->hasRight($db,"cfield_view");
lib/cfields/cfieldsExport.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/cfields/cfieldsExport.php: * @copyright 	2005-2009, TestLink community 
lib/cfields/cfieldsExport.php: * 20100315 - franciscom - added tlInputParameter() on init_args + goback managament
lib/cfields/cfieldsExport.php: * 20090719 - franciscom - db table prefix management		
lib/cfields/cfieldsExport.php:$gui->page_title = lang_get('export_cfields');
lib/cfields/cfieldsExport.php:$gui->do_it = 1;
lib/cfields/cfieldsExport.php:$gui->nothing_todo_msg = '';
lib/cfields/cfieldsExport.php:$gui->goback_url = !is_null($args->goback_url) ? $args->goback_url : ''; 
lib/cfields/cfieldsExport.php:$gui->export_filename = is_null($args->export_filename) ? 'customFields.xml' : $args->export_filename;
lib/cfields/cfieldsExport.php:$gui->exportTypes = array('XML' => 'XML');
lib/cfields/cfieldsExport.php:switch( $args->doAction )
lib/cfields/cfieldsExport.php:	    doExport($db,$gui->export_filename);
lib/cfields/cfieldsExport.php:$smarty->assign('gui',$gui);
lib/cfields/cfieldsExport.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/cfields/cfieldsExport.php:  	$args->userID = $_SESSION['userID'];
lib/cfields/cfieldsExport.php:  returns: -
lib/cfields/cfieldsExport.php:    $adodbXML = new ADODB_XML("1.0", "ISO-8859-1");
lib/cfields/cfieldsExport.php:    $adodbXML->setRootTagName('custom_fields');
lib/cfields/cfieldsExport.php:    $adodbXML->setRowTagName('custom_field');
lib/cfields/cfieldsExport.php:    $content = $adodbXML->ConvertToXMLString($dbHandler->db, $sql);
lib/cfields/cfieldsExport.php:	return $user->hasRight($db,"cfield_view");
lib/cfields/cfieldsEdit.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/cfields/cfieldsEdit.php: * rev: 20090531 - franciscom - minor bug additional first char ' ' on name and label
lib/cfields/cfieldsEdit.php: *      20090524 - franciscom - logic changes to give user a better understanding
lib/cfields/cfieldsEdit.php: *      20090503 - franciscom - BUGID 2425
lib/cfields/cfieldsEdit.php: *      20090408 - franciscom - BUGID 2352, BUGID 2359
lib/cfields/cfieldsEdit.php: *      20080810 - franciscom - BUGID 1650 
lib/cfields/cfieldsEdit.php:$gui->cfield=null;
lib/cfields/cfieldsEdit.php:$gui->cfield_is_used=0;
lib/cfields/cfieldsEdit.php:$gui->cfield_is_linked=0;
lib/cfields/cfieldsEdit.php:$gui->linked_tprojects=null;
lib/cfields/cfieldsEdit.php:$gui->cfield_types=$cfield_mgr->get_available_types();
lib/cfields/cfieldsEdit.php:$emptyCF = array('id' => $args->cfield_id,
lib/cfields/cfieldsEdit.php:		         'node_type_id' => $cfieldCfg->allowed_nodes['testcase']);
lib/cfields/cfieldsEdit.php:$gui->cfield = $emptyCF;
lib/cfields/cfieldsEdit.php:switch ($args->do_action)
lib/cfields/cfieldsEdit.php:    	$templateCfg->template=$templateCfg->default_template;
lib/cfields/cfieldsEdit.php:		$gui->cfield = $op->cf;
lib/cfields/cfieldsEdit.php:		$gui->cfield_is_used = $op->cf_is_used;
lib/cfields/cfieldsEdit.php:		$gui->cfield_is_linked = $op->cf_is_linked;
lib/cfields/cfieldsEdit.php:		$gui->linked_tprojects = $op->linked_tprojects;
lib/cfields/cfieldsEdit.php:    	$user_feedback = $op->user_feedback;
lib/cfields/cfieldsEdit.php:    	$operation_descr=$op->operation_descr;
lib/cfields/cfieldsEdit.php:		$gui->cfield = $op->cf;
lib/cfields/cfieldsEdit.php:    	$user_feedback = $op->user_feedback;
lib/cfields/cfieldsEdit.php:    	$templateCfg->template = $op->template;
lib/cfields/cfieldsEdit.php:		$gui->cfield = $op->cf;
lib/cfields/cfieldsEdit.php:    	$user_feedback = $op->user_feedback;
lib/cfields/cfieldsEdit.php:    	$operation_descr=$op->operation_descr;
lib/cfields/cfieldsEdit.php:    	$templateCfg->template = $op->template;
lib/cfields/cfieldsEdit.php:	    $user_feedback = $op->user_feedback;
lib/cfields/cfieldsEdit.php:    	$operation_descr=$op->operation_descr;
lib/cfields/cfieldsEdit.php:		$templateCfg->template = $op->template;
lib/cfields/cfieldsEdit.php:// 20090524 - franciscom - this must be refactored to removed useless code
lib/cfields/cfieldsEdit.php:    $keys2loop = $cfield_mgr->get_application_areas();
lib/cfields/cfieldsEdit.php:        // 20090524 - this must be removed useless in future
lib/cfields/cfieldsEdit.php:		//if(!$cfieldCfg->enable_on_cfg[$ui_mode][$gui->cfield['node_type_id']])
lib/cfields/cfieldsEdit.php:		//	$cfieldCfg->disabled_cf_enable_on[$ui_mode]=' disabled="disabled" ';
lib/cfields/cfieldsEdit.php:        // 20090524 - franciscom - refactoring
lib/cfields/cfieldsEdit.php:        if($cfieldCfg->enable_on_cfg[$ui_mode][$gui->cfield['node_type_id']])
lib/cfields/cfieldsEdit.php:		    $cfieldCfg->cf_enable_on[$ui_mode]['value']=1;
lib/cfields/cfieldsEdit.php:		if(!$cfieldCfg->show_on_cfg[$ui_mode][$gui->cfield['node_type_id']])
lib/cfields/cfieldsEdit.php:			$cfieldCfg->cf_show_on[$ui_mode]['disabled']=' disabled="disabled" ';
lib/cfields/cfieldsEdit.php:			$cfieldCfg->cf_show_on[$ui_mode]['style']=' style="display:none;" ';
lib/cfields/cfieldsEdit.php:$gui->show_possible_values = 0;
lib/cfields/cfieldsEdit.php:if(isset($gui->cfield['type']))
lib/cfields/cfieldsEdit.php:	$gui->show_possible_values = $cfieldCfg->possible_values_cfg[$gui->cfield['type']];
lib/cfields/cfieldsEdit.php:if($args->do_action == 'edit' && $gui->cfield['enable_on_execution'] )
lib/cfields/cfieldsEdit.php:    $cfieldCfg->cf_show_on['execution']['style']=' style="display:none;" ';
lib/cfields/cfieldsEdit.php:$gui->cfieldCfg=$cfieldCfg;
lib/cfields/cfieldsEdit.php:$smarty->assign('operation_descr',$operation_descr);
lib/cfields/cfieldsEdit.php:$smarty->assign('user_feedback',$user_feedback);
lib/cfields/cfieldsEdit.php:$smarty->assign('user_action',$args->do_action);
lib/cfields/cfieldsEdit.php:      20090524 - franciscom - changes due to User Interface changes
lib/cfields/cfieldsEdit.php:      20080811 - franciscom - added new values on missing_keys         
lib/cfields/cfieldsEdit.php:    $args->do_action = isset($_REQUEST['do_action']) ? $_REQUEST['do_action']:null;
lib/cfields/cfieldsEdit.php:    $args->cfield_id = isset($_REQUEST['cfield_id']) ? $_REQUEST['cfield_id']:0;
lib/cfields/cfieldsEdit.php:    $args->cf_name = isset($_REQUEST['cf_name']) ? $_REQUEST['cf_name']:null;
lib/cfields/cfieldsEdit.php:    $op->cf = null;
lib/cfields/cfieldsEdit.php:    $op->cf_is_used = 0;
lib/cfields/cfieldsEdit.php:    $op->cf_is_linked = 0;
lib/cfields/cfieldsEdit.php:    $op->user_feedback = '';
lib/cfields/cfieldsEdit.php:    $op->template = null;
lib/cfields/cfieldsEdit.php:    $op->operation_descr = '';
lib/cfields/cfieldsEdit.php:    $op->linked_tprojects = null;
lib/cfields/cfieldsEdit.php:	$cfinfo = $cfieldMgr->get_by_id($argsObj->cfield_id);
lib/cfields/cfieldsEdit.php:		$op->cf = $cfinfo[$argsObj->cfield_id];
lib/cfields/cfieldsEdit.php:		$op->cf_is_used = $cfieldMgr->is_used($argsObj->cfield_id);
lib/cfields/cfieldsEdit.php:  		$op->operation_descr = lang_get('title_cfield_edit') . TITLE_SEP_TYPE3 . $op->cf['name'];
lib/cfields/cfieldsEdit.php:  		$op->linked_tprojects = $cfieldMgr->get_linked_testprojects($argsObj->cfield_id); 
lib/cfields/cfieldsEdit.php:  		$op->cf_is_linked = !is_null($op->linked_tprojects) && count($op->linked_tprojects) > 0;
lib/cfields/cfieldsEdit.php:   	$op->template = "cfieldsEdit.tpl";
lib/cfields/cfieldsEdit.php:    $op->user_feedback='';
lib/cfields/cfieldsEdit.php:	$op->cf = request2cf($hash_request);
lib/cfields/cfieldsEdit.php:	    $op->cf[$key]=trim($op->cf[$key]);
lib/cfields/cfieldsEdit.php:    $dupcf = $cfieldMgr->get_by_name($op->cf['name']);
lib/cfields/cfieldsEdit.php:    	$ret = $cfieldMgr->create($op->cf);
lib/cfields/cfieldsEdit.php:    		$op->user_feedback = lang_get("error_creating_cf");
lib/cfields/cfieldsEdit.php:    	  	$op->template = null;
lib/cfields/cfieldsEdit.php:    		logAuditEvent(TLS("audit_cfield_created",$op->cf['name']),"CREATE",$ret['id'],"custom_fields");
lib/cfields/cfieldsEdit.php:    	$op->user_feedback = lang_get("cf_name_exists");
lib/cfields/cfieldsEdit.php:    $op->template = "cfieldsEdit.tpl";
lib/cfields/cfieldsEdit.php:    $op->user_feedback='';
lib/cfields/cfieldsEdit.php:	$op->cf = request2cf($hash_request);
lib/cfields/cfieldsEdit.php:	$op->cf['id'] = $argsObj->cfield_id;
lib/cfields/cfieldsEdit.php:    $oldObjData=$cfieldMgr->get_by_id($argsObj->cfield_id);
lib/cfields/cfieldsEdit.php:    $oldname=$oldObjData[$argsObj->cfield_id]['name'];
lib/cfields/cfieldsEdit.php:    $op->operation_descr=lang_get('title_cfield_edit') . TITLE_SEP_TYPE3 . $oldname;
lib/cfields/cfieldsEdit.php:		$op->cf[$key]=trim($op->cf[$key]);
lib/cfields/cfieldsEdit.php:	$is_unique = $cfieldMgr->name_is_unique($op->cf['id'],$op->cf['name']);
lib/cfields/cfieldsEdit.php:		$ret = $cfieldMgr->update($op->cf);
lib/cfields/cfieldsEdit.php:			$op->template = null;
lib/cfields/cfieldsEdit.php:			logAuditEvent(TLS("audit_cfield_saved",$op->cf['name']),"SAVE",$op->cf['id'],"custom_fields");
lib/cfields/cfieldsEdit.php:		$op->user_feedback = lang_get("cf_name_exists");
lib/cfields/cfieldsEdit.php:	  $op->user_feedback='';
lib/cfields/cfieldsEdit.php:	  $op->cf = null;
lib/cfields/cfieldsEdit.php:	  $op->template = null;
lib/cfields/cfieldsEdit.php:	  $op->operation_descr = '';
lib/cfields/cfieldsEdit.php:	  $cf = $cfieldMgr->get_by_id($argsObj->cfield_id);
lib/cfields/cfieldsEdit.php:	  	$cf = $cf[$argsObj->cfield_id];
lib/cfields/cfieldsEdit.php:	  	if ($cfieldMgr->delete($argsObj->cfield_id))
lib/cfields/cfieldsEdit.php:	  		logAuditEvent(TLS("audit_cfield_deleted",$cf['name']),"DELETE",$argsObj->cfield_id,"custom_fields");
lib/cfields/cfieldsEdit.php:  rev: 20080810 - franciscom - BUGID 1650 (REQ - CF on testplan_design)
lib/cfields/cfieldsEdit.php:    $cfAppAreas=$cfieldMgr->get_application_areas();     // 20080810 - BUGID 1650 - Start
lib/cfields/cfieldsEdit.php:        $cfg->disabled_cf_enable_on[$area]='';
lib/cfields/cfieldsEdit.php:        $cfg->cf_show_on[$area]['disabled']='';
lib/cfields/cfieldsEdit.php:        $cfg->cf_show_on[$area]['style']='';
lib/cfields/cfieldsEdit.php:        $cfg->cf_enable_on[$area]='';
lib/cfields/cfieldsEdit.php:        $cfg->cf_enable_on[$area]['label']=lang_get($area);
lib/cfields/cfieldsEdit.php:        $cfg->cf_enable_on[$area]['value']=0;
lib/cfields/cfieldsEdit.php:    	$cfg->enable_on_cfg[$area] = $cfieldMgr->get_enable_on_cfg($area);
lib/cfields/cfieldsEdit.php:    	$cfg->show_on_cfg[$area] = $cfieldMgr->get_show_on_cfg($area);
lib/cfields/cfieldsEdit.php:    	// $cfg->enable_on['app_areas'][$area] = $cfieldMgr->get_enable_on_cfg($area);
lib/cfields/cfieldsEdit.php:    	// $cfg->enable_on['style_display'][$area] = $cfg->enable_on['app_areas'][$area];
lib/cfields/cfieldsEdit.php:    }// 20080810 - BUGID 1650 - End
lib/cfields/cfieldsEdit.php:    $cfg->possible_values_cfg = $cfieldMgr->get_possible_values_cfg();
lib/cfields/cfieldsEdit.php:    $cfg->allowed_nodes = $cfieldMgr->get_allowed_nodes();
lib/cfields/cfieldsEdit.php:    $cfg->cf_allowed_nodes = array();
lib/cfields/cfieldsEdit.php:    foreach($cfg->allowed_nodes as $verbose_type => $type_id)
lib/cfields/cfieldsEdit.php:    	$cfg->cf_allowed_nodes[$type_id] = lang_get($verbose_type);
lib/cfields/cfieldsEdit.php:  returns: - 
lib/cfields/cfieldsEdit.php:  rev: 20080921 - franciscom - added guiObj argument
lib/cfields/cfieldsEdit.php:    switch($argsObj->do_action)
lib/cfields/cfieldsEdit.php:    		$tpl = is_null($templateCfg->template) ? 'cfieldsView.tpl' : $templateCfg->template;
lib/cfields/cfieldsEdit.php:    		$tpl = is_null($templateCfg->template) ? $templateCfg->default_template : $templateCfg->template;
lib/cfields/cfieldsEdit.php:		    $guiObj->cf_map=$cfieldMgr->get_all();
lib/cfields/cfieldsEdit.php:		    $guiObj->cf_types=$cfieldMgr->get_available_types();
lib/cfields/cfieldsEdit.php:		    $smartyObj->assign('gui',$guiObj);
lib/cfields/cfieldsEdit.php:		    $smartyObj->display($templateCfg->template_dir . $tpl);
lib/cfields/cfieldsEdit.php:	return $user->hasRight($db,"cfield_management");
lib/testcases/listTestCases.php:* 	TestLink Open Source Project - http://testlink.sourceforge.net/
lib/testcases/listTestCases.php:*   20100628 - asimon - removal of constants from filter control class
lib/testcases/listTestCases.php:*   20100624 - asimon - CVS merge (experimental branch to HEAD)
lib/testcases/listTestCases.php:*   20100622 - asimon - huge refactorization for new tlTestCaseFilterControl class
lib/testcases/listTestCases.php:*   20100517 - asimon - BUGID 3301 and related - huge refactoring for first implementation
lib/testcases/listTestCases.php:*   20100428 - asimon - BUGID 3301 and related issues - changed name or case
lib/testcases/listTestCases.php:*	20091210 - franciscom - test case execution type filter
lib/testcases/listTestCases.php:*   20090308 - franciscom - added option Any in keywords filter
lib/testcases/listTestCases.php:*   20090210 - BUGID 2062 - franciscom -
lib/testcases/listTestCases.php:$control->build_tree_menu($gui);
lib/testcases/listTestCases.php:$smarty->assign('gui', $gui);
lib/testcases/listTestCases.php:$smarty->assign('control', $control);
lib/testcases/listTestCases.php:$smarty->assign('args', $control->get_argument_string());
lib/testcases/listTestCases.php:$smarty->assign('menuUrl', $gui->menuUrl);
lib/testcases/listTestCases.php:$smarty->display($templateCfg->template_dir . 'tcTree.tpl');
lib/testcases/listTestCases.php:	$gui->feature = $control->args->feature;
lib/testcases/listTestCases.php:	$gui->treeHeader = lang_get('title_navigator'). ' - ' . lang_get('title_test_spec');
lib/testcases/listTestCases.php:	$gui->tree_drag_and_drop_enabled = array('edit_tc' => (has_rights($dbHandler, "mgt_modify_tc") == 'yes'),
lib/testcases/listTestCases.php:	$gui->menuUrl = $feature_path[$gui->feature];
lib/testcases/tcSearch.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/testcases/tcSearch.php: * @copyright 	2007-2009, TestLink community 
lib/testcases/tcSearch.php: *	20100814 - franciscom - improvements on logic and feedback when user fill in test case id filter
lib/testcases/tcSearch.php: *	20100609 - franciscom - BUGID 1627: Search Test Case by Date of Creation
lib/testcases/tcSearch.php: *  20100526 - Julian - BUGID 3490 - Search Test Cases based on requirements
lib/testcases/tcSearch.php: *	20100409 - franciscom - BUGID 3371 - Search Test Cases based on Test Importance
lib/testcases/tcSearch.php: *	20100326 - franciscom - BUGID 3334 - search fails if test case has 0 steps
lib/testcases/tcSearch.php: *  20100124 - franciscom - BUGID 3077 - search on preconditions
lib/testcases/tcSearch.php: *	20100106 - franciscom - Multiple Test Case Steps Feature
lib/testcases/tcSearch.php: *	20090228 - franciscom - if targetTestCase == test case prefix => 
lib/testcases/tcSearch.php: *	20090125 - franciscom - BUGID - search by requirement doc id
lib/testcases/tcSearch.php:if ($args->tprojectID)
lib/testcases/tcSearch.php:    $gui->tcasePrefix = $tproject_mgr->getTestCasePrefix($args->tprojectID);
lib/testcases/tcSearch.php:    $gui->tcasePrefix .= $tcase_cfg->glue_character;
lib/testcases/tcSearch.php:    if( !is_null($args->creation_date_from) &&  !is_null($args->creation_date_to) )
lib/testcases/tcSearch.php:    	$date_from = date_create_from_format('Y-n-j', $args->creation_date_from);
lib/testcases/tcSearch.php:    	$date_to = date_create_from_format('Y-n-j', $args->creation_date_to);
lib/testcases/tcSearch.php:    if( !is_null($args->creation_date_from) )
lib/testcases/tcSearch.php:    	$db_date = $db->db->DBdate($args->creation_date_from);
lib/testcases/tcSearch.php:    if( !is_null($args->creation_date_to) )
lib/testcases/tcSearch.php:    	$db_date = $db->db->DBdate($args->creation_date_to);
lib/testcases/tcSearch.php:    if($args->targetTestCase != "" && strcmp($args->targetTestCase,$gui->tcasePrefix) != 0)
lib/testcases/tcSearch.php:     	if (strpos($args->targetTestCase,$tcase_cfg->glue_character) === false)
lib/testcases/tcSearch.php:    		$args->targetTestCase = $gui->tcasePrefix . $args->targetTestCase;
lib/testcases/tcSearch.php:        $tcaseID = $tcase_mgr->getInternalID($args->targetTestCase,$tcase_cfg->glue_character); 
lib/testcases/tcSearch.php:        $tproject_mgr->get_all_testcases_id($args->tprojectID,$a_tcid);
lib/testcases/tcSearch.php:    if($args->version)
lib/testcases/tcSearch.php:        $filter['by_version'] = " AND TCV.version = {$args->version} ";
lib/testcases/tcSearch.php:    if($args->keyword_id)				
lib/testcases/tcSearch.php:        $filter['by_keyword_id'] = " AND KW.keyword_id = {$args->keyword_id} ";	
lib/testcases/tcSearch.php:    if($args->name != "")
lib/testcases/tcSearch.php:        $args->name =  $db->prepare_string($args->name);
lib/testcases/tcSearch.php:        $filter['by_name'] = " AND NH_TC.name like '%{$args->name}%' ";
lib/testcases/tcSearch.php:    if($args->summary != "")
lib/testcases/tcSearch.php:        $args->summary = $db->prepare_string($args->summary);
lib/testcases/tcSearch.php:        $filter['by_summary'] = " AND TCV.summary like '%{$args->summary}%' ";
lib/testcases/tcSearch.php:    if($args->preconditions != "")
lib/testcases/tcSearch.php:        $args->preconditions = $db->prepare_string($args->preconditions);
lib/testcases/tcSearch.php:        $filter['by_preconditions'] = " AND TCV.preconditions like '%{$args->preconditions}%' ";
lib/testcases/tcSearch.php:    if($args->steps != "")
lib/testcases/tcSearch.php:        $args->steps = $db->prepare_string($args->steps);
lib/testcases/tcSearch.php:        $filter['by_steps'] = " AND TCSTEPS.actions like '%{$args->steps}%' ";	
lib/testcases/tcSearch.php:    if($args->expected_results != "")
lib/testcases/tcSearch.php:		$args->expected_results = $db->prepare_string($args->expected_results);
lib/testcases/tcSearch.php:        $filter['by_expected_results'] = " AND TCSTEPS.expected_results like '%{$args->expected_results}%' ";	
lib/testcases/tcSearch.php:    if($args->custom_field_id > 0)
lib/testcases/tcSearch.php:        $args->custom_field_id = $db->prepare_string($args->custom_field_id);
lib/testcases/tcSearch.php:        $args->custom_field_value = $db->prepare_string($args->custom_field_value);
lib/testcases/tcSearch.php:        $filter['by_custom_field'] = " AND CFD.field_id={$args->custom_field_id} " .
lib/testcases/tcSearch.php:                                     " AND CFD.value like '%{$args->custom_field_value}%' ";
lib/testcases/tcSearch.php:   	if($args->requirement_doc_id != "")
lib/testcases/tcSearch.php:    	$args->requirement_doc_id = $db->prepare_string($args->requirement_doc_id);
lib/testcases/tcSearch.php:    	$filter['by_requirement_doc_id'] = " AND REQ.req_doc_id like '%{$args->requirement_doc_id}%' ";
lib/testcases/tcSearch.php:   	if( $args->importance > 0)
lib/testcases/tcSearch.php:        $filter['importance'] = " AND TCV.importance = {$args->importance} ";
lib/testcases/tcSearch.php:    // BUGID 3334 - search fails if test case has 0 steps
lib/testcases/tcSearch.php:    // 20100814 - franciscom
lib/testcases/tcSearch.php:    	$gui->warning_msg = $tcaseID == 0 ? lang_get('testcase_does_not_exists') : lang_get('prefix_does_not_exists');
lib/testcases/tcSearch.php:    	$gui->row_qty = $db->fetchOneValue($sql); 
lib/testcases/tcSearch.php:    	if ($gui->row_qty)
lib/testcases/tcSearch.php:    		if ($gui->row_qty <= $tcase_cfg->search->max_qty_for_display)
lib/testcases/tcSearch.php:    			$map = $db->fetchRowsIntoMap($sql,'testcase_id');	
lib/testcases/tcSearch.php:				$gui->warning_msg = lang_get('too_wide_search_criteria');
lib/testcases/tcSearch.php:if($gui->row_qty > 0)
lib/testcases/tcSearch.php:	$gui->pageTitle .= " - " . lang_get('match_count') . " : " . $gui->row_qty;
lib/testcases/tcSearch.php:	    $gui->path_info = $tproject_mgr->tree_manager->get_full_path_verbose($tcase_set);
lib/testcases/tcSearch.php:		$gui->resultSet = $map;
lib/testcases/tcSearch.php:$smarty->assign('gui',$gui);
lib/testcases/tcSearch.php:$smarty->display($templateCfg->template_dir . $tpl);
lib/testcases/tcSearch.php:	$args->userID = isset($_SESSION['userID']) ? $_SESSION['userID'] : 0;
lib/testcases/tcSearch.php:    $args->tprojectID = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/testcases/tcSearch.php:  		$args->$target = null;
lib/testcases/tcSearch.php:  	    	$create_date[$target] = $create_date[$target] && !is_null($args->$accessKey) && trim($args->$accessKey) != '' && 
lib/testcases/tcSearch.php:  	    							intval($args->$accessKey) > 0;
lib/testcases/tcSearch.php:  	    	$xx[] = $args->$accessKey;
lib/testcases/tcSearch.php:  			$args->$target = implode('-',$xx);
lib/testcases/tcSearch.php:	$gui->pageTitle = lang_get('caption_search_form');
lib/testcases/tcSearch.php:	$gui->warning_msg = '';
lib/testcases/tcSearch.php:	$gui->tcasePrefix = '';
lib/testcases/tcSearch.php:	$gui->path_info = null;
lib/testcases/tcSearch.php:	$gui->resultSet = null;
lib/testcases/tcSearch.php:	$gui->bodyOnLoad = null;
lib/testcases/tcSearch.php:	$gui->bodyOnUnload = null;
lib/testcases/tcSearch.php:	$gui->refresh_tree = false;
lib/testcases/tcSearch.php:	$gui->hilite_testcase_name = false;
lib/testcases/tcSearch.php:	$gui->show_match_count = false;
lib/testcases/tcSearch.php:	$gui->tc_current_version = null;
lib/testcases/tcSearch.php:	$gui->row_qty = 0;
lib/testcases/tcSearch.php:	$gui->creation_date_from = $argsObj->creation_date_from;
lib/testcases/tcSearch.php:	$gui->creation_date_to = $argsObj->creation_date_to;
lib/testcases/tcSearchForm.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/testcases/tcSearchForm.php: * @copyright 	2007-2009, TestLink community 
lib/testcases/tcSearchForm.php: *	20100609 - franciscom - BUGID 1627: Search Test Case by Date of Creation
lib/testcases/tcSearchForm.php: *	20100409 - franciscom - BUGID 3371 Search Test Cases based on Test Importance
lib/testcases/tcSearchForm.php: *	20090228 - franciscom - improvement on management of test case prefix
lib/testcases/tcSearchForm.php: *  20090125 - franciscom - BUGID - search by requirement doc id
lib/testcases/tcSearchForm.php:$gui->tcasePrefix = $tproject_mgr->getTestCasePrefix($args->tprojectID) . config_get('testcase_cfg')->glue_character;
lib/testcases/tcSearchForm.php:$gui->mainCaption = lang_get('testproject') . " " . $args->tprojectName;
lib/testcases/tcSearchForm.php:$gui->importance = config_get('testcase_importance_default');
lib/testcases/tcSearchForm.php:$gui->design_cf = $tproject_mgr->cfield_mgr->get_linked_cfields_at_design($args->tprojectID,$enabled,
lib/testcases/tcSearchForm.php:$gui->keywords = $tproject_mgr->getKeywords($args->tprojectID);
lib/testcases/tcSearchForm.php:$reqSpecSet = $tproject_mgr->genComboReqSpec($args->tprojectID);
lib/testcases/tcSearchForm.php:$gui->filter_by['design_scope_custom_fields'] = !is_null($gui->design_cf);
lib/testcases/tcSearchForm.php:$gui->filter_by['keyword'] = !is_null($gui->keywords);
lib/testcases/tcSearchForm.php:$gui->filter_by['requirement_doc_id'] = !is_null($reqSpecSet);
lib/testcases/tcSearchForm.php:$gui->option_importance = array(0 => '',HIGH => lang_get('high_importance'),MEDIUM => lang_get('medium_importance'), 
lib/testcases/tcSearchForm.php:$gui->creation_date_from = null;
lib/testcases/tcSearchForm.php:$gui->creation_date_to = null;
lib/testcases/tcSearchForm.php:$smarty->assign('gui',$gui);
lib/testcases/tcSearchForm.php:$smarty->display($templateCfg->template_dir . 'tcSearchForm.tpl');
lib/testcases/tcSearchForm.php:    $args->tprojectID = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/testcases/tcSearchForm.php:    $args->tprojectName = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : 0;
lib/testcases/tcImport.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/testcases/tcImport.php: *	20100821 - franciscom - changes to getStepsFromSimpleXMLObj() due to:
lib/testcases/tcImport.php: *							BUGID 3695: Test Case Steps - Export/Import - missing attribute execution type
lib/testcases/tcImport.php: *  20100719 - amitkhullar - BUGID 3609 - fix for keyword import error
lib/testcases/tcImport.php: *	20100620 - franciscom - Trying to reduce memory problems using statics on 
lib/testcases/tcImport.php: *	20100619 - franciscom - added file size control 
lib/testcases/tcImport.php: *	20100409 - franciscom - added import importance and execution_type
lib/testcases/tcImport.php: *	20100317 - franciscom - BUGID 3236 - work in progress
lib/testcases/tcImport.php: *	20100214 - franciscom - refactoring to use only simpleXML functions
lib/testcases/tcImport.php: *	20100106 - franciscom - Multiple Test Case Steps Feature
lib/testcases/tcImport.php: *	20090831 - franciscom - preconditions
lib/testcases/tcImport.php: *  20090506 - Requirements refactoring
lib/testcases/tcImport.php: *  20090221 - BUGID - Improvement on messages to user when XML file contains
lib/testcases/tcImport.php: *  20090206 - BUGID - Import TC-REQ relationship - franciscom
lib/testcases/tcImport.php: *  20090117 - BUGID 1991 - franciscom
lib/testcases/tcImport.php: *             BUGID 1992 - contribution for XLS import - franciscom
lib/testcases/tcImport.php: *  20090106 - BUGID - franciscom - added logic to import Test Cases custom field values
lib/testcases/tcImport.php: *  20081001 - franciscom - added logic to manage too long testcase name
lib/testcases/tcImport.php: * 	20080813 - havlatm - added a few logging
lib/testcases/tcImport.php:$gui->importLimitBytes = config_get('import_file_max_size_bytes');
lib/testcases/tcImport.php:$gui->importLimitKB = ($gui->importLimitBytes / 1024);
lib/testcases/tcImport.php:$gui->hitCriteria = $args->hit_criteria;
lib/testcases/tcImport.php:$gui->useRecursion = $args->useRecursion;
lib/testcases/tcImport.php:$gui->containerID = $args->container_id;
lib/testcases/tcImport.php:$gui->bImport = tlStringLen($args->importType);
lib/testcases/tcImport.php:$gui->bIntoProject = $args->bIntoProject;
lib/testcases/tcImport.php:$gui->resultMap = null;
lib/testcases/tcImport.php:$dest_common = TL_TEMP_PATH . session_id(). "-importtcs";
lib/testcases/tcImport.php:if(!is_null($args->importType))
lib/testcases/tcImport.php:	$dest = $dest_files[$args->importType];
lib/testcases/tcImport.php:$gui->file_check = array('status_ok' => 1, 'msg' => 'ok');
lib/testcases/tcImport.php:if($args->useRecursion)
lib/testcases/tcImport.php:	$gui->import_title = lang_get('title_tsuite_import_to');  
lib/testcases/tcImport.php:	$gui->container_description = lang_get('test_suite');
lib/testcases/tcImport.php:	$gui->import_title = lang_get('title_tc_import_to');
lib/testcases/tcImport.php:	$gui->container_description = lang_get('test_case');
lib/testcases/tcImport.php:$gui->container_name = '';
lib/testcases/tcImport.php:if($args->container_id)
lib/testcases/tcImport.php:	$node_info = $tree_mgr->get_node_hierarchy_info($args->container_id);
lib/testcases/tcImport.php:	$gui->container_name = $node_info['name'];
lib/testcases/tcImport.php:	if($args->container_id == $args->tproject_id)
lib/testcases/tcImport.php:		$gui->container_description=lang_get('testproject');
lib/testcases/tcImport.php:if ($args->do_upload)
lib/testcases/tcImport.php:	$gui->file_check = null;
lib/testcases/tcImport.php:		if( !($doIt = $_FILES['uploadedFile']['size'] <= $gui->importLimitBytes) )
lib/testcases/tcImport.php:			$gui->file_check['status_ok'] = 0;
lib/testcases/tcImport.php:			$gui->file_check['msg'] = sprintf(lang_get('file_size_exceeded'),$_FILES['uploadedFile']['size'],$gui->importLimitBytes);
lib/testcases/tcImport.php:		$gui->file_check['status_ok'] = 1;
lib/testcases/tcImport.php:			switch($args->importType)
lib/testcases/tcImport.php:				$gui->file_check = $pcheck_fn($dest,$args->useRecursion);
lib/testcases/tcImport.php:		if($gui->file_check['status_ok'] && $pimport_fn)
lib/testcases/tcImport.php:			$opt['useRecursion'] = $args->useRecursion;
lib/testcases/tcImport.php:			$opt['importIntoProject'] = $args->bIntoProject;
lib/testcases/tcImport.php:			$opt['duplicateLogic'] = array('hitCriteria' => $args->hit_criteria,
lib/testcases/tcImport.php:			                               'actionOnHit' => $args->action_on_duplicated_name);
lib/testcases/tcImport.php:			$gui->resultMap = $pimport_fn($db,$dest,$args->container_id,$args->tproject_id,$args->userID,$opt);
lib/testcases/tcImport.php:	else if(is_null($gui->file_check))
lib/testcases/tcImport.php:		$gui->file_check = array('status_ok' => 0, 'msg' => lang_get('please_choose_file_to_import'));
lib/testcases/tcImport.php:		$args->importType = null;
lib/testcases/tcImport.php:if($args->useRecursion)
lib/testcases/tcImport.php:  $gui->actionOptions=null;
lib/testcases/tcImport.php:  $gui->hitOptions=null;
lib/testcases/tcImport.php:  $gui->actionOptions=array('update_last_version' => lang_get('update_last_testcase_version'),
lib/testcases/tcImport.php:  $gui->hitOptions=array('name' => lang_get('same_name'),
lib/testcases/tcImport.php:$gui->testprojectName = $_SESSION['testprojectName'];
lib/testcases/tcImport.php:$gui->importTypes = $obj_mgr->get_import_file_types();
lib/testcases/tcImport.php:$gui->action_on_duplicated_name=$args->action_on_duplicated_name;
lib/testcases/tcImport.php:$smarty->assign('gui',$gui);  
lib/testcases/tcImport.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/testcases/tcImport.php:// --------------------------------------------------------------------------------------
lib/testcases/tcImport.php:			$xmlKeywords = $xml->xpath('//keywords');
lib/testcases/tcImport.php:					$tproject->importKeywordsFromSimpleXML($tproject_id,$xmlKeywords[$idx]);
lib/testcases/tcImport.php:				$kwMap = $tproject->get_keywords_map($tproject_id);
lib/testcases/tcImport.php:			if (!$useRecursion &&  ($xml->getName() == 'testcases') )
lib/testcases/tcImport.php:			if ($useRecursion && ($xml->getName() == 'testsuite'))
lib/testcases/tcImport.php:// --------------------------------------------------------------------------------------
lib/testcases/tcImport.php: 	  20100317 - franciscom - manage different criteria to decide that test case
lib/testcases/tcImport.php:      20090204 - franciscom - use value of node_order readed from file
lib/testcases/tcImport.php:		$safeSizeCfg->testcase_name=($fieldSizeCfg->testcase_name) * 0.8;
lib/testcases/tcImport.php:	    // $customFields=$tproject_mgr->get_linked_custom_fields($tproject_id,'testcase','name');
lib/testcases/tcImport.php:        $linkedCustomFields = $tcase_mgr->cfield_mgr->get_linked_cfields_at_design($tproject_id,1,null,'testcase',null,'name');
lib/testcases/tcImport.php:        // BUGID - 20090205 - franciscom
lib/testcases/tcImport.php:		$reqSpecSet = $tproject_mgr->getReqSpec($tproject_id,null,array('RSPEC.id','NH.name AS title'),'title');
lib/testcases/tcImport.php:		if($name_len > $fieldSizeCfg->testcase_name)
lib/testcases/tcImport.php:		    $xx .= sprintf($messages['testcase_name_too_long'],$name_len, $fieldSizeCfg->testcase_name) . "\n";
lib/testcases/tcImport.php:		    $name = tlSubStr($name, 0, $safeSizeCfg->testcase_name);      
lib/testcases/tcImport.php:					$info = $tcase_mgr->getDuplicatesByName($name,$container_id);
lib/testcases/tcImport.php:					$dummy = $tcase_mgr->tree_manager->get_node_hierarchy_info($internalid,$container_id);
lib/testcases/tcImport.php:					$info = $tcase_mgr->get_by_external($externalid,$container_id);
lib/testcases/tcImport.php:         	        	$last_version = $tcase_mgr->get_last_version_info($tcase_id,$getVersionOpt);
lib/testcases/tcImport.php:         	        	$ret = $tcase_mgr->update($tcase_id,$tcversion_id,$name,$summary,
lib/testcases/tcImport.php:		    if ($ret = $tcase_mgr->create($container_id,$name,$summary,$preconditions,$steps,
lib/testcases/tcImport.php:		// 20090106 - franciscom
lib/testcases/tcImport.php:		// BUGID - 20090205 - franciscom
lib/testcases/tcImport.php:// --------------------------------------------------------------------------------------
lib/testcases/tcImport.php:// --------------------------------------------------------------------------------------
lib/testcases/tcImport.php:// --------------------------------------------------------------------------------------
lib/testcases/tcImport.php:		$elementName = $xml->getName();
lib/testcases/tcImport.php:// Contributed code - lightbulb
lib/testcases/tcImport.php:        useRecursion: 1 -> recursive, used when importing testsuites
lib/testcases/tcImport.php:// --------------------------------------------------------------------------------------
lib/testcases/tcImport.php:	$xls_handle->setOutputEncoding(config_get('charset')); 
lib/testcases/tcImport.php:	$xls_handle->read($xls_filename);
lib/testcases/tcImport.php:	$xls_rows = $xls_handle->sheets[0]['cells'];
lib/testcases/tcImport.php:    	return;  // >>>----> bye!
lib/testcases/tcImport.php:		// $summary = htmlspecialchars(iconv("CP1252","UTF-8",$xls_rows[$idx][IDX_COL_SUMMARY]));
lib/testcases/tcImport.php:	    // 20090117 - contribution - BUGID 1992  // 20090402 - BUGID 1519
lib/testcases/tcImport.php:	    // 20090117 - BUGID 1991,1992  // 20090402 - BUGID 1519
lib/testcases/tcImport.php:	    // 20090117 - BUGID 1991,1992  // 20090402 - BUGID 1519
lib/testcases/tcImport.php:// 20090402 - BUGID 1519: Extract this function from create_xml_tcspec_from_xls()
lib/testcases/tcImport.php:/* 20090117 - 
lib/testcases/tcImport.php: contribution by mirosvad - 
lib/testcases/tcImport.php:    $args->$key = isset($_REQUEST[$key]) ? $_REQUEST[$key] : 'generate_new';
lib/testcases/tcImport.php:    $args->$key = isset($_REQUEST[$key]) ? $_REQUEST[$key] : 'name';
lib/testcases/tcImport.php:    $args->importType = isset($_REQUEST['importType']) ? $_REQUEST['importType'] : null;
lib/testcases/tcImport.php:    $args->useRecursion = isset($_REQUEST['useRecursion']) ? $_REQUEST['useRecursion'] : 0;
lib/testcases/tcImport.php:    $args->location = isset($_REQUEST['location']) ? $_REQUEST['location'] : null; 
lib/testcases/tcImport.php:    $args->container_id = isset($_REQUEST['containerID']) ? intval($_REQUEST['containerID']) : 0;
lib/testcases/tcImport.php:    $args->bIntoProject = isset($_REQUEST['bIntoProject']) ? intval($_REQUEST['bIntoProject']) : 0;
lib/testcases/tcImport.php:    $args->containerType = isset($_REQUEST['containerType']) ? intval($_REQUEST['containerType']) : 0;
lib/testcases/tcImport.php:    $args->do_upload = isset($_REQUEST['UploadFile']) ? 1 : 0;
lib/testcases/tcImport.php:    $args->userID = $_SESSION['userID'];
lib/testcases/tcImport.php:    $args->tproject_id = $_SESSION['testprojectID'];
lib/testcases/tcImport.php:    $tcaseMgr->cfield_mgr->design_values_to_db($cf2insert,$tcaseId,null,'simple');
lib/testcases/tcImport.php:                     " WHERE REQ.req_doc_id='{$dbHandler->prepare_string($value['doc_id'])}' " .
lib/testcases/tcImport.php:              $rsx=$dbHandler->get_recordset($sql);
lib/testcases/tcImport.php:              $reqMgr->assign_to_tcase($cachedReqSpec[$value['req_spec_title']]['req'][$value['doc_id']],$tcaseId);
lib/testcases/tcImport.php:	$xmlTCs = $simpleXMLObj->xpath('//testcase');
lib/testcases/tcImport.php: * 20100317 - added internalid - BUGID 3236
lib/testcases/tcImport.php:			$steps = getStepsFromSimpleXMLObj($xmlTCs[$idx]->steps->step);
lib/testcases/tcImport.php:			$keywords = getKeywordsFromSimpleXMLObj($xmlTCs[$idx]->keywords->keyword);
lib/testcases/tcImport.php:			$cf = getCustomFieldsFromSimpleXMLObj($xmlTCs[$idx]->custom_fields->custom_field);
lib/testcases/tcImport.php:			$requirements = getRequirementsFromSimpleXMLObj($xmlTCs[$idx]->requirements->requirement);
lib/testcases/tcImport.php: * 20100821 - franciscom - BUGID 3695 - added "execution_type"
lib/testcases/tcImport.php:  rev: 20090204 - franciscom - added node_order
lib/testcases/tcImport.php:	if($xml->getName() == 'testsuite')
lib/testcases/tcImport.php:			$ret = $tsuiteMgr->create($parentID,$tsuite['name'],$tsuite['details'],$tsuite['node_order']);
lib/testcases/tcImport.php:		$childrenNodes = $xml->children();	
lib/testcases/tcImport.php:			switch($target->getName())
lib/testcases/tcImport.php:						$keywords = getKeywordsFromSimpleXMLObj($target->xpath("//keyword"));
lib/testcases/tcImport.php:							$tsuiteMgr->addKeywords($tsuiteID,$kwIDs);
lib/testcases/tcAssign2Tplan.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/testcases/tcAssign2Tplan.php: * @author 		Amit Khullar - amkhullar@gmail.com
lib/testcases/tcAssign2Tplan.php: * @copyright 	2007-2009, TestLink community 
lib/testcases/tcAssign2Tplan.php: *	20100520 - franciscom - BUGID 3480 - add to test plan problem when platforms exist
lib/testcases/tcAssign2Tplan.php: *	20100514 - franciscom - BUGID 3189
lib/testcases/tcAssign2Tplan.php: *	20100124 - franciscom - BUGID 3064 - add logic to manage ONLY ACTIVE test plans
lib/testcases/tcAssign2Tplan.php:$glue = config_get('testcase_cfg')->glue_character;
lib/testcases/tcAssign2Tplan.php:$gui->platformSet = $tplan_mgr->getPlatforms($args->tplan_id,$getOpt);  
lib/testcases/tcAssign2Tplan.php:$tcase_all_info = $tcase_mgr->get_by_id($args->tcase_id,testcase::ALL_VERSIONS,null,$options);
lib/testcases/tcAssign2Tplan.php:        if($tcversion_info['id'] == $args->tcversion_id )
lib/testcases/tcAssign2Tplan.php:            $gui->pageTitle=lang_get('test_case') . ':' . $tcversion_info['name'];
lib/testcases/tcAssign2Tplan.php:            $gui->tcaseIdentity = $tproject_mgr->getTestCasePrefix($args->tproject_id);
lib/testcases/tcAssign2Tplan.php:            $gui->tcaseIdentity .= $glue . $tcversion_info['tc_external_id'] . ':' . $tcversion_info['name'];
lib/testcases/tcAssign2Tplan.php:// 20100514 - franciscom
lib/testcases/tcAssign2Tplan.php:// Why I'm filter on NOT_EXECUTED ??? -> this causes BUGID 3189
lib/testcases/tcAssign2Tplan.php:// $link_info = $tcase_mgr->get_linked_versions($args->tcase_id,'NOT_EXECUTED');
lib/testcases/tcAssign2Tplan.php:$link_info = $tcase_mgr->get_linked_versions($args->tcase_id);
lib/testcases/tcAssign2Tplan.php:// 20100124 - work only on ACTIVE TEST PLANS => array('plan_status' => 1)
lib/testcases/tcAssign2Tplan.php:if( !is_null($tplanSet = $tproject_mgr->get_all_testplans($args->tproject_id,array('plan_status' => 1))) )
lib/testcases/tcAssign2Tplan.php:               		// $gui->tplans[$tplan_id][$platform_id]['tcversion_id']=$value['id'];                            
lib/testcases/tcAssign2Tplan.php:    	$gui->tplans[$tplan_id] = array();
lib/testcases/tcAssign2Tplan.php:		$platformSet = $tplan_mgr->getPlatforms($tplan_id,$getOpt);
lib/testcases/tcAssign2Tplan.php:    	$target_version_id = $args->tcversion_id;
lib/testcases/tcAssign2Tplan.php:		// Test Plan TPX - Platforms: P1,P2,P3
lib/testcases/tcAssign2Tplan.php:		// Test Case A - version 1 -> Test Plan TPX - Platform P1
lib/testcases/tcAssign2Tplan.php:		// Create Test Case A - version 2
lib/testcases/tcAssign2Tplan.php:		// [x](read only)  version 1 - test plan TPX - platform P1
lib/testcases/tcAssign2Tplan.php:		// [x](read only)  version 1 - test plan TPX - platform P1
lib/testcases/tcAssign2Tplan.php:		// [ ]  version 1 - test plan TPX - platform P2
lib/testcases/tcAssign2Tplan.php:		// [ ]  version 1 - test plan TPX - platform P3
lib/testcases/tcAssign2Tplan.php:        		$gui->tplans[$tplan_id][$platform_id] = $value;
lib/testcases/tcAssign2Tplan.php:        		$gui->tplans[$tplan_id][$platform_id]['tcversion_id'] = $target_version_id;
lib/testcases/tcAssign2Tplan.php:        		$gui->tplans[$tplan_id][$platform_id]['version'] = $target_version_number;
lib/testcases/tcAssign2Tplan.php:        		$gui->tplans[$tplan_id][$platform_id]['draw_checkbox'] = $draw_checkbox;
lib/testcases/tcAssign2Tplan.php:            	$gui->tplans[$tplan_id][$platform_id]['platform'] = $platform_info;                            
lib/testcases/tcAssign2Tplan.php:        	// -------------------------------------------------------------------------------
lib/testcases/tcAssign2Tplan.php:        	// 	$gui->tplans[$tplan_id][$platform_id] = $value;
lib/testcases/tcAssign2Tplan.php:        	// 	$gui->tplans[$tplan_id][$platform_id]['tcversion_id'] = $args->tcversion_id;
lib/testcases/tcAssign2Tplan.php:        	// 	$gui->tplans[$tplan_id][$platform_id]['version'] = $version;
lib/testcases/tcAssign2Tplan.php:        	// 	$gui->tplans[$tplan_id][$platform_id]['draw_checkbox'] = true;
lib/testcases/tcAssign2Tplan.php:            // 	$gui->tplans[$tplan_id][$platform_id]['platform'] = $platform_info;                            
lib/testcases/tcAssign2Tplan.php:        	// 		$gui->tplans[$tplan_id][$platform_id] = $value;
lib/testcases/tcAssign2Tplan.php:        	// 		$gui->tplans[$tplan_id][$platform_id]['tcversion_id'] = $target_version_id;
lib/testcases/tcAssign2Tplan.php:        	// 		$gui->tplans[$tplan_id][$platform_id]['version'] = $target_version_number;
lib/testcases/tcAssign2Tplan.php:        	// 		$gui->tplans[$tplan_id][$platform_id]['draw_checkbox'] = false;
lib/testcases/tcAssign2Tplan.php:            // 		$gui->tplans[$tplan_id][$platform_id]['platform'] = $platform_info;                            
lib/testcases/tcAssign2Tplan.php:        	// 		$gui->tplans[$tplan_id][$platform_id] = $value;
lib/testcases/tcAssign2Tplan.php:        	// 		$gui->tplans[$tplan_id][$platform_id]['tcversion_id'] = $target_version_id;
lib/testcases/tcAssign2Tplan.php:        	// 		$gui->tplans[$tplan_id][$platform_id]['version'] = $target_version_number;
lib/testcases/tcAssign2Tplan.php:        	// 		$gui->tplans[$tplan_id][$platform_id]['draw_checkbox'] = true;
lib/testcases/tcAssign2Tplan.php:            // 		$gui->tplans[$tplan_id][$platform_id]['platform'] = $platform_info;                            
lib/testcases/tcAssign2Tplan.php:    $gui->can_do=false;  // because an OR logic will be used
lib/testcases/tcAssign2Tplan.php:    foreach($gui->tplans as $tplan_id => $platform_info)  
lib/testcases/tcAssign2Tplan.php:    		$gui->can_do = $gui->can_do || $gui->tplans[$tplan_id][$platform_id]['draw_checkbox'];
lib/testcases/tcAssign2Tplan.php:$smarty->assign('gui',$gui);
lib/testcases/tcAssign2Tplan.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/testcases/tcAssign2Tplan.php:	$args->tplan_id = isset($_REQUEST['tplan_id']) ? $_REQUEST['tplan_id'] : $_SESSION['testplanID'];
lib/testcases/tcAssign2Tplan.php:	$args->tproject_id = isset($_REQUEST['tproject_id']) ? $_REQUEST['tproject_id'] : $_SESSION['testprojectID'];
lib/testcases/tcAssign2Tplan.php:	$args->tcase_id = isset($_REQUEST['tcase_id']) ? $_REQUEST['tcase_id'] : 0;
lib/testcases/tcAssign2Tplan.php:	$args->tcversion_id = isset($_REQUEST['tcversion_id']) ? $_REQUEST['tcversion_id'] : 0;
lib/testcases/tcAssign2Tplan.php:	// $args->goback_url = isset($_REQUEST['goback_url']) ? $_REQUEST['goback_url'] : null;
lib/testcases/tcAssign2Tplan.php:	$guiObj->pageTitle='';
lib/testcases/tcAssign2Tplan.php:	$guiObj->tcaseIdentity='';
lib/testcases/tcAssign2Tplan.php:	$guiObj->mainDescription=lang_get('add_tcversion_to_plans');;
lib/testcases/tcAssign2Tplan.php:	$guiObj->tcase_id=$argsObj->tcase_id;
lib/testcases/tcAssign2Tplan.php:	$guiObj->tcversion_id=$argsObj->tcversion_id;
lib/testcases/tcAssign2Tplan.php:	$guiObj->can_do=false;
lib/testcases/tcAssign2Tplan.php:	$guiObj->item_sep=config_get('gui')->title_separator_2;
lib/testcases/tcExport.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/testcases/tcExport.php: * 20100315 - franciscom - improvements on goback management
lib/testcases/tcExport.php: * 20100315 - amitkhullar - Added checkboxes options for Requirements and CFields for Export.
lib/testcases/tcExport.php: * 20081027 - martin - cleanup
lib/testcases/tcExport.php: * 20070113 - franciscom - added logic to create message when there is nothing to export.
lib/testcases/tcExport.php: * 20061118 - franciscom - using different file name, depending type of exported elements.
lib/testcases/tcExport.php: * ----------------------------------------------------------------------------------- */
lib/testcases/tcExport.php:/** @TODO martin: csv export is not available now - get it back */
lib/testcases/tcExport.php:$gui->do_it = 1;
lib/testcases/tcExport.php:$gui->nothing_todo_msg = '';
lib/testcases/tcExport.php:$gui->export_filename = '';
lib/testcases/tcExport.php:$gui->page_title = '';
lib/testcases/tcExport.php:$gui->object_name='';
lib/testcases/tcExport.php:$gui->goback_url = !is_null($args->goback_url) ? $args->goback_url : ''; 
lib/testcases/tcExport.php:$node_id = $args->container_id;
lib/testcases/tcExport.php:if($args->useRecursion)
lib/testcases/tcExport.php:	$gui->page_title=lang_get('title_tsuite_export');
lib/testcases/tcExport.php:	$gui->export_filename = 'testsuites.xml';
lib/testcases/tcExport.php:	if($node_id == $args->tproject_id)
lib/testcases/tcExport.php:		$gui->page_title=lang_get('title_tsuite_export_all');
lib/testcases/tcExport.php:		$gui->export_filename = 'all_testsuites.xml';
lib/testcases/tcExport.php:		$gui->nothing_todo_msg=lang_get('no_testsuites_to_export');
lib/testcases/tcExport.php:	$exporting_just_one_tc = ($args->tcase_id && $args->tcversion_id);
lib/testcases/tcExport.php:	$gui->export_filename = 'testcases.xml';
lib/testcases/tcExport.php:		$node_id = $args->tcase_id;
lib/testcases/tcExport.php:		$gui->page_title = lang_get('title_tc_export');
lib/testcases/tcExport.php:		$gui->page_title = lang_get('title_tc_export_all');
lib/testcases/tcExport.php:		$gui->nothing_todo_msg = lang_get('no_testcases_to_export');
lib/testcases/tcExport.php:$gui->export_filename = is_null($args->export_filename) ? $gui->export_filename : $args->export_filename;
lib/testcases/tcExport.php:	$children=$tree_mgr->get_children($node_id, 
lib/testcases/tcExport.php:	$gui->nothing_todo_msg='';
lib/testcases/tcExport.php:		$gui->do_it = 0 ;
lib/testcases/tcExport.php:$node = $tree_mgr->get_node_hierarchy_info($node_id);
lib/testcases/tcExport.php:if ($args->doExport)
lib/testcases/tcExport.php:	$optExport = array('REQS' => $args->exportReqs, 'CFIELDS' => $args->exportCFields,
lib/testcases/tcExport.php:	                   'KEYWORDS' => $args->exportKeywords, 'RECURSIVE' => $args->useRecursion);
lib/testcases/tcExport.php:	switch($args->exportType)
lib/testcases/tcExport.php:			$content = $tcase_mgr->$pfn($args->tcase_id,$args->tcversion_id,$args->tproject_id,null,$optExport);
lib/testcases/tcExport.php:			$content .= $tsuite_mgr->$pfn($args->container_id,$args->tproject_id,$optExport);
lib/testcases/tcExport.php:		downloadContentsToFile($content,$gui->export_filename);
lib/testcases/tcExport.php:if( $args->useRecursion )
lib/testcases/tcExport.php:$gui->object_name=$node['name'];
lib/testcases/tcExport.php:$gui->exportTypes=$obj_mgr->get_export_file_types();
lib/testcases/tcExport.php:$gui->tproject_name=$args->tproject_name;
lib/testcases/tcExport.php:$gui->tproject_id=$args->tproject_id;
lib/testcases/tcExport.php:$gui->tcID=$args->tcase_id; 
lib/testcases/tcExport.php:$gui->useRecursion=$args->useRecursion ? 1 : 0;
lib/testcases/tcExport.php:$gui->tcVersionID=$args->tcversion_id;
lib/testcases/tcExport.php:$gui->containerID=$args->container_id;
lib/testcases/tcExport.php:$smarty->assign('gui',$gui);
lib/testcases/tcExport.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/testcases/tcExport.php:    $args->doExport = isset($_REQUEST['export']) ? $_REQUEST['export'] : null;
lib/testcases/tcExport.php:    $args->exportReqs = isset($_REQUEST['exportReqs']) ? 1 : 0;
lib/testcases/tcExport.php:    $args->exportCFields = isset($_REQUEST['exportCFields']) ? 1 : 0;
lib/testcases/tcExport.php:    $args->exportKeywords = isset($_REQUEST['exportKeywords']) ? 1 : 0;
lib/testcases/tcExport.php:    $args->exportType = isset($_REQUEST['exportType']) ? $_REQUEST['exportType'] : null;
lib/testcases/tcExport.php:    $args->tcase_id = isset($_REQUEST['testcase_id']) ? intval($_REQUEST['testcase_id']) : 0;
lib/testcases/tcExport.php:    $args->tcversion_id = isset($_REQUEST['tcversion_id']) ? intval($_REQUEST['tcversion_id']) : 0;
lib/testcases/tcExport.php:    $args->container_id = isset($_REQUEST['containerID']) ? intval($_REQUEST['containerID']) : 0;
lib/testcases/tcExport.php:    $args->useRecursion = isset($_REQUEST['useRecursion']) ? $_REQUEST['useRecursion'] : false;
lib/testcases/tcExport.php:    $args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/testcases/tcExport.php:    $args->tproject_name = $_SESSION['testprojectName'];
lib/testcases/tcExport.php:    $args->export_filename=isset($_REQUEST['export_filename']) ? $_REQUEST['export_filename'] : null;
lib/testcases/tcExport.php:	// 20100315 - franciscom
lib/testcases/tcExport.php:    $args->goback_url=isset($_REQUEST['goback_url']) ? $_REQUEST['goback_url'] : null;
lib/testcases/testcaseCommands.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/testcases/testcaseCommands.class.php: * @author 		Francisco Mancardi - francisco.mancardi@gmail.com
lib/testcases/testcaseCommands.class.php: * @copyright 	2007-2009, TestLink community 
lib/testcases/testcaseCommands.class.php: *  20100808 - franciscom - initGuiBean() - added steps key to remove error display from event viewer
lib/testcases/testcaseCommands.class.php: *  20100716 - eloff - BUGID 3610 - fixes missing steps_results_layout in $gui
lib/testcases/testcaseCommands.class.php: *  20100625 - asimon - refactoring for new filter features,
lib/testcases/testcaseCommands.class.php: *	20100605 - franciscom - BUGID 3377 	
lib/testcases/testcaseCommands.class.php: *  20100403 - Julian - BUGID 3441 - Removed Call-time pass-by-reference on function call
lib/testcases/testcaseCommands.class.php: *	20100403 - franciscom - BUGID 3359 - doCopyStep 	
lib/testcases/testcaseCommands.class.php: *	20100327 - franciscom - improvements in goback logic 	
lib/testcases/testcaseCommands.class.php: *	20100326 - franciscom - BUGID 3326: Editing a test step: execution type always "Manual"
lib/testcases/testcaseCommands.class.php: *	20100123 - franciscom - added logic to check for step number existence
lib/testcases/testcaseCommands.class.php: *	20100106 - franciscom - Multiple Test Case Steps Feature
lib/testcases/testcaseCommands.class.php: *	20090831 - franciscom - preconditions 
lib/testcases/testcaseCommands.class.php: *	BUGID 2364 - changes in show() calls
lib/testcases/testcaseCommands.class.php: *  BUGID - doAdd2testplan() - added user id, con call to link_tcversions()
lib/testcases/testcaseCommands.class.php:	    $this->db=$db;
lib/testcases/testcaseCommands.class.php:	    $this->tcaseMgr = new testcase($db);
lib/testcases/testcaseCommands.class.php:        $this->execution_types = $this->tcaseMgr->get_execution_types();
lib/testcases/testcaseCommands.class.php:        $this->grants=new stdClass();
lib/testcases/testcaseCommands.class.php:        $this->grants->requirement_mgmt=has_rights($db,"mgt_modify_req"); 
lib/testcases/testcaseCommands.class.php:	    $this->templateCfg=$cfg;
lib/testcases/testcaseCommands.class.php:	    $obj->action = '';
lib/testcases/testcaseCommands.class.php:		$obj->attachments = null;
lib/testcases/testcaseCommands.class.php:    	$obj->cleanUpWebEditor = false;
lib/testcases/testcaseCommands.class.php:		$obj->containerID = '';
lib/testcases/testcaseCommands.class.php:		$obj->direct_link = null;
lib/testcases/testcaseCommands.class.php:	    $obj->execution_types = $this->execution_types;
lib/testcases/testcaseCommands.class.php:		$obj->grants = $this->grants;
lib/testcases/testcaseCommands.class.php:   		$obj->has_been_executed = false;
lib/testcases/testcaseCommands.class.php:    	$obj->initWebEditorFromTemplate = false;
lib/testcases/testcaseCommands.class.php:		$obj->main_descr = '';
lib/testcases/testcaseCommands.class.php:		$obj->name = '';
lib/testcases/testcaseCommands.class.php:    	$obj->refreshTree=0;
lib/testcases/testcaseCommands.class.php:	    $obj->sqlResult = '';
lib/testcases/testcaseCommands.class.php:   		$obj->step_id = -1;
lib/testcases/testcaseCommands.class.php:   		$obj->step_set = '';
lib/testcases/testcaseCommands.class.php:   		$obj->steps = '';
lib/testcases/testcaseCommands.class.php:    	$obj->tableColspan = 5;
lib/testcases/testcaseCommands.class.php:        $obj->tcase_id = property_exists($argsObj,'tcase_id') ? $argsObj->tcase_id : -1;
lib/testcases/testcaseCommands.class.php:        $obj->$p2check = '';
lib/testcases/testcaseCommands.class.php:        	$obj->$p2check = !is_null($argsObj->$p2check) ? $argsObj->$p2check : ''; 
lib/testcases/testcaseCommands.class.php:        	$obj->$p2check = !is_null($argsObj->$p2check) ? $argsObj->$p2check : 'show'; 
lib/testcases/testcaseCommands.class.php:        $obj->loadOnCancelURL = "archiveData.php?edit=testcase&show_mode={$obj->show_mode}&id=%s&version_id=%s";
lib/testcases/testcaseCommands.class.php:    	$guiObj = $this->initGuiBean($argsObj);
lib/testcases/testcaseCommands.class.php:    	$guiObj->initWebEditorFromTemplate = true;
lib/testcases/testcaseCommands.class.php:        $guiObj->containerID = $argsObj->container_id;
lib/testcases/testcaseCommands.class.php:		if($argsObj->container_id > 0)
lib/testcases/testcaseCommands.class.php:			$pnode_info = $this->tcaseMgr->tree_manager->get_node_hierarchy_info($argsObj->container_id);
lib/testcases/testcaseCommands.class.php:			$node_descr = array_flip($this->tcaseMgr->tree_manager->get_available_node_types());
lib/testcases/testcaseCommands.class.php:			$guiObj->parent_info['name'] = $pnode_info['name'];
lib/testcases/testcaseCommands.class.php:			$guiObj->parent_info['description'] = lang_get($node_descr[$pnode_info['node_type_id']]);
lib/testcases/testcaseCommands.class.php:        $guiObj->main_descr = $guiObj->parent_info['description'] . $sep_1 . $guiObj->parent_info['name'] . 
lib/testcases/testcaseCommands.class.php:    	$otCfg->to->map = array();
lib/testcases/testcaseCommands.class.php:		$cfPlaces = $this->tcaseMgr->buildCFLocationMap();
lib/testcases/testcaseCommands.class.php:			$guiObj->cf[$locationKey] = 
lib/testcases/testcaseCommands.class.php:				$this->tcaseMgr->html_table_of_custom_field_inputs(null,null,'design','',null,null,
lib/testcases/testcaseCommands.class.php:				                                                   $argsObj->testproject_id,$locationFilter);
lib/testcases/testcaseCommands.class.php:    	$guiObj->tc=$tc_default;
lib/testcases/testcaseCommands.class.php:    	$guiObj->opt_cfg=$otCfg;
lib/testcases/testcaseCommands.class.php:		$guiObj->template=$templateCfg->default_template;
lib/testcases/testcaseCommands.class.php:        $guiObj = $this->create($argsObj,$otCfg,$oWebEditorKeys);
lib/testcases/testcaseCommands.class.php:		$siblings = $this->tcaseMgr->tree_manager->get_children($argsObj->container_id,$nt2exclude);
lib/testcases/testcaseCommands.class.php:		$tcase = $this->tcaseMgr->create($argsObj->container_id,$argsObj->name,$argsObj->summary,$argsObj->preconditions,
lib/testcases/testcaseCommands.class.php:		                            	 $argsObj->tcaseSteps,$argsObj->user_id,$argsObj->assigned_keywords_list,
lib/testcases/testcaseCommands.class.php:		                            	 $argsObj->exec_type,$argsObj->importance,$options);
lib/testcases/testcaseCommands.class.php:			$cf_map = $this->tcaseMgr->cfield_mgr->get_linked_cfields_at_design($argsObj->testproject_id,ENABLED,
lib/testcases/testcaseCommands.class.php:            // BUGID 3162 - generated by not passing 3 argument
lib/testcases/testcaseCommands.class.php:			$this->tcaseMgr->cfield_mgr->design_values_to_db($_REQUEST,$tcase['id'],$cf_map);
lib/testcases/testcaseCommands.class.php:		   	$guiObj->user_feedback = sprintf(lang_get('tc_created'),$argsObj->name);
lib/testcases/testcaseCommands.class.php:		   	$guiObj->sqlResult = 'ok';
lib/testcases/testcaseCommands.class.php:		   	$guiObj->initWebEditorFromTemplate = true;
lib/testcases/testcaseCommands.class.php:		   	$guiObj->cleanUpWebEditor = true;
lib/testcases/testcaseCommands.class.php:			$guiObj->user_feedback = lang_get('error_tc_add');
lib/testcases/testcaseCommands.class.php:			$guiObj->user_feedback .= '' . $tcase['msg'];
lib/testcases/testcaseCommands.class.php:	    	$guiObj->sqlResult = 'ko';
lib/testcases/testcaseCommands.class.php:    		$opt_list = $argsObj->assigned_keywords_list;
lib/testcases/testcaseCommands.class.php:    		$guiObj->initWebEditorFromTemplate = false;
lib/testcases/testcaseCommands.class.php:    	$guiObj->opt_cfg=$otCfg;
lib/testcases/testcaseCommands.class.php:		$guiObj->template=$templateCfg->default_template;
lib/testcases/testcaseCommands.class.php:    	$guiObj = $this->initGuiBean($argsObj);
lib/testcases/testcaseCommands.class.php:    	$otCfg->to->map = $this->tcaseMgr->get_keywords_map($argsObj->tcase_id," ORDER BY keyword ASC ");
lib/testcases/testcaseCommands.class.php:    	keywords_opt_transf_cfg($otCfg, $argsObj->assigned_keywords_list);
lib/testcases/testcaseCommands.class.php:  		$tc_data = $this->tcaseMgr->get_by_id($argsObj->tcase_id,$argsObj->tcversion_id);
lib/testcases/testcaseCommands.class.php:   			$guiObj->$key = isset($tc_data[0][$key]) ?  $tc_data[0][$key] : '';
lib/testcases/testcaseCommands.class.php:   			$argsObj->$key = $guiObj->$key;
lib/testcases/testcaseCommands.class.php:		$cfPlaces = $this->tcaseMgr->buildCFLocationMap();
lib/testcases/testcaseCommands.class.php:				$this->tcaseMgr->html_table_of_custom_field_inputs($argsObj->tcase_id,null,'design','',
lib/testcases/testcaseCommands.class.php:		$guiObj->cf = $cf_smarty;
lib/testcases/testcaseCommands.class.php:    	$guiObj->tc=$tc_data[0];
lib/testcases/testcaseCommands.class.php:    	$guiObj->opt_cfg=$otCfg;
lib/testcases/testcaseCommands.class.php:		$guiObj->template=$templateCfg->default_template;
lib/testcases/testcaseCommands.class.php:    	$guiObj = $this->initGuiBean($argsObj);
lib/testcases/testcaseCommands.class.php:   	    $guiObj->refreshTree=$argsObj->refreshTree ? 1 : 0;
lib/testcases/testcaseCommands.class.php:        $guiObj->has_been_executed = $argsObj->has_been_executed;
lib/testcases/testcaseCommands.class.php:		$guiObj->steps_results_layout = config_get('spec_cfg')->steps_results_layout;
lib/testcases/testcaseCommands.class.php:        $tc_old = $this->tcaseMgr->get_by_id($argsObj->tcase_id,$argsObj->tcversion_id);
lib/testcases/testcaseCommands.class.php:        $ret=$this->tcaseMgr->update($argsObj->tcase_id, $argsObj->tcversion_id, $argsObj->name, 
lib/testcases/testcaseCommands.class.php:		                             $argsObj->summary, $argsObj->preconditions, $argsObj->tcaseSteps, 
lib/testcases/testcaseCommands.class.php:		                             $argsObj->user_id,$argsObj->assigned_keywords_list,
lib/testcases/testcaseCommands.class.php:		                             testcase::DEFAULT_ORDER, $argsObj->exec_type, $argsObj->importance);
lib/testcases/testcaseCommands.class.php:		    $guiObj->refreshTree=1;
lib/testcases/testcaseCommands.class.php:		    $guiObj->user_feedback = '';
lib/testcases/testcaseCommands.class.php:		  	$cf_map = $this->tcaseMgr->cfield_mgr->get_linked_cfields_at_design($argsObj->testproject_id,
lib/testcases/testcaseCommands.class.php:            // BUGID 3162 - generated by not passing 3 argument
lib/testcases/testcaseCommands.class.php:			$this->tcaseMgr->cfield_mgr->design_values_to_db($request,$argsObj->tcase_id,$cf_map);
lib/testcases/testcaseCommands.class.php:            $guiObj->attachments[$argsObj->tcase_id] = getAttachmentInfosFrom($this->tcaseMgr,$argsObj->tcase_id);
lib/testcases/testcaseCommands.class.php:		    $guiObj->refreshTree=0;
lib/testcases/testcaseCommands.class.php:		    $guiObj->user_feedback = $ret['msg'];
lib/testcases/testcaseCommands.class.php:	    $viewer_args['refreshTree'] = $guiObj->refreshTree;
lib/testcases/testcaseCommands.class.php: 	    $viewer_args['user_feedback'] = $guiObj->user_feedback;
lib/testcases/testcaseCommands.class.php:	    $this->tcaseMgr->show($smartyObj,$guiObj, $this->templateCfg->template_dir,
lib/testcases/testcaseCommands.class.php:	                          $argsObj->tcase_id,$argsObj->tcversion_id,$viewer_args,null,$argsObj->show_mode);
lib/testcases/testcaseCommands.class.php:      	$smartyObj->assign('attachments',null);
lib/testcases/testcaseCommands.class.php:    	$guiObj = $this->initGuiBean($argsObj);
lib/testcases/testcaseCommands.class.php:      	$tplan_mgr = new testplan($this->db);
lib/testcases/testcaseCommands.class.php:   	  	$guiObj->refreshTree = $argsObj->refreshTree? 1 : 0;
lib/testcases/testcaseCommands.class.php:                    $item2link['tcversion'][$argsObj->tcase_id] = $argsObj->tcversion_id;
lib/testcases/testcaseCommands.class.php:                    $item2link['items'][$argsObj->tcase_id][$platform_id] = $argsObj->tcversion_id;
lib/testcases/testcaseCommands.class.php:      	        	$tplan_mgr->link_tcversions($tplan_id,$item2link,$argsObj->user_id);  
lib/testcases/testcaseCommands.class.php:      	    $this->tcaseMgr->show($smartyObj,$guiObj,$this->templateCfg->template_dir,
lib/testcases/testcaseCommands.class.php:	  	                          $argsObj->tcase_id,$argsObj->tcversion_id,$viewer_args);
lib/testcases/testcaseCommands.class.php:   * add2testplan - is really needed???? 20090308 - franciscom - TO DO
lib/testcases/testcaseCommands.class.php:      // $tplan_mgr = new testplan($this->db);
lib/testcases/testcaseCommands.class.php:   	  // $guiObj->refresh_tree=$argsObj->do_refresh?"yes":"no";
lib/testcases/testcaseCommands.class.php:      // $item2link[$argsObj->tcase_id]=$argsObj->tcversion_id;
lib/testcases/testcaseCommands.class.php:      //     $tplan_mgr->link_tcversions($tplan_id,$item2link);  
lib/testcases/testcaseCommands.class.php:	    // $this->tcaseMgr->show($smartyObj,$this->templateCfg->template_dir,
lib/testcases/testcaseCommands.class.php:	    //                       $argsObj->tcase_id,$argsObj->tcversion_id,$viewer_args);
lib/testcases/testcaseCommands.class.php:    	$guiObj = $this->initGuiBean($argsObj);
lib/testcases/testcaseCommands.class.php: 		$guiObj->delete_message = '';
lib/testcases/testcaseCommands.class.php: 		$my_ret = $this->tcaseMgr->check_link_and_exec_status($argsObj->tcase_id);
lib/testcases/testcaseCommands.class.php: 		$guiObj->exec_status_quo = $this->tcaseMgr->get_exec_status($argsObj->tcase_id);
lib/testcases/testcaseCommands.class.php:		// 		$guiObj->exec_status_quo = lang_get('warning') . TITLE_SEP . lang_get('delete_linked_and_exec');
lib/testcases/testcaseCommands.class.php:		// 		$guiObj->exec_status_quo = lang_get('warning') . TITLE_SEP . lang_get('delete_linked');
lib/testcases/testcaseCommands.class.php:		$tcinfo = $this->tcaseMgr->get_by_id($argsObj->tcase_id);
lib/testcases/testcaseCommands.class.php:		list($prefix,$root) = $this->tcaseMgr->getPrefix($argsObj->tcase_id,$argsObj->testproject_id);
lib/testcases/testcaseCommands.class.php:        $prefix .= $cfg->glue_character;
lib/testcases/testcaseCommands.class.php:		$guiObj->title = lang_get('title_del_tc');
lib/testcases/testcaseCommands.class.php:		$guiObj->testcase_name =  $tcinfo[0]['name'];
lib/testcases/testcaseCommands.class.php:		$guiObj->testcase_id = $argsObj->tcase_id;
lib/testcases/testcaseCommands.class.php:		$guiObj->tcversion_id = testcase::ALL_VERSIONS;
lib/testcases/testcaseCommands.class.php:		$guiObj->refreshTree = 1;
lib/testcases/testcaseCommands.class.php: 		$guiObj->main_descr = lang_get('title_del_tc') . TITLE_SEP . $external_id . TITLE_SEP . $tcinfo[0]['name'];  
lib/testcases/testcaseCommands.class.php:  		$guiObj->template=$templateCfg->default_template;
lib/testcases/testcaseCommands.class.php:    	$guiObj = $this->initGuiBean($argsObj);
lib/testcases/testcaseCommands.class.php: 		$guiObj->user_feedback = '';
lib/testcases/testcaseCommands.class.php:		$guiObj->delete_message = '';
lib/testcases/testcaseCommands.class.php:		$guiObj->action = 'deleted';
lib/testcases/testcaseCommands.class.php:		$guiObj->sqlResult = 'ok';
lib/testcases/testcaseCommands.class.php:		$tcinfo = $this->tcaseMgr->get_by_id($argsObj->tcase_id,$argsObj->tcversion_id);
lib/testcases/testcaseCommands.class.php:		list($prefix,$root) = $this->tcaseMgr->getPrefix($argsObj->tcase_id,$argsObj->testproject_id);
lib/testcases/testcaseCommands.class.php:        $prefix .= $cfg->glue_character;
lib/testcases/testcaseCommands.class.php:		if (!$this->tcaseMgr->delete($argsObj->tcase_id,$argsObj->tcversion_id))
lib/testcases/testcaseCommands.class.php:			$guiObj->action = '';
lib/testcases/testcaseCommands.class.php:			$guiObj->sqlResult = $this->tcaseMgr->db->error_msg();
lib/testcases/testcaseCommands.class.php:			$guiObj->user_feedback = sprintf(lang_get('tc_deleted'), ":" . $external_id . TITLE_SEP . $tcinfo[0]['name']);
lib/testcases/testcaseCommands.class.php:		$guiObj->main_descr = lang_get('title_del_tc') . ":" . $external_id . TITLE_SEP . htmlspecialchars($tcinfo[0]['name']);
lib/testcases/testcaseCommands.class.php:  		// 20080706 - refresh must be forced to avoid a wrong tree situation.
lib/testcases/testcaseCommands.class.php:  		// $refresh_tree = $cfg->spec->automatic_tree_refresh ? "yes" : "no";
lib/testcases/testcaseCommands.class.php:  		$guiObj->refreshTree = 1;
lib/testcases/testcaseCommands.class.php:		if($argsObj->tcversion_id != testcase::ALL_VERSIONS)
lib/testcases/testcaseCommands.class.php:			  $guiObj->main_descr .= " " . lang_get('version') . " " . $tcinfo[0]['version'];
lib/testcases/testcaseCommands.class.php:			  $guiObj->refreshTree = 0;
lib/testcases/testcaseCommands.class.php:		  	  $guiObj->user_feedback = sprintf(lang_get('tc_version_deleted'),$tcinfo[0]['name'],$tcinfo[0]['version']);
lib/testcases/testcaseCommands.class.php:		$guiObj->testcase_name = $tcinfo[0]['name'];
lib/testcases/testcaseCommands.class.php:		$guiObj->testcase_id = $argsObj->tcase_id;
lib/testcases/testcaseCommands.class.php:  		$guiObj->template=$templateCfg->default_template;
lib/testcases/testcaseCommands.class.php:	    $guiObj = $this->initGuiBean($argsObj);
lib/testcases/testcaseCommands.class.php:		$tcaseInfo = $this->tcaseMgr->get_basic_info($argsObj->tcase_id,$argsObj->tcversion_id);
lib/testcases/testcaseCommands.class.php:		$external = $this->tcaseMgr->getExternalID($tcaseInfo[0]['id'],$argsObj->testproject_id);
lib/testcases/testcaseCommands.class.php:		$guiObj->main_descr = sprintf(lang_get('create_step'), $external[0] . ':' . $tcaseInfo[0]['name'], 
lib/testcases/testcaseCommands.class.php:		$max_step = $this->tcaseMgr->get_latest_step_number($argsObj->tcversion_id); 
lib/testcases/testcaseCommands.class.php:		$guiObj->step_number = $max_step;
lib/testcases/testcaseCommands.class.php:		$guiObj->step_exec_type = TESTCASE_EXECUTION_TYPE_MANUAL;
lib/testcases/testcaseCommands.class.php:		$guiObj->tcversion_id = $argsObj->tcversion_id;
lib/testcases/testcaseCommands.class.php:		$guiObj->step_set = $this->tcaseMgr->get_step_numbers($argsObj->tcversion_id);
lib/testcases/testcaseCommands.class.php:		$guiObj->step_set = is_null($guiObj->step_set) ? '' : implode(",",array_keys($guiObj->step_set));
lib/testcases/testcaseCommands.class.php:        $guiObj->loadOnCancelURL = sprintf($guiObj->loadOnCancelURL,$tcaseInfo[0]['id'],$argsObj->tcversion_id);
lib/testcases/testcaseCommands.class.php:		$guiObj->tcaseSteps = $this->tcaseMgr->get_steps($argsObj->tcversion_id);
lib/testcases/testcaseCommands.class.php:  		$guiObj->template=$templateCfg->default_template;
lib/testcases/testcaseCommands.class.php:		$guiObj->action = __FUNCTION__;
lib/testcases/testcaseCommands.class.php:	    $guiObj = $this->initGuiBean($argsObj);
lib/testcases/testcaseCommands.class.php:		$guiObj->user_feedback = '';
lib/testcases/testcaseCommands.class.php:		$guiObj->step_exec_type = $argsObj->exec_type;
lib/testcases/testcaseCommands.class.php:        $guiObj->tcversion_id = $argsObj->tcversion_id;
lib/testcases/testcaseCommands.class.php:		$tcaseInfo = $this->tcaseMgr->get_basic_info($argsObj->tcase_id,$argsObj->tcversion_id);
lib/testcases/testcaseCommands.class.php:		$external = $this->tcaseMgr->getExternalID($tcaseInfo[0]['id'],$argsObj->testproject_id);
lib/testcases/testcaseCommands.class.php:		$guiObj->main_descr = sprintf(lang_get('create_step'), $external[0] . ':' . $tcaseInfo[0]['name'], 
lib/testcases/testcaseCommands.class.php:		$new_step = $this->tcaseMgr->get_latest_step_number($argsObj->tcversion_id); 
lib/testcases/testcaseCommands.class.php:        $op = $this->tcaseMgr->create_step($argsObj->tcversion_id,$new_step,
lib/testcases/testcaseCommands.class.php:                                           $argsObj->steps,$argsObj->expected_results,$argsObj->exec_type);	
lib/testcases/testcaseCommands.class.php:			$guiObj->user_feedback = sprintf(lang_get('step_number_x_created'),$argsObj->step_number);
lib/testcases/testcaseCommands.class.php:		    $guiObj->step_exec_type = TESTCASE_EXECUTION_TYPE_MANUAL;
lib/testcases/testcaseCommands.class.php:		    $guiObj->cleanUpWebEditor = true;
lib/testcases/testcaseCommands.class.php:		$guiObj->action = __FUNCTION__;
lib/testcases/testcaseCommands.class.php:		$guiObj->tcaseSteps = $this->tcaseMgr->get_steps($argsObj->tcversion_id);
lib/testcases/testcaseCommands.class.php:		$max_step = $this->tcaseMgr->get_latest_step_number($argsObj->tcversion_id); 
lib/testcases/testcaseCommands.class.php:		$guiObj->step_number = $max_step;
lib/testcases/testcaseCommands.class.php:		$guiObj->step_set = $this->tcaseMgr->get_step_numbers($argsObj->tcversion_id);
lib/testcases/testcaseCommands.class.php:		$guiObj->step_set = is_null($guiObj->step_set) ? '' : implode(",",array_keys($guiObj->step_set));
lib/testcases/testcaseCommands.class.php:        $guiObj->loadOnCancelURL = sprintf($guiObj->loadOnCancelURL,$tcaseInfo[0]['id'],$argsObj->tcversion_id);
lib/testcases/testcaseCommands.class.php:  		$guiObj->template=$templateCfg->default_template;
lib/testcases/testcaseCommands.class.php:	    $guiObj = $this->initGuiBean($argsObj);
lib/testcases/testcaseCommands.class.php:		$guiObj->user_feedback = '';
lib/testcases/testcaseCommands.class.php:		$tcaseInfo = $this->tcaseMgr->get_basic_info($argsObj->tcase_id,$argsObj->tcversion_id);
lib/testcases/testcaseCommands.class.php:		$external = $this->tcaseMgr->getExternalID($argsObj->tcase_id,$argsObj->testproject_id);
lib/testcases/testcaseCommands.class.php:		$stepInfo = $this->tcaseMgr->get_step_by_id($argsObj->step_id);
lib/testcases/testcaseCommands.class.php:  		  	$argsObj->$key = $stepInfo[$field];
lib/testcases/testcaseCommands.class.php:  		  	$guiObj->$key = $stepInfo[$field];
lib/testcases/testcaseCommands.class.php:		$guiObj->main_descr = sprintf(lang_get('edit_step_number_x'),$stepInfo['step_number'],
lib/testcases/testcaseCommands.class.php:		$guiObj->tcase_id = $argsObj->tcase_id;
lib/testcases/testcaseCommands.class.php:		$guiObj->tcversion_id = $argsObj->tcversion_id;
lib/testcases/testcaseCommands.class.php:		$guiObj->step_id = $argsObj->step_id;
lib/testcases/testcaseCommands.class.php:		$guiObj->step_exec_type = $stepInfo['execution_type'];
lib/testcases/testcaseCommands.class.php:		$guiObj->step_number = $stepInfo['step_number']; // BUGID 3326: Editing a test step: execution type always "Manual"
lib/testcases/testcaseCommands.class.php:		$guiObj->tcaseSteps = $this->tcaseMgr->get_steps($argsObj->tcversion_id);
lib/testcases/testcaseCommands.class.php:		$guiObj->step_set = $this->tcaseMgr->get_step_numbers($argsObj->tcversion_id);
lib/testcases/testcaseCommands.class.php:		$guiObj->step_set = is_null($guiObj->step_set) ? '' : implode(",",array_keys($guiObj->step_set));
lib/testcases/testcaseCommands.class.php:		$guiObj->template=$templateCfg->default_template;
lib/testcases/testcaseCommands.class.php:        $guiObj->loadOnCancelURL = sprintf($guiObj->loadOnCancelURL,$argsObj->tcase_id,$argsObj->tcversion_id);
lib/testcases/testcaseCommands.class.php:	    $guiObj = $this->initGuiBean($argsObj);
lib/testcases/testcaseCommands.class.php:		$guiObj->user_feedback = '';
lib/testcases/testcaseCommands.class.php:		$tcaseInfo = $this->tcaseMgr->get_basic_info($argsObj->tcase_id,$argsObj->tcversion_id);
lib/testcases/testcaseCommands.class.php:		$external = $this->tcaseMgr->getExternalID($argsObj->tcase_id,$argsObj->testproject_id);
lib/testcases/testcaseCommands.class.php:		$stepInfo = $this->tcaseMgr->get_step_by_id($argsObj->step_id);
lib/testcases/testcaseCommands.class.php:		$guiObj->main_descr = sprintf(lang_get('edit_step_number_x'),$stepInfo['step_number'],
lib/testcases/testcaseCommands.class.php:        $op = $this->tcaseMgr->update_step($argsObj->step_id,$argsObj->step_number,$argsObj->steps,
lib/testcases/testcaseCommands.class.php:                                           $argsObj->expected_results,$argsObj->exec_type);		
lib/testcases/testcaseCommands.class.php:		$guiObj->tcversion_id = $argsObj->tcversion_id;
lib/testcases/testcaseCommands.class.php:		$guiObj->step_id = $argsObj->step_id;
lib/testcases/testcaseCommands.class.php:		$guiObj->step_number = $stepInfo['step_number'];
lib/testcases/testcaseCommands.class.php:		$guiObj->step_exec_type = $argsObj->exec_type;
lib/testcases/testcaseCommands.class.php:		$guiObj = $this->editStep($argsObj,$request);  
lib/testcases/testcaseCommands.class.php:	    $guiObj = $this->initGuiBean($argsObj);
lib/testcases/testcaseCommands.class.php:		$tcaseInfo = $this->tcaseMgr->get_basic_info($argsObj->tcase_id,$argsObj->tcversion_id);
lib/testcases/testcaseCommands.class.php:		$external = $this->tcaseMgr->getExternalID($argsObj->tcase_id,$argsObj->testproject_id);
lib/testcases/testcaseCommands.class.php:		$guiObj->main_descr = lang_get('test_case');
lib/testcases/testcaseCommands.class.php:		$this->tcaseMgr->set_step_number($argsObj->step_set);
lib/testcases/testcaseCommands.class.php:		$guiObj->template="archiveData.php?version_id={$argsObj->tcversion_id}&" . 
lib/testcases/testcaseCommands.class.php:						  "edit=testcase&id={$argsObj->tcase_id}&show_mode={$guiObj->show_mode}";
lib/testcases/testcaseCommands.class.php:		$guiObj = $this->initGuiBean($argsObj); // BUGID 3493
lib/testcases/testcaseCommands.class.php:		$guiObj->refreshTree = 0;
lib/testcases/testcaseCommands.class.php:		$step_node = $this->tcaseMgr->tree_manager->get_node_hierarchy_info($argsObj->step_id);
lib/testcases/testcaseCommands.class.php:		$tcversion_node = $this->tcaseMgr->tree_manager->get_node_hierarchy_info($step_node['parent_id']);
lib/testcases/testcaseCommands.class.php:		$guiObj->template="archiveData.php?version_id={$tcversion_id}&" . 
lib/testcases/testcaseCommands.class.php:						  "edit=testcase&id={$tcase_id}&show_mode={$guiObj->show_mode}";
lib/testcases/testcaseCommands.class.php:		$guiObj->user_feedback = '';
lib/testcases/testcaseCommands.class.php:        $op = $this->tcaseMgr->delete_step_by_id($argsObj->step_id);
lib/testcases/testcaseCommands.class.php:	    $guiObj = $this->initGuiBean($argsObj);
lib/testcases/testcaseCommands.class.php:		$guiObj->user_feedback = '';
lib/testcases/testcaseCommands.class.php:		$guiObj->step_exec_type = $argsObj->exec_type;
lib/testcases/testcaseCommands.class.php:        $guiObj->tcversion_id = $argsObj->tcversion_id;
lib/testcases/testcaseCommands.class.php:		$guiObj->action = __FUNCTION__;
lib/testcases/testcaseCommands.class.php:		$guiObj->operation = 'doUpdateStep';
lib/testcases/testcaseCommands.class.php:		$tcaseInfo = $this->tcaseMgr->get_basic_info($argsObj->tcase_id,$argsObj->tcversion_id);
lib/testcases/testcaseCommands.class.php:		$external = $this->tcaseMgr->getExternalID($tcaseInfo[0]['id'],$argsObj->testproject_id);
lib/testcases/testcaseCommands.class.php:		$guiObj->main_descr = sprintf(lang_get('edit_step_number_x'), $argsObj->step_number,
lib/testcases/testcaseCommands.class.php:		$new_step = $this->tcaseMgr->get_latest_step_number($argsObj->tcversion_id); 
lib/testcases/testcaseCommands.class.php:	    $source_info = $this->tcaseMgr->get_steps($argsObj->tcversion_id,$argsObj->step_number);
lib/testcases/testcaseCommands.class.php:        $op = $this->tcaseMgr->create_step($argsObj->tcversion_id,$new_step,$source_info['actions'],
lib/testcases/testcaseCommands.class.php:			$guiObj->user_feedback = sprintf(lang_get('step_number_x_created_as_copy'),$new_step,$argsObj->step_number);
lib/testcases/testcaseCommands.class.php:		    $guiObj->step_exec_type = TESTCASE_EXECUTION_TYPE_MANUAL;
lib/testcases/testcaseCommands.class.php:		$guiObj->tcaseSteps = $this->tcaseMgr->get_steps($argsObj->tcversion_id);
lib/testcases/testcaseCommands.class.php:		// is enough to set $guiObj->step_number to target test step
lib/testcases/testcaseCommands.class.php:		$guiObj->step_number = $argsObj->step_number;
lib/testcases/testcaseCommands.class.php:		$guiObj->step_set = $this->tcaseMgr->get_step_numbers($argsObj->tcversion_id);
lib/testcases/testcaseCommands.class.php:		$guiObj->step_set = is_null($guiObj->step_set) ? '' : implode(",",array_keys($guiObj->step_set));
lib/testcases/testcaseCommands.class.php:        $guiObj->loadOnCancelURL = sprintf($guiObj->loadOnCancelURL,$tcaseInfo[0]['id'],$argsObj->tcversion_id);
lib/testcases/testcaseCommands.class.php:  		$guiObj->template=$templateCfg->default_template;
lib/testcases/tcAssignedToUser.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/testcases/tcAssignedToUser.php: * @modified $Date: 2010/08/26 07:27:48 $  $Author: mx-julian $
lib/testcases/tcAssignedToUser.php: * @author Francisco Mancardi - francisco.mancardi@gmail.com
lib/testcases/tcAssignedToUser.php: *  20100826 - Julian - removed redundant version indication
lib/testcases/tcAssignedToUser.php: *  20100825 - Julian - make table collapsible if more than 1 table is shown
lib/testcases/tcAssignedToUser.php: *  20100825 - eloff - BUGID 3711 - Hide platform if not used
lib/testcases/tcAssignedToUser.php: *  20100823 - asimon - refactoring: $table_id
lib/testcases/tcAssignedToUser.php: *  20100822 - franciscom - refactoring - getColumnsDefinition()
lib/testcases/tcAssignedToUser.php: *  20100816 - asimon - if priority is enabled, enable default sorting by that column
lib/testcases/tcAssignedToUser.php: *  20100802 - asimon - BUGID 3647, filtering by build
lib/testcases/tcAssignedToUser.php: *  20100731 - asimon - heavy refactoring, modified to include more parameters and flexibility,
lib/testcases/tcAssignedToUser.php:$names = $user->getNames($db);
lib/testcases/tcAssignedToUser.php:if ($args->user_id > 0) {
lib/testcases/tcAssignedToUser.php:	$args->user_name = $names[$args->user_id]['login'];
lib/testcases/tcAssignedToUser.php:$tproject_info = $tproject_mgr->get_by_id($args->tproject_id);
lib/testcases/tcAssignedToUser.php:$gui->glueChar = config_get('testcase_cfg')->glue_character;
lib/testcases/tcAssignedToUser.php:$gui->tproject_name = $tproject_info['name'];
lib/testcases/tcAssignedToUser.php:$gui->warning_msg = '';
lib/testcases/tcAssignedToUser.php:$gui->tableSet = null;
lib/testcases/tcAssignedToUser.php:if ($args->show_all_users) {
lib/testcases/tcAssignedToUser.php:	$gui->pageTitle=sprintf($l18n['assigned_tc_overview'], $gui->tproject_name);
lib/testcases/tcAssignedToUser.php:	$gui->pageTitle=sprintf($l18n['testcases_assigned_to_user'],$gui->tproject_name, $args->user_name);
lib/testcases/tcAssignedToUser.php:$options->mode = 'full_path';
lib/testcases/tcAssignedToUser.php:if (!$args->show_inactive_and_closed) {
lib/testcases/tcAssignedToUser.php:if ($args->build_id) {
lib/testcases/tcAssignedToUser.php:	$filters['build_id'] = $args->build_id;
lib/testcases/tcAssignedToUser.php:$tplan_param = ($args->tplan_id) ? array($args->tplan_id) : testcase::ALL_TESTPLANS;
lib/testcases/tcAssignedToUser.php:$gui->resultSet=$tcase_mgr->get_assigned_to_user($args->user_id, $args->tproject_id, 
lib/testcases/tcAssignedToUser.php:$doIt = !is_null($gui->resultSet); 
lib/testcases/tcAssignedToUser.php:    $tplanSet=array_keys($gui->resultSet);
lib/testcases/tcAssignedToUser.php:    $gui->tplanNames=$db->fetchRowsIntoMap($sql,'id');
lib/testcases/tcAssignedToUser.php:	$optColumns = array('user' => $args->show_user_column, 'priority' => $args->priority_enabled);
lib/testcases/tcAssignedToUser.php:	foreach ($gui->resultSet as $tplan_id => $tcase_set) {
lib/testcases/tcAssignedToUser.php:		$show_platforms = !is_null($tplan_mgr->getPlatforms($tplan_id));
lib/testcases/tcAssignedToUser.php:				if ($args->show_user_column) {
lib/testcases/tcAssignedToUser.php:				        		 htmlspecialchars($tcase['prefix']) . $gui->glueChar . $tcase['tc_external_id'] . 
lib/testcases/tcAssignedToUser.php:				if ($args->priority_enabled) {
lib/testcases/tcAssignedToUser.php:					if ($tcase['priority'] >= $urgencyImportance->threshold['high']) {
lib/testcases/tcAssignedToUser.php:					} else if ($tcase['priority'] < $urgencyImportance->threshold['low']) {
lib/testcases/tcAssignedToUser.php:				$last_execution = $tcase_mgr->get_last_execution($tcase_id, $tcversion_id, $tplan_id, 
lib/testcases/tcAssignedToUser.php:		$table_id = 'tl_' . $args->tproject_id . '_' . $tplan_id . '_table_tc_assignment';
lib/testcases/tcAssignedToUser.php:		$table_id .= ($args->show_all_users) ? '_overview' : '_for_user';
lib/testcases/tcAssignedToUser.php:		$table_id .= ($args->build_id) ? '_window' : '';
lib/testcases/tcAssignedToUser.php:		$matrix->title = $l18n['testplan'] . ": " . htmlspecialchars($gui->tplanNames[$tplan_id]['name']);
lib/testcases/tcAssignedToUser.php:		$matrix->groupByColumn = 0;
lib/testcases/tcAssignedToUser.php:			$matrix->collapsible = true;
lib/testcases/tcAssignedToUser.php:			$matrix->frame = true;
lib/testcases/tcAssignedToUser.php:		$matrix->showToolbar = true;
lib/testcases/tcAssignedToUser.php:		$matrix->toolbarExpandCollapseGroupsButton = true;
lib/testcases/tcAssignedToUser.php:		$matrix->toolbarShowAllColumnsButton = true;
lib/testcases/tcAssignedToUser.php:		$matrix->sortByColumn = $sortByColumn;
lib/testcases/tcAssignedToUser.php:		$gui->tableSet[$tplan_id] = $matrix;
lib/testcases/tcAssignedToUser.php:$smarty->assign('gui',$gui);
lib/testcases/tcAssignedToUser.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/testcases/tcAssignedToUser.php:	return floor((time() - $date) * $i);
lib/testcases/tcAssignedToUser.php: * @author franciscom - francisco.mancardi@gmail.com
lib/testcases/tcAssignedToUser.php: * @args - used global coupling accessing $_REQUEST and $_SESSION
lib/testcases/tcAssignedToUser.php: * @since 20090131 - franciscom
lib/testcases/tcAssignedToUser.php: *  20100731 - asimon - additional arguments show_all_users and show_inactive_and_closed
lib/testcases/tcAssignedToUser.php:    $args->tproject_id = isset($_REQUEST['tproject_id']) ? $_REQUEST['tproject_id'] : 0;
lib/testcases/tcAssignedToUser.php:    if( $args->tproject_id == 0)
lib/testcases/tcAssignedToUser.php:        $args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/testcases/tcAssignedToUser.php:    $args->tplan_id = isset($_REQUEST['tplan_id']) ? $_REQUEST['tplan_id'] : 0;
lib/testcases/tcAssignedToUser.php:	$args->build_id = isset($_REQUEST['build_id']) && is_numeric($_REQUEST['build_id']) ? 
lib/testcases/tcAssignedToUser.php:	// $args->show_all_users = isset($_REQUEST['show_all_users']) && $_REQUEST['show_all_users'] =! 0 ? true : false;
lib/testcases/tcAssignedToUser.php:	$args->show_all_users = (isset($_REQUEST['show_all_users']) && $_REQUEST['show_all_users'] =! 0);
lib/testcases/tcAssignedToUser.php:	$args->show_user_column = $args->show_all_users; 
lib/testcases/tcAssignedToUser.php:    $args->user_id = isset($_REQUEST['user_id']) ? $_REQUEST['user_id'] : 0;
lib/testcases/tcAssignedToUser.php:    if( $args->user_id == 0)
lib/testcases/tcAssignedToUser.php:        $args->user_id = isset($_SESSION['userID']) ? $_SESSION['userID'] : 0;
lib/testcases/tcAssignedToUser.php:        $args->user_name = $_SESSION['currentUser']->login;
lib/testcases/tcAssignedToUser.php:	if ($args->show_all_users) {
lib/testcases/tcAssignedToUser.php:		$args->user_id = TL_USER_ANYBODY;
lib/testcases/tcAssignedToUser.php:	$args->show_inactive_and_closed = isset($_REQUEST['show_inactive_and_closed']) 
lib/testcases/tcAssignedToUser.php:	$args->priority_enabled = $_SESSION['testprojectOptions']->testPriorityEnabled ? true : false;
lib/testcases/tcAssignedToUser.php:	// 20100816 - asimon - if priority is enabled, enable default sorting by that column
lib/testcases/tcEdit.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/testcases/tcEdit.php: * @copyright 	2007-2009, TestLink community 
lib/testcases/tcEdit.php: *  20100831 - asimon - BUGID 3532
lib/testcases/tcEdit.php: * 	20100828 - franciscom - BUGID 3156 tinymce problems - OK Internet Explorer 8, Firefox
lib/testcases/tcEdit.php: *  20100810 - asimon - BUGID 3579: solved tree refreshing problems
lib/testcases/tcEdit.php: *  20100628 - asimon - removal of constants from filter control class
lib/testcases/tcEdit.php: *  20100625 - asimon - refactoring of filter feature
lib/testcases/tcEdit.php: *  20100624 - asimon - CVS merge (experimental branch to HEAD)
lib/testcases/tcEdit.php: *	20100621 - eloff - BUGID 3241 - Implement vertical layout
lib/testcases/tcEdit.php: *	20100605 - franciscom - BUGID 3377
lib/testcases/tcEdit.php: *	20100403 - franciscom - BUGID 3359: Copy Test Case Step
lib/testcases/tcEdit.php: *	20100124 - franciscom - fixed bug on copy test cases - do not obey to top or bottom user choice
lib/testcases/tcEdit.php: *	20100106 - franciscom - Multiple Test Case Steps Feature
lib/testcases/tcEdit.php: *	20100104 - franciscom - fixed bug on create new version, now is created
lib/testcases/tcEdit.php: *	20100103 - franciscom - refactoring to use command class
lib/testcases/tcEdit.php: *	20090831 - franciscom - preconditions
lib/testcases/tcEdit.php: *	20090401 - franciscom - BUGID 2364 - edit while executing
lib/testcases/tcEdit.php: *  20090401 - franciscom - BUGID 2316
lib/testcases/tcEdit.php: *  20090325 - franciscom - BUGID - problems with add to testplan
lib/testcases/tcEdit.php: *  20090302 - franciscom - BUGID 2163 - Create test case with same title, after submit, all data lost 
lib/testcases/tcEdit.php: *  20080827 - franciscom - BUGID 1692 
lib/testcases/tcEdit.php: *  20080105 - franciscom - REQID 1248 - added logic to manage copy/move on top or bottom
lib/testcases/tcEdit.php: *  20071106 - BUGID 1165
lib/testcases/tcEdit.php:$args = init_args($cfg->spec,$optionTransferName);
lib/testcases/tcEdit.php:if ($args->doAction == "editStep" || $args->doAction == "createStep" || $args->doAction == "doCreateStep") {
lib/testcases/tcEdit.php:	$cfg->webEditorCfg=getWebEditorCfg('steps_design');
lib/testcases/tcEdit.php:require_once(require_web_editor($cfg->webEditorCfg['type']));
lib/testcases/tcEdit.php:$commandMgr->setTemplateCfg(templateConfiguration());
lib/testcases/tcEdit.php:$oWebEditor = createWebEditors($args->basehref,$cfg->webEditorCfg,$testCaseEditorKeys);
lib/testcases/tcEdit.php:$init_inputs=true; // BUGID 2163 - Create test case with same title, after submit, all data lost 
lib/testcases/tcEdit.php:if($args->do_activate_this)
lib/testcases/tcEdit.php:$pfn = $args->doAction;
lib/testcases/tcEdit.php:switch($args->doAction)
lib/testcases/tcEdit.php:        $op = $commandMgr->$pfn($args,$_REQUEST);
lib/testcases/tcEdit.php:        $oWebEditorKeys = array_keys($oWebEditor->cfg);
lib/testcases/tcEdit.php:        $op = $commandMgr->$pfn($args,$opt_cfg,$oWebEditorKeys);
lib/testcases/tcEdit.php:        $op = $commandMgr->$pfn($args,$_REQUEST);
lib/testcases/tcEdit.php:if($args->delete_tc_version)
lib/testcases/tcEdit.php:	$status_quo_map = $tcase_mgr->get_versions_status_quo($args->tcase_id);
lib/testcases/tcEdit.php:	$exec_status_quo = $tcase_mgr->get_exec_status($args->tcase_id);
lib/testcases/tcEdit.php:		if(isset($exec_status_quo[$args->tcversion_id]))
lib/testcases/tcEdit.php:			$sq = array($args->tcversion_id => $exec_status_quo[$args->tcversion_id]);
lib/testcases/tcEdit.php:	if(intval($status_quo_map[$args->tcversion_id]['executed']))
lib/testcases/tcEdit.php:	else if(intval($status_quo_map[$args->tcversion_id]['linked']))
lib/testcases/tcEdit.php:	$tcinfo = $tcase_mgr->get_by_id($args->tcase_id,$args->tcversion_id);
lib/testcases/tcEdit.php:	$gui->title = lang_get('title_del_tc') . 
lib/testcases/tcEdit.php:	$gui->testcase_name = $tcinfo[0]['name'];
lib/testcases/tcEdit.php:	$gui->testcase_id = $args->tcase_id;
lib/testcases/tcEdit.php:	$gui->tcversion_id = $args->tcversion_id;
lib/testcases/tcEdit.php:	$gui->delete_message = $msg;
lib/testcases/tcEdit.php:	$gui->exec_status_quo = $sq;
lib/testcases/tcEdit.php:	$gui->refreshTree = 0;
lib/testcases/tcEdit.php:    $smarty->assign('gui',$gui);
lib/testcases/tcEdit.php:    $smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/testcases/tcEdit.php:else if($args->move_copy_tc)
lib/testcases/tcEdit.php:	$tproject_id = $tcase_mgr->get_testproject($args->tcase_id);
lib/testcases/tcEdit.php:	$the_tc_node = $tree_mgr->get_node_hierarchy_info($args->tcase_id);
lib/testcases/tcEdit.php:	$the_xx = $tproject_mgr->gen_combo_test_suites($tproject_id);
lib/testcases/tcEdit.php:	$tc_info = $tcase_mgr->get_by_id($args->tcase_id);
lib/testcases/tcEdit.php:	$gui->move_enabled = 1;
lib/testcases/tcEdit.php:		$gui->move_enabled = 0;
lib/testcases/tcEdit.php:    $gui->top_checked = 'checked=checked';
lib/testcases/tcEdit.php:	$gui->bottom_checked = '';
lib/testcases/tcEdit.php:	$gui->old_container = $the_tc_node['parent_id']; // original container
lib/testcases/tcEdit.php:	$gui->array_container = $the_xx;
lib/testcases/tcEdit.php:	$gui->testcase_id = $args->tcase_id;
lib/testcases/tcEdit.php:	$gui->name = $tc_info[0]['name'];
lib/testcases/tcEdit.php:	$smarty->assign('gui', $gui);
lib/testcases/tcEdit.php:    $smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/testcases/tcEdit.php:else if($args->do_move)
lib/testcases/tcEdit.php:	$result = $tree_mgr->change_parent($args->tcase_id,$args->new_container_id);
lib/testcases/tcEdit.php:  	$tree_mgr->change_child_order($args->new_container_id,$args->tcase_id,
lib/testcases/tcEdit.php:                                  $args->target_position,$cfg->exclude_node_types);
lib/testcases/tcEdit.php:    $gui->refreshTree = $args->refreshTree;
lib/testcases/tcEdit.php:	$tsuite_mgr->show($smarty,$gui,$templateCfg->template_dir,$args->old_container_id);
lib/testcases/tcEdit.php:else if($args->do_copy)
lib/testcases/tcEdit.php:                     'copy_also' => $args->copy);
lib/testcases/tcEdit.php:	$result = $tcase_mgr->copy_to($args->tcase_id,$args->new_container_id,$args->user_id,$options);
lib/testcases/tcEdit.php:		    $tree_mgr->change_child_order($args->new_container_id,$result['id'],
lib/testcases/tcEdit.php:		                                  $args->target_position,$cfg->exclude_node_types);
lib/testcases/tcEdit.php:		    $tc_info = $tcase_mgr->get_by_id($args->tcase_id);
lib/testcases/tcEdit.php:		    $container_info = $tree_mgr->get_node_hierarchy_info($args->new_container_id);
lib/testcases/tcEdit.php:		    $container_path = $tree_mgr->get_path($args->new_container_id);
lib/testcases/tcEdit.php:	$gui->refreshTree = $args->refreshTree;
lib/testcases/tcEdit.php:	$viewer_args['refreshTree']=$args->refreshTree? 1 : 0;
lib/testcases/tcEdit.php:	$tcase_mgr->show($smarty,$gui,$templateCfg->template_dir,$args->tcase_id,
lib/testcases/tcEdit.php:	                 $args->tcversion_id,$viewer_args,null, $args->show_mode);
lib/testcases/tcEdit.php:else if($args->do_create_new_version)
lib/testcases/tcEdit.php:	$op = $tcase_mgr->create_new_version($args->tcase_id,$args->user_id,$args->tcversion_id);
lib/testcases/tcEdit.php:	// 20090419 - BUGID - 
lib/testcases/tcEdit.php:	$gui->loadOnCancelURL = $_SESSION['basehref'] . 
lib/testcases/tcEdit.php:	                        '/lib/testcases/archiveData.php?edit=testcase&id=' . $args->tcase_id .
lib/testcases/tcEdit.php:	                        "&show_mode={$args->show_mode}";
lib/testcases/tcEdit.php:	$testcase_version = !is_null($args->show_mode) ? $args->tcversion_id : testcase::ALL_VERSIONS;
lib/testcases/tcEdit.php:	$tcase_mgr->show($smarty,$gui,$templateCfg->template_dir,$args->tcase_id,$testcase_version, 
lib/testcases/tcEdit.php:	                 $viewer_args,null, $args->show_mode);
lib/testcases/tcEdit.php:else if($args->do_activate_this || $args->do_deactivate_this)
lib/testcases/tcEdit.php:	$gui->loadOnCancelURL = $_SESSION['basehref'] . 
lib/testcases/tcEdit.php:	                        '/lib/testcases/archiveData.php?edit=testcase&id=' . $args->tcase_id .
lib/testcases/tcEdit.php:	                        "&show_mode={$args->show_mode}";
lib/testcases/tcEdit.php:	$tcase_mgr->update_active_status($args->tcase_id, $args->tcversion_id, $active_status);
lib/testcases/tcEdit.php:	$tcase_mgr->show($smarty,$gui,$templateCfg->template_dir,$args->tcase_id,
lib/testcases/tcEdit.php:	                 testcase::ALL_VERSIONS,$viewer_args,null, $args->show_mode);
lib/testcases/tcEdit.php:// --------------------------------------------------------------------------
lib/testcases/tcEdit.php:	// BUGID 2163 - Create test case with same title, after submit, all data lost 
lib/testcases/tcEdit.php:  	$tc_default['importance'] = $init_inputs ? $tlCfg->testcase_importance_default : $args->importance;
lib/testcases/tcEdit.php:  	$tc_default['execution_type'] = $init_inputs ? TESTCASE_EXECUTION_TYPE_MANUAL : $args->exec_type;
lib/testcases/tcEdit.php:  	foreach ($oWebEditor->cfg as $key => $value)
lib/testcases/tcEdit.php:  	    $of = &$oWebEditor->editor[$key];
lib/testcases/tcEdit.php:  	    $rows = $oWebEditor->cfg[$key]['rows'];
lib/testcases/tcEdit.php:  	    $cols = $oWebEditor->cfg[$key]['cols'];
lib/testcases/tcEdit.php:  	      	$of->Value = getItemTemplateContents('testcase_template', $of->InstanceName, '');
lib/testcases/tcEdit.php:  	  		$of->Value = $args->$key;
lib/testcases/tcEdit.php:		$smarty->assign($key, $of->CreateHTML($rows,$cols));
lib/testcases/tcEdit.php:	$filters=$tcase_mgr->buildCFLocationMap();
lib/testcases/tcEdit.php:			$tcase_mgr->html_table_of_custom_field_inputs($args->tcase_id,$args->container_id,'design','',
lib/testcases/tcEdit.php:	$gui->cf = $cf_smarty;
lib/testcases/tcEdit.php:	$gui->tc = $tc_default;
lib/testcases/tcEdit.php:	$gui->containerID = $args->container_id;
lib/testcases/tcEdit.php:	$smarty->assign('gui',$gui);
lib/testcases/tcEdit.php:  	$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/testcases/tcEdit.php:    $args->assigned_keywords_list = isset($_REQUEST[$rightlist_html_name])? $_REQUEST[$rightlist_html_name] : "";
lib/testcases/tcEdit.php:    $args->container_id = isset($_REQUEST['containerID']) ? intval($_REQUEST['containerID']) : 0;
lib/testcases/tcEdit.php:    $args->tcase_id = isset($_REQUEST['testcase_id']) ? intval($_REQUEST['testcase_id']) : 0;
lib/testcases/tcEdit.php:    $args->tcversion_id = isset($_REQUEST['tcversion_id']) ? intval($_REQUEST['tcversion_id']) : 0;
lib/testcases/tcEdit.php:    $args->name = isset($_REQUEST['testcase_name']) ? $_REQUEST['testcase_name'] : null;
lib/testcases/tcEdit.php:    $args->summary = isset($_REQUEST['summary']) ? $_REQUEST['summary'] : null;
lib/testcases/tcEdit.php:    $args->preconditions = isset($_REQUEST['preconditions']) ? $_REQUEST['preconditions'] : null;
lib/testcases/tcEdit.php:    $args->steps = isset($_REQUEST['steps']) ? $_REQUEST['steps'] : null;
lib/testcases/tcEdit.php:    $args->expected_results = isset($_REQUEST['expected_results']) ? $_REQUEST['expected_results'] : null;
lib/testcases/tcEdit.php:    $args->new_container_id = isset($_REQUEST['new_container']) ? intval($_REQUEST['new_container']) : 0;
lib/testcases/tcEdit.php:    $args->old_container_id = isset($_REQUEST['old_container']) ? intval($_REQUEST['old_container']) : 0;
lib/testcases/tcEdit.php:    $args->has_been_executed = isset($_REQUEST['has_been_executed']) ? intval($_REQUEST['has_been_executed']) : 0;
lib/testcases/tcEdit.php:    $args->exec_type = isset($_REQUEST['exec_type']) ? $_REQUEST['exec_type'] : TESTCASE_EXECUTION_TYPE_MANUAL;
lib/testcases/tcEdit.php:    $args->importance = isset($_REQUEST['importance']) ? $_REQUEST['importance'] : $tc_importance_default;
lib/testcases/tcEdit.php:    $args->doAction = isset($_REQUEST['doAction']) ? $_REQUEST['doAction'] : '';
lib/testcases/tcEdit.php:    	$args->doAction = 'edit';
lib/testcases/tcEdit.php:    	$args->doAction = 'delete';
lib/testcases/tcEdit.php:    	$args->doAction = 'doDelete';
lib/testcases/tcEdit.php:    	$args->doAction = 'create';
lib/testcases/tcEdit.php:    	$args->doAction = 'doCreate';
lib/testcases/tcEdit.php:    $args->move_copy_tc = isset($_REQUEST['move_copy_tc']) ? 1 : 0;
lib/testcases/tcEdit.php:    $args->delete_tc_version = isset($_REQUEST['delete_tc_version']) ? 1 : 0;
lib/testcases/tcEdit.php:    $args->do_move   = isset($_REQUEST['do_move']) ? 1 : 0;
lib/testcases/tcEdit.php:    $args->do_copy   = isset($_REQUEST['do_copy']) ? 1 : 0;
lib/testcases/tcEdit.php:    $args->do_create_new_version = isset($_REQUEST['do_create_new_version']) ? 1 : 0;
lib/testcases/tcEdit.php:    $args->do_delete_tc_version = isset($_REQUEST['do_delete_tc_version']) ? 1 : 0;
lib/testcases/tcEdit.php:    $args->do_activate_this = isset($_REQUEST['activate_this_tcversion']) ? 1 : 0;
lib/testcases/tcEdit.php:    $args->do_deactivate_this = isset($_REQUEST['deactivate_this_tcversion']) ? 1 : 0;
lib/testcases/tcEdit.php:    $args->target_position = isset($_REQUEST['target_position']) ? $_REQUEST['target_position'] : 'bottom';
lib/testcases/tcEdit.php:       $args->copy[$key]=isset($_REQUEST[$key])?true:false;    
lib/testcases/tcEdit.php:    // 20090419 - franciscom - BUGID - edit while executing
lib/testcases/tcEdit.php:    $args->show_mode = (isset($_REQUEST['show_mode']) && $_REQUEST['show_mode'] != '') ? $_REQUEST['show_mode'] : null;
lib/testcases/tcEdit.php:	$args->step_number = isset($_REQUEST['step_number']) ? intval($_REQUEST['step_number']) : 0;
lib/testcases/tcEdit.php:	$args->step_id = isset($_REQUEST['step_id']) ? intval($_REQUEST['step_id']) : 0;
lib/testcases/tcEdit.php:	$args->step_set = isset($_REQUEST['step_set']) ? $_REQUEST['step_set'] : null;
lib/testcases/tcEdit.php:	$args->tcaseSteps = isset($_REQUEST['tcaseSteps']) ? $_REQUEST['tcaseSteps'] : null;
lib/testcases/tcEdit.php:    $args->testproject_id = $_SESSION['testprojectID'];
lib/testcases/tcEdit.php:    $args->user_id = $_SESSION['userID'];
lib/testcases/tcEdit.php:	$args->refreshTree = isset($_SESSION['setting_refresh_tree_on_action']) ?
lib/testcases/tcEdit.php:	$args->opt_requirements = null;
lib/testcases/tcEdit.php:		$args->opt_requirements = $_SESSION['testprojectOptions']->requirementsEnabled;
lib/testcases/tcEdit.php:	$args->basehref = $_SESSION['basehref'];
lib/testcases/tcEdit.php:    $args->goback_url=isset($_REQUEST['goback_url']) ? $_REQUEST['goback_url'] : null;
lib/testcases/tcEdit.php:    switch($argsObj->doAction)
lib/testcases/tcEdit.php:        	$otCfg->global_lbl = '';
lib/testcases/tcEdit.php:        	$otCfg->from->lbl = lang_get('available_kword');
lib/testcases/tcEdit.php:        	$otCfg->from->map = $tprojectMgr->get_keywords_map($argsObj->testproject_id);
lib/testcases/tcEdit.php:        	$otCfg->to->lbl = lang_get('assigned_kword');
lib/testcases/tcEdit.php:    $otCfg->js_ot_name = $otName;
lib/testcases/tcEdit.php:  rev: 20080902 - franciscom - manage column number as function of layout for tinymce
lib/testcases/tcEdit.php:    $layout=$specGUICfg->steps_results_layout;
lib/testcases/tcEdit.php:    $owe->cfg = array('summary' => array('rows'=> null,'cols' => null),
lib/testcases/tcEdit.php:    $owe->editor = array();
lib/testcases/tcEdit.php:    foreach ($owe->cfg as $key => $value)
lib/testcases/tcEdit.php:    		$owe->editor[$key] = web_editor($key,$basehref,$editorCfg);
lib/testcases/tcEdit.php:    		unset($owe->cfg[$key]);
lib/testcases/tcEdit.php:    $cfg->treemenu_default_testcase_order = config_get('treemenu_default_testcase_order');
lib/testcases/tcEdit.php:    $cfg->spec = config_get('spec_cfg');
lib/testcases/tcEdit.php:    $cfg->exclude_node_types = array('testplan' => 1, 'requirement' => 1, 'requirement_spec' => 1);
lib/testcases/tcEdit.php:    $cfg->tcase_template = config_get('testcase_template');
lib/testcases/tcEdit.php:    $cfg->webEditorCfg=getWebEditorCfg('design');
lib/testcases/tcEdit.php:    $cfg->editorKeys = new stdClass();
lib/testcases/tcEdit.php:    $cfg->editorKeys->testcase = array('summary' => true, 'preconditions' => true);    
lib/testcases/tcEdit.php:    $cfg->editorKeys->step = array('steps' => true, 'expected_results' => true);    
lib/testcases/tcEdit.php:    $grants->requirement_mgmt=has_rights($dbHandler,"mgt_modify_req"); 
lib/testcases/tcEdit.php:	$guiObj->editorType = $cfgObj->webEditorCfg['type'];
lib/testcases/tcEdit.php:	$guiObj->grants = getGrants($dbHandler);
lib/testcases/tcEdit.php:	$guiObj->opt_requirements = $argsObj->opt_requirements; 
lib/testcases/tcEdit.php:	$guiObj->action_on_duplicated_name = 'generate_new';
lib/testcases/tcEdit.php:	$guiObj->show_mode = $argsObj->show_mode;
lib/testcases/tcEdit.php:    $guiObj->has_been_executed = $argsObj->has_been_executed;
lib/testcases/tcEdit.php:    $guiObj->attachments = null;
lib/testcases/tcEdit.php:	$guiObj->parent_info = null;
lib/testcases/tcEdit.php:	$guiObj->user_feedback = '';
lib/testcases/tcEdit.php:	$guiObj->steps_results_layout = config_get('spec_cfg')->steps_results_layout;
lib/testcases/tcEdit.php:	$guiObj->loadOnCancelURL = $_SESSION['basehref'] . 
lib/testcases/tcEdit.php:	                           "/lib/testcases/archiveData.php?edit=testcase&id=" . $argsObj->tcase_id .
lib/testcases/tcEdit.php:	                           "&show_mode={$argsObj->show_mode}";
lib/testcases/tcEdit.php:	if($argsObj->container_id > 0)
lib/testcases/tcEdit.php:		$pnode_info = $tcaseMgr->tree_manager->get_node_hierarchy_info($argsObj->container_id);
lib/testcases/tcEdit.php:		$node_descr = array_flip($tcaseMgr->tree_manager->get_available_node_types());
lib/testcases/tcEdit.php:		$guiObj->parent_info['name'] = $pnode_info['name'];
lib/testcases/tcEdit.php:		$guiObj->parent_info['description'] = lang_get($node_descr[$pnode_info['node_type_id']]);
lib/testcases/tcEdit.php:	$guiObj->direct_link = $tcaseMgr->buildDirectWebLink($_SESSION['basehref'],$argsObj->tcase_id,$argsObj->testproject_id);
lib/testcases/tcEdit.php:    $smartyObj->assign('editorType',$guiObj->editorType);  
lib/testcases/tcEdit.php:    // When template is used for create -> operation: doCreate.
lib/testcases/tcEdit.php:    // When template is used for edit -> operation: doUpdate.
lib/testcases/tcEdit.php:    // used to set value of: $guiObj->operation
lib/testcases/tcEdit.php:	$initWebEditorFromTemplate = property_exists($opObj,$key2work) ? $opObj->$key2work : false;                             
lib/testcases/tcEdit.php:	$cleanUpWebEditor = property_exists($opObj,$key2work) ? $opObj->$key2work : false;                             
lib/testcases/tcEdit.php:    $oWebEditor = createWebEditors($argsObj->basehref,$cfgObj->webEditorCfg); 
lib/testcases/tcEdit.php:	foreach ($oWebEditor->cfg as $key => $value)
lib/testcases/tcEdit.php:  		$of = &$oWebEditor->editor[$key];
lib/testcases/tcEdit.php:  		$rows = $oWebEditor->cfg[$key]['rows'];
lib/testcases/tcEdit.php:  		$cols = $oWebEditor->cfg[$key]['cols'];
lib/testcases/tcEdit.php:		switch($argsObj->doAction)
lib/testcases/tcEdit.php:  				$of->Value = $argsObj->$key;
lib/testcases/tcEdit.php:  				$of->Value = $argsObj->$key;
lib/testcases/tcEdit.php:        $guiObj->operation = $actionOperation[$argsObj->doAction];
lib/testcases/tcEdit.php:			$of->Value = getItemTemplateContents('testcase_template', $of->InstanceName, '');	
lib/testcases/tcEdit.php:			$of->Value = '';
lib/testcases/tcEdit.php:		$smartyObj->assign($key, $of->CreateHTML($rows,$cols));
lib/testcases/tcEdit.php:    switch($argsObj->doAction) {
lib/testcases/tcEdit.php:       		$guiObj->refreshTree = $argsObj->refreshTree;
lib/testcases/tcEdit.php:    switch($argsObj->doAction)
lib/testcases/tcEdit.php:            	$guiObj->$key = $value;
lib/testcases/tcEdit.php:            	// if( isset($guiObj->webEditor[$key]) )
lib/testcases/tcEdit.php:            	// 	$guiObj->webEditor[$key] = $value;
lib/testcases/tcEdit.php:                // 	$guiObj->$key = $value;
lib/testcases/tcEdit.php:            $guiObj->operation = $actionOperation[$argsObj->doAction];
lib/testcases/tcEdit.php:            $tplDir = (!isset($opObj->template_dir)  || is_null($opObj->template_dir)) ? $templateCfg->template_dir : $opObj->template_dir;
lib/testcases/tcEdit.php:            $tpl = is_null($opObj->template) ? $templateCfg->default_template : $opObj->template;
lib/testcases/tcEdit.php:        	$smartyObj->assign('gui',$guiObj);
lib/testcases/tcEdit.php:		    $smartyObj->display($tpl);
lib/testcases/containerEdit.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/testcases/containerEdit.php: *  20100811 - asimon - BUGID 3669
lib/testcases/containerEdit.php: *  20100722 - asimon - BUGID 3406, removal of changes for 3049
lib/testcases/containerEdit.php: *  20100628 - asimon - removal of constants from filter control class
lib/testcases/containerEdit.php: *  20100625 - asimon - refactoring for new filter features and BUGID 3516
lib/testcases/containerEdit.php: *  20100624 - asimon - CVS merge (experimental branch to HEAD)
lib/testcases/containerEdit.php: *  20100314 - franciscom - added logic to refresh tree when copying N test cases 	
lib/testcases/containerEdit.php: *  20100223 - asimon - added removeTestcaseAssignments() for BUGID 3049
lib/testcases/containerEdit.php: *	20100204 - franciscom - changes in $tsuiteMgr->copy_to() call	
lib/testcases/containerEdit.php: *	20100202 - franciscom - BUGID 3130: TestSuite: Edit - rename Test Suite Name causes PHP Fatal Error
lib/testcases/containerEdit.php: *	20091206 - franciscom - addTestSuite() - new test suites are order set to last on tree branch
lib/testcases/containerEdit.php: *	20081225 - franciscom - Postgres SQL Error
lib/testcases/containerEdit.php: *	20080827 - franciscom - BUGID 1692
lib/testcases/containerEdit.php: *	20080329 - franciscom - added contribution by Eugenia Drosdezki - Move/copy testcases
lib/testcases/containerEdit.php: *	20080223 - franciscom - BUGID 1408
lib/testcases/containerEdit.php: *	20080129 - franciscom - contribution - tuergeist@gmail.com - doTestSuiteReorder() remove global coupling
lib/testcases/containerEdit.php: *	20080122 - franciscom - BUGID 1312
lib/testcases/containerEdit.php:$opt_cfg->js_ot_name = 'ot';
lib/testcases/containerEdit.php:$smarty->assign('editorType',$editorCfg['type']);
lib/testcases/containerEdit.php:// BUGID 3406 - removed 'doUnassignFromPlan' => 0
lib/testcases/containerEdit.php:$smarty->assign('level', $level);
lib/testcases/containerEdit.php:$smarty->assign('page_title',lang_get('container_title_' . $level));
lib/testcases/containerEdit.php:		keywords_opt_transf_cfg($opt_cfg, $args->assigned_keyword_list);
lib/testcases/containerEdit.php:		$smarty->assign('opt_cfg', $opt_cfg);
lib/testcases/containerEdit.php:		$tsuite_mgr->viewer_edit_new($smarty,$template_dir,$webEditorHtmlNames,$oWebEditor,$action,
lib/testcases/containerEdit.php:		                             $args->containerID, $args->testsuiteID,null,$webEditorTemplateKey);
lib/testcases/containerEdit.php:  	  	$guiObj->attachments = getAttachmentInfosFrom($tsuite_mgr,$args->testsuiteID);
lib/testcases/containerEdit.php:	  	$guiObj->id = $args->testsuiteID;
lib/testcases/containerEdit.php:		$guiObj->page_title = lang_get('container_title_testsuite');
lib/testcases/containerEdit.php:     	$tsuite_mgr->show($smarty,$guiObj,$template_dir,$args->testsuiteID,null,$msg);
lib/testcases/containerEdit.php:        $assignedKeywords = $op['status'] ? "" : $args->assigned_keyword_list;
lib/testcases/containerEdit.php:      	$smarty->assign('opt_cfg', $opt_cfg);
lib/testcases/containerEdit.php:  	    $tsuite_mgr->viewer_edit_new($smarty,$template_dir,$webEditorHtmlNames, $oWebEditor, $action,
lib/testcases/containerEdit.php:	                                 $args->containerID, null,$messages,
lib/testcases/containerEdit.php:    	trigger_error("containerEdit.php - No correct GET/POST data", E_USER_ERROR);
lib/testcases/containerEdit.php:	$smarty->assign('refreshTree',$refreshTree && $args->refreshTree);
lib/testcases/containerEdit.php:	$smarty->display($template_dir . $the_tpl);
lib/testcases/containerEdit.php:  			$verbose[] = $tree_mgr->get_path($elem['id'],$tsuite_id);
lib/testcases/containerEdit.php:  			$status = $tcase_mgr->check_link_and_exec_status($elem['id']);
lib/testcases/containerEdit.php:    $args->tprojectID = $_SESSION['testprojectID'];
lib/testcases/containerEdit.php:    $args->tprojectName = $_SESSION['testprojectName'];
lib/testcases/containerEdit.php:    $args->userID = $_SESSION['userID'];
lib/testcases/containerEdit.php:       $args->$key = isset($_REQUEST[$key]) ? $_REQUEST[$key] : $value;
lib/testcases/containerEdit.php:    $args->tsuite_name = isset($_REQUEST['testsuiteName']) ? $_REQUEST['testsuiteName'] : null;
lib/testcases/containerEdit.php:    $args->bSure = (isset($_REQUEST['sure']) && ($_REQUEST['sure'] == 'yes'));
lib/testcases/containerEdit.php:    $rl_html_name = $optionTransferCfg->js_ot_name . "_newRight";
lib/testcases/containerEdit.php:    $args->assigned_keyword_list = isset($_REQUEST[$rl_html_name])? $_REQUEST[$rl_html_name] : "";
lib/testcases/containerEdit.php:    // BUGID 3406 - removed 'tplan_id' => 0
lib/testcases/containerEdit.php:       $args->$key = isset($_REQUEST[$key]) ? intval($_REQUEST[$key]) : $value;
lib/testcases/containerEdit.php:    if(is_null($args->containerID))
lib/testcases/containerEdit.php:    	$args->containerID = $args->tprojectID;
lib/testcases/containerEdit.php:	$args->refreshTree = isset($_SESSION['setting_refresh_tree_on_action']) ?
lib/testcases/containerEdit.php:    $cf_map = $cfield_mgr->get_linked_cfields_at_design($tprojectID,$ENABLED,
lib/testcases/containerEdit.php:    $cfield_mgr->design_values_to_db($hash,$tsuiteID,$cf_map);
lib/testcases/containerEdit.php:  returns: true -> refresh tree
lib/testcases/containerEdit.php:           false -> do not refresh
lib/testcases/containerEdit.php:	if($argsObj->bSure)
lib/testcases/containerEdit.php:	 	$tsuite = $tsuiteMgr->get_by_id($argsObj->objectID);
lib/testcases/containerEdit.php:		$tsuiteMgr->delete_deep($argsObj->objectID);
lib/testcases/containerEdit.php:		$tsuiteMgr->deleteKeywords($argsObj->objectID);
lib/testcases/containerEdit.php:		$smartyObj->assign('objectName', $tsuite['name']);
lib/testcases/containerEdit.php:		$smartyObj->assign('user_feedback',lang_get('testsuite_successfully_deleted'));
lib/testcases/containerEdit.php:		$testcases = $tsuiteMgr->get_testcases_deep($argsObj->testsuiteID);
lib/testcases/containerEdit.php:			$map_msg = build_del_testsuite_warning_msg($treeMgr,$tcaseMgr,$testcases,$argsObj->testsuiteID);
lib/testcases/containerEdit.php:		$smartyObj->assign('objectID',$argsObj->testsuiteID);
lib/testcases/containerEdit.php:		$smartyObj->assign('objectName', $argsObj->tsuite_name);
lib/testcases/containerEdit.php:		$smartyObj->assign('delete_msg',$map_msg['delete_msg']);
lib/testcases/containerEdit.php:		$smartyObj->assign('warning', $map_msg['warning']);
lib/testcases/containerEdit.php:		$smartyObj->assign('link_msg', $map_msg['link_msg']);
lib/testcases/containerEdit.php:	$smartyObj->assign('page_title', lang_get('delete') . " " . lang_get('container_title_' . $level));
lib/testcases/containerEdit.php: 	$smartyObj->assign('sqlResult',$feedback_msg);
lib/testcases/containerEdit.php:  revision: 20091206 - franciscom - new items are created as last element of tree branch
lib/testcases/containerEdit.php:    $siblings = $tsuiteMgr->tree_manager->get_children($argsObj->containerID,$nt2exclude);
lib/testcases/containerEdit.php:	$ret = $tsuiteMgr->create($argsObj->containerID,$container['container_name'],$container['details'],
lib/testcases/containerEdit.php:		if(trim($argsObj->assigned_keyword_list) != "")
lib/testcases/containerEdit.php:    		$tsuiteMgr->addKeywords($ret['id'],explode(",",$argsObj->assigned_keyword_list));
lib/testcases/containerEdit.php:    	writeCustomFieldsToDB($tsuiteMgr->db,$argsObj->tprojectID,$ret['id'],$hash);
lib/testcases/containerEdit.php:  returns: -
lib/testcases/containerEdit.php:	$testsuites = $tprojectMgr->gen_combo_test_suites($argsObj->tprojectID,
lib/testcases/containerEdit.php:	                                                  array($argsObj->testsuiteID => 'exclude'));
lib/testcases/containerEdit.php:	$testsuites = array($argsObj->tprojectID => $argsObj->tprojectName) + $testsuites;
lib/testcases/containerEdit.php:	$smartyObj->assign('old_containerID', $argsObj->tprojectID);
lib/testcases/containerEdit.php:	$smartyObj->assign('containers', $testsuites);
lib/testcases/containerEdit.php:	$smartyObj->assign('objectID', $argsObj->testsuiteID);
lib/testcases/containerEdit.php:	$smartyObj->assign('object_name', $argsObj->tsuite_name);
lib/testcases/containerEdit.php:	$smartyObj->assign('top_checked','checked=checked');
lib/testcases/containerEdit.php: 	$smartyObj->assign('bottom_checked','');
lib/testcases/containerEdit.php:  returns: -
lib/testcases/containerEdit.php:	$oid = is_null($argsObj->testsuiteID) ? $argsObj->containerID : $argsObj->testsuiteID;
lib/testcases/containerEdit.php:	$children = $treeMgr->get_children($oid, array("testplan" => "exclude_me",
lib/testcases/containerEdit.php:  	$object_info = $treeMgr->get_node_hierarchy_info($oid);
lib/testcases/containerEdit.php:	$smartyObj->assign('arraySelect', $children);
lib/testcases/containerEdit.php:	$smartyObj->assign('objectID', $oid);
lib/testcases/containerEdit.php:	$smartyObj->assign('object_name', $object_name);
lib/testcases/containerEdit.php:	if($oid == $argsObj->tprojectID)
lib/testcases/containerEdit.php:    	$smartyObj->assign('level', $level);
lib/testcases/containerEdit.php:    	$smartyObj->assign('page_title',lang_get('container_title_' . $level));
lib/testcases/containerEdit.php:  returns: -
lib/testcases/containerEdit.php:      20080602 - franciscom - fixed typo bug 
lib/testcases/containerEdit.php:      20080223 - franciscom - fixed typo error - BUGID 1408
lib/testcases/containerEdit.php:// 	$nodes_in_order = transform_nodes_order($argsObj->nodes_order,$argsObj->containerID);
lib/testcases/containerEdit.php:// 	$tprojectMgr->tree_manager->change_order_bulk($nodes_in_order);
lib/testcases/containerEdit.php:// 	if($argsObj->containerID == $argsObj->tprojectID)
lib/testcases/containerEdit.php:// 	$objMgr->show($smartyObj,$template_dir,$argsObj->containerID,,null,'ok');
lib/testcases/containerEdit.php:	$ret = $tsuiteMgr->update($argsObj->testsuiteID,$container['container_name'],$container['details']);
lib/testcases/containerEdit.php:      $tsuiteMgr->deleteKeywords($argsObj->testsuiteID);
lib/testcases/containerEdit.php:      if(trim($argsObj->assigned_keyword_list) != "")
lib/testcases/containerEdit.php:         $tsuiteMgr->addKeywords($argsObj->testsuiteID,explode(",",$argsObj->assigned_keyword_list));
lib/testcases/containerEdit.php:      writeCustomFieldsToDB($tsuiteMgr->db,$argsObj->tprojectID,$argsObj->testsuiteID,$hash);
lib/testcases/containerEdit.php:  	$options['copyKeywords'] = $argsObj->copyKeywords;
lib/testcases/containerEdit.php:  	$op=$tsuiteMgr->copy_to($argsObj->objectID, $argsObj->containerID, $argsObj->userID,$options);
lib/testcases/containerEdit.php:	    $tsuiteMgr->tree_manager->change_child_order($argsObj->containerID,$op['id'],
lib/testcases/containerEdit.php:	                                                 $argsObj->target_position,$exclude_node_types);
lib/testcases/containerEdit.php:	$guiObj->attachments = getAttachmentInfosFrom($tsuiteMgr,$argsObj->objectID);
lib/testcases/containerEdit.php:	$guiObj->id = $argsObj->objectID;
lib/testcases/containerEdit.php:	$tsuiteMgr->show($smartyObj,$guiObj,$template_dir,$argsObj->objectID,null,'ok');
lib/testcases/containerEdit.php:	$tprojectMgr->tree_manager->change_parent($argsObj->objectID,$argsObj->containerID);
lib/testcases/containerEdit.php:  	$tprojectMgr->tree_manager->change_child_order($argsObj->containerID,$argsObj->objectID,
lib/testcases/containerEdit.php:                                                   $argsObj->target_position,$exclude_node_types);
lib/testcases/containerEdit.php:	$guiObj->id = $argsObj->tprojectID;
lib/testcases/containerEdit.php:  	$tprojectMgr->show($smartyObj,$guiObj,$template_dir,$argsObj->tprojectID,null,'ok');
lib/testcases/containerEdit.php:    $opt_cfg->js_ot_name='ot';
lib/testcases/containerEdit.php:    $opt_cfg->global_lbl='';
lib/testcases/containerEdit.php:    $opt_cfg->from->lbl=lang_get('available_kword');
lib/testcases/containerEdit.php:    $opt_cfg->from->map = $tprojectMgr->get_keywords_map($argsObj->tprojectID);
lib/testcases/containerEdit.php:    $opt_cfg->to->lbl=lang_get('assigned_kword');
lib/testcases/containerEdit.php:      $opt_cfg->to->map=$tsuiteMgr->get_keywords_map($argsObj->testsuiteID," ORDER BY keyword ASC ");
lib/testcases/containerEdit.php:  returns: -
lib/testcases/containerEdit.php:	$tables = $tprojectMgr->getDBTables(array('nodes_hierarchy','node_types','tcversions'));
lib/testcases/containerEdit.php:	$glue = $testcase_cfg->glue_character;
lib/testcases/containerEdit.php:	$containerID = isset($argsObj->testsuiteID) ? $argsObj->testsuiteID : $argsObj->objectID;
lib/testcases/containerEdit.php:	$containerName = $argsObj->tsuite_name;
lib/testcases/containerEdit.php:		$dummy = $treeMgr->get_node_hierarchy_info($argsObj->objectID);
lib/testcases/containerEdit.php:  	// 20081225 - franciscom have discovered that exclude selected testsuite branch is not good
lib/testcases/containerEdit.php:  	$testsuites = $tprojectMgr->gen_combo_test_suites($argsObj->tprojectID);	                                                  
lib/testcases/containerEdit.php:	$tcasePrefix = $tprojectMgr->getTestCasePrefix($argsObj->tprojectID) . $glue;
lib/testcases/containerEdit.php:	// 20081225 - franciscom
lib/testcases/containerEdit.php:  	$children = $dbHandler->get_recordset($sql);
lib/testcases/containerEdit.php:	$smartyObj->assign('op_ok', $op_ok);
lib/testcases/containerEdit.php:	$smartyObj->assign('user_feedback', $user_feedback);
lib/testcases/containerEdit.php:	$smartyObj->assign('tcprefix', $tcasePrefix);
lib/testcases/containerEdit.php:	$smartyObj->assign('testcases', $children);
lib/testcases/containerEdit.php:	$smartyObj->assign('old_containerID', $argsObj->tprojectID); //<<<<-- check if is needed
lib/testcases/containerEdit.php:	$smartyObj->assign('containers', $testsuites);
lib/testcases/containerEdit.php:	$smartyObj->assign('objectID', $containerID);
lib/testcases/containerEdit.php:	$smartyObj->assign('object_name', $containerName);
lib/testcases/containerEdit.php:	$smartyObj->assign('top_checked','checked=checked');
lib/testcases/containerEdit.php:	$smartyObj->assign('bottom_checked','');
lib/testcases/containerEdit.php:  returns: -
lib/testcases/containerEdit.php:    if( ($qty=sizeof($argsObj->tcaseSet)) > 0)
lib/testcases/containerEdit.php:        foreach($argsObj->tcaseSet as $key => $tcaseid)
lib/testcases/containerEdit.php:            $copy_op = $tcaseMgr->copy_to($tcaseid, $argsObj->containerID, $argsObj->userID,
lib/testcases/containerEdit.php:	                                      $argsObj->copyKeywords,$check_names_for_duplicates_cfg,
lib/testcases/containerEdit.php:   		$guiObj->attachments = getAttachmentInfosFrom($tsuiteMgr,$argsObj->objectID);
lib/testcases/containerEdit.php:		$guiObj->id = $argsObj->objectID;
lib/testcases/containerEdit.php:		$guiObj->refreshTree = true;
lib/testcases/containerEdit.php:        // $tsuiteMgr->show($smartyObj,$guiObj,$template_dir,$argsObj->objectID);
lib/testcases/containerEdit.php:  returns: -
lib/testcases/containerEdit.php:    if(sizeof($argsObj->tcaseSet) > 0)
lib/testcases/containerEdit.php:        $status_ok = $treeMgr->change_parent($argsObj->tcaseSet,$argsObj->containerID);
lib/testcases/containerEdit.php:        // objectID - original container
lib/testcases/containerEdit.php:   		$guiObj->attachments = getAttachmentInfosFrom($tsuiteMgr,$argsObj->objectID);
lib/testcases/containerEdit.php:		$guiObj->id = $argsObj->objectID;
lib/testcases/containerEdit.php:		$guiObj->refreshTree = true;
lib/testcases/containerEdit.php:        $tsuiteMgr->show($smartyObj,$guiObj,$template_dir,$argsObj->objectID,null,$user_feedback);
lib/testcases/containerEdit.php:  returns: true -> refresh tree
lib/testcases/containerEdit.php:           false -> do not refresh
lib/testcases/tcExecute.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/testcases/tcExecute.php: * is sent back via an XML-RPC server.
lib/testcases/tcExecute.php: * XML-RPC Server Settings need to be configured using the custom fields feature.
lib/testcases/tcExecute.php:switch($args->level)
lib/testcases/tcExecute.php:		$xmlResponse = remote_exec_testcase($db,$args->testcase_id,$msg);
lib/testcases/tcExecute.php:  		$tcase_parent_id = $_REQUEST[$args->level . "_id"];
lib/testcases/tcExecute.php:	if($myResult != -1 and $myNotes != -1)
lib/testcases/tcExecute.php:	$node_type = $tree_manager->get_available_node_types();
lib/testcases/tcExecute.php:	$subtree_list = $tree_manager->get_subtree($parent_id);
lib/testcases/tcExecute.php:		  $node_info=$tree_manager->get_node_hierarchy_info($key);
lib/testcases/tcExecute.php:				if($_value != -1){
lib/testcases/archiveData.php: * 	TestLink Open Source Project - http://testlink.sourceforge.net/
lib/testcases/archiveData.php: *  20100628 - asimon - BUGID 3406: removed old logic from BUGID 3049,
lib/testcases/archiveData.php: *  20100628 - asimon - removal of constants from filter control class
lib/testcases/archiveData.php: *  20160625 - asimon - refactoring for new filter features and BUGID 3516
lib/testcases/archiveData.php: *  20100624 - asimon - CVS merge (experimental branch to HEAD)
lib/testcases/archiveData.php: *	20100621 - eloff - BUGID 3241 - Implement vertical layout
lib/testcases/archiveData.php: *	20100502 - franciscom - BUGID 3405: Navigation Bar - Test Case Search - Crash when search a nonexistent testcase	
lib/testcases/archiveData.php: *  20100315 - franciscom - fixed refesh tree logic	
lib/testcases/archiveData.php: *  20100223 - asimon - BUGID 3049
lib/testcases/archiveData.php:$gui->page_title = lang_get('container_title_' . $args->feature);
lib/testcases/archiveData.php:switch($args->feature)
lib/testcases/archiveData.php:		$item_mgr = new $args->feature($db);
lib/testcases/archiveData.php:		$gui->attachments = getAttachmentInfosFrom($item_mgr,$args->id);
lib/testcases/archiveData.php:		$gui->id = $args->id;
lib/testcases/archiveData.php:		if($args->feature == 'testproject')
lib/testcases/archiveData.php:			$item_mgr->show($smarty,$gui,$templateCfg->template_dir,$args->id);
lib/testcases/archiveData.php:			$item_mgr->show($smarty,$gui,$templateCfg->template_dir,$args->id,array('show_mode' => $args->show_mode));
lib/testcases/archiveData.php:	    $gui->platforms = null;
lib/testcases/archiveData.php:        $gui->tableColspan = 5;
lib/testcases/archiveData.php:		$gui->loadOnCancelURL = '';
lib/testcases/archiveData.php:		$gui->attachments = null;
lib/testcases/archiveData.php:		$gui->direct_link = null;
lib/testcases/archiveData.php:		$gui->steps_results_layout = config_get('spec_cfg')->steps_results_layout;
lib/testcases/archiveData.php:		if(!is_null($args->targetTestCase) && strcmp($args->targetTestCase,$args->tcasePrefix) != 0)
lib/testcases/archiveData.php:			$args->id = $item_mgr->getInternalID($args->targetTestCase);
lib/testcases/archiveData.php:			if( !($get_path_info = ($args->id > 0)) )
lib/testcases/archiveData.php:				$gui->warning_msg = $args->id == 0 ? lang_get('testcase_does_not_exists') : lang_get('prefix_does_not_exists');
lib/testcases/archiveData.php:		if( $args->id > 0 )
lib/testcases/archiveData.php:			if( $get_path_info || $args->show_path )
lib/testcases/archiveData.php:			    $path_info = $item_mgr->tree_manager->get_full_path_verbose($args->id);
lib/testcases/archiveData.php:		  	$platform_mgr = new tlPlatform($db,$args->tproject_id);
lib/testcases/archiveData.php:	    	$gui->platforms = $platform_mgr->getAllAsMap();
lib/testcases/archiveData.php:      		$gui->attachments[$args->id] = getAttachmentInfosFrom($item_mgr,$args->id);
lib/testcases/archiveData.php:			$gui->direct_link = $item_mgr->buildDirectWebLink($_SESSION['basehref'],$args->id);
lib/testcases/archiveData.php:	    $gui->id = $args->id;
lib/testcases/archiveData.php:		$item_mgr->show($smarty,$gui,$templateCfg->template_dir,$args->id,$args->tcversion_id,
lib/testcases/archiveData.php:		                $viewerArgs,$path_info,$args->show_mode);
lib/testcases/archiveData.php:		tLog('Argument "edit" has invalid value: ' . $args->feature , 'ERROR');
lib/testcases/archiveData.php:		trigger_error($_SESSION['currentUser']->login.'> Argument "edit" has invalid value.', E_USER_ERROR);
lib/testcases/archiveData.php:	$args->refreshTree = isset($session_data['setting_refresh_tree_on_action']) ?
lib/testcases/archiveData.php:    $args->user_id = isset($_SESSION['userID']) ? $_SESSION['userID'] : 0;
lib/testcases/archiveData.php:    $args->feature = $args->edit;
lib/testcases/archiveData.php:   	if (!$args->tcversion_id)
lib/testcases/archiveData.php:   		 $args->tcversion_id = testcase::ALL_VERSIONS;
lib/testcases/archiveData.php:    if(intval($args->tcase_id) > 0)
lib/testcases/archiveData.php:    	$args->feature = 'testcase';
lib/testcases/archiveData.php:    	$args->id = intval($args->tcase_id);
lib/testcases/archiveData.php:   	switch($args->feature)
lib/testcases/archiveData.php:        	$_SESSION['setting_refresh_tree_on_action'] = ($args->refreshTree) ? 1 : 0;
lib/testcases/archiveData.php:			$args->id = is_null($args->id) ? 0 : $args->id;
lib/testcases/archiveData.php:			// Why I'm ignoring $args->setting_refresh_tree_on_action ?
lib/testcases/archiveData.php:			// $viewerCfg['refresh_tree'] = $spec_cfg->automatic_tree_refresh ? "yes" : "no";
lib/testcases/archiveData.php:    if (strpos($args->targetTestCase,$cfg->glue_character) === false)
lib/testcases/archiveData.php:    	$args->targetTestCase = $args->tcasePrefix . $args->targetTestCase;
lib/testcases/archiveData.php:   	$args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/testcases/tcCompareVersions.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/testcases/tcCompareVersions.php: * @copyright 	2005-2009, TestLink community 
lib/testcases/tcCompareVersions.php:$tcaseSet = $tcaseMgr->get_by_id($args->tcase_id);
lib/testcases/tcCompareVersions.php:$gui->tc_versions = $tcaseSet;
lib/testcases/tcCompareVersions.php:$gui->tc_id = $args->tcase_id;
lib/testcases/tcCompareVersions.php:$gui->compare_selected_versions = $args->compare_selected_versions;
lib/testcases/tcCompareVersions.php:$gui->context = $args->context;
lib/testcases/tcCompareVersions.php:$gui->version_short = lang_get('version_short');
lib/testcases/tcCompareVersions.php:if ($args->compare_selected_versions) {
lib/testcases/tcCompareVersions.php:		if ($tcase['version'] == $args->version_left) {
lib/testcases/tcCompareVersions.php:		if ($tcase['version'] == $args->version_right) {
lib/testcases/tcCompareVersions.php:		$diff_array[$key]["diff"] = $differ->inline($val["left"], $gui->version_short . 
lib/testcases/tcCompareVersions.php:								$args->version_left, $val["right"], $gui->version_short . 
lib/testcases/tcCompareVersions.php:								$args->version_right, $args->context);
lib/testcases/tcCompareVersions.php:		$diff_array[$key]["count"] = count($differ->changes);
lib/testcases/tcCompareVersions.php:	$gui->diff_array = $diff_array;
lib/testcases/tcCompareVersions.php:	$gui->subtitle = sprintf(lang_get('diff_subtitle_tc'), $args->version_left, 
lib/testcases/tcCompareVersions.php:										$args->version_left, $args->version_right, 
lib/testcases/tcCompareVersions.php:										$args->version_right, $tcaseSet[0]['name']);
lib/testcases/tcCompareVersions.php:$smarty->assign('gui', $gui);
lib/testcases/tcCompareVersions.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/testcases/tcCompareVersions.php:	$args->tcase_id = isset($_REQUEST['testcase_id']) ? $_REQUEST['testcase_id'] : 0;
lib/testcases/tcCompareVersions.php:	$args->compare_selected_versions = isset($_REQUEST['compare_selected_versions']) ? 
lib/testcases/tcCompareVersions.php:	$args->version_left = $_REQUEST['version_left'];
lib/testcases/tcCompareVersions.php:	$args->version_right = $_REQUEST['version_right'];
lib/testcases/tcCompareVersions.php:		$args->context = null;
lib/testcases/tcCompareVersions.php:		$args->context = (isset($_REQUEST['context']) && is_numeric($_REQUEST['context'])) ? 
lib/testcases/tcCompareVersions.php:											$_REQUEST['context'] : $diffEngineCfg->context;	
lib/functions/tlInventory.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/tlInventory.class.php: * 20100516 - franciscom - readDB(),getAll() - interface changes
lib/functions/tlInventory.class.php:	/** @var string the host-name of the server/machine */
lib/functions/tlInventory.class.php:	const E_NAMEALREADYEXISTS = -1;
lib/functions/tlInventory.class.php:	const E_NAMELENGTH = -2;
lib/functions/tlInventory.class.php:	const E_IPALREADYEXISTS = -4;
lib/functions/tlInventory.class.php:	const E_DBERROR = -8;
lib/functions/tlInventory.class.php:		$this->testProjectID = $testProjectID;
lib/functions/tlInventory.class.php:		$this->testProjectID = null;
lib/functions/tlInventory.class.php:		$this->inventoryId = intval($inputData->machineID);
lib/functions/tlInventory.class.php:		$this->name = $inputData->machineName;
lib/functions/tlInventory.class.php:		$this->ipAddress = $inputData->machineIp;
lib/functions/tlInventory.class.php:		$this->ownerId = $inputData->machineOwner;
lib/functions/tlInventory.class.php:		$this->inventoryContent['notes'] = $inputData->machineNotes;
lib/functions/tlInventory.class.php:		$this->inventoryContent['purpose'] = $inputData->machinePurpose;
lib/functions/tlInventory.class.php:		$this->inventoryContent['hardware'] = $inputData->machineHw;
lib/functions/tlInventory.class.php:		$out->machineID = $this->inventoryId;
lib/functions/tlInventory.class.php:		$out->machineName = $this->name;
lib/functions/tlInventory.class.php:		$out->machineIp = $this->ipAddress;
lib/functions/tlInventory.class.php:		$out->machineOwner = $this->ownerId;
lib/functions/tlInventory.class.php:		$out->machineNotes = $this->inventoryContent['notes'];
lib/functions/tlInventory.class.php:		$out->machinePurpose = $this->inventoryContent['purpose'];
lib/functions/tlInventory.class.php:		$out->machineHw = $this->inventoryContent['hardware'];
lib/functions/tlInventory.class.php:	 * @param mixed $ids integer or array of integer - ID of inventory items
lib/functions/tlInventory.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/tlInventory.class.php:		$query = "/* $debugMsg */ SELECT {$fields2get} FROM {$this->tables['inventory']} " .
lib/functions/tlInventory.class.php:				 " WHERE  testproject_id={$this->testProjectID}";
lib/functions/tlInventory.class.php:			$recordset = $this->db->get_recordset($query);
lib/functions/tlInventory.class.php:			$recordset = $this->db->fetchRowsIntoMap($query,$my['options']['accessKey']);
lib/functions/tlInventory.class.php:	 * (both create and update request are supported - based on $this->inventoryId)
lib/functions/tlInventory.class.php:		$auditData = $this->getAuditData();
lib/functions/tlInventory.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/tlInventory.class.php:		$name = $db->prepare_string($this->name);
lib/functions/tlInventory.class.php:		$ip = $db->prepare_string($this->ipAddress);
lib/functions/tlInventory.class.php:		$this->inventoryContent['hardware'] = $db->prepare_string($this->inventoryContent['hardware']);
lib/functions/tlInventory.class.php:		$this->inventoryContent['notes'] = $db->prepare_string($this->inventoryContent['notes']);
lib/functions/tlInventory.class.php:		$this->inventoryContent['purpose'] = $db->prepare_string($this->inventoryContent['purpose']);
lib/functions/tlInventory.class.php:		$data_serialized = serialize($this->inventoryContent);
lib/functions/tlInventory.class.php:		if (is_null($this->inventoryId) || ($this->inventoryId == 0))
lib/functions/tlInventory.class.php:			$query = "/* $debugMsg */ INSERT INTO {$this->tables['inventory']} (name," .
lib/functions/tlInventory.class.php:					 " VALUES ('" . $name .	"'," . $this->testProjectID . ",'" . 
lib/functions/tlInventory.class.php:					$data_serialized . "','" . $ip . "'," . $this->ownerId . "," . 
lib/functions/tlInventory.class.php:					$this->db->db_now() . ")";
lib/functions/tlInventory.class.php:			$result = $this->db->exec_query($query);
lib/functions/tlInventory.class.php:				$this->inventoryId = $db->insert_id($this->tables['inventory']);
lib/functions/tlInventory.class.php:				logAuditEvent(TLS("audit_inventory_created",$this->name,$auditData['tproject_name']),
lib/functions/tlInventory.class.php:				              "CREATE",$this->name,"inventory");
lib/functions/tlInventory.class.php:				$this->userFeedback = langGetFormated('inventory_create_success',$this->name);
lib/functions/tlInventory.class.php:				$this->userFeedback = langGetFormated('inventory_create_fails',$this->name);
lib/functions/tlInventory.class.php:				tLog('Internal error: An inventory device "'.$this->name.'" was not created.', 'ERROR');
lib/functions/tlInventory.class.php:			$query = "/* $debugMsg */UPDATE {$this->tables['inventory']} " .
lib/functions/tlInventory.class.php:				     " ipaddress='{$ip}', modification_ts=" . $this->db->db_now() .
lib/functions/tlInventory.class.php:				     ", testproject_id={$this->testProjectID}, owner_id=" . $this->ownerId .
lib/functions/tlInventory.class.php:					 " WHERE id={$this->inventoryId}";
lib/functions/tlInventory.class.php:			$result = $this->db->exec_query($query);
lib/functions/tlInventory.class.php:				tLog('A device "'.$this->name.'" was not updated.', 'INFO');
lib/functions/tlInventory.class.php:				$this->userFeedback = langGetFormated('inventory_update_success',$this->name);
lib/functions/tlInventory.class.php:				$this->setUserFeedback(langGetFormated('inventory_update_fails',$this->name));
lib/functions/tlInventory.class.php:				tLog('Internal error: An inventory device "'.$this->name.'" was not updated.', 'ERROR');
lib/functions/tlInventory.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/tlInventory.class.php:		$sql = "/* $debugMsg */ DELETE FROM {$this->tables['inventory']} WHERE id = " . $this->inventoryId;
lib/functions/tlInventory.class.php:		$result = $this->db->exec_query($sql);
lib/functions/tlInventory.class.php:		$auditData = $this->getAuditData();
lib/functions/tlInventory.class.php:		$this->inventoryId = $itemID;
lib/functions/tlInventory.class.php:		$recordset = $this->readDB($this->inventoryId);
lib/functions/tlInventory.class.php:			$this->name = $recordset[0]['name'];
lib/functions/tlInventory.class.php:			$result = $this->deleteFromDB();
lib/functions/tlInventory.class.php:				logAuditEvent(TLS("audit_inventory_deleted",$this->name,$auditData['tproject_name']),
lib/functions/tlInventory.class.php:				              "DELETE",$this->name,"inventory");
lib/functions/tlInventory.class.php:				$this->userFeedback = langGetFormated('inventory_delete_success',$this->name);
lib/functions/tlInventory.class.php:				$this->userFeedback = langGetFormated('inventory_delete_fails',$this->name);
lib/functions/tlInventory.class.php:				tLog('Internal error: The device "'.$this->name.'" was not deleted.', 'ERROR');
lib/functions/tlInventory.class.php:			$this->userFeedback = lang_get('inventory_no_device').' ID='.$this->inventoryId;
lib/functions/tlInventory.class.php:			tLog('Internal error: The device "'.$this->name.'" was not deleted.', 'ERROR');
lib/functions/tlInventory.class.php:		$this->initInventoryData($data);
lib/functions/tlInventory.class.php:		$result = $this->checkInventoryData();
lib/functions/tlInventory.class.php:			$result = $this->writeToDB($this->db);
lib/functions/tlInventory.class.php:	 *				 detailLevel - optional - indicates data you want to have
lib/functions/tlInventory.class.php:	 *				 			 null -> all columns
lib/functions/tlInventory.class.php:	 *               			minimun -> just the id, useful when you need to delete all inventories
lib/functions/tlInventory.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/tlInventory.class.php:		$name = $this->db->prepare_string(strtoupper($this->name));
lib/functions/tlInventory.class.php:		$ipAddress = $this->db->prepare_string(strtoupper($this->ipAddress));
lib/functions/tlInventory.class.php:			$this->userFeedback = langGetFormated('inventory_name_empty',$name);
lib/functions/tlInventory.class.php:			$query = "/* $debugMsg */ SELECT id FROM {$this->tables['inventory']} " .
lib/functions/tlInventory.class.php:			         "' AND testproject_id={$this->testProjectID}";
lib/functions/tlInventory.class.php:			if ($this->inventoryId > 0) // for update
lib/functions/tlInventory.class.php:				$query .= ' AND NOT id='.$this->inventoryId;
lib/functions/tlInventory.class.php:			if ($this->db->fetchFirstRow($query))
lib/functions/tlInventory.class.php:				$this->userFeedback = langGetFormated('inventory_name_exists',$this->name);
lib/functions/tlInventory.class.php:			$query = "/* $debugMsg */ SELECT id FROM {$this->tables['inventory']} " .
lib/functions/tlInventory.class.php:		    	     "' AND testproject_id={$this->testProjectID}";
lib/functions/tlInventory.class.php:			if ($this->inventoryId > 0) // for update
lib/functions/tlInventory.class.php:				$query .= ' AND NOT id='.$this->inventoryId;
lib/functions/tlInventory.class.php:			if ($this->db->fetchFirstRow($query))
lib/functions/tlInventory.class.php:				$this->userFeedback = langGetFormated('inventory_ip_exists',$ipAddress);
lib/functions/tlInventory.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/tlInventory.class.php:		       " SELECT id, name AS tproject_name FROM {$this->tables['nodes_hierarchy']} " .
lib/functions/tlInventory.class.php:		       " WHERE id = {$this->testProjectID} ";
lib/functions/tlInventory.class.php:  		$info = $this->db->fetchRowsIntoMap($sql,'id');
lib/functions/requirements.inc.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/requirements.inc.php: * @copyright 	2007-2009, TestLink community 
lib/functions/requirements.inc.php: * 20100828 - franciscom - deprecated functions removed
lib/functions/requirements.inc.php: * 20100508 - franciscom - BUGID 3447: CVS Import - add new column type 
lib/functions/requirements.inc.php: * 20100301 - asimon - modified req_link_replace()
lib/functions/requirements.inc.php: * 20091202 - franciscom - added contribution req_link_replace()
lib/functions/requirements.inc.php: * 20090815 - franciscom - get_last_execution() call changes
lib/functions/requirements.inc.php: * 20090402 - amitkhullar - added TC version while displaying the Req -> TC Mapping 
lib/functions/requirements.inc.php: * 20090331 - amitkhullar - BUGFIX 2292
lib/functions/requirements.inc.php: * 20090304 - franciscom - BUGID 2171
lib/functions/requirements.inc.php: * 20081103 - sisajr - DocBook XML import
lib/functions/requirements.inc.php: * 20070710 - franciscom - BUGID 939
lib/functions/requirements.inc.php: * 20070705 - franciscom - improved management of arrReqStatus
lib/functions/requirements.inc.php: * 20070617 - franciscom - removed include of deprecated file
lib/functions/requirements.inc.php: * 20070310 - franciscom - changed return type createRequirement()
lib/functions/requirements.inc.php:		$docID = trim_and_limit($data['req_doc_id'],$field_size->req_docid);
lib/functions/requirements.inc.php:		$title = trim_and_limit($data['title'],$field_size->req_title);
lib/functions/requirements.inc.php:					$item = current($req_mgr->getByDocID($docID,$tprojectID));
lib/functions/requirements.inc.php:					$last_version = $req_mgr->get_last_version_info($item['id']);
lib/functions/requirements.inc.php:					$op = $req_mgr->update($item['id'],$last_version['id'],$docID,$title,$scope,$userID,
lib/functions/requirements.inc.php:				// no conflict - just add requirement
lib/functions/requirements.inc.php:				$import_status = $req_mgr->create($idSRS,$docID,$title,$scope,$userID,$status,$type,
lib/functions/requirements.inc.php:	$labels = array('type' => $reqCfg->type_labels, 'status' => $reqCfg->status_labels);
lib/functions/requirements.inc.php:			// 	If there is a hit -> we can not create
lib/functions/requirements.inc.php:            // 20100321 - we do not manage yet user option
lib/functions/requirements.inc.php:			$check_in_reqspec = $reqMgr->getByDocID($req['req_doc_id'],$tprojectID,$reqSpecID,$getOptions);
lib/functions/requirements.inc.php:				$check_in_tproject = $reqMgr->getByDocID($req['req_doc_id'],$tprojectID,null,$getOptions);
lib/functions/requirements.inc.php:	$arrCurrentReq = $req_spec_mgr->get_requirements($srs_id);
lib/functions/requirements.inc.php:  		$field_length = array("req_doc_id" => $field_size->req_docid, "title" => $field_size->req_title);
lib/functions/requirements.inc.php: * informaltable -> tgroup -> thead -> row -> entry
lib/functions/requirements.inc.php: *                         -> tbody -> row -> entry
lib/functions/requirements.inc.php: * 20081103 - sisajr
lib/functions/requirements.inc.php:	foreach ($docTable->children() as $tgroup)
lib/functions/requirements.inc.php:		if ($tgroup->getName() != $parseCfg->table_group)
lib/functions/requirements.inc.php:		foreach ($tgroup->children() as $tbody)
lib/functions/requirements.inc.php:			$tbodyName = $tbody->getName() ;
lib/functions/requirements.inc.php:			if( $tbodyName == $parseCfg->table_head)
lib/functions/requirements.inc.php:			else if( $tbodyName == $parseCfg->table_body)
lib/functions/requirements.inc.php:				foreach ($tbody->children() as $row)
lib/functions/requirements.inc.php:					if( $row->getName() == $parseCfg->table_row )
lib/functions/requirements.inc.php:						foreach ($row->children() as $entry)
lib/functions/requirements.inc.php:							if ( ($ename = $entry->getName()) == $parseCfg->table_entry)
lib/functions/requirements.inc.php:								if( $entry->count() == 0 )
lib/functions/requirements.inc.php:									foreach($parseCfg->table_entry_children as $ck)
lib/functions/requirements.inc.php:											$table_row .= (string)$entry->$ck;
lib/functions/requirements.inc.php: * 20081103 - sisajr
lib/functions/requirements.inc.php:	$docbookCfg = $req_cfg->importDocBook;
lib/functions/requirements.inc.php:	// $docbookCfg->requirement= "sect3";
lib/functions/requirements.inc.php:	// $docbookCfg->title= "title";
lib/functions/requirements.inc.php:	// $docbookCfg->paragraph= "para";
lib/functions/requirements.inc.php:	// $docbookCfg->ordered_list="orderedlist";
lib/functions/requirements.inc.php:	// $docbookCfg->list_item="listitem";
lib/functions/requirements.inc.php:	// $docbookCfg->table="informaltable";
lib/functions/requirements.inc.php:	// $docbookCfg->table_group="tgroup";
lib/functions/requirements.inc.php:	// $docbookCfg->table_head="thead";
lib/functions/requirements.inc.php:	// $docbookCfg->table_body="tbody";
lib/functions/requirements.inc.php:	// $docbookCfg->table_row="row";
lib/functions/requirements.inc.php:	// $docbookCfg->table_entry="entry";
lib/functions/requirements.inc.php:	// $docbookCfg->list_item_children = array('para','title');
lib/functions/requirements.inc.php:	// $docbookCfg->table_entry_children = array('para');
lib/functions/requirements.inc.php:	$num_elem = count($simpleXMLObj->sect1);
lib/functions/requirements.inc.php:	foreach($simpleXMLObj->sect1 as $xmlReq)
lib/functions/requirements.inc.php:		// $title = (string)$xmlReq->title;
lib/functions/requirements.inc.php:		$children = $xmlReq->children();
lib/functions/requirements.inc.php:			$nodeName = $child->getName();
lib/functions/requirements.inc.php:			if ($nodeName == $docbookCfg->title )
lib/functions/requirements.inc.php:			else if ($nodeName == $docbookCfg->ordered_list)
lib/functions/requirements.inc.php:				foreach( $child->children() as $item )
lib/functions/requirements.inc.php:					// echo 'xxx' . $item->getName() . '<br>';
lib/functions/requirements.inc.php:					if( $item->getName() == $docbookCfg->list_item )
lib/functions/requirements.inc.php:						if( $item->count() == 0 )
lib/functions/requirements.inc.php:							foreach($docbookCfg->list_item_children as $ck)
lib/functions/requirements.inc.php:									$list .= "<li>" . (string)$item->$ck . "</li>";
lib/functions/requirements.inc.php:			else if ($nodeName == $docbookCfg->table)
lib/functions/requirements.inc.php:			else if ($nodeName == $docbookCfg->paragraph)
lib/functions/requirements.inc.php:		$xmlData[$idx]['title'] = trim_and_limit($title,$field_size->req_title);
lib/functions/requirements.inc.php:		$xmlData[$idx]['title'] = preg_replace("/^[^a-zA-Z_0-9]*/","",$xmlData[$idx]['title']);
lib/functions/requirements.inc.php:		//if (preg_match("/[ a-zA-Z_]*[0-9]*/", $xmlData[$i]['title'], $matches))
lib/functions/requirements.inc.php:		if (preg_match("/[ ]*[a-zA-Z_0-9]*[ ][a-zA-Z_0-9]*/", $xmlData[$idx]['title'], $matches))
lib/functions/requirements.inc.php:	$coverageAlgorithm=config_get('req_cfg')->coverageStatusAlgorithm;
lib/functions/requirements.inc.php:						$path_info=$tree_mgr->get_full_path_verbose($item_info['testcase_id']);
lib/functions/requirements.inc.php:	                    //-amitkhullar - 20090331 - BUGFIX 2292
lib/functions/requirements.inc.php:	                        // - at least one of assigned test cases was not yet executed
lib/functions/requirements.inc.php:	                        // - the rest of assigned test cases was executed and passed
lib/functions/requirements.inc.php:  rev: 20090716 - franciscom - get_last_execution() interface changes
lib/functions/requirements.inc.php:    	$path_info=$tcase_mgr->tree_manager->get_full_path_verbose($items);
lib/functions/requirements.inc.php:		    $execMap[$tcaseId] = $tcase_mgr->get_last_execution($tcaseId,$tcInfo['tcversion_id'],
lib/functions/requirements.inc.php:// 20061014 - franciscom
lib/functions/requirements.inc.php:		// 20081103 - sisajr
lib/functions/requirements.inc.php:  //@ -> shhhh!!!! silence please
lib/functions/requirements.inc.php: * replace BBCode-link tagged links in req/reqspec scope with actual links
lib/functions/requirements.inc.php: * 20100301 - asimon - added anchor and tproj parameters to tags
lib/functions/requirements.inc.php:	$prefix = $tproject_mgr->getTestCasePrefix($tprojectID);
lib/functions/requirements.inc.php:	$cfg->target = isset($cfg->target) ? $cfg->target :'popup';
lib/functions/requirements.inc.php:	switch($cfg->target)
lib/functions/requirements.inc.php:			$target = ($cfg->target == 'window') ? 'target="_blank"' : 'target="_self"';
lib/functions/requirements.inc.php:	if ($cfg->req_link_title->type == 'string' && $cfg->req_link_title->value != '') {
lib/functions/requirements.inc.php:		$title['req'] = lang_get($cfg->req_link_title->value);
lib/functions/requirements.inc.php:	} else if ($cfg->req_link_title->type == 'none') {
lib/functions/requirements.inc.php:	if ($cfg->req_spec_link_title->type == 'string' && $cfg->req_spec_link_title->value != '') {
lib/functions/requirements.inc.php:		// use user-configured string as link title
lib/functions/requirements.inc.php:		$title['req_spec'] = lang_get($cfg->req_spec_link_title->value);
lib/functions/requirements.inc.php:	} else if ($cfg->req_spec_link_title->type == 'none') {
lib/functions/requirements.inc.php:			$rs = $dbHandler->get_recordset($sql);
lib/functions/requirements.inc.php:				//20100818 - Julian - fixed error if same doc_id exists in multiple projects
lib/functions/requirements.inc.php:					$real_root = $tree_mgr->getTreeRoot($value['id']);
lib/functions/requirements.inc.php:					$matched_root_info = $tproject_mgr->get_by_prefix($matched_prefix);
lib/functions/no_editor.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/no_editor.class.php: *      20071125 - franciscom - added dtree_render_req_node_open
lib/functions/no_editor.class.php:		$this->InstanceName	= $instanceName;
lib/functions/no_editor.class.php:		$this->Value		= '';
lib/functions/no_editor.class.php:		echo $this->CreateHtml($rows,$cols);
lib/functions/no_editor.class.php:		$HtmlValue = htmlspecialchars($this->Value);
lib/functions/no_editor.class.php:			$my_rows = $this->rows;
lib/functions/no_editor.class.php:	    	$my_cols = $this->cols;
lib/functions/no_editor.class.php:	    $Html = "<textarea name=\"{$this->InstanceName}\" " .
lib/functions/no_editor.class.php:		        "id=\"{$this->InstanceName}\" rows=\"{$my_rows}\" cols=\"{$my_cols}\" >".
lib/functions/testcase.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/testcase.class.php: * @copyright 	2005-2009, TestLink community 
lib/functions/testcase.class.php: * 20100831 - franciscom - BUGID 3729 - get_by_name() 
lib/functions/testcase.class.php: * 20100825 - franciscom - BUGID 3702 - _blind_delete() issue
lib/functions/testcase.class.php: * 20100821 - franciscom - BUGID 3695 - Test Case Steps - Export/Import - missing attribute execution type
lib/functions/testcase.class.php: *						   create_step() - fixed issue when execution_type was NULL.
lib/functions/testcase.class.php: *						   new method - update_tcversion_steps() needed for BUGID 3634	
lib/functions/testcase.class.php: * 20100814 - franciscom - getInternalID() - removed unused code and minor code rearrangement
lib/functions/testcase.class.php: * 20100813 - asimon - deactivated last slash on full path in get_assigned_to_user()
lib/functions/testcase.class.php: * 20100802 - asimon - BUGID 3647 - filtering by build id in get_assigned_to_user() 
lib/functions/testcase.class.php: * 20100731 - asimon - more modifications to get_assigned_to_user()
lib/functions/testcase.class.php: * 20100722 - asimon - BUGID 3406 - modified statement to get build name in get_assigned_to_user()
lib/functions/testcase.class.php: * 20100714 - Julian - BUGID 3575 -  get_assigned_to_user() added priority in output set
lib/functions/testcase.class.php: * 20100712 - asimon - inserted missing semicolon after break in get_assigned_to_user()
lib/functions/testcase.class.php: * 20100711 - franciscom - BUGID 3575 -  get_assigned_to_user() added $filters as optional arg
lib/functions/testcase.class.php: * 20100708 - franciscom - BUGID 3575 -  get_assigned_to_user() add plaftorm in output set
lib/functions/testcase.class.php: * 20100706 - franciscom - BUGID 3573 - _blind_delete() with alias has problems with MySQL
lib/functions/testcase.class.php: * 20100521 - franciscom - BUGID 3481 - copy_tcversion() - preconditions are not copied
lib/functions/testcase.class.php: * 20100516 - franciscom - BUGID 3465: Delete Test Project - User Execution Assignment is not deleted
lib/functions/testcase.class.php: * 20100514 - franciscom - get_by_id() interface changes and improvements
lib/functions/testcase.class.php: * 20100503 - franciscom - create_tcase_only() - BUGID 3374
lib/functions/testcase.class.php: * 20100502 - franciscom - show() fixed error due to non existent variable $info
lib/functions/testcase.class.php: * 20100417 - franciscom - new method - filter_tcversions()
lib/functions/testcase.class.php: *						   get_last_active_version() - changes on output data 
lib/functions/testcase.class.php: * 20100411 - franciscom - BUGID 3387 - changes in show()
lib/functions/testcase.class.php: * 20100411 - franciscom - new methods: get_last_active_version(),filter_tcversions_by_exec_type()
lib/functions/testcase.class.php: * 20100409 - franciscom - BUGID 3367: Error after trying to copy a test case that the name is in the size limit.
lib/functions/testcase.class.php: * 20100330 - eloff - BUGID 3329 - fixes test plan usage with platforms
lib/functions/testcase.class.php: * 20100323 - asimon - fixed BUGID 3316 in show()
lib/functions/testcase.class.php: * 20100317 - franciscom - new method get_by_external()
lib/functions/testcase.class.php: * 20100315 - amitkhullar - Added  options for Requirements and CFields for Export.
lib/functions/testcase.class.php: * 20100309 - franciscom - get_by_id() - improvements on control to apply when LATEST_VERSION is requested.
lib/functions/testcase.class.php: * 20100309 - franciscom - get_exec_status() - interface changes
lib/functions/testcase.class.php: *						   get_linked_versions() - interface changes                        
lib/functions/testcase.class.php: * 20100301	- franciscom - changes on show() to solve 
lib/functions/testcase.class.php: * 20100210	- franciscom - keywords XML export refactored
lib/functions/testcase.class.php: * 20100204 - franciscom - copyKeywordsTo(),copyReqAssignmentTo() - interface changes
lib/functions/testcase.class.php: * 20100201 - franciscom - getExternalID(), refactored to improve performance when used on loops
lib/functions/testcase.class.php: * 20100124 - franciscom - BUGID 3090 - problems when trying to delete a test case that has 0 steps.
lib/functions/testcase.class.php: * 20100111 - franciscom - get_version_exec_assignment() - refactoring due to platforms feature.
lib/functions/testcase.class.php: *                         get_linked_versions() - refactoring due to platforms feature.
lib/functions/testcase.class.php: * 20100107 - franciscom - Multiple Test Case Steps Feature
lib/functions/testcase.class.php: * 20100106 - franciscom - Multiple Test Case Steps Feature
lib/functions/testcase.class.php: * 20100105 - franciscom - fixed missing copy of preconditions on copy_tcversion()
lib/functions/testcase.class.php: *                         exportTestCaseDataToXML() - added execution_type, importance
lib/functions/testcase.class.php: * 20100104 - franciscom - create_new_version() - interface changes
lib/functions/testcase.class.php: *                         fixed bug in show()  regarding $gui->can_do->add2tplan
lib/functions/testcase.class.php: *                         get_last_version_info() - interface changes
lib/functions/testcase.class.php: * 20100103 - franciscom - getPrefix() - interface changes & refactoring
lib/functions/testcase.class.php: *                         new methods - buildDirectWebLink(), getExternalID()
lib/functions/testcase.class.php: * 20091229 - eloff - BUGID 3021  - getInternalID() - fixed error when tc prefix contains glue character
lib/functions/testcase.class.php: * 20091220 - franciscom - copy_attachments() refactoring
lib/functions/testcase.class.php: * 20091217 - franciscom - getDuplicatesByName() - new argument added
lib/functions/testcase.class.php: * 20091215 - franciscom - getPrefix() - changed in return type, to avoid in some situations
lib/functions/testcase.class.php: * 20091207 - franciscom - get_last_execution() - internal bug 
lib/functions/testcase.class.php: * 20091127 - franciscom - getByPathName() new method
lib/functions/testcase.class.php: * 20091118 - franciscom - get_last_execution() - still working ond fixing bug when using self::ALL_VERSIONS
lib/functions/testcase.class.php: * 20091113 - franciscom - get_last_execution() - fixed bug when using self::ALL_VERSIONS
lib/functions/testcase.class.php: * 20091003 - franciscom - show() changes in template get logic
lib/functions/testcase.class.php: * 20090927 - franciscom - new methods: getPathLayered(),getPathTopSuite()
lib/functions/testcase.class.php: * 20090922 - franciscom - get_last_execution() - used COALESCE() to return code
lib/functions/testcase.class.php: * 20090831 - franciscom - added management of new field: preconditions
lib/functions/testcase.class.php: * 20090815 - franciscom - get_executions() - added platform related info
lib/functions/testcase.class.php: *                         get_last_execution() - added platform related info
lib/functions/testcase.class.php: * 20090720 - franciscom - found bug in get_linked_cfields_at_execution()
lib/functions/testcase.class.php: * 20090718 - franciscom - new method buildCFLocationMap();
lib/functions/testcase.class.php: * 20090716 - franciscom - get_last_execution() - BUGID 2692 - interface changes.
lib/functions/testcase.class.php: * 20090713 - franciscom - solved bug on get_executions() (bad SQL statement).
lib/functions/testcase.class.php: * 20090530 - franciscom - html_table_of_custom_field_inputs() changes in interface
lib/functions/testcase.class.php: * 20090526 - franciscom - html_table_of_custom_field_values() - added scope 'testplan_design'
lib/functions/testcase.class.php: * 20090521 - franciscom - get_by_id() added version_number argument
lib/functions/testcase.class.php: * 20090419 - franciscom - BUGID 2364 - show() changes on edit enabled logic
lib/functions/testcase.class.php: * 20090414 - franciscom - BUGID 2378
lib/functions/testcase.class.php: * 20090401 - franciscom - BUGID 2316 - changes to copy_to()
lib/functions/testcase.class.php: * 20090308 - franciscom - BUGID 2204 - create() fixed return of new version number
lib/functions/testcase.class.php: * 20090220 - franciscom - BUGID 2129
lib/functions/testcase.class.php: * 20090106 - franciscom - BUGID - exportTestCaseDataToXML() - added export of custom fields values
lib/functions/testcase.class.php: * 20081103 - franciscom - new method setKeywords() - added by schlundus
lib/functions/testcase.class.php: * 20081015 - franciscom - delete() - improve controls to avoid bug if no children
lib/functions/testcase.class.php: * 20080812 - franciscom - BUGID 1650 (REQ)
lib/functions/testcase.class.php: * 20080602 - franciscom - get_linked_versions() - internal changes due to BUG1504
lib/functions/testcase.class.php: *                         get_exec_status() - interface and internal changes due to BUG1504
lib/functions/testcase.class.php: * 20080126 - franciscom - BUGID 1313
lib/functions/testcase.class.php:    const LATEST_VERSION=-1;
lib/functions/testcase.class.php:		$this->db = &$db;
lib/functions/testcase.class.php:		$this->tproject_mgr = new testproject($this->db);
lib/functions/testcase.class.php:		$this->tree_manager = &$this->tproject_mgr->tree_manager;
lib/functions/testcase.class.php:		$this->node_types_descr_id=$this->tree_manager->get_available_node_types();
lib/functions/testcase.class.php:		$this->node_types_id_descr=array_flip($this->node_types_descr_id);
lib/functions/testcase.class.php:		$this->my_node_type=$this->node_types_descr_id['testcase'];
lib/functions/testcase.class.php:		$this->assignment_mgr=New assignment_mgr($this->db);
lib/functions/testcase.class.php:		$this->assignment_types=$this->assignment_mgr->get_available_types();
lib/functions/testcase.class.php:		$this->assignment_status=$this->assignment_mgr->get_available_status();
lib/functions/testcase.class.php:		$this->cfield_mgr = new cfield_mgr($this->db);
lib/functions/testcase.class.php:		$this->execution_types = array(TESTCASE_EXECUTION_TYPE_MANUAL => lang_get('manual'),
lib/functions/testcase.class.php:		// second argument is used to set $this->attachmentTableName,property that this calls
lib/functions/testcase.class.php:		parent::__construct($this->db,"nodes_hierarchy");
lib/functions/testcase.class.php:	  args: -
lib/functions/testcase.class.php:	    return $this->export_file_types;
lib/functions/testcase.class.php:	  args: -
lib/functions/testcase.class.php:	    return $this->import_file_types;
lib/functions/testcase.class.php:	   args: -
lib/functions/testcase.class.php:	    return $this->execution_types;
lib/functions/testcase.class.php:		$ret = $this->create_tcase_only($parent_id,$name,$tc_order,$id,$my['options']);
lib/functions/testcase.class.php:				$this->addKeywords($ret['id'],$a_keywords);
lib/functions/testcase.class.php:				$last_version_info = $this->get_last_version_info($ret['id'],array('output' => 'minimun'));
lib/functions/testcase.class.php:			$op = $this->create_tcversion($ret['id'],$ret['external_id'],$version_number,$summary,
lib/functions/testcase.class.php:	20061008 - franciscom
lib/functions/testcase.class.php:	20060725 - franciscom - interface changes
lib/functions/testcase.class.php:	           0 -> the id will be assigned by dbms
lib/functions/testcase.class.php:	           x -> this will be the id
lib/functions/testcase.class.php:		20100503 - franciscom - BUGID 3374
lib/functions/testcase.class.php:		20100409 - franciscom - improved check on name len.
lib/functions/testcase.class.php:		20090120 - franciscom - added new action_on_duplicate_name	     
lib/functions/testcase.class.php:		$name_max_len = $dummy->testcase_name;
lib/functions/testcase.class.php:		$ret = array('id' => -1,'external_id' => 0, 'status_ok' => 1,'msg' => 'ok', 
lib/functions/testcase.class.php:			$algo_cfg = config_get('testcase_cfg')->duplicated_name_algorithm;
lib/functions/testcase.class.php:			$getOptions['check_criteria'] = ($algo_cfg->type == 'counterSuffix') ? 'like' : '='; 
lib/functions/testcase.class.php:			$getOptions['access_key'] = ($algo_cfg->type == 'counterSuffix') ? 'name' : 'id'; 
lib/functions/testcase.class.php:	        $itemSet = $this->getDuplicatesByName($name,$parent_id,$getOptions);	
lib/functions/testcase.class.php:			            switch($algo_cfg->type)
lib/functions/testcase.class.php:			            		$name = $algo_cfg->text . " " . $name ;
lib/functions/testcase.class.php:			            	    $mask =  !is_null($algo_cfg->text) ? $algo_cfg->text : '#%s';
lib/functions/testcase.class.php:		            	$ret['version_number'] = -1;
lib/functions/testcase.class.php:	    $path2root=$this->tree_manager->get_path($parent_id);
lib/functions/testcase.class.php:	    $tcaseNumber=$this->tproject_mgr->generateTestCaseNumber($tproject_id);
lib/functions/testcase.class.php:	    $tcase_id = $this->tree_manager->new_node($parent_id,$this->my_node_type,$safeLenName,$order,$id);
lib/functions/testcase.class.php:	  	   20100821 - franciscom - BUGID 3696 - test case step execution type ignored	
lib/functions/testcase.class.php:	  	   20100106 - franciscom - Multiple Test Case Steps Feature
lib/functions/testcase.class.php:	  	   20080113 - franciscom - interface changes added tc_ext_id
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:		$tcase_version_id = $this->tree_manager->new_node($id,$this->node_types_descr_id['testcase_version']);
lib/functions/testcase.class.php:		$sql = "/* $debugMsg */ INSERT INTO {$this->tables['tcversions']} " .
lib/functions/testcase.class.php:	  	       $this->db->prepare_string($summary) . "','" . $this->db->prepare_string($preconditions) . "'," . 
lib/functions/testcase.class.php:	  	       $this->db->prepare_int($author_id) . "," . $this->db->db_now() . 
lib/functions/testcase.class.php:		$result = $this->db->exec_query($sql);
lib/functions/testcase.class.php:				$op = $this->create_step($tcase_version_id,$steps[$jdx]['step_number'],$steps[$jdx]['actions'],
lib/functions/testcase.class.php:			$ret['msg'] = $this->db->error_msg();
lib/functions/testcase.class.php:		  	$ret['id']=-1;
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:	    $target = $this->db->prepare_string($name);
lib/functions/testcase.class.php:			   " FROM {$this->tables['nodes_hierarchy']} NHA, " .
lib/functions/testcase.class.php:			   " {$this->tables['nodes_hierarchy']} NHB, {$this->tables['tcversions']} TCV  " .
lib/functions/testcase.class.php:			   " WHERE NHA.node_type_id = {$this->my_node_type} " .
lib/functions/testcase.class.php:			   " AND NHB.node_type_id = {$this->node_types_descr_id['testcase_version']} " .
lib/functions/testcase.class.php:		$rs = $this->db->fetchRowsIntoMap($sql,$my['options']['access_key']);
lib/functions/testcase.class.php:	  20100831 - franciscom - BUGID 3729
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:		// BUGID 3729 - limit all names
lib/functions/testcase.class.php:	    $tsuite_name = tlSubStr(trim($tsuite_name),0, $field_size->testsuite_name);
lib/functions/testcase.class.php:	    $tproject_name = tlSubStr(trim($tproject_name),0,$field_size->testproject_name);
lib/functions/testcase.class.php:	    $name = tlSubStr(trim($name), 0, $field_size->testcase_name);
lib/functions/testcase.class.php:			   " FROM {$this->tables['nodes_hierarchy']} NH_TCASE, " .
lib/functions/testcase.class.php:			   " {$this->tables['nodes_hierarchy']} NH_TCASE_PARENT, " .
lib/functions/testcase.class.php:			   " {$this->tables['nodes_hierarchy']} NH_TCVERSIONS," .
lib/functions/testcase.class.php:			   " {$this->tables['tcversions']}  TCV  " .
lib/functions/testcase.class.php:			   " WHERE NH_TCASE.node_type_id = {$this->my_node_type} " .
lib/functions/testcase.class.php:			   " AND NH_TCASE.name = '{$this->db->prepare_string($name)}' " .
lib/functions/testcase.class.php:			$sql .= " AND NH_TCASE_PARENT.name = '{$this->db->prepare_string($tsuite_name)}' " .
lib/functions/testcase.class.php:		            " AND NH_TCASE_PARENT.node_type_id = {$this->node_types_descr_id['testsuite']} ";
lib/functions/testcase.class.php:		$recordset = $this->db->get_recordset($sql);
lib/functions/testcase.class.php:			list($tproject_info)=$this->tproject_mgr->get_by_name($tproject_name);
lib/functions/testcase.class.php:	        	if( $this->get_testproject($tcase_info['id']) != $tproject_info['id'] )
lib/functions/testcase.class.php:		         FROM  {$this->tables['nodes_hierarchy']} nodes_hierarchy
lib/functions/testcase.class.php:		$recordset = $this->db->get_recordset($sql);
lib/functions/testcase.class.php:	                                        default: 0 -> no
lib/functions/testcase.class.php:	       20090215 - franciscom - added info about links to test plans
lib/functions/testcase.class.php:	       20081114 - franciscom -
lib/functions/testcase.class.php:	                              element 0 -> test project name
lib/functions/testcase.class.php:	       20070930 - franciscom - REQ - BUGID 1078
lib/functions/testcase.class.php:	    $gui->parentTestSuiteName='';
lib/functions/testcase.class.php:	    $gui->path_info=$path_info;
lib/functions/testcase.class.php:		$gui->tprojectName='';
lib/functions/testcase.class.php:	    $gui->linked_versions=null;
lib/functions/testcase.class.php:		$gui->tc_current_version = array();
lib/functions/testcase.class.php:	    $gui->bodyOnLoad="";
lib/functions/testcase.class.php:	    $gui->bodyOnUnload="";
lib/functions/testcase.class.php:	    $gui->submitCode="";
lib/functions/testcase.class.php:	    $gui->dialogName = '';
lib/functions/testcase.class.php:	    $gui->platforms = null;
lib/functions/testcase.class.php:		$gui->tableColspan = 5; // sorry magic related to table to display steps
lib/functions/testcase.class.php:		$gui->opt_requirements = false;
lib/functions/testcase.class.php:		$req_mgr = new requirement_mgr($this->db);
lib/functions/testcase.class.php:	    // 20090718 - franciscom
lib/functions/testcase.class.php:        $filters=$this->buildCFLocationMap();
lib/functions/testcase.class.php:	        $gui->dialogName='tcview_dialog';
lib/functions/testcase.class.php:	        $gui->bodyOnLoad="dialog_onLoad($gui->dialogName)";
lib/functions/testcase.class.php:	        $gui->bodyOnUnload="dialog_onUnload($gui->dialogName)";
lib/functions/testcase.class.php:	        $gui->submitCode="return dialog_onSubmit($gui->dialogName)";
lib/functions/testcase.class.php:	    $gui->show_title=$viewer_defaults['show_title'];
lib/functions/testcase.class.php:	    $gui->display_testcase_path=!is_null($path_info);
lib/functions/testcase.class.php:	    $gui->hilite_testcase_name=$viewer_defaults['hilite_testcase_name'];
lib/functions/testcase.class.php:	    $gui->pageTitle=$viewer_defaults['title'];
lib/functions/testcase.class.php:	    $gui->show_match_count=$viewer_defaults['show_match_count'];
lib/functions/testcase.class.php:	    if($gui->show_match_count && $gui->display_testcase_path )
lib/functions/testcase.class.php:	        $gui->match_count=count($path_info);  
lib/functions/testcase.class.php:	    // if( $viewer_defaults['disable_edit'] == 1 || has_rights($this->db,"mgt_modify_tc") == 'no' )
lib/functions/testcase.class.php:	    if( $viewer_defaults['disable_edit'] == 1 || has_rights($this->db,"mgt_modify_tc") == false)
lib/functions/testcase.class.php:	    $gui->show_mode = $mode;
lib/functions/testcase.class.php:	    $gui->can_do = $this->getShowViewerActions($mode);
lib/functions/testcase.class.php:	        $path2root = $this->tree_manager->get_path($a_id[0]);
lib/functions/testcase.class.php:	        $info = $this->tproject_mgr->get_by_id($tproject_id);
lib/functions/testcase.class.php:			$gui->opt_requirements = $info['opt']->requirementsEnabled;
lib/functions/testcase.class.php:			$platformMgr = new tlPlatform($this->db,$tproject_id);
lib/functions/testcase.class.php:	        $gui->platforms = $platformMgr->getAllAsMap();
lib/functions/testcase.class.php:	        $testplans = $this->tproject_mgr->get_all_testplans($tproject_id,array('plan_status' =>1) );
lib/functions/testcase.class.php:	        $gui->has_testplans = !is_null($testplans) && count($testplans) > 0 ? 1 : 0;
lib/functions/testcase.class.php:	            $gui->tprojectName=$info['name'];
lib/functions/testcase.class.php:	            $parent_idx = count($path2root)-2;
lib/functions/testcase.class.php:	            $gui->parentTestSuiteName = $path2root[$parent_idx]['name'];
lib/functions/testcase.class.php:	        $tcasePrefix = $this->tproject_mgr->getTestCasePrefix($tproject_id);
lib/functions/testcase.class.php:	        	// $gui->can_do->add2tplan = 'no';
lib/functions/testcase.class.php:		    		$gui->can_do->add2tplan = $gui->can_do->add2tplan == 'yes' ? has_rights($this->db,"testplan_planning") : 'no';
lib/functions/testcase.class.php:					$gui->can_do->add2tplan = 'no';
lib/functions/testcase.class.php:				$tcasePrefix .= $tcase_cfg->glue_character;
lib/functions/testcase.class.php:		  	$allTCKeywords = $this->getKeywords($a_id,null,'testcase_id',' ORDER BY keyword ASC ');
lib/functions/testcase.class.php:		  	$allReqs = $req_mgr->get_all_for_tcase($a_id);
lib/functions/testcase.class.php:		  		$tc_array = $this->get_by_id($tc_id,$version_id);
lib/functions/testcase.class.php:		  		$status_quo_map[] = $this->get_versions_status_quo($tc_id);
lib/functions/testcase.class.php:		  		$gui->linked_versions[] = $this->get_linked_versions($tc_id);
lib/functions/testcase.class.php:		  		$gui->tc_current_version[] = array($tc_current);
lib/functions/testcase.class.php:		  				$this->html_table_of_custom_field_values($tc_id,'design',$locationFilter,
lib/functions/testcase.class.php:		$gui->cf = $cf_smarty;
lib/functions/testcase.class.php:		$gui->refreshTree = $viewer_defaults['refreshTree'];
lib/functions/testcase.class.php:		$gui->sqlResult = $viewer_defaults['msg_result'];
lib/functions/testcase.class.php:		$gui->action = $viewer_defaults['action'];
lib/functions/testcase.class.php:		$gui->user_feedback = $viewer_defaults['user_feedback'];
lib/functions/testcase.class.php:		$gui->execution_types = $this->execution_types;
lib/functions/testcase.class.php:		$gui->tcase_cfg = $tcase_cfg;
lib/functions/testcase.class.php:		$gui->users = tlUser::getByIDs($this->db,$passeduserarray,'id');
lib/functions/testcase.class.php:		$gui->status_quo = $status_quo_map;
lib/functions/testcase.class.php:		$gui->testcase_other_versions = $tc_other_versions;
lib/functions/testcase.class.php:		$gui->arrReqs = $arrReqs;
lib/functions/testcase.class.php:		$gui->view_req_rights =  has_rights($this->db,"mgt_view_req");
lib/functions/testcase.class.php:		$gui->keywords_map = $keywords_map;
lib/functions/testcase.class.php:		$smarty->assign('gui',$gui);
lib/functions/testcase.class.php:		$smarty->display($template_dir . $my_template);
lib/functions/testcase.class.php:			$check = $this->tree_manager->nodeNameExists($name,$this->my_node_type,$id);
lib/functions/testcase.class.php:			$sql[] = " UPDATE {$this->tables['nodes_hierarchy']} SET name='" .
lib/functions/testcase.class.php:					 $this->db->prepare_string($name) . "' WHERE id= {$id}";
lib/functions/testcase.class.php:		   	$sql[] = " UPDATE {$this->tables['tcversions']} tcversions " .
lib/functions/testcase.class.php:		             " SET summary='" . $this->db->prepare_string($summary) . "'," .
lib/functions/testcase.class.php:		   		 	 " updater_id=" . $this->db->prepare_int($user_id) . ", " .
lib/functions/testcase.class.php:		   		 	 " modification_ts = " . $this->db->db_now() . "," .
lib/functions/testcase.class.php:		   		 	 " execution_type=" . $this->db->prepare_int($execution_type) . ", " . 
lib/functions/testcase.class.php:		   		 	 " importance=" . $this->db->prepare_int($importance) . "," .
lib/functions/testcase.class.php:		   		 	 " preconditions='" . $this->db->prepare_string($preconditions) . "' " .
lib/functions/testcase.class.php:		   		 	 " WHERE tcversions.id = " . $this->db->prepare_int($tcversion_id); 
lib/functions/testcase.class.php:			    $result = $this->db->exec_query($stm);
lib/functions/testcase.class.php:					$ret['msg'] = $this->db->error_msg;
lib/functions/testcase.class.php:		    // BUGID 3634 - missing update.
lib/functions/testcase.class.php:		    	$this->update_tcversion_steps($tcversion_id,$steps);
lib/functions/testcase.class.php:		       $this->updateKeywordAssignment($id,$keywords_id);
lib/functions/testcase.class.php:		$items['stored'] = $this->get_keywords_map($id);
lib/functions/testcase.class.php:		       " FROM {$this->tables['keywords']} " .
lib/functions/testcase.class.php:			$items['requested'] = $this->db->fetchColumnsIntoMap($sql,'id','keyword');
lib/functions/testcase.class.php:			$this->deleteKeywords($id,array_keys($items['todelete']),self::AUDIT_ON);
lib/functions/testcase.class.php:			$this->addKeywords($id,array_keys($items['new']),self::AUDIT_ON);
lib/functions/testcase.class.php:		$linked_tcversions = $this->get_linked_versions($id);
lib/functions/testcase.class.php:			$linked_not_exec = $this->get_linked_versions($id,"NOT_EXECUTED");
lib/functions/testcase.class.php:		20100107 - franciscom - Multiple Test Case Step Feature 
lib/functions/testcase.class.php:		20081015 - franciscom - added check to avoid bug due to no children
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:	  	     " FROM {$this->tables['nodes_hierarchy']} NH_TCV " .
lib/functions/testcase.class.php:	  	     " LEFT OUTER JOIN {$this->tables['nodes_hierarchy']} NH_TCSTEPS " . 
lib/functions/testcase.class.php:	  	$children_rs=$this->db->get_recordset($sql);
lib/functions/testcase.class.php:			$this->_execution_delete($id,$version_id,$children);
lib/functions/testcase.class.php:			$this->_blind_delete($id,$version_id,$children);
lib/functions/testcase.class.php:	                  id -> tcversion_id (node id)
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:					   " FROM   {$this->tables['nodes_hierarchy']} NH," .
lib/functions/testcase.class.php:					   " {$this->tables['tcversions']} tcversions," .
lib/functions/testcase.class.php:					   " {$this->tables['testplan_tcversions']} TTC, " .
lib/functions/testcase.class.php:					   " {$this->tables['nodes_hierarchy']} NHB    " .
lib/functions/testcase.class.php:	      		// 20100308 - franciscom
lib/functions/testcase.class.php:	        	$recordset = $this->db->fetchMapRowsIntoMap($sql,'tcversion_id','testplan_id',database::CUMULATIVE);
lib/functions/testcase.class.php:				// 20100330 - eloff - BUGID 3329
lib/functions/testcase.class.php:		      $recordset=$this->get_exec_status($id,$exec_status,$active_status,$tplan_id,$platform_id);
lib/functions/testcase.class.php:		      $recordset=$this->get_exec_status($id,$exec_status,$active_status,$tplan_id,$platform_id);
lib/functions/testcase.class.php:				$step_set = $this->get_steps($accessKey);
lib/functions/testcase.class.php:			 20100825 - BUGID 3702 
lib/functions/testcase.class.php:		     20070602 - franciscom - delete attachments
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:		// BUGID 3465: Delete Test Project - User Execution Assignment is not deleted
lib/functions/testcase.class.php:		$sql[]="/* $debugMsg */ DELETE FROM {$this->tables['user_assignments']} " .
lib/functions/testcase.class.php:			   " SELECT id FROM {$this->tables['testplan_tcversions']}  " .
lib/functions/testcase.class.php:		$sql[]="/* $debugMsg */ DELETE FROM {$this->tables['testplan_tcversions']}  " .
lib/functions/testcase.class.php:	    		$sql[]="/* $debugMsg */ DELETE FROM {$this->tables['tcsteps']}  " .
lib/functions/testcase.class.php:	    $sql[]="/* $debugMsg */ DELETE FROM {$this->tables['tcversions']}  " .
lib/functions/testcase.class.php:			$result = $this->db->exec_query($the_stm);
lib/functions/testcase.class.php:		    $sql[]="/* $debugMsg */ DELETE FROM {$this->tables['testcase_keywords']} WHERE testcase_id = {$id}";
lib/functions/testcase.class.php:		    $sql[]="/* $debugMsg */ DELETE FROM {$this->tables['req_coverage']}  WHERE testcase_id = {$id}";
lib/functions/testcase.class.php:				  $result = $this->db->exec_query($the_stm);
lib/functions/testcase.class.php:	        $this->deleteAttachments($id);
lib/functions/testcase.class.php:	        $this->cfield_mgr->remove_all_design_values_from_node($id);
lib/functions/testcase.class.php:	    $this->tree_manager->delete_subtree($item_id);
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:			$sql[]="/* $debugMsg */ DELETE FROM {$this->tables['execution_bugs']} " .
lib/functions/testcase.class.php:		  		   " WHERE execution_id IN (SELECT id FROM {$this->tables['executions']} " .
lib/functions/testcase.class.php:	      	$sql[]="/* $debugMsg */ DELETE FROM {$this->tables['cfield_execution_values']}  " .
lib/functions/testcase.class.php:	      	$sql[]="/* $debugMsg */ DELETE FROM {$this->tables['executions']}  " .
lib/functions/testcase.class.php:			$sql[]="/* $debugMsg */  DELETE FROM {$this->tables['execution_bugs']} " .
lib/functions/testcase.class.php:	        	   " WHERE execution_id IN (SELECT id FROM {$this->tables['executions']} " .
lib/functions/testcase.class.php:	        $sql[]="/* $debugMsg */ DELETE FROM {$this->tables['cfield_execution_values']} " .
lib/functions/testcase.class.php:	        $sql[]="/* $debugMsg */ DELETE FROM {$this->tables['executions']} " .
lib/functions/testcase.class.php:	    		$result = $this->db->exec_query($the_stm);
lib/functions/testcase.class.php:	    $path2root=$this->tree_manager->get_path($tc_id);
lib/functions/testcase.class.php:	    $tcasePrefix=$this->tproject_mgr->getTestCasePrefix($tproject_id);
lib/functions/testcase.class.php:	    	$path2root=$this->tree_manager->get_path($id);
lib/functions/testcase.class.php:	    $tcasePrefix=$this->tproject_mgr->getTestCasePrefix($root);
lib/functions/testcase.class.php:	  $a_path = $this->tree_manager->get_path($id);
lib/functions/testcase.class.php:	20061008 - franciscom - added
lib/functions/testcase.class.php:	    $newTCObj = array('id' => -1, 'status_ok' => 0, 'msg' => 'ok', 'mappings' => null);
lib/functions/testcase.class.php:		$tcase_info = $this->get_by_id($id);
lib/functions/testcase.class.php:			$newTCObj = $this->create_tcase_only($parent_id,$tcase_info[0]['name'],
lib/functions/testcase.class.php:					// 20100221 - franciscom - 
lib/functions/testcase.class.php:					$op = $this->create_tcversion($newTCObj['id'],$newTCObj['external_id'],$tcversion['version'],
lib/functions/testcase.class.php:	    				// 20100204 - franciscom
lib/functions/testcase.class.php:	    				$stepsSet = $this->get_steps($tcversion['id']);
lib/functions/testcase.class.php:        						$op = $this->create_step($to_tcversion_id,$step['step_number'],$step['actions'],
lib/functions/testcase.class.php:					$this->copyKeywordsTo($id,$newTCObj['id'],$my['mappings']['keywords']);
lib/functions/testcase.class.php:					$this->copyReqAssignmentTo($id,$newTCObj['id'],$my['mappings']['requirements']);
lib/functions/testcase.class.php:				$this->copy_cfields_design_values($id,$newTCObj['id']);
lib/functions/testcase.class.php:	            $this->copy_attachments($id,$newTCObj['id']);
lib/functions/testcase.class.php:	         [$source_version_id]: default null -> source is LATEST TCVERSION 
lib/functions/testcase.class.php:	  rev : 20070701 - franciscom - added version key on return map.
lib/functions/testcase.class.php:	  $tcversion_id = $this->tree_manager->new_node($id,$this->node_types_descr_id['testcase_version']);
lib/functions/testcase.class.php:	  $last_version_info =  $this->get_last_version_info($id, array('output' => 'minimun'));
lib/functions/testcase.class.php:	  $this->copy_tcversion($from,$tcversion_id,$last_version_info['version']+1,$user_id);
lib/functions/testcase.class.php:		  			 id -> tcversion_id
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:		       " FROM {$this->tables['tcversions']} TCV," .
lib/functions/testcase.class.php:		       " {$this->tables['nodes_hierarchy']} NH WHERE ".
lib/functions/testcase.class.php:		$max_version = $this->db->fetchFirstRowSingleColumn($sql,'version');
lib/functions/testcase.class.php:			$sql = "SELECT {$fields2get}  FROM {$this->tables['tcversions']} TCV," .
lib/functions/testcase.class.php:			       " {$this->tables['nodes_hierarchy']} NH ".
lib/functions/testcase.class.php:			$tcInfo = $this->db->fetchFirstRow($sql);
lib/functions/testcase.class.php:    		$step_set = $this->get_steps($tcInfo['id']);
lib/functions/testcase.class.php:	  		20100521 - franciscom - BUGID 3481 - preconditions are not copied
lib/functions/testcase.class.php:	  		20080119 - franciscom - tc_external_id management
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:	    $now = $this->db->db_now();
lib/functions/testcase.class.php:	         " INSERT INTO {$this->tables['tcversions']} " . 
lib/functions/testcase.class.php:	         " FROM {$this->tables['tcversions']} " .
lib/functions/testcase.class.php:		$result = $this->db->exec_query($sql);	
lib/functions/testcase.class.php:	    $stepsSet = $this->get_steps($from_tcversion_id);
lib/functions/testcase.class.php:        		$op = $this->create_step($to_tcversion_id,$step['step_number'],$step['actions'],
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:		       " FROM {$this->tables['nodes_hierarchy']} nodes_hierarchy " .
lib/functions/testcase.class.php:		       " JOIN {$this->tables['tcversions']} tcversions ON nodes_hierarchy.id = tcversions.id " .
lib/functions/testcase.class.php:	           " LEFT OUTER JOIN {$this->tables['users']} users ON tcversions.author_id = users.id " .
lib/functions/testcase.class.php:	  $recordset = $this->db->get_recordset($sql);
lib/functions/testcase.class.php:		        " FROM {$this->tables['nodes_hierarchy']} nodes_hierarchy {$where_clause_names} ";
lib/functions/testcase.class.php:		 $the_names = $this->db->get_recordset($sql);
lib/functions/testcase.class.php:		        " FROM {$this->tables['nodes_hierarchy']} nodes_hierarchy " .
lib/functions/testcase.class.php:		        " JOIN {$this->tables['tcversions']} tcversions ON nodes_hierarchy.id = tcversions.id " .
lib/functions/testcase.class.php:	            " LEFT OUTER JOIN {$this->tables['users']} users ON tcversions.updater_id = users.id " .
lib/functions/testcase.class.php:	    $updaters = $this->db->get_recordset($sql);
lib/functions/testcase.class.php:		    // 20090521 - franciscom - search by human version number
lib/functions/testcase.class.php:	         			FROM {$this->tables['nodes_hierarchy']} NHTCV
lib/functions/testcase.class.php:	         			JOIN {$this->tables['nodes_hierarchy']} NHTC ON NHTCV.parent_id = NHTC.id
lib/functions/testcase.class.php:	         			JOIN {$this->tables['tcversions']} TCV ON NHTCV.id = TCV.id
lib/functions/testcase.class.php:	         			LEFT OUTER JOIN {$this->tables['users']} UB ON TCV.author_id = UB.id
lib/functions/testcase.class.php:	         			LEFT OUTER JOIN {$this->tables['users']} UA ON TCV.updater_id = UA.id
lib/functions/testcase.class.php:	         		   " FROM {$this->tables['nodes_hierarchy']} NHTCV " . 
lib/functions/testcase.class.php:	         		   " JOIN {$this->tables['nodes_hierarchy']} NHTC ON NHTCV.parent_id = NHTC.id " .
lib/functions/testcase.class.php:	         		   " JOIN {$this->tables['tcversions']} TCV ON NHTCV.id = TCV.id " .
lib/functions/testcase.class.php:		    // 20090413 - franciscom - 
lib/functions/testcase.class.php:		    // 20100309 - franciscom - 
lib/functions/testcase.class.php:				$recordset = array($this->db->fetchFirstRow($sql));
lib/functions/testcase.class.php:			$recordset = $this->db->get_recordset($sql);
lib/functions/testcase.class.php:	  			$step_set = $this->get_steps($recordset[$accessKey]['id']);
lib/functions/testcase.class.php:	         [tcversion_id]: default: null -> get info about all versions.
lib/functions/testcase.class.php:	         [testplan_id]: default: null -> all testplans where testcase is linked,
lib/functions/testcase.class.php:	    $execution_join=" LEFT OUTER JOIN {$this->tables['executions']} E " .
lib/functions/testcase.class.php:	            " FROM {$this->tables['nodes_hierarchy']} NHA " .
lib/functions/testcase.class.php:	            " JOIN {$this->tables['nodes_hierarchy']} NHB ON NHA.parent_id = NHB.id " .
lib/functions/testcase.class.php:	            " JOIN {$this->tables['tcversions']}  TCV ON NHA.id = TCV.id " .
lib/functions/testcase.class.php:		$version_id = $this->db->fetchRowsIntoMap($sqlx,'version');
lib/functions/testcase.class.php:		     " FROM   {$this->tables['nodes_hierarchy']} NH " .
lib/functions/testcase.class.php:	         " JOIN {$this->tables['tcversions']} TCV ON (TCV.id = NH.id ) " .
lib/functions/testcase.class.php:		     " LEFT OUTER JOIN {$this->tables['testplan_tcversions']} T ON T.tcversion_id = NH.id " .
lib/functions/testcase.class.php:		$rs = $this->db->get_recordset($sql);
lib/functions/testcase.class.php:	  				        linked         if linked to  testplan -> tcversion_id
lib/functions/testcase.class.php:					          executed       if executed in testplan -> tcversion_id
lib/functions/testcase.class.php:					          exec_on_tplan  if executed in testplan -> testplan_id
lib/functions/testcase.class.php:	       20080531 - franciscom
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:	            " FROM {$this->tables['nodes_hierarchy']} NHA " .
lib/functions/testcase.class.php:	            " JOIN {$this->tables['nodes_hierarchy']} NHB ON NHA.parent_id = NHB.id " .
lib/functions/testcase.class.php:	            " JOIN {$this->tables['tcversions']}  TCV ON NHA.id = TCV.id ";
lib/functions/testcase.class.php:	        $sqlx .= " JOIN {$this->tables['testplan_tcversions']}  TTCV ON TTCV.tcversion_id = TCV.id ";
lib/functions/testcase.class.php:		$version_id = $this->db->fetchRowsIntoMap($sqlx,'version');
lib/functions/testcase.class.php:			   " FROM   {$this->tables['nodes_hierarchy']} NH " .
lib/functions/testcase.class.php:			   " JOIN {$this->tables['testplan_tcversions']}  T ON T.tcversion_id = NH.id " .
lib/functions/testcase.class.php:			   " JOIN {$this->tables['tcversions']}  TCV ON T.tcversion_id = TCV.id " .
lib/functions/testcase.class.php:			   " JOIN {$this->tables['nodes_hierarchy']} NHB ON T.testplan_id = NHB.id " .
lib/functions/testcase.class.php:			   " LEFT OUTER JOIN {$this->tables['executions']} E " .
lib/functions/testcase.class.php:		$rs = $this->db->get_recordset($sql);
lib/functions/testcase.class.php:			        // 20100111 - franciscom - PLATFORM REFACTORING
lib/functions/testcase.class.php:	    // logic to upate testplan-tcversions link can be absent
lib/functions/testcase.class.php:	            		    $item_not_executed[]=$kix > 0 ? $kix-1 : $kix;
lib/functions/testcase.class.php:	    if( !is_null($target) )   // minor fix - 20090716 - franciscom
lib/functions/testcase.class.php:	// -------------------------------------------------------------------------------
lib/functions/testcase.class.php:	 *		   0 -> test case prefix OK, but external id does not exists
lib/functions/testcase.class.php:	 *		   -1 -> test case prefix KO
lib/functions/testcase.class.php:	 * 20080818 - franciscom - Dev Note
lib/functions/testcase.class.php:	 * 20091229 - eloff - BUGID 3021 fixed error when tc prefix contains glue character
lib/functions/testcase.class.php:	 * 20090608 - franciscom - fixed error on management of numeric part (externalID)
lib/functions/testcase.class.php:	 * 20080126 - franciscom - BUGID 1313
lib/functions/testcase.class.php:			$glueCharacter = $cfg->glue_character;
lib/functions/testcase.class.php:			$internalID = -1;
lib/functions/testcase.class.php:			$testCasePrefix = $this->db->prepare_string($rawTestCasePrefix);
lib/functions/testcase.class.php:	      	$sql = 	"SELECT id  FROM {$this->tables['testprojects']} " .
lib/functions/testcase.class.php:			$tproject_info = $this->db->get_recordset($sql);
lib/functions/testcase.class.php:	               " FROM {$this->tables['tcversions']} TCV, {$this->tables['nodes_hierarchy']} NH" .
lib/functions/testcase.class.php:			$testCases = $this->db->fetchRowsIntoMap($sql,'tcase_id');
lib/functions/testcase.class.php:	        		$path2root = $this->tree_manager->get_path($tcaseID);
lib/functions/testcase.class.php:			                        FROM {$this->tables['keywords']} K, {$this->tables['testcase_keywords']}
lib/functions/testcase.class.php:			         FROM {$this->tables['keywords']} K, {$this->tables['testcase_keywords']}
lib/functions/testcase.class.php:			// $map_keywords = $this->db->fetchRowsIntoMap($sql,'testcase_id');
lib/functions/testcase.class.php:			$map_keywords = $this->db->fetchMapRowsIntoMap($sql,'testcase_id','keyword_id');
lib/functions/testcase.class.php:	// -------------------------------------------------------------------------------
lib/functions/testcase.class.php:	// -------------------------------------------------------------------------------
lib/functions/testcase.class.php:		        FROM {$this->tables['testcase_keywords']} testcase_keywords, {$this->tables['keywords']} keywords
lib/functions/testcase.class.php:		$tcKeywords = $this->db->fetchRowsIntoMap($sql,$column,$bCumulative);
lib/functions/testcase.class.php:	        [order_by_clause]: default: '' -> no order choosen
lib/functions/testcase.class.php:		        FROM {$this->tables['testcase_keywords']} testcase_keywords, {$this->tables['keywords']} keywords
lib/functions/testcase.class.php:		$map_keywords = $this->db->fetchColumnsIntoMap($sql,'keyword_id','keyword');
lib/functions/testcase.class.php:		$kw = $this->getKeywords($id,$kw_id);
lib/functions/testcase.class.php:		$sql = " INSERT INTO {$this->tables['testcase_keywords']} (testcase_id,keyword_id) " .
lib/functions/testcase.class.php:		$result = ($this->db->exec_query($sql) ? 1 : 0);
lib/functions/testcase.class.php:			$tcInfo = $this->tree_manager->get_node_hierarchy_info($id);
lib/functions/testcase.class.php:			$keyword = tlKeyword::getByID($this->db,$kw_id);
lib/functions/testcase.class.php:				logAuditEvent(TLS("audit_keyword_assigned_tc",$keyword->name,$tcInfo['name']),
lib/functions/testcase.class.php:			$status_ok = $status_ok && $this->addKeyword($id,$kw_ids[$idx],$audit);
lib/functions/testcase.class.php:		$result = $this->deleteKeywords($id);   	 
lib/functions/testcase.class.php:			$result = $this->addKeywords($id,$kw_ids);
lib/functions/testcase.class.php:		$this->deleteKeywords($destID);
lib/functions/testcase.class.php:		$sourceItems = $this->getKeywords($id);
lib/functions/testcase.class.php:				$status_ok = $status_ok && $this->addKeyword($destID,$keySet[$itemPos]);
lib/functions/testcase.class.php:		$sql = " DELETE FROM {$this->tables['testcase_keywords']}  WHERE testcase_id = {$tcID} ";
lib/functions/testcase.class.php:			$key4log = array_keys((array)$this->get_keywords_map($tcID));
lib/functions/testcase.class.php:		$result = $this->db->exec_query($sql);
lib/functions/testcase.class.php:			$tcInfo = $this->tree_manager->get_node_hierarchy_info($tcID);
lib/functions/testcase.class.php:					$keyword = tlKeyword::getByID($this->db,$key2get);
lib/functions/testcase.class.php:						logAuditEvent(TLS("audit_keyword_assignment_removed_tc",$keyword->name,$tcInfo['name']),
lib/functions/testcase.class.php:	// -------------------------------------------------------------------------------
lib/functions/testcase.class.php:	// -------------------------------------------------------------------------------
lib/functions/testcase.class.php:	  args : id: testcase (node id) - can be single value or array.
lib/functions/testcase.class.php:	         version_id: tcversion id (node id) - can be single value or array.
lib/functions/testcase.class.php:	         build_id: if null -> do not filter by build_id
lib/functions/testcase.class.php:	         platform_id: if null -> do not filter by build_id
lib/functions/testcase.class.php:	                  [exec_id_order] default: 'DESC' - range: ASC,DESC
lib/functions/testcase.class.php:	                  [exec_to_exclude]: default: null -> no filter
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:		// --------------------------------------------------------------------
lib/functions/testcase.class.php:	  // --------------------------------------------------------------------
lib/functions/testcase.class.php:	  // 20090517 - to manage deleted users i need to change:
lib/functions/testcase.class.php:	  // 20090214 - franciscom - e.execution_type -> e.execution_run_type
lib/functions/testcase.class.php:		    FROM {$this->tables['nodes_hierarchy']} NHA
lib/functions/testcase.class.php:	        JOIN {$this->tables['nodes_hierarchy']} NHB ON NHA.parent_id = NHB.id
lib/functions/testcase.class.php:	        JOIN {$this->tables['tcversions']} tcversions ON NHA.id = tcversions.id
lib/functions/testcase.class.php:	        JOIN {$this->tables['executions']} e ON NHA.id = e.tcversion_id
lib/functions/testcase.class.php:	        JOIN {$this->tables['builds']}  b ON e.build_id=b.id
lib/functions/testcase.class.php:	        LEFT OUTER JOIN {$this->tables['users']} users ON users.id = e.tester_id
lib/functions/testcase.class.php:	        LEFT OUTER JOIN {$this->tables['platforms']} p ON p.id = e.platform_id
lib/functions/testcase.class.php:	  $recordset = $this->db->fetchArrayRowsIntoMap($sql,'id');
lib/functions/testcase.class.php:	       20090815 - franciscom - added platform_id argument
lib/functions/testcase.class.php:	       20090716 - franciscom - added options argument, removed get_no_executions
lib/functions/testcase.class.php:	       20080103 - franciscom - added execution_type
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:		// getNoExecutions: 1 -> if testcase/version_id has not been executed return anyway
lib/functions/testcase.class.php:		//                  0 -> default
lib/functions/testcase.class.php:		// groupByBuild: 0 -> default, get last execution on ANY BUILD, then for a testcase/version_id
lib/functions/testcase.class.php:		//               1 -> get last execution on EACH BUILD.
lib/functions/testcase.class.php:		// This logic (is mine - franciscom) must be detailed better!!!!!
lib/functions/testcase.class.php:	  		 " FROM {$this->tables['nodes_hierarchy']} NHA " .
lib/functions/testcase.class.php:	  	     " JOIN {$this->tables['executions']} e ON NHA.id = e.tcversion_id AND e.testplan_id = {$tplan_id} " .
lib/functions/testcase.class.php:      	// 20090716 - order of columns changed
lib/functions/testcase.class.php:	  	$recordset = $this->db->fetchColumnsIntoMap($sql,'execution_id','tcversion_id');
lib/functions/testcase.class.php:	  	$executions_join=" JOIN {$this->tables['executions']} e ON NHA.id = e.tcversion_id " .
lib/functions/testcase.class.php:	  	 // @TODO understand if this condition is really needed - 20090716 - franciscom
lib/functions/testcase.class.php:	  // 20090517 - to manage deleted users i need to change:
lib/functions/testcase.class.php:	  // 20090214 - franciscom - we need tcversions.execution_type and executions.execution_type
lib/functions/testcase.class.php:	  // 20090208 - franciscom
lib/functions/testcase.class.php:	  // 20080103 - franciscom - added execution_type in recordset
lib/functions/testcase.class.php:	  // 20060921 - franciscom -
lib/functions/testcase.class.php:		    " FROM {$this->tables['nodes_hierarchy']} NHA" .
lib/functions/testcase.class.php:	        " JOIN {$this->tables['nodes_hierarchy']} NHB ON NHA.parent_id = NHB.id" .
lib/functions/testcase.class.php:	        " JOIN {$this->tables['tcversions']} tcversions ON NHA.id = tcversions.id" .
lib/functions/testcase.class.php:	        " LEFT OUTER JOIN {$this->tables['builds']} builds ON builds.id = e.build_id" .
lib/functions/testcase.class.php:	        " LEFT OUTER JOIN {$this->tables['users']} users ON users.id = e.tester_id " .
lib/functions/testcase.class.php:   	        " LEFT OUTER JOIN {$this->tables['platforms']} p ON p.id = e.platform_id" .
lib/functions/testcase.class.php:		$recordset = $this->db->fetchRowsIntoMap($sql,'id',$cumulativeMode);
lib/functions/testcase.class.php:	  			$step_set = $this->get_steps($recordset[$sdx]['id']);
lib/functions/testcase.class.php:	   * 20100315 - amitkhullar - Added options for Requirements and CFields for Export.
lib/functions/testcase.class.php:	   * 20100105 - franciscom - added execution_type, importance
lib/functions/testcase.class.php:	   * 20090204 - franciscom - added export of node_order
lib/functions/testcase.class.php:	   * 20080206 - franciscom - added externalid
lib/functions/testcase.class.php:	  	    $reqMgr = new requirement_mgr($this->db);      
lib/functions/testcase.class.php:		$tc_data = $this->get_by_id($tcase_id,$tcversion_id);
lib/functions/testcase.class.php:			$tproject_id = $this->getTestProjectFromTestCase($tcase_id);
lib/functions/testcase.class.php:			$cfMap = $this->get_linked_cfields_at_design($tcase_id,null,null,$tproject_id);
lib/functions/testcase.class.php:	    	// ||yyy||-> tags,  {{xxx}} -> attribute 
lib/functions/testcase.class.php:			$keywords = $this->getKeywords($tcase_id);
lib/functions/testcase.class.php:				$xmlKW = "<keywords>" . $keywordMgr->toXMLString($keywords,true) . "</keywords>";
lib/functions/testcase.class.php:	  		$requirements = $reqMgr->get_all_for_tcase($tcase_id);
lib/functions/testcase.class.php:		// ------------------------------------------------------------------------------------
lib/functions/testcase.class.php:		// BUGID 3695 - missing execution_type
lib/functions/testcase.class.php:        // ------------------------------------------------------------------------------------
lib/functions/testcase.class.php:	    // ||yyy||-> tags,  {{xxx}} -> attribute 
lib/functions/testcase.class.php:					                  1 -> testcase_execution.
lib/functions/testcase.class.php:					                  1 -> open
lib/functions/testcase.class.php:	                          2 -> closed
lib/functions/testcase.class.php:	                          3 -> completed
lib/functions/testcase.class.php:	                          4 -> todo_urgent
lib/functions/testcase.class.php:	                          5 -> todo
lib/functions/testcase.class.php:				" FROM {$this->tables['testplan_tcversions']}  T " .
lib/functions/testcase.class.php:				" LEFT OUTER JOIN {$this->tables['user_assignments']}  UA ON UA.feature_id = T.id " .
lib/functions/testcase.class.php:				" AND   (UA.type=" . $this->assignment_types['testcase_execution']['id'] .
lib/functions/testcase.class.php:		// $recordset = $this->db->fetchRowsIntoMap($sql,'tcversion_id');
lib/functions/testcase.class.php:        $recordset = $this->db->fetchMapRowsIntoMap($sql,'tcversion_id','platform_id');
lib/functions/testcase.class.php:	 * @param object [options] options->mode='full_path'
lib/functions/testcase.class.php:	 *                         options->access_keys
lib/functions/testcase.class.php:	 *                         if not defined or null -> 'testplan_testcase' 
lib/functions/testcase.class.php:	 * @return map key: (test plan id or test case id depending on options->access_keys,
lib/functions/testcase.class.php:	 *             value: map key: (test case id or test plan id depending on options->access_keys,
lib/functions/testcase.class.php:	 * @since 20090131 - franciscom
lib/functions/testcase.class.php:	 *  20100813 - asimon - deactivated last slash on full path
lib/functions/testcase.class.php:	 *  20100802 - asimon - 3647
lib/functions/testcase.class.php:	 *  20100731 - asimon - added option to load assignments for all users,
lib/functions/testcase.class.php:	 *  20100722 - asimon - BUGID 3406 - modified statement to get build name
lib/functions/testcase.class.php:	 *  20100712 - asimon - inserted missing semicolon
lib/functions/testcase.class.php:	 *	20100708 - franciscom - BUGID 3575 - add plaftorm in output set
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:	         " FROM {$this->tables['user_assignments']} UA " . 
lib/functions/testcase.class.php:	         " JOIN {$this->tables['testplan_tcversions']} TPTCV ON TPTCV.id = UA.feature_id " .
lib/functions/testcase.class.php:	         " JOIN {$this->tables['tcversions']} TCV ON TCV.id=TPTCV.tcversion_id " .
lib/functions/testcase.class.php:	         " JOIN {$this->tables['nodes_hierarchy']} NHTCV ON NHTCV.id = TCV.id " .
lib/functions/testcase.class.php:	         " JOIN {$this->tables['nodes_hierarchy']} NHTC ON NHTC.id = NHTCV.parent_id " .
lib/functions/testcase.class.php:	         " JOIN {$this->tables['nodes_hierarchy']} NHTPLAN ON  NHTPLAN.id=TPTCV.testplan_id " .
lib/functions/testcase.class.php:	         " JOIN {$this->tables['testprojects']} TPROJ ON  TPROJ.id = NHTPLAN.parent_id " .
lib/functions/testcase.class.php:	         " JOIN {$this->tables['testplans']} TPLAN ON  TPLAN.id = TPTCV.testplan_id " .
lib/functions/testcase.class.php:	         " JOIN {$this->tables['builds']} BUILDS ON  BUILDS.id = UA.build_id " .
lib/functions/testcase.class.php:	         " LEFT OUTER JOIN {$this->tables['platforms']} PLAT ON  PLAT.id = TPTCV.platform_id " .
lib/functions/testcase.class.php:	         " WHERE UA.type={$this->assignment_types['testcase_execution']['id']} " .
lib/functions/testcase.class.php:	    if( $has_options && isset($options->access_keys) )
lib/functions/testcase.class.php:	        switch($options->access_keys)
lib/functions/testcase.class.php:	    $rs=$this->db->fetchMapRowsIntoMap($sql,$access_key[0],$access_key[1],database::CUMULATIVE);
lib/functions/testcase.class.php:	        if( isset($options->mode) )
lib/functions/testcase.class.php:	            switch($options->mode)
lib/functions/testcase.class.php:	                    if( !isset($options->access_keys) || 
lib/functions/testcase.class.php:	                        (is_null($options->access_keys) || $options->access_keys='testplan_testcase') )
lib/functions/testcase.class.php:	                        $path_info = $this->tree_manager->get_full_path_verbose($tcaseSet);
lib/functions/testcase.class.php:	                            // 20100813 - asimon - deactivated last slash on path
lib/functions/testcase.class.php:	         active_status: 1 -> active / 0 -> inactive
lib/functions/testcase.class.php:	  returns: 1 -> everything ok.
lib/functions/testcase.class.php:	           0 -> some error
lib/functions/testcase.class.php:		$sql = " UPDATE {$this->tables['tcversions']} tcversions SET active={$active_status}" .
lib/functions/testcase.class.php:		$result = $this->db->exec_query($sql);
lib/functions/testcase.class.php:	  returns: -
lib/functions/testcase.class.php:	  $result=$this->tree_manager->change_order_bulk(array($order => $id));  	
lib/functions/testcase.class.php:	  returns: -
lib/functions/testcase.class.php:	  $sql="UPDATE {$this->tables['tcversions']} " .
lib/functions/testcase.class.php:	       "WHERE id IN ( SELECT id FROM {$this->tables['nodes_hierarchy']} WHERE parent_id={$id} ) ";
lib/functions/testcase.class.php:	  $result=$this->db->exec_query($sql);
lib/functions/testcase.class.php:		$this->attachmentRepository->copyAttachments($source_id,$target_id,$this->attachmentTableName);
lib/functions/testcase.class.php:			$req_mgr=new requirement_mgr($this->db);
lib/functions/testcase.class.php:		$itemSet=$req_mgr->get_all_for_tcase($from);
lib/functions/testcase.class.php:			$req_mgr->assign_to_tcase($items,$to); 
lib/functions/testcase.class.php:	    $viewerActions->edit='no';
lib/functions/testcase.class.php:	    $viewerActions->delete_testcase='no';
lib/functions/testcase.class.php:	    $viewerActions->delete_version='no';
lib/functions/testcase.class.php:	    $viewerActions->deactivate='no';
lib/functions/testcase.class.php:	    $viewerActions->create_new_version='no';
lib/functions/testcase.class.php:	    $viewerActions->export='no';
lib/functions/testcase.class.php:	    $viewerActions->move='no';
lib/functions/testcase.class.php:	    $viewerActions->copy='no';
lib/functions/testcase.class.php:	    $viewerActions->add2tplan='no';
lib/functions/testcase.class.php:	            $viewerActions->edit='yes';
lib/functions/testcase.class.php:	            // 20100530 - franciscom - $viewerActions->create_new_version='yes';    
lib/functions/testcase.class.php:	            $viewerActions->$key='yes';        
lib/functions/testcase.class.php:		$sql = array("DELETE FROM {$this->tables['execution_bugs']} {$whereClause} ", 
lib/functions/testcase.class.php:		             "DELETE FROM {$this->tables['cfield_execution_values']} {$whereClause} ",
lib/functions/testcase.class.php:		             "DELETE FROM {$this->tables['executions']} WHERE id = {$executionID}" );
lib/functions/testcase.class.php:			$result = $this->db->exec_query($the_stm);
lib/functions/testcase.class.php:	// ---------------------------------------------------------------------------------------
lib/functions/testcase.class.php:	// ---------------------------------------------------------------------------------------
lib/functions/testcase.class.php:	                     null -> use testcase_id as starting point.
lib/functions/testcase.class.php:	                     !is_null -> use this value as starting point.
lib/functions/testcase.class.php:	                                        1 -> filter on field show_on_execution=1
lib/functions/testcase.class.php:	                                        0 or null -> don't filter
lib/functions/testcase.class.php:	                                              1 -> filter on field show_on_testplan_design=1
lib/functions/testcase.class.php:	                                              0 or null -> don't filter
lib/functions/testcase.class.php:			                      implement pre-requisites.
lib/functions/testcase.class.php:	                   More comments/instructions on cfield_mgr->get_linked_cfields_at_design()
lib/functions/testcase.class.php:	       20070302 - check for $id not null, is not enough, need to check is > 0
lib/functions/testcase.class.php:			$tproject_id = $this->getTestProjectFromTestCase($id,$parent_id);
lib/functions/testcase.class.php:		$cf_map = $this->cfield_mgr->get_linked_cfields_at_design($tproject_id,
lib/functions/testcase.class.php:	                     null -> use testcase_id as starting point.
lib/functions/testcase.class.php:	                     !is_null -> use this value as starting point.
lib/functions/testcase.class.php:		$the_path = $this->tree_manager->get_path( (!is_null($id) && $id > 0) ? $id : $parent_id);
lib/functions/testcase.class.php:	                     null -> use testcase_id as starting point.
lib/functions/testcase.class.php:	                     !is_null -> use this value as starting point.
lib/functions/testcase.class.php:	        [$scope]: 'design' -> use custom fields that can be used at design time (specification)
lib/functions/testcase.class.php:	                  'execution' -> use custom fields that can be used at execution time.
lib/functions/testcase.class.php:	  rev: 20080811 - franciscom - BUGID 1650 (REQ)
lib/functions/testcase.class.php:	          $cf_map = $this->$method_name($id,$parent_id,null,$link_id,null,$tproject_id);    
lib/functions/testcase.class.php:	      		$cf_map = $this->$method_name($id,$parent_id,$filters,$tproject_id);    
lib/functions/testcase.class.php:	          $cf_map = $this->$method_name($id,$parent_id,null,$link_id,$tplan_id,$tproject_id);    
lib/functions/testcase.class.php:				$cf_html_string = $this->cfield_mgr->string_custom_field_input($cf_info,$name_suffix);
lib/functions/testcase.class.php:	             scope='design'    -> this is a testcase id
lib/functions/testcase.class.php:	             scope='execution' -> this is a testcase VERSION id
lib/functions/testcase.class.php:	             scope='testplan_design' -> this is a testcase VERSION id 
lib/functions/testcase.class.php:	        [$scope]: 'design' -> use custom fields that can be used at design time (specification)
lib/functions/testcase.class.php:	                  'execution' -> use custom fields that can be used at execution time.
lib/functions/testcase.class.php:	                                        1 -> filter on field show_on_execution=1
lib/functions/testcase.class.php:	                                        0 or null -> don't filter
lib/functions/testcase.class.php:	                                              1 -> filter on field show_on_testplan_design=1
lib/functions/testcase.class.php:	                                              0 or null -> don't filter
lib/functions/testcase.class.php:			                      implement pre-requisites.
lib/functions/testcase.class.php:	                   More comments/instructions on cfield_mgr->get_linked_cfields_at_design()
lib/functions/testcase.class.php:	        [$execution_id]: null -> get values for all executions availables for testcase
lib/functions/testcase.class.php:	                         !is_null -> only get values or this execution_id
lib/functions/testcase.class.php:	        [$testplan_id]: null -> get values for any tesplan to with testcase is linked
lib/functions/testcase.class.php:	                        !is_null -> get values only for this testplan.
lib/functions/testcase.class.php:	            $cf_map = $this->get_linked_cfields_at_design($id,null,$filters,$tproject_id);
lib/functions/testcase.class.php:	            $cf_map = $this->get_linked_cfields_at_testplan_design($id,null,$filters,$link_id,
lib/functions/testcase.class.php:	            $cf_map = $this->get_linked_cfields_at_execution($id,null,$filters,$execution_id,
lib/functions/testcase.class.php:									$this->cfield_mgr->string_custom_field_value($cf_info,$id) .
lib/functions/testcase.class.php:	                              1 -> filter on field show_on_execution=1
lib/functions/testcase.class.php:	                              0 or null -> don't filter
lib/functions/testcase.class.php:	                              //@TODO - 20090718 - franciscom 
lib/functions/testcase.class.php:	        [$execution_id]: null -> get values for all executions availables for testcase
lib/functions/testcase.class.php:	                         !is_null -> only get values or this execution_id
lib/functions/testcase.class.php:	        [$testplan_id]: null -> get values for any tesplan to with testcase is linked
lib/functions/testcase.class.php:	                        !is_null -> get values only for this testplan.
lib/functions/testcase.class.php:		    $tproject_id = $this->getTestProjectFromTestCase($id,$parent_id);
lib/functions/testcase.class.php:		$cf_map = $this->cfield_mgr->$thisMethod($tproject_id,self::ENABLED,'testcase',
lib/functions/testcase.class.php:	  returns: -
lib/functions/testcase.class.php:	  $cfmap_from=$this->get_linked_cfields_at_design($from_id);
lib/functions/testcase.class.php:	  $this->cfield_mgr->design_values_to_db($cfield,$to_id,null,'tcase_copy_cfields');
lib/functions/testcase.class.php:	                                        1 -> filter on field show_on_execution=1
lib/functions/testcase.class.php:	                                        0 or null -> don't filter
lib/functions/testcase.class.php:	                                              1 -> filter on field show_on_testplan_design=1
lib/functions/testcase.class.php:	                                              0 or null -> don't filter
lib/functions/testcase.class.php:	                   More comments/instructions on cfield_mgr->get_linked_cfields_at_design()
lib/functions/testcase.class.php:	        [$testplan_id]: null -> get values for any tesplan to with testcase is linked
lib/functions/testcase.class.php:	                        !is_null -> get values only for this testplan.
lib/functions/testcase.class.php:		    $tproject_id = $this->getTestProjectFromTestCase($id,$parent_id);
lib/functions/testcase.class.php:		$cf_map = $this->cfield_mgr->get_linked_cfields_at_testplan_design($tproject_id,self::ENABLED,'testcase',
lib/functions/testcase.class.php:		$ret = $this->cfield_mgr->buildLocationMap('testcase');
lib/functions/testcase.class.php:			$path_info = $this->tree_manager->get_path($item); 
lib/functions/testcase.class.php:			$path_info = $this->tree_manager->get_path($item); 
lib/functions/testcase.class.php:        // First get root -> test project name and leaf => test case name	    
lib/functions/testcase.class.php:	    $tsuiteName = $parts[$partsQty-2];
lib/functions/testcase.class.php:        $recordset = $this->get_by_name($tcaseName, $tsuiteName ,$tprojectName);
lib/functions/testcase.class.php:  		        $dummy = $this->tree_manager->get_full_path_verbose($value['id']);
lib/functions/testcase.class.php:	    list($external_id,$prefix,$glue,$tc_number) = $this->getExternalID($id,$tproject_id);
lib/functions/testcase.class.php:       		list($prefix,$root) = $this->getPrefix($id,$tproject_id);
lib/functions/testcase.class.php:		$info = $this->get_last_version_info($id, array('output' => 'minimun'));
lib/functions/testcase.class.php:       	$identity = $prefix . $cfg->glue_character . $external;
lib/functions/testcase.class.php:		return array($identity,$prefix,$cfg->glue_character,$external);
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:		       " FROM {$this->tables['nodes_hierarchy']} NH_TCASE " .
lib/functions/testcase.class.php:		       " JOIN {$this->tables['nodes_hierarchy']} NH_TCV ON NH_TCV.parent_id = NH_TCASE.id" .
lib/functions/testcase.class.php:		       " JOIN {$this->tables['tcversions']} TCV ON  TCV.id = NH_TCV.id ";
lib/functions/testcase.class.php:        $result = $this->db->get_recordset($sql);
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:	    $dummy = $this->db->prepare_int($execution_type);
lib/functions/testcase.class.php:        $dummy = (isset($this->execution_types[$dummy])) ? $dummy : TESTCASE_EXECUTION_TYPE_MANUAL;
lib/functions/testcase.class.php:		$item_id = $this->tree_manager->new_node($tcversion_id,$this->node_types_descr_id['testcase_step']);
lib/functions/testcase.class.php:		$sql = "/* $debugMsg */ INSERT INTO {$this->tables['tcsteps']} " .
lib/functions/testcase.class.php:		       " VALUES({$item_id},{$step_number},'" . $this->db->prepare_string($actions) . "','" .
lib/functions/testcase.class.php:		  	   $this->db->prepare_string($expected_results) . "', " . $this->db->prepare_int($dummy) . ")";
lib/functions/testcase.class.php:		$result = $this->db->exec_query($sql);
lib/functions/testcase.class.php:	        $ret['msg'] = $this->db->error_msg();
lib/functions/testcase.class.php:		    $ret['id']=-1;
lib/functions/testcase.class.php:     *	20100821 - franciscom - added options
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:		$safe_tcversion_id = $this->db->prepare_int($tcversion_id);
lib/functions/testcase.class.php:		       " FROM {$this->tables['tcsteps']} TCSTEPS " .
lib/functions/testcase.class.php:		       " JOIN {$this->tables['nodes_hierarchy']} NH_STEPS " .
lib/functions/testcase.class.php:			$result = $this->db->get_recordset($sql);
lib/functions/testcase.class.php:			$result = $this->db->fetchRowsIntoMap($sql,$my['options']['accessKey']);
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:		       " SELECT TCSTEPS.* FROM {$this->tables['tcsteps']} TCSTEPS " .
lib/functions/testcase.class.php:		       " JOIN {$this->tables['nodes_hierarchy']} NH_STEPS " .
lib/functions/testcase.class.php:		$result = $this->db->get_recordset($sql);
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:		       " SELECT TCSTEPS.id, TCSTEPS.step_number FROM {$this->tables['tcsteps']} TCSTEPS " .
lib/functions/testcase.class.php:		       " JOIN {$this->tables['nodes_hierarchy']} NH_STEPS " .
lib/functions/testcase.class.php:		$result = $this->db->fetchRowsIntoMap($sql,'step_number');
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:		       " SELECT MAX(TCSTEPS.step_number) AS max_step FROM {$this->tables['tcsteps']} TCSTEPS " .
lib/functions/testcase.class.php:		       " JOIN {$this->tables['nodes_hierarchy']} NH_STEPS " .
lib/functions/testcase.class.php:		$result = $this->db->get_recordset($sql);
lib/functions/testcase.class.php:     *	20100821 - franciscom - $step_id can be an array
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:		$sqlSet[] = "/* $debugMsg */ DELETE FROM {$this->tables['tcsteps']} {$whereClause} ";
lib/functions/testcase.class.php:		$sqlSet[] = "/* $debugMsg */ DELETE FROM {$this->tables['nodes_hierarchy']} {$whereClause} ";
lib/functions/testcase.class.php:			$this->db->exec_query($sql);
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:        	$sql = "/* $debugMsg */ UPDATE {$this->tables['tcsteps']} TC_STEP " . 
lib/functions/testcase.class.php:        	$this->db->exec_query($sql); 	    
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:		$sql = "/* $debugMsg */ UPDATE {$this->tables['tcsteps']} " .
lib/functions/testcase.class.php:		       " SET step_number=" . $this->db->prepare_int($step_number) . "," .
lib/functions/testcase.class.php:		       " actions='" . $this->db->prepare_string($actions) . "', " .
lib/functions/testcase.class.php:		       " expected_results='" . $this->db->prepare_string($expected_results) . "', " .
lib/functions/testcase.class.php:		       " execution_type = " . $this->db->prepare_int($execution_type)  .
lib/functions/testcase.class.php:		       " WHERE id = " . $this->db->prepare_int($step_id);
lib/functions/testcase.class.php:		$result = $this->db->exec_query($sql);
lib/functions/testcase.class.php:	        $ret['msg'] = $this->db->error_msg();
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:			   " FROM {$this->tables['nodes_hierarchy']} NH_TCASE, " .
lib/functions/testcase.class.php:			   " {$this->tables['nodes_hierarchy']} NH_TCASE_PARENT, " .
lib/functions/testcase.class.php:			   " {$this->tables['nodes_hierarchy']} NH_TCVERSIONS," .
lib/functions/testcase.class.php:			   " {$this->tables['tcversions']}  TCV  " .
lib/functions/testcase.class.php:			   " AND NH_TCASE.node_type_id = {$this->my_node_type} " .
lib/functions/testcase.class.php:		$recordset = $this->db->fetchRowsIntoMap($sql,'id');
lib/functions/testcase.class.php:	 * 20100417 - franciscom - added importance on output data
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:			   " FROM {$this->tables['tcversions']} TCV " .
lib/functions/testcase.class.php:			   " JOIN {$this->tables['nodes_hierarchy']} NH_TCVERSION " .
lib/functions/testcase.class.php:		// $recordset = $this->db->fetchRowsIntoMap($sql,$my['options']['access_key']);
lib/functions/testcase.class.php:		$recordset = $this->db->fetchRowsIntoMap($sql,'tcversion_id');
lib/functions/testcase.class.php:				   " FROM {$this->tables['tcversions']} TCV " .
lib/functions/testcase.class.php:				   " JOIN {$this->tables['nodes_hierarchy']} NH_TCVERSION " .
lib/functions/testcase.class.php:			$recordset = $this->db->fetchRowsIntoMap($sql,$my['options']['access_key']);
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:			   " FROM {$this->tables['tcversions']} TCV " .
lib/functions/testcase.class.php:			   " JOIN {$this->tables['nodes_hierarchy']} NH_TCVERSION " .
lib/functions/testcase.class.php:		$recordset = $this->db->fetchRowsIntoMap($sql,$my['options']['access_key']);
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:			   " FROM {$this->tables['tcversions']} TCV " .
lib/functions/testcase.class.php:			   " JOIN {$this->tables['nodes_hierarchy']} NH_TCVERSION " .
lib/functions/testcase.class.php:		$recordset = $this->db->fetchRowsIntoMap($sql,$my['options']['access_key']);
lib/functions/testcase.class.php:	 * 20100821 - franciscom - needed to fix import feature (BUGID 3634).
lib/functions/testcase.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testcase.class.php:		$stepSet = $this->get_steps($tcversion_id,0,array('fields2get' => 'id', 'accessKey' => 'id'));				
lib/functions/testcase.class.php:			$this->delete_step_by_id(array_keys($stepSet));
lib/functions/testcase.class.php:			$this->create_step($tcversion_id,$steps[$idx]['step_number'],$steps[$idx]['actions'],
lib/functions/treeMenu.inc.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/treeMenu.inc.php: * @copyright 	2005-2009, TestLink community 
lib/functions/treeMenu.inc.php: *  20100820 - asimon - refactoring for less redundant checks and better readibility of code
lib/functions/treeMenu.inc.php: *	20100812 - franciscom - get_filtered_req_map() - BUGID 3671
lib/functions/treeMenu.inc.php: *  20100810 - asimon - added filtering by TC ID on prepareNode() and generateTestSpecTree()
lib/functions/treeMenu.inc.php: *  20100808 - asimon - generate_reqspec_tree() implemented to generate statically filtered
lib/functions/treeMenu.inc.php: *  20100702 - asimon - fixed custom field filtering problem caused by 
lib/functions/treeMenu.inc.php: *  20100701 - asimon - replaced is_null in renderTreeNode() by !isset 
lib/functions/treeMenu.inc.php: *  20100701 - asimon - added some additional isset() checks to avoid warnings
lib/functions/treeMenu.inc.php: *  20100628 - asimon - removal of constants from filter control class
lib/functions/treeMenu.inc.php: *  20160625 - asimon - refactoring for new filter features and BUGID 3516
lib/functions/treeMenu.inc.php: *  20100624 - asimon - CVS merge (experimental branch to HEAD)
lib/functions/treeMenu.inc.php: *  20100622 - asimon - refactoring of following functions for new filter classes:
lib/functions/treeMenu.inc.php: *	20100611 - franciscom - renderExecTreeNode(), renderTreeNode() interface changes
lib/functions/treeMenu.inc.php: *							generateExecTree() - interface changes and output changes
lib/functions/treeMenu.inc.php: *  20100602 - franciscom - extjs_renderExecTreeNodeOnOpen() - added 'tlNodeType' 	
lib/functions/treeMenu.inc.php: *  20100428 - asimon - BUGID 3301 and related: 
lib/functions/treeMenu.inc.php: *	20100417 - franciscom - BUGID 2498 - spec tree  - filter by test case spec importance
lib/functions/treeMenu.inc.php: *	20100417 - franciscom - BUGID 3380 - execution tree - filter by test case execution type
lib/functions/treeMenu.inc.php: *	20100415 - franciscom - BUGID 2797 - filter by test case execution type
lib/functions/treeMenu.inc.php: *	20100202 - asimon - changes for filtering, BUGID 2455, BUGID 3026
lib/functions/treeMenu.inc.php: *						added filter_by_* - functions, changed generateExecTree()
lib/functions/treeMenu.inc.php: *	20091212 - franciscom - prepareNode(), generateTestSpecTree() interface changes
lib/functions/treeMenu.inc.php: *	20090815 - franciscom - get_last_execution() call changes
lib/functions/treeMenu.inc.php: *  20090801 - franciscom - table prefix missed
lib/functions/treeMenu.inc.php: *	20090716 - franciscom - BUGID 2692
lib/functions/treeMenu.inc.php: * 	20090328 - franciscom - BUGID 2299 - introduced on 20090308.
lib/functions/treeMenu.inc.php: *  20090308 - franciscom - generateTestSpecTree() - changes for EXTJS tree
lib/functions/treeMenu.inc.php: *  20090211 - franciscom - BUGID 2094 
lib/functions/treeMenu.inc.php: *  20090202 - franciscom - minor changes to avoid BUGID 2009
lib/functions/treeMenu.inc.php: *  20090118 - franciscom - replaced multiple calls config_get('testcase_cfg')
lib/functions/treeMenu.inc.php: * 20100810 - asimon - filtering by testcase ID
lib/functions/treeMenu.inc.php: * 20100428 - asimon - BUGID 3301, added filtering by custom fields
lib/functions/treeMenu.inc.php: * 20090328 - franciscom - BUGID 2299, that was generated during 20090308 
lib/functions/treeMenu.inc.php: * 20090308 - franciscom - changed arguments in str_ireplace() call
lib/functions/treeMenu.inc.php: * 20080501 - franciscom - keyword_id can be an array
lib/functions/treeMenu.inc.php: * 20071014 - franciscom - $bForPrinting
lib/functions/treeMenu.inc.php: * 20070922 - franciscom - interface changes added $tplan_id,
lib/functions/treeMenu.inc.php: * 20070217 - franciscom - added $exclude_branches
lib/functions/treeMenu.inc.php: * 20061105 - franciscom - added $ignore_inactive_testcases
lib/functions/treeMenu.inc.php:	// 20100412 - franciscom
lib/functions/treeMenu.inc.php:	// 20100412 - franciscom
lib/functions/treeMenu.inc.php:	// 20100417 - franciscom - BUGID 2498
lib/functions/treeMenu.inc.php:	$treeMenu->rootnode = null;
lib/functions/treeMenu.inc.php:	$treeMenu->menustring = '';
lib/functions/treeMenu.inc.php:	$glueChar = config_get('testcase_cfg')->glue_character;
lib/functions/treeMenu.inc.php:	$tree_manager = &$tproject_mgr->tree_manager;	
lib/functions/treeMenu.inc.php:	$tcase_node_type = $tree_manager->node_descr_id['testcase'];
lib/functions/treeMenu.inc.php:	$tsuite_node_type = $tree_manager->node_descr_id['testsuite'];
lib/functions/treeMenu.inc.php:	$hash_descr_id = $tree_manager->get_available_node_types();
lib/functions/treeMenu.inc.php:	$tcase_prefix=$tproject_mgr->getTestCasePrefix($tproject_id) . $glueChar;
lib/functions/treeMenu.inc.php:	$test_spec = $tproject_mgr->get_subtree($tproject_id,testproject::RECURSIVE_MODE,
lib/functions/treeMenu.inc.php:	// Added root node for test specification -> testproject
lib/functions/treeMenu.inc.php:			//$tck_map = $tproject_mgr->get_keywords_tcases($tproject_id,$my['filters']['keywords']->items,
lib/functions/treeMenu.inc.php:			//                                              $my['filters']['keywords']->type);
lib/functions/treeMenu.inc.php:			$tck_map = $tproject_mgr->get_keywords_tcases($tproject_id,
lib/functions/treeMenu.inc.php:	    // BUGID 3301 - added filtering by custom field values
lib/functions/treeMenu.inc.php:	    // 20100412 - franciscom
lib/functions/treeMenu.inc.php:	$treeMenu->rootnode = new stdClass();
lib/functions/treeMenu.inc.php:	$treeMenu->rootnode->name = $test_spec['text'];
lib/functions/treeMenu.inc.php:	$treeMenu->rootnode->id = $test_spec['id'];
lib/functions/treeMenu.inc.php:	$treeMenu->rootnode->leaf = isset($test_spec['leaf']) ? $test_spec['leaf'] : false;
lib/functions/treeMenu.inc.php:	$treeMenu->rootnode->text = $test_spec['text'];
lib/functions/treeMenu.inc.php:	$treeMenu->rootnode->position = $test_spec['position'];	    
lib/functions/treeMenu.inc.php:	$treeMenu->rootnode->href = $test_spec['href'];
lib/functions/treeMenu.inc.php:	// 20090328 - franciscom - BUGID 2299
lib/functions/treeMenu.inc.php:	// 20090308 - franciscom
lib/functions/treeMenu.inc.php:		// :null happens on -> "children":null,"text" that must become "children":[],"text"
lib/functions/treeMenu.inc.php:	$treeMenu->menustring = $menustring; 
lib/functions/treeMenu.inc.php: *  - Test project specification -> we want ALL test cases defined in test project.
lib/functions/treeMenu.inc.php: *  - Test execution             -> we only want the test cases linked to a test plan.
lib/functions/treeMenu.inc.php: * 20081220 - franciscom - status can be an array with multple values, to do OR search.
lib/functions/treeMenu.inc.php: * 20071014 - franciscom - added version info fro test cases in return data structure.
lib/functions/treeMenu.inc.php: * 20061105 - franciscom
lib/functions/treeMenu.inc.php: * 20061030 - franciscom
lib/functions/treeMenu.inc.php: * 20100810 - asimon - filtering by testcase ID
lib/functions/treeMenu.inc.php: * 20100417 - franciscom -  BUGID 2498 - filter by test case importance
lib/functions/treeMenu.inc.php: * 20100415 - franciscom -  BUGID 2797 - filter by test case execution type
lib/functions/treeMenu.inc.php:  	    $debugMsg = 'Class: ' . __CLASS__ . ' - ' . 'Method: ' . __FUNCTION__ . ' - ';
lib/functions/treeMenu.inc.php:		// asimon - added importance here because of "undefined" error in event log
lib/functions/treeMenu.inc.php:		// 3301 - added filtering by testcase name
lib/functions/treeMenu.inc.php:		// 20100702 - and custom fields
lib/functions/treeMenu.inc.php:		// 20100810 - and testcase ID
lib/functions/treeMenu.inc.php:			// asimon - additional variables for better readability of following if condition.
lib/functions/treeMenu.inc.php:						$sql = " /* $debugMsg - line:" . __LINE__ . " */ " . 
lib/functions/treeMenu.inc.php:						$result = $db->exec_query($sql);
lib/functions/treeMenu.inc.php:						$myrow = $db->fetch_array($result);
lib/functions/treeMenu.inc.php:			// 20070106 - franciscom
lib/functions/treeMenu.inc.php:			// Problem 1 - SQL Syntax
lib/functions/treeMenu.inc.php:			//   SELECT count(TCV.id) NUM_ACTIVE_VERSIONS   -> Error
lib/functions/treeMenu.inc.php:			// Problem 2 - alias case
lib/functions/treeMenu.inc.php:			$sql=" /* $debugMsg - line:" . __LINE__ . " */ " . 
lib/functions/treeMenu.inc.php:			$result = $db->exec_query($sql);
lib/functions/treeMenu.inc.php:			$myrow = $db->fetch_array($result);
lib/functions/treeMenu.inc.php:		// -------------------------------------------------------------------
lib/functions/treeMenu.inc.php:			$sql = " /* $debugMsg - line:" . __LINE__ . " */ " . 
lib/functions/treeMenu.inc.php:			$rs = $db->get_recordset($sql);
lib/functions/treeMenu.inc.php:							$sql = " /* $debugMsg - line:" . __LINE__ . " */ " . 
lib/functions/treeMenu.inc.php:			    			$rs = $db->get_recordset($sql);
lib/functions/treeMenu.inc.php:					$sql = " /* $debugMsg - line:" . __LINE__ . " */ " . 
lib/functions/treeMenu.inc.php:			    	$rs = $db->fetchRowsIntoMap($sql,'execution_type');
lib/functions/treeMenu.inc.php:		// -------------------------------------------------------------------
lib/functions/treeMenu.inc.php:		// does this means is an empty test suite ??? - franciscom 20080328
lib/functions/treeMenu.inc.php: * 20100611 - franciscom - removed useless $getArguments
lib/functions/treeMenu.inc.php:		// 20090118 - franciscom - need to work always original object
lib/functions/treeMenu.inc.php:			// asimon - replaced is_null by !isset because of warnings in event log
lib/functions/treeMenu.inc.php: * - Execution of Test Cases
lib/functions/treeMenu.inc.php: * - Remove Test cases from test plan
lib/functions/treeMenu.inc.php: *  20100820 - asimon - refactoring for less redundant checks and better readibility
lib/functions/treeMenu.inc.php: *  20100719 - asimon - BUGID 3406 - user assignments per build:
lib/functions/treeMenu.inc.php: *	20080617 - franciscom - return type changed to use extjs tree component
lib/functions/treeMenu.inc.php: *	20080305 - franciscom - interface refactoring
lib/functions/treeMenu.inc.php: *	20080224 - franciscom - added include_unassigned
lib/functions/treeMenu.inc.php: *	20071002 - jbarchibald - BUGID 1051 - added cf element to parameter list
lib/functions/treeMenu.inc.php: *	20070204 - franciscom - changed $bForPrinting -> $bHideTCs
lib/functions/treeMenu.inc.php:	$treeMenu->rootnode = null;
lib/functions/treeMenu.inc.php:	$treeMenu->menustring = '';
lib/functions/treeMenu.inc.php:	$glueChar=config_get('testcase_cfg')->glue_character;
lib/functions/treeMenu.inc.php:	if (property_exists($filters, 'filter_keywords') && !is_null($filters->{'filter_keywords'})) {
lib/functions/treeMenu.inc.php:		$keyword_id = $filters->{'filter_keywords'};
lib/functions/treeMenu.inc.php:		$keywordsFilterType = $filters->{'filter_keywords_filter_type'};
lib/functions/treeMenu.inc.php:	// BUGID 3406 - user assignments per build
lib/functions/treeMenu.inc.php:	$build2filter_assignments = isset($filters->{'setting_build'}) ? $filters->{'setting_build'} : 0;
lib/functions/treeMenu.inc.php:	$tc_id = isset($filters->filter_tc_id) ? $filters->filter_tc_id : null; 
lib/functions/treeMenu.inc.php:	$build_id = isset($filters->filter_result_build) ? $filters->filter_result_build : null;
lib/functions/treeMenu.inc.php:	$bHideTCs = isset($filters->hide_testcases) ? $filters->hide_testcases : false;
lib/functions/treeMenu.inc.php:	$assignedTo = isset($filters->filter_assigned_user) ? $filters->filter_assigned_user : null; 
lib/functions/treeMenu.inc.php:	$include_unassigned = isset($filters->filter_assigned_user_include_unassigned) ?
lib/functions/treeMenu.inc.php:	                      $filters->filter_assigned_user_include_unassigned : false;
lib/functions/treeMenu.inc.php:	$setting_platform = isset($filters->setting_platform) ? $filters->setting_platform : null;
lib/functions/treeMenu.inc.php:	$execution_type = isset($filters->filter_execution_type) ? $filters->filter_execution_type : null;
lib/functions/treeMenu.inc.php:	$status = isset($filters->filter_result_result) ? $filters->filter_result_result : null;
lib/functions/treeMenu.inc.php:	$cf_hash = isset($filters->filter_custom_fields) ? $filters->filter_custom_fields : null;
lib/functions/treeMenu.inc.php:	$show_testsuite_contents = isset($filters->show_testsuite_contents) ? 
lib/functions/treeMenu.inc.php:	                           $filters->show_testsuite_contents : true;
lib/functions/treeMenu.inc.php:	$urgencyImportance = isset($filters->filter_priority) ?
lib/functions/treeMenu.inc.php:	                     $filters->filter_priority : null;
lib/functions/treeMenu.inc.php:	$useCounters=isset($additionalInfo->useCounters) ? $additionalInfo->useCounters : null;
lib/functions/treeMenu.inc.php:	$useColors=isset($additionalInfo->useColours) ? $additionalInfo->useColours : null;
lib/functions/treeMenu.inc.php:	$colorBySelectedBuild = isset($additionalInfo->testcases_colouring_by_selected_build) ? 
lib/functions/treeMenu.inc.php:	                        $additionalInfo->testcases_colouring_by_selected_build : null;
lib/functions/treeMenu.inc.php:	$tree_manager = $tplan_mgr->tree_manager;
lib/functions/treeMenu.inc.php:	$tcase_node_type = $tree_manager->node_descr_id['testcase'];
lib/functions/treeMenu.inc.php:	$hash_descr_id = $tree_manager->get_available_node_types();
lib/functions/treeMenu.inc.php:	$tcase_prefix = $tproject_mgr->getTestCasePrefix($tproject_id) . $glueChar;
lib/functions/treeMenu.inc.php: 	// BUGID 3301 - added for filtering by toplevel testsuite
lib/functions/treeMenu.inc.php: 	if (isset($filters->{'filter_toplevel_testsuite'}) && is_array($filters->{'filter_toplevel_testsuite'})) {
lib/functions/treeMenu.inc.php: 		$my['filters']['exclude_branches'] = $filters->{'filter_toplevel_testsuite'};
lib/functions/treeMenu.inc.php:    $test_spec = $tree_manager->get_subtree($tproject_id,$my['filters'],$my['options']);
lib/functions/treeMenu.inc.php:				$tck_map = $tproject_mgr->get_keywords_tcases($tproject_id,$keyword_id,$keywordsFilterType);
lib/functions/treeMenu.inc.php:			// 20100417 - BUGID 3380 - execution type
lib/functions/treeMenu.inc.php:			$tplan_tcases = $tplan_mgr->get_linked_tcversions($tplan_id,$linkedFilters,$opt);
lib/functions/treeMenu.inc.php:				$filteredSet = $tcase_mgr->filterByKeyword(array_keys($tplan_tcases),$keyword_id,$keywordsFilterType);
lib/functions/treeMenu.inc.php:					$tplan_tcases = $tplan_mgr->get_linked_tcversions($tplan_id,$linkedFilters);
lib/functions/treeMenu.inc.php:		// 20100820 - asimon - refactoring for less redundant checks and better readibility
lib/functions/treeMenu.inc.php:		$requested_filter_method = isset($filters->filter_result_method) ? $filters->filter_result_method : null;
lib/functions/treeMenu.inc.php:		$requested_filter_result = isset($filters->filter_result_result) ? $filters->filter_result_result : null;
lib/functions/treeMenu.inc.php:				$filters->filter_result_build = $filters->setting_build;
lib/functions/treeMenu.inc.php:		// BUGID 3450 - Change colors/counters in exec tree.
lib/functions/treeMenu.inc.php:					   " AND build_id = {$filters->setting_build} " .
lib/functions/treeMenu.inc.php:				$result = $db->fetchOneValue($sql);
lib/functions/treeMenu.inc.php:		// 20080224 - franciscom - 
lib/functions/treeMenu.inc.php:			$pnFilters[$keyname] = isset($filters->{$keyname}) ? $filters->{$keyname} : null;
lib/functions/treeMenu.inc.php:		// 20100412 - franciscom
lib/functions/treeMenu.inc.php:	$treeMenu->rootnode=new stdClass();
lib/functions/treeMenu.inc.php:	$treeMenu->rootnode->name=$test_spec['text'];
lib/functions/treeMenu.inc.php:	$treeMenu->rootnode->id=$test_spec['id'];
lib/functions/treeMenu.inc.php:	$treeMenu->rootnode->leaf=$test_spec['leaf'];
lib/functions/treeMenu.inc.php:	$treeMenu->rootnode->text=$test_spec['text'];
lib/functions/treeMenu.inc.php:	$treeMenu->rootnode->position=$test_spec['position'];	    
lib/functions/treeMenu.inc.php:	$treeMenu->rootnode->href=$test_spec['href'];
lib/functions/treeMenu.inc.php:		// :null happens on -> "children":null,"text" that must become "children":[],"text"
lib/functions/treeMenu.inc.php:	$treeMenu->menustring = $menustring;
lib/functions/treeMenu.inc.php: * @param boolean $bHideTCs 1 -> hide testcase
lib/functions/treeMenu.inc.php: *	20100611 - franciscom - removed useless $getArguments
lib/functions/treeMenu.inc.php: *	20071229 - franciscom -added $useCounters,$useColors
lib/functions/treeMenu.inc.php:	    // 20080615 - franciscom - need to work always original object
lib/functions/treeMenu.inc.php:	$tree_manager = &$tproject_mgr->tree_manager;
lib/functions/treeMenu.inc.php:	$tcase_node_type = $tree_manager->node_descr_id['testcase'];
lib/functions/treeMenu.inc.php:	$hash_descr_id = $tree_manager->get_available_node_types();
lib/functions/treeMenu.inc.php:	$test_spec = $tproject_mgr->get_subtree($tproject_id,RECURSIVE_MODE);
lib/functions/treeMenu.inc.php:			$tck_map = $tproject_mgr->get_keywords_tcases($tproject_id,
lib/functions/treeMenu.inc.php:			                                              $keywordsFilter->items,$keywordsFilter->type);
lib/functions/treeMenu.inc.php:		// 20100412 - franciscon
lib/functions/treeMenu.inc.php:	$tree_manager = $tplan_mgr->tree_manager;
lib/functions/treeMenu.inc.php:	$tcase_node_type = $tree_manager->node_descr_id['testcase'];
lib/functions/treeMenu.inc.php:	$hash_descr_id = $tree_manager->get_available_node_types();
lib/functions/treeMenu.inc.php:	$test_spec = $tproject_mgr->get_subtree($tproject_id,RECURSIVE_MODE);
lib/functions/treeMenu.inc.php:	$linkedFilters = array('keyword_id' => $keywordsFilter->items);
lib/functions/treeMenu.inc.php:	$tplan_tcases = $tplan_mgr->get_linked_tcversions($tplan_id,$linkedFilters);
lib/functions/treeMenu.inc.php:			$tck_map = $tproject_mgr->get_keywords_tcases($tproject_id,
lib/functions/treeMenu.inc.php:				$keywordsFilter->items,$keywordsFilter->type);
lib/functions/treeMenu.inc.php: *	20080629 - franciscom - fixed bug missing argument for call to ST
lib/functions/treeMenu.inc.php:		$testcaseColouring=$useColors->testcases;
lib/functions/treeMenu.inc.php:		$countersColouring=$useColors->counters;
lib/functions/treeMenu.inc.php:	// custom Property that will be accessed by EXT-JS using node.attributes
lib/functions/treeMenu.inc.php:			//echo "DEBUG - Test Case rendering: \$node['id']:{$node['id']}<br>";
lib/functions/treeMenu.inc.php: * 20100702 - did some changes to logic in here and added a fix for array indexes
lib/functions/treeMenu.inc.php:	// not simple one-dimensional array of testcases like in tplan class.
lib/functions/treeMenu.inc.php:				$result = $db->exec_query($sql);
lib/functions/treeMenu.inc.php:				$row = $db->fetch_array($result);
lib/functions/treeMenu.inc.php:				// removing this if would cause OR search --> the first found value counts
lib/functions/treeMenu.inc.php:	// 20100702 - asimon
lib/functions/treeMenu.inc.php:	// in these arrays without missing numbers in between - crashes JS tree!
lib/functions/treeMenu.inc.php:	// -> so I have to fix the array indexes here starting from 0 without missing a key 
lib/functions/treeMenu.inc.php:	$buildSet = $tplan_mgr->get_builds($tplan_id, testplan::ACTIVE_BUILDS);
lib/functions/treeMenu.inc.php:		$tcase_build_set = $tplan_mgr->get_status_for_any_build($tplan_id,
lib/functions/treeMenu.inc.php:		                                   array_keys($buildSet),$filters->{$status});  
lib/functions/treeMenu.inc.php:	$buildSet = $tplan_mgr->get_builds($tplan_id, testplan::ACTIVE_BUILDS);
lib/functions/treeMenu.inc.php:		$tcase_build_set = $tplan_mgr->get_same_status_for_build_set($tplan_id,
lib/functions/treeMenu.inc.php:		                                                             array_keys($buildSet),$filters->{$status});  
lib/functions/treeMenu.inc.php:	$buildSet = array($filters->$build_key => $tplan_mgr->get_build_by_id($tplan_id,$filters->$build_key));
lib/functions/treeMenu.inc.php:		$tcase_build_set = $tplan_mgr->get_status_for_any_build($tplan_id,
lib/functions/treeMenu.inc.php:		                                                array_keys($buildSet),$filters->$result_key);  
lib/functions/treeMenu.inc.php:	$in_status = implode("','", $filters->$result_key);
lib/functions/treeMenu.inc.php:		$result = $db->fetchArrayRowsIntoMap($sql,'status');
lib/functions/treeMenu.inc.php:	$buildSet = $tplan_mgr->get_builds($tplan_id);
lib/functions/treeMenu.inc.php:		$tcase_build_set = $tplan_mgr->get_not_run_for_any_build($tplan_id, array_keys($buildSet));  
lib/functions/treeMenu.inc.php:            $keywordsFilter->items = $keywordsId;
lib/functions/treeMenu.inc.php:            $keywordsFilter->type = isset($guiObj->keywordsFilterTypes) ? $guiObj->keywordsFilterTypes->selected: 'OR';
lib/functions/treeMenu.inc.php:            $itemsFilter->items = $execTypeSet;
lib/functions/treeMenu.inc.php:            $itemsFilter->items = $importance;
lib/functions/treeMenu.inc.php:	$tree_manager = &$testproject_mgr->tree_manager;
lib/functions/treeMenu.inc.php:	$glue_char = config_get('testcase_cfg')->glue_character;
lib/functions/treeMenu.inc.php:	$tcase_prefix=$testproject_mgr->getTestCasePrefix($testproject_id) . $glue_char;
lib/functions/treeMenu.inc.php:	$req_node_type = $tree_manager->node_descr_id['testcase'];
lib/functions/treeMenu.inc.php:	$req_spec_node_type = $tree_manager->node_descr_id['testsuite'];
lib/functions/treeMenu.inc.php:	$map_nodetype_id = $tree_manager->get_available_node_types();
lib/functions/treeMenu.inc.php:	$req_spec = $tree_manager->get_subtree($testproject_id, $my['filters'], $my['options']);
lib/functions/treeMenu.inc.php:	$treeMenu->rootnode = new stdClass();
lib/functions/treeMenu.inc.php:	$treeMenu->rootnode->name = $req_spec['name'];
lib/functions/treeMenu.inc.php:	$treeMenu->rootnode->id = $req_spec['id'];
lib/functions/treeMenu.inc.php:	$treeMenu->rootnode->leaf = isset($req_spec['leaf']) ? $req_spec['leaf'] : false;
lib/functions/treeMenu.inc.php:	$treeMenu->rootnode->text = $req_spec['name'];
lib/functions/treeMenu.inc.php:	$treeMenu->rootnode->position = $req_spec['position'];	    
lib/functions/treeMenu.inc.php:	$treeMenu->rootnode->href = $req_spec['href'];
lib/functions/treeMenu.inc.php:	$treeMenu->menustring = $menustring; 
lib/functions/treeMenu.inc.php:		$tc_prefix = $testproject_mgr->getTestCasePrefix($testproject_id);
lib/functions/treeMenu.inc.php:		$tc_prefix .= $tc_cfg->glue_character;
lib/functions/treeMenu.inc.php:		$tc_ext_id = $db->prepare_int(str_replace($tc_prefix, '', $filters['filter_tc_id']));
lib/functions/treeMenu.inc.php:		$doc_id = $db->prepare_string($filters['filter_doc_id']);
lib/functions/treeMenu.inc.php:		$title = $db->prepare_string($filters['filter_title']);
lib/functions/treeMenu.inc.php:		$coverage = $db->prepare_int($filters['filter_coverage']);
lib/functions/treeMenu.inc.php:			$statuses[$key] = "'" . $db->prepare_string($status) . "'";
lib/functions/treeMenu.inc.php:			$types[$key] = $db->prepare_string($type);
lib/functions/treeMenu.inc.php:			$spec_types[$key] = $db->prepare_string($type);
lib/functions/treeMenu.inc.php:			$relation_type = $db->prepare_int($relation_info[0]);
lib/functions/treeMenu.inc.php:	$filtered_map = $db->fetchRowsIntoMap($sql, 'id');
lib/functions/treeMenu.inc.php:		if($req_cfg->child_requirements_mgmt)
lib/functions/ldap_api.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/ldap_api.php: * 		Mantis - a php based bugtracking system (GPL)
lib/functions/ldap_api.php: * 		Copyright (C) 2000 - 2002  Kenzaburo Ito - kenito@300baud.org
lib/functions/ldap_api.php: * 		Copyright (C) 2002 - 2004  Mantis Team   - mantisbt-dev@lists.sourceforge.net
lib/functions/ldap_api.php: *  20091018 - franciscom - BUGID - contribution to use TLS as secure method
lib/functions/ldap_api.php: * 	20080807 - havlatm - config update, refactorization
lib/functions/ldap_api.php:    	$ret->status 	= 0;
lib/functions/ldap_api.php:		$ret->handler 	= null;
lib/functions/ldap_api.php:			$ret->handler=$t_ds;
lib/functions/ldap_api.php:        		$ret->status = ERROR_LDAP_BIND_FAILED;
lib/functions/ldap_api.php:			$ret->status=ERROR_LDAP_SERVER_CONNECT_FAILED;
lib/functions/ldap_api.php:// ----------------------------------------------------------------------------
lib/functions/ldap_api.php:   		$t_authenticated->status_ok = TRUE;
lib/functions/ldap_api.php:       	$t_authenticated->status_code = null;
lib/functions/ldap_api.php:    	if( !is_null($t_connect->handler) )
lib/functions/ldap_api.php:        	$t_ds = $t_connect->handler;
lib/functions/ldap_api.php:    		$t_authenticated->status_ok = false;
lib/functions/ldap_api.php:        	$t_authenticated->status_code = ERROR_LDAP_AUTH_FAILED;
lib/functions/ldap_api.php:    					$t_authenticated->status_ok = true;
lib/functions/ldap_api.php:       		$t_authenticated->status_ok = false;
lib/functions/ldap_api.php:       		$t_authenticated->status_code = $t_connect->status;
lib/functions/cfield_mgr.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/cfield_mgr.class.php: * @copyright 	2005-2009, TestLink community
lib/functions/cfield_mgr.class.php: * 20100829 - franciscom - BUGID 3707,3708 usability issue + browser different behaviour
lib/functions/cfield_mgr.class.php: * 20100825 - eloff - BUGID 3713 - add platform_name to output of get_linked_cfields_at_execution()
lib/functions/cfield_mgr.class.php: * 20100726 - amitkhullar - BUGID 3555 - sort order while displaying custom fields.
lib/functions/cfield_mgr.class.php: * 20100701 - asimon - BUGID 3414: removed a single space character in string_custom_field_input() 
lib/functions/cfield_mgr.class.php: * 20100218 - franciscom - string_custom_field_input() changes on checkbox management
lib/functions/cfield_mgr.class.php: * 20100204 - franciscom - getByLinkID() - new method
lib/functions/cfield_mgr.class.php: * 20090823 - franciscom - added logic to remove 255 size limit
lib/functions/cfield_mgr.class.php: * 20090718 - franciscom - buildLocationMap()
lib/functions/cfield_mgr.class.php: * 20090717 - franciscom - get_linked_cfields_at_design() - added filter by location
lib/functions/cfield_mgr.class.php: *                         get_linked_cfields_at_execution() - location argument
lib/functions/cfield_mgr.class.php: * 20090607 - franciscom - refactoring to manage table prefix
lib/functions/cfield_mgr.class.php: * 20090530 - franciscom - execution_values_to_db() added logic to manage insert or update.
lib/functions/cfield_mgr.class.php: * 20090523 - franciscom - changes on show_on, enable_on logics
lib/functions/cfield_mgr.class.php: * 20090426 - franciscom - new method getSizeLimit()
lib/functions/cfield_mgr.class.php: * 20090420 - amitkhullar- BUGID-2410 - get_linked_cfields_at_testplan_design() - added logic to get data
lib/functions/cfield_mgr.class.php: * 20090420 - franciscom - BUGID 2158 - get_linked_cfields_at_design() added filter on custom field id 
lib/functions/cfield_mgr.class.php: * 20090408 - franciscom - BUGID 2352 - added new method remove_all_scopes_values();
lib/functions/cfield_mgr.class.php: * 20090321 - franciscom - fixed bug due to missing code on get_linked_cfields_at_design()
lib/functions/cfield_mgr.class.php: * 20090321 - franciscom - exportValueAsXML()
lib/functions/cfield_mgr.class.php: * 20090303 - franciscom - get_linked_cfields_at_execution() - fixed bugs on query
lib/functions/cfield_mgr.class.php: * 20090223 - franciscom - get_linked_cfields_at_execution() - added logic
lib/functions/cfield_mgr.class.php: *                         Amit Khullar - amkhullar@gmail.com
lib/functions/cfield_mgr.class.php: * 20080817 - franciscom - added logic give default logic to manage 
lib/functions/cfield_mgr.class.php: * 20080816 - franciscom - new feature: user defined Custom Fields.
lib/functions/cfield_mgr.class.php: * 20080810 - franciscom - documentation improvements
lib/functions/cfield_mgr.class.php: *                         get_linked_cfields_at_design() - interface changes
lib/functions/cfield_mgr.class.php: * 20080304 - franciscom - prepare_string() before insert
lib/functions/cfield_mgr.class.php: * 20080216 - franciscom - added testproject name to logAudit recorded information
lib/functions/cfield_mgr.class.php: * 20071102 - franciscom - BUGID - Feature
lib/functions/cfield_mgr.class.php: * 20071027 - franciscom - using Mantis (a php based bugtracking system)
lib/functions/cfield_mgr.class.php: * 20070617 - franciscom - BUGID     insert_id() problems for Postgres and Oracle?
lib/functions/cfield_mgr.class.php: * 20070501 - franciscom - limiting length of values while writting to db.
lib/functions/cfield_mgr.class.php: * 20070429 - franciscom - added text area custom field
lib/functions/cfield_mgr.class.php: * 20070227 - franciscom - BUGID 677
lib/functions/cfield_mgr.class.php: * 20070110 - franciscom - solved bug set_active()
lib/functions/cfield_mgr.class.php: * 20070105 - franciscom -
lib/functions/cfield_mgr.class.php: * 2. refactoring - design_values_to_db()
lib/functions/cfield_mgr.class.php:    /** for text area custom field  40 x 6 -> 240 chars <= 255 chars table field size */
lib/functions/cfield_mgr.class.php:    // 20080809 - franciscom
lib/functions/cfield_mgr.class.php:     * <code>$this->custom_field_types</code>
lib/functions/cfield_mgr.class.php:     *      current options: 1 -> standard location, i.e. work as done before this implementation.
lib/functions/cfield_mgr.class.php:     *                       2 -> before steps and results, => between summary and steps/results.
lib/functions/cfield_mgr.class.php:    // 20090523 - changes in configuration
lib/functions/cfield_mgr.class.php:    // 0 -> no limit
lib/functions/cfield_mgr.class.php:    // 0 -> no limit
lib/functions/cfield_mgr.class.php:		$this->db = &$db;
lib/functions/cfield_mgr.class.php:		$this->tree_manager = new tree($this->db);
lib/functions/cfield_mgr.class.php:		$this->sizes = $cfConfig->sizes;
lib/functions/cfield_mgr.class.php:		    !is_null($cfConfig->types) )
lib/functions/cfield_mgr.class.php:		    $this->custom_field_types +=$cfConfig->types;
lib/functions/cfield_mgr.class.php:		    ksort($this->custom_field_types);
lib/functions/cfield_mgr.class.php:		    !is_null($cfConfig->possible_values_cfg) )
lib/functions/cfield_mgr.class.php:		    $this->possible_values_cfg +=$cfConfig->possible_values_cfg;
lib/functions/cfield_mgr.class.php:        $this->object_table=$this->tables["custom_fields"];
lib/functions/cfield_mgr.class.php:        $this->max_length_value = $cfConfig->max_length;
lib/functions/cfield_mgr.class.php:        $this->max_length_possible_values = $this->max_length_value;
lib/functions/cfield_mgr.class.php:        return $this->max_length_value;    
lib/functions/cfield_mgr.class.php:        return($this->application_areas);
lib/functions/cfield_mgr.class.php:        return($this->locations);
lib/functions/cfield_mgr.class.php:		return($this->custom_field_types);
lib/functions/cfield_mgr.class.php:		return($this->name_prefix);
lib/functions/cfield_mgr.class.php:		$tl_node_types=$this->tree_manager->get_available_node_types();
lib/functions/cfield_mgr.class.php:		foreach($this->node_types as $verbose_type )
lib/functions/cfield_mgr.class.php:	 *       value: 1 -> enable on exec can be configured by user
lib/functions/cfield_mgr.class.php:		$mgmt_cfg=$this->_get_ui_mgtm_cfg_for_node_type($this->enable_on_cfg[$ui_mode]);
lib/functions/cfield_mgr.class.php:		$mgmt_cfg=$this->_get_ui_mgtm_cfg_for_node_type($this->show_on_cfg[$ui_mode]);
lib/functions/cfield_mgr.class.php:             value: 1 -> enable on exec can be configured by user
lib/functions/cfield_mgr.class.php:    $tl_node_types=$this->tree_manager->get_available_node_types();
lib/functions/cfield_mgr.class.php:    foreach($this->node_types as $verbose_type)
lib/functions/cfield_mgr.class.php:             value: 1 -> possible values can be managed on UI.
lib/functions/cfield_mgr.class.php:    $custom_field_types_id=array_flip($this->custom_field_types);
lib/functions/cfield_mgr.class.php:    foreach($this->possible_values_cfg as $verbose_cf_type => $use_on_ui)
lib/functions/cfield_mgr.class.php:    $enabled    : 1 -> get custom fields that are has been configured
lib/functions/cfield_mgr.class.php:               [show_on_execution]: 1 -> filter on field show_on_execution=1
lib/functions/cfield_mgr.class.php:                                     0 or null or not exists -> don't filter
lib/functions/cfield_mgr.class.php:               [show_on_testplan_design]: 1 -> filter on field show_on_execution=1
lib/functions/cfield_mgr.class.php:                                           0 or null or not exists -> don't filter
lib/functions/cfield_mgr.class.php:                              null or not exists -> don't filter
lib/functions/cfield_mgr.class.php:			                 implement pre-requisites.
lib/functions/cfield_mgr.class.php:		  20090420 - franciscom
lib/functions/cfield_mgr.class.php:          20080811 - franciscom
lib/functions/cfield_mgr.class.php:          interface changes $show_on_execution -> $filters
lib/functions/cfield_mgr.class.php:          20070526 - franciscom
lib/functions/cfield_mgr.class.php:          20070101 - franciscom
lib/functions/cfield_mgr.class.php:        $hash_descr_id = $this->tree_manager->get_available_node_types();
lib/functions/cfield_mgr.class.php:        $additional_join  .= " JOIN {$this->tables['cfield_node_types']} CFNT ON CFNT.field_id=CF.id " .
lib/functions/cfield_mgr.class.php:      $additional_join .= " LEFT OUTER JOIN {$this->tables['cfield_design_values']} CFDV ON CFDV.field_id=CF.id " .
lib/functions/cfield_mgr.class.php:    // 20080811 - franciscom - refactoring for BUGID 1650 (REQ)
lib/functions/cfield_mgr.class.php:        // 20090523 - franciscom
lib/functions/cfield_mgr.class.php:        // 20090717 - franciscom
lib/functions/cfield_mgr.class.php:         " FROM {$this->object_table} CF " .
lib/functions/cfield_mgr.class.php:         " JOIN {$this->tables['cfield_testprojects']} CFTP ON CFTP.field_id=CF.id " .
lib/functions/cfield_mgr.class.php:    $map = $this->db->fetchRowsIntoMap($sql,$access_key);
lib/functions/cfield_mgr.class.php:    file:custom_field_api.php - function:print_custom_field_input()
lib/functions/cfield_mgr.class.php:         20080816 - franciscom
lib/functions/cfield_mgr.class.php:         20071006 - francisco.mancardi@gruppotesi.com
lib/functions/cfield_mgr.class.php:         20070104 - franciscom - added 'multiselection list'
lib/functions/cfield_mgr.class.php:    	$verbose_type=trim($this->custom_field_types[$t_type]);
lib/functions/cfield_mgr.class.php:    	$input_name="{$this->name_prefix}{$t_type}_{$t_id}{$name_suffix}";
lib/functions/cfield_mgr.class.php:    	$size = isset($this->sizes[$verbose_type]) ? intval($this->sizes[$verbose_type]) : 0;
lib/functions/cfield_mgr.class.php:        	   // 20100701 - asimon - removed single space in next line, 
lib/functions/cfield_mgr.class.php:				// 20100218 - franciscom - added check $t_option != '' to make check box start NOT CHECKED
lib/functions/cfield_mgr.class.php:			$str_out .= $this->string_input_string($p_field_def,$input_name,$t_custom_field_value,$size);
lib/functions/cfield_mgr.class.php:			$cols = intval($this->sizes['text area']['cols']);
lib/functions/cfield_mgr.class.php:			$rows = intval($this->sizes['text area']['rows']);
lib/functions/cfield_mgr.class.php:			if( $this->max_length_value > 0 )
lib/functions/cfield_mgr.class.php:				$cf_current_size = $this->max_length_value - tlStringLen($t_custom_field_value);
lib/functions/cfield_mgr.class.php:				               ',document.getElementById(\''. $counterId.'\'),' . $this->max_length_value .');" ';
lib/functions/cfield_mgr.class.php:			    $str_out .= '<br><span style="vertical-align: top; padding: 5px;">' .
lib/functions/cfield_mgr.class.php:				    	    sprintf(lang_get('text_counter_feedback'), $this->max_length_value) .
lib/functions/cfield_mgr.class.php:      $datetime_format=config_get('date_format') . " " .$cfg->custom_fields->time_format;
lib/functions/cfield_mgr.class.php:                                           $t_custom_field_value, false, true,date( "Y" )-1) ;
lib/functions/cfield_mgr.class.php:          $str_out .= $this->$dynamic_call($p_field_def, $input_name, $t_custom_field_value);
lib/functions/cfield_mgr.class.php:     		  $str_out .= $this->string_input_string($p_field_def,$input_name,$t_custom_field_value,$size);
lib/functions/cfield_mgr.class.php:                      Example custom_field_0_67 -> 0=> string field
lib/functions/cfield_mgr.class.php:          [$cf_map]:  hash -> all the custom fields linked and enabled
lib/functions/cfield_mgr.class.php:         20070525 - franciscom - added [hash_type], to reuse this method on
lib/functions/cfield_mgr.class.php:         20070501 - franciscom - limiting lenght of value before writting
lib/functions/cfield_mgr.class.php:         20070105 - franciscom - added $cf_map
lib/functions/cfield_mgr.class.php:         20070104 - franciscom - need to manage multiselection in a different way
lib/functions/cfield_mgr.class.php:	$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/cfield_mgr.class.php:      $cfield=$this->_build_cfield($hash,$cf_map);
lib/functions/cfield_mgr.class.php:        $sql = "/* $debugMsg */ SELECT value FROM {$this->tables['cfield_design_values']} " .
lib/functions/cfield_mgr.class.php:        $result = $this->db->exec_query($sql);
lib/functions/cfield_mgr.class.php:        if( $this->max_length_value > 0 && tlStringLen($value) > $this->max_length_value)
lib/functions/cfield_mgr.class.php:           $value = substr($value,0,$this->max_length_value);
lib/functions/cfield_mgr.class.php:        $safe_value=$this->db->prepare_string($value);
lib/functions/cfield_mgr.class.php:        if($this->db->num_rows( $result ) > 0 )
lib/functions/cfield_mgr.class.php:          $sql = "/* $debugMsg */ UPDATE {$this->tables['cfield_design_values']} " .
lib/functions/cfield_mgr.class.php:  		    $sql = "/* $debugMsg */ INSERT INTO {$this->tables['cfield_design_values']} " .
lib/functions/cfield_mgr.class.php:        $this->db->exec_query($sql);
lib/functions/cfield_mgr.class.php:    returns: -
lib/functions/cfield_mgr.class.php:          20070102 - franciscom - $node_id can be an array
lib/functions/cfield_mgr.class.php:    $sql="DELETE FROM {$this->tables['cfield_design_values']} ";
lib/functions/cfield_mgr.class.php:    $this->db->exec_query($sql);
lib/functions/cfield_mgr.class.php:         " FROM {$this->object_table} CF, " .
lib/functions/cfield_mgr.class.php:         "     {$this->tables['cfield_node_types']} CFNT, " .
lib/functions/cfield_mgr.class.php:         "     {$this->tables['node_types']} NT " .
lib/functions/cfield_mgr.class.php:    // $map = $this->db->fetchArrayRowsIntoMap($sql,'id');
lib/functions/cfield_mgr.class.php:    $map = $this->db->fetchRowsIntoMap($sql,'id');
lib/functions/cfield_mgr.class.php:		20090717 - franciscom - added location to result recordset
lib/functions/cfield_mgr.class.php:         " FROM {$this->object_table} CF, " .
lib/functions/cfield_mgr.class.php:         "      {$this->tables['cfield_testprojects']} CFTP, " .
lib/functions/cfield_mgr.class.php:         "      {$this->tables['cfield_node_types']} CFNT, " .
lib/functions/cfield_mgr.class.php:         "      {$this->tables['node_types']} NT " .
lib/functions/cfield_mgr.class.php:    $map = $this->db->fetchRowsIntoMap($sql,'id');
lib/functions/cfield_mgr.class.php:    returns: -
lib/functions/cfield_mgr.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/cfield_mgr.class.php:    	$tproject_info = $this->tree_manager->get_node_hierarchy_info($tproject_id);
lib/functions/cfield_mgr.class.php:			$sql = "/* $debugMsg */ INSERT INTO {$this->tables['cfield_testprojects']} " .
lib/functions/cfield_mgr.class.php:			if ($this->db->exec_query($sql))
lib/functions/cfield_mgr.class.php:				$cf = $this->get_by_id($field_id);
lib/functions/cfield_mgr.class.php:    returns: -
lib/functions/cfield_mgr.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/cfield_mgr.class.php:    	$tproject_info = $this->tree_manager->get_node_hierarchy_info($tproject_id);
lib/functions/cfield_mgr.class.php:			$sql = "/* $debugMsg */ UPDATE {$this->tables['cfield_testprojects']} " .
lib/functions/cfield_mgr.class.php:			if ($this->db->exec_query($sql))
lib/functions/cfield_mgr.class.php:				$cf = $this->get_by_id($field_id);
lib/functions/cfield_mgr.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/cfield_mgr.class.php:		$tproject_info = $this->tree_manager->get_node_hierarchy_info($tproject_id);
lib/functions/cfield_mgr.class.php:			$sql = "/* $debugMsg */ DELETE FROM {$this->tables['cfield_testprojects']} " .
lib/functions/cfield_mgr.class.php:			if ($this->db->exec_query($sql))
lib/functions/cfield_mgr.class.php:				$cf = $this->get_by_id($field_id);
lib/functions/cfield_mgr.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/cfield_mgr.class.php:	  	$my_name=$this->db->prepare_string(trim($name));
lib/functions/cfield_mgr.class.php:	  	     " FROM {$this->tables['custom_fields']} CF, {$this->tables['cfield_node_types']} CFNT," .
lib/functions/cfield_mgr.class.php:	  	     " {$this->tables['node_types']} NT" .
lib/functions/cfield_mgr.class.php:    	return($this->db->fetchRowsIntoMap($sql,'id'));
lib/functions/cfield_mgr.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/cfield_mgr.class.php:	  	     " FROM {$this->tables['custom_fields']}  CF, {$this->tables['cfield_node_types']} CFNT" .
lib/functions/cfield_mgr.class.php:    	return($this->db->fetchRowsIntoMap($sql,'id'));
lib/functions/cfield_mgr.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/cfield_mgr.class.php:	  	     " FROM {$this->tables['cfield_node_types']} CFNT, " .
lib/functions/cfield_mgr.class.php:	  	     "      {$this->tables['nodes_types']} NT " .
lib/functions/cfield_mgr.class.php:    	return($this->db->fetchRowsIntoMap($sql,'field_id'));
lib/functions/cfield_mgr.class.php:    returns: -
lib/functions/cfield_mgr.class.php:    rev: 20080810 - franciscom - BUGID 1650
lib/functions/cfield_mgr.class.php:    $my_name=$this->db->prepare_string($cf['name']);
lib/functions/cfield_mgr.class.php:    $my_label=$this->db->prepare_string($cf['label']);
lib/functions/cfield_mgr.class.php:    $my_pvalues=$this->db->prepare_string($cf['possible_values']);
lib/functions/cfield_mgr.class.php:    $sql="INSERT INTO {$this->object_table} " .
lib/functions/cfield_mgr.class.php:    $result=$this->db->exec_query($sql);
lib/functions/cfield_mgr.class.php:  	  $field_id=$this->db->insert_id($this->object_table);
lib/functions/cfield_mgr.class.php:      $sql="INSERT INTO {$this->tables['cfield_node_types']} " .
lib/functions/cfield_mgr.class.php:      $result=$this->db->exec_query($sql);
lib/functions/cfield_mgr.class.php:    returns: -
lib/functions/cfield_mgr.class.php:		$my_name = $this->db->prepare_string($cf['name']);
lib/functions/cfield_mgr.class.php:		$my_label = $this->db->prepare_string($cf['label']);
lib/functions/cfield_mgr.class.php:		$my_pvalues = $this->db->prepare_string($cf['possible_values']);
lib/functions/cfield_mgr.class.php:		$sql ="UPDATE {$this->tables['custom_fields']}  " .
lib/functions/cfield_mgr.class.php:		$result = $this->db->exec_query($sql);
lib/functions/cfield_mgr.class.php:			$sql = "UPDATE {$this->tables['cfield_node_types']} " .
lib/functions/cfield_mgr.class.php:			$result = $this->db->exec_query($sql);
lib/functions/cfield_mgr.class.php:        if( $this->is_used($id) )
lib/functions/cfield_mgr.class.php:            $this->remove_all_scopes_values($id);
lib/functions/cfield_mgr.class.php:		$linked_tprojects = $this->get_linked_testprojects($id);
lib/functions/cfield_mgr.class.php:                $this->unlink_from_testproject($tproject_id,(array)$id);
lib/functions/cfield_mgr.class.php:		$sql="DELETE FROM {$this->tables['cfield_node_types']} WHERE field_id={$id}";
lib/functions/cfield_mgr.class.php:		$result=$this->db->exec_query($sql);
lib/functions/cfield_mgr.class.php:			$sql="DELETE FROM {$this->tables['custom_fields']} WHERE id={$id}";
lib/functions/cfield_mgr.class.php:			$result=$this->db->exec_query($sql);
lib/functions/cfield_mgr.class.php:    rev: 20080810 - franciscom - BUGID 1650
lib/functions/cfield_mgr.class.php:	  $sql="SELECT field_id FROM {$this->tables['cfield_design_values']} " .
lib/functions/cfield_mgr.class.php:	       "SELECT field_id FROM {$this->tables['cfield_testplan_design_values']} " .
lib/functions/cfield_mgr.class.php:	       "SELECT field_id FROM {$this->tables['cfield_execution_values']} " .
lib/functions/cfield_mgr.class.php:	  $result=$this->db->exec_query($sql);
lib/functions/cfield_mgr.class.php:	  return($this->db->num_rows( $result ) > 0 ? 1 : 0);
lib/functions/cfield_mgr.class.php:	       " FROM {$this->tables['cfield_design_values']} CFDV, ".
lib/functions/cfield_mgr.class.php:	       "      {$this->tables['cfield_node_types']} CFNT, " .
lib/functions/cfield_mgr.class.php:	       "      {$this->tables['nodes_hierarchy']} NH " .
lib/functions/cfield_mgr.class.php:    $cf=$this->get_by_name($name);
lib/functions/cfield_mgr.class.php:  # --------------------
lib/functions/cfield_mgr.class.php:		switch ($this->custom_field_types[$p_field_def['type']])
lib/functions/cfield_mgr.class.php:                    $datetime_format=$t_date_format . " " .$cfg->custom_fields->time_format;
lib/functions/cfield_mgr.class.php:			  // 20071027 - franciscom
lib/functions/cfield_mgr.class.php:    $enabled    : 1 -> get custom fields that are has been configured
lib/functions/cfield_mgr.class.php:        20100825 - eloff - added platform name to output
lib/functions/cfield_mgr.class.php:        20090717 - franciscom - added location argument
lib/functions/cfield_mgr.class.php:        20070526 - franciscom - changed order by clause
lib/functions/cfield_mgr.class.php:   		$hash_descr_id = $this->tree_manager->get_available_node_types();
lib/functions/cfield_mgr.class.php:        $additional_join  .= " JOIN {$this->tables['cfield_node_types']} CFNT ON CFNT.field_id=CF.id " .
lib/functions/cfield_mgr.class.php:        $additional_join .= " LEFT OUTER JOIN {$this->tables['cfield_execution_values']} CFEV ON CFEV.field_id=CF.id " .
lib/functions/cfield_mgr.class.php:        // This piece is useful for report implementation done by: Amit Khullar - amkhullar@gmail.com
lib/functions/cfield_mgr.class.php:            $additional_join .= " JOIN {$this->tables['cfield_execution_values']} CFEV ON CFEV.field_id=CF.id " .
lib/functions/cfield_mgr.class.php:                                " JOIN {$this->tables['executions']} EXEC ON CFEV.tcversion_id = EXEC.tcversion_id " .
lib/functions/cfield_mgr.class.php:            $additional_join .= " JOIN {$this->tables['builds']} B ON B.id = EXEC.build_id " .
lib/functions/cfield_mgr.class.php:            $additional_join .= " JOIN {$this->tables['tcversions']} TCV ON TCV.version = EXEC.tcversion_number " .
lib/functions/cfield_mgr.class.php:            $additional_join .= " JOIN {$this->tables['users']} U ON  U.id = EXEC.tester_id " .
lib/functions/cfield_mgr.class.php:                                " JOIN {$this->tables['nodes_hierarchy']} NHA ON NHA.id = EXEC.tcversion_id " .
lib/functions/cfield_mgr.class.php:                                " JOIN {$this->tables['nodes_hierarchy']} NHB ON NHB.id = NHA.parent_id  " ;
lib/functions/cfield_mgr.class.php:            $additional_join .= " LEFT JOIN {$this->tables['platforms']} PLAT ON EXEC.platform_id = PLAT.id";
lib/functions/cfield_mgr.class.php:           " FROM {$this->tables['custom_fields']} CF " .
lib/functions/cfield_mgr.class.php:           " JOIN {$this->tables['cfield_testprojects']} CFTP ON CFTP.field_id=CF.id " .
lib/functions/cfield_mgr.class.php:    $map = $this->db->$fetchMethod($sql,$access_key);
lib/functions/cfield_mgr.class.php:                      Example custom_field_0_67 -> 0=> string field
lib/functions/cfield_mgr.class.php:          [$cf_map]:  hash -> all the custom fields linked and enabled
lib/functions/cfield_mgr.class.php:        20090727 - franciscom - added [hash_type], to reuse this method on API
lib/functions/cfield_mgr.class.php:        20070501 - franciscom - limiting lenght of value before writting
lib/functions/cfield_mgr.class.php:      $cfield=$this->_build_cfield($hash,$cf_map);
lib/functions/cfield_mgr.class.php:               " FROM {$this->tables['cfield_execution_values']} " . $where_clause;
lib/functions/cfield_mgr.class.php:        $rs = $this->db->get_recordset($sql); 			   
lib/functions/cfield_mgr.class.php:        // file_put_contents('c:\sql-dd.txt',serialize($rs));
lib/functions/cfield_mgr.class.php:        if( $this->max_length_value > 0 && tlStringLen($value) > $this->max_length_value)
lib/functions/cfield_mgr.class.php:           $value = substr($value,0,$this->max_length_value);
lib/functions/cfield_mgr.class.php:        $safe_value=$this->db->prepare_string($value);
lib/functions/cfield_mgr.class.php:        // file_put_contents('c:\sql-count.txt',$this->db->num_rows( $result ));
lib/functions/cfield_mgr.class.php:        if( count($rs) > 0 )   //$this->db->num_rows($result) > 0 )
lib/functions/cfield_mgr.class.php:          $sql = "UPDATE {$this->tables['cfield_execution_values']} " .
lib/functions/cfield_mgr.class.php:  		  $sql = "INSERT INTO {$this->tables['cfield_execution_values']} " .
lib/functions/cfield_mgr.class.php:        $this->db->exec_query($sql);
lib/functions/cfield_mgr.class.php:              - design_values_to_db()
lib/functions/cfield_mgr.class.php:              - execution_values_to_db()
lib/functions/cfield_mgr.class.php:              - testplan_design_values_to_db()
lib/functions/cfield_mgr.class.php:                Example custom_field_0_67 -> 0=> string field
lib/functions/cfield_mgr.class.php:                To understand [<_date_part>] read below on "Notes on DATE PART - _build_cfield"
lib/functions/cfield_mgr.class.php:    rev: 20080816 - franciscom
lib/functions/cfield_mgr.class.php:         - added code to manange user defined (and code developed) Custom Fields.
lib/functions/cfield_mgr.class.php:         - added logic to manage datetime custom field type.  
lib/functions/cfield_mgr.class.php:    $cf_prefix=$this->name_prefix;
lib/functions/cfield_mgr.class.php:    // -------------------------------------------------------------------------
lib/functions/cfield_mgr.class.php:    // -------------------------------------------------------------------------
lib/functions/cfield_mgr.class.php:    // -------------------------------------------------------------------------
lib/functions/cfield_mgr.class.php:          // Notes on DATE PART - _build_cfield
lib/functions/cfield_mgr.class.php:          $last_idx=count($dummy)-1;
lib/functions/cfield_mgr.class.php:        $verbose_type=trim($this->custom_field_types[$type_and_value['type_id']]);
lib/functions/cfield_mgr.class.php:              $cfield[$field_id]['cf_value']=strtotime($value['year'] . "-" .
lib/functions/cfield_mgr.class.php:                                                       $value['month'] . "-" . $value['day']);
lib/functions/cfield_mgr.class.php:              // thalesjacobi at thalesjacobi dot net (06-Nov-2007 09:50)
lib/functions/cfield_mgr.class.php:              // strftime("%Y-%m-%d",strtotime("05/11/2007"));
lib/functions/cfield_mgr.class.php:              // strftime("%Y-%m-%d",mktime(0,0,0,$date[1],$date[0],$date[2]));
lib/functions/cfield_mgr.class.php:                $cfield[$field_id]['cf_value']=$this->$dynamic_call($value);      
lib/functions/cfield_mgr.class.php: 	$tproject_info = $this->tree_manager->get_node_hierarchy_info($tproject_id);
lib/functions/cfield_mgr.class.php:		$sql = "UPDATE {$this->tables['cfield_testprojects']}  " .
lib/functions/cfield_mgr.class.php:		$this->db->exec_query($sql);
lib/functions/cfield_mgr.class.php: 	$tproject_info = $this->tree_manager->get_node_hierarchy_info($tproject_id);
lib/functions/cfield_mgr.class.php:		$sql = "UPDATE {$this->tables['cfield_testprojects']}  " .
lib/functions/cfield_mgr.class.php:		$this->db->exec_query($sql);
lib/functions/cfield_mgr.class.php: # --------------------
lib/functions/cfield_mgr.class.php: # --------------------
lib/functions/cfield_mgr.class.php: *     20071102 - franciscom - refactoring
lib/functions/cfield_mgr.class.php: *     200710 - creation - Swanand
lib/functions/cfield_mgr.class.php:	$node_type=$this->tree_manager->get_available_node_types();
lib/functions/cfield_mgr.class.php:	$node_info=$this->tree_manager->get_node_hierarchy_info($node_id);
lib/functions/cfield_mgr.class.php:		$node_info=$this->tree_manager->get_node_hierarchy_info($node_id);
lib/functions/cfield_mgr.class.php:		$srv_cfg->host=$prefix . "server_host";
lib/functions/cfield_mgr.class.php:		$srv_cfg->port=$prefix . "server_port";
lib/functions/cfield_mgr.class.php:		$srv_cfg->path=$prefix . "server_path";
lib/functions/cfield_mgr.class.php:			"FROM {$this->tables['cfield_design_values']} cfdv," .
lib/functions/cfield_mgr.class.php:			" {$this->tables['custom_fields']}  cf " .
lib/functions/cfield_mgr.class.php:		$server_info = $this->db->fetchRowsIntoMap($sql,'name');
lib/functions/cfield_mgr.class.php:		if( (isset($server_info[$srv_cfg->host]) && $server_info[$srv_cfg->host] != "") &&
lib/functions/cfield_mgr.class.php:				(isset($server_info[$srv_cfg->port]) && $server_info[$srv_cfg->port] != "") )
lib/functions/cfield_mgr.class.php:			$ret['xml_server_host'] = $server_info[$srv_cfg->host];
lib/functions/cfield_mgr.class.php:			$ret['xml_server_port'] = $server_info[$srv_cfg->port];
lib/functions/cfield_mgr.class.php:		else if (isset($server_info[$srv_cfg->path]) && $server_info[$srv_cfg->path] != "")
lib/functions/cfield_mgr.class.php:			$ret['xml_server_path'] = $server_info[$srv_cfg->path];
lib/functions/cfield_mgr.class.php:				$ret=$this->getXMLServerParams($node_info['parent_id']);
lib/functions/cfield_mgr.class.php:                      Example custom_field_0_67 -> 0=> string field
lib/functions/cfield_mgr.class.php:          [$cf_map]:  hash -> all the custom fields linked and enabled
lib/functions/cfield_mgr.class.php:	$cfield = is_null($hash_type) ? $this->_build_cfield($hash,$cf_map) : $hash;
lib/functions/cfield_mgr.class.php:	  	// echo "DEBUG: \$field_id:$field_id - \$link_id:$link_id<br>";
lib/functions/cfield_mgr.class.php:	    $sql = "SELECT value FROM {$this->tables['cfield_testplan_design_values']} " .
lib/functions/cfield_mgr.class.php:	    $result = $this->db->exec_query($sql);
lib/functions/cfield_mgr.class.php:	    if( $this->max_length_value > 0 && tlStringLen($value) > $this->max_length_value)
lib/functions/cfield_mgr.class.php:	       $value = substr($value,0,$this->max_length_value);
lib/functions/cfield_mgr.class.php:	    $safe_value=$this->db->prepare_string($value);
lib/functions/cfield_mgr.class.php:	    if($this->db->num_rows( $result ) > 0 )
lib/functions/cfield_mgr.class.php:	      $sql = "UPDATE {$this->tables['cfield_testplan_design_values']} " .
lib/functions/cfield_mgr.class.php:		    $sql = "INSERT INTO {$this->tables['cfield_testplan_design_values']} " .
lib/functions/cfield_mgr.class.php:	    $this->db->exec_query($sql);
lib/functions/cfield_mgr.class.php:    $enabled    : 1 -> get custom fields that are has been configured
lib/functions/cfield_mgr.class.php:   		$hash_descr_id = $this->tree_manager->get_available_node_types();
lib/functions/cfield_mgr.class.php:        $additional_join  .= " JOIN {$this->tables['cfield_node_types']} CFNT ON CFNT.field_id=CF.id " .
lib/functions/cfield_mgr.class.php:    //-amitkhullar - Created this logic to get the linked tcversions for a testplan 
lib/functions/cfield_mgr.class.php:    //                 that have custom field values at test plan level - BUGID 2410
lib/functions/cfield_mgr.class.php:        $additional_join .= "JOIN {$this->tables['testplan_tcversions']} TPTC" .
lib/functions/cfield_mgr.class.php:        				  " JOIN {$this->tables['cfield_testplan_design_values']} CFTDV " .
lib/functions/cfield_mgr.class.php:        $additional_join .= " JOIN {$this->tables['tcversions']} TCV ON TCV.id = TPTC.tcversion_id " .
lib/functions/cfield_mgr.class.php:         					" JOIN {$this->tables['nodes_hierarchy']} NHA ON NHA.id = TPTC.tcversion_id " .
lib/functions/cfield_mgr.class.php:                            " JOIN {$this->tables['nodes_hierarchy']} NHB ON NHB.id = NHA.parent_id  " ;
lib/functions/cfield_mgr.class.php:        $additional_join .= " LEFT OUTER JOIN {$this->tables['cfield_testplan_design_values']} CFTDV " .
lib/functions/cfield_mgr.class.php:         " FROM {$this->tables['custom_fields']} CF " .
lib/functions/cfield_mgr.class.php:         " JOIN {$this->tables['cfield_testprojects']} CFTP ON CFTP.field_id=CF.id " .
lib/functions/cfield_mgr.class.php:         // 20090523 - franciscom 
lib/functions/cfield_mgr.class.php:    $map = $this->db->$fetchMethod($sql,$access_key);
lib/functions/cfield_mgr.class.php:    rev: 20080816 - franciscom
lib/functions/cfield_mgr.class.php:    rev: 20080816 - franciscom
lib/functions/cfield_mgr.class.php:    rev: 20080817 - franciscom
lib/functions/cfield_mgr.class.php:    $sql[]="DELETE FROM {$this->tables['cfield_design_values']} WHERE field_id={$id} ";
lib/functions/cfield_mgr.class.php:    $sql[]="DELETE FROM {$this->tables['cfield_execution_values']} WHERE field_id={$id} ";
lib/functions/cfield_mgr.class.php:    $sql[]="DELETE FROM {$this->tables['cfield_testplan_design_values']} WHERE field_id={$id} ";
lib/functions/cfield_mgr.class.php:        $this->db->exec_query($s);        
lib/functions/cfield_mgr.class.php:         " FROM {$this->tables['cfield_testprojects']} CFTP, {$this->tables['nodes_hierarchy']} NH " .
lib/functions/cfield_mgr.class.php:    $rs=$this->db->fetchRowsIntoMap($sql,'id');
lib/functions/cfield_mgr.class.php:    $dummy = $this->getLocations();
lib/functions/cfield_mgr.class.php:	$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/cfield_mgr.class.php:			 $sql .= " {$this->tables['cfield_design_values']} " .
lib/functions/cfield_mgr.class.php:			 $sql .= " {$this->tables['cfield_testplan_design_values']} " .
lib/functions/cfield_mgr.class.php:			 $sql .= " {$this->tables['cfield_execution_values']} " .
lib/functions/cfield_mgr.class.php:	$rs = $this->db->get_recordset($sql);
lib/functions/tlUser.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/tlUser.class.php: * @copyright 	2007-2009, TestLink community 
lib/functions/tlUser.class.php: *	20100704 - franciscom - getAccessibleTestPlans() - BUGID 3526
lib/functions/tlUser.class.php: *	20100522 - franciscom - getAccessibleTestPlans() - added arguments options
lib/functions/tlUser.class.php: *	20100427 - franciscom - BUGID 3396 - writePasswordToDB() method
lib/functions/tlUser.class.php: *	20100326 - franciscom - setActive() method
lib/functions/tlUser.class.php: *	20100217 - franciscom - getNamesForProjectRight() - fixed error displayed on event viewer + refactoring
lib/functions/tlUser.class.php: *  20090726 - franciscom - new method getAccessibleTestPlans()
lib/functions/tlUser.class.php: * 	20090419 - franciscom - refactoring replace product with test project (where possible).
lib/functions/tlUser.class.php: *  20090101 - franciscom - changes to deleteFromDB() due to Foreing Key constraints
lib/functions/tlUser.class.php: *  20081213 - franciscom - removed global coupling to access config parameters
lib/functions/tlUser.class.php:	const E_LOGINLENGTH = -1;
lib/functions/tlUser.class.php:	const E_EMAILLENGTH = -2;
lib/functions/tlUser.class.php:	const E_NOTALLOWED = -4;
lib/functions/tlUser.class.php:	const E_DBERROR = -8;
lib/functions/tlUser.class.php:	const E_FIRSTNAMELENGTH = -16;
lib/functions/tlUser.class.php:	const E_LASTNAMELENGTH = -32;
lib/functions/tlUser.class.php:	const E_PWDEMPTY = -64;
lib/functions/tlUser.class.php:	const E_PWDDONTMATCH = -128;
lib/functions/tlUser.class.php:	const E_LOGINALREADYEXISTS = -256;
lib/functions/tlUser.class.php:	const E_EMAILFORMAT = -512;
lib/functions/tlUser.class.php:    const SKIP_CHECK_AT_TESTPROJECT_LEVEL = -1;
lib/functions/tlUser.class.php:    const SKIP_CHECK_AT_TESTPLAN_LEVEL = -1;
lib/functions/tlUser.class.php:		$this->object_table = $this->tables['users']; 
lib/functions/tlUser.class.php:		$this->usernameFormat = config_get('username_format');
lib/functions/tlUser.class.php:		$this->loginRegExp = config_get('validation_cfg')->user_login_valid_regex;
lib/functions/tlUser.class.php:		$this->maxLoginLength = 30; 
lib/functions/tlUser.class.php:		$this->loginMethod = $authCfg['method'];
lib/functions/tlUser.class.php:		$this->globalRoleID = config_get('default_roleid');
lib/functions/tlUser.class.php:		$this->locale = config_get('default_language');
lib/functions/tlUser.class.php:		$this->isActive = 1;
lib/functions/tlUser.class.php:		$this->tprojectRoles = null;
lib/functions/tlUser.class.php:		$this->tplanRoles = null;
lib/functions/tlUser.class.php:		$this->firstName = null;
lib/functions/tlUser.class.php:		$this->lastName = null;
lib/functions/tlUser.class.php:		$this->emailAddress = null;
lib/functions/tlUser.class.php:		$this->locale = null;
lib/functions/tlUser.class.php:		$this->password = null;
lib/functions/tlUser.class.php:		$this->isActive = null;
lib/functions/tlUser.class.php:		$this->defaultTestprojectID = null;
lib/functions/tlUser.class.php:		$this->globalRoleID = null;
lib/functions/tlUser.class.php:		$this->tprojectRoles = null;
lib/functions/tlUser.class.php:		$this->tplanRoles = null;
lib/functions/tlUser.class.php:		$this->userApiKey = null;
lib/functions/tlUser.class.php:			$this->dbID = null;
lib/functions/tlUser.class.php:			$this->login = null;
lib/functions/tlUser.class.php:	 *  the number of non-alphanumeric characters. 
lib/functions/tlUser.class.php:	 *  You can add another characters to the non-alphanumeric list if you need.
lib/functions/tlUser.class.php:	  $listNonAlpha = ',;:!?.$/*-+&@_+;./*&?$-!,';
lib/functions/tlUser.class.php:	//----- BEGIN interface iDBSerialization -----
lib/functions/tlUser.class.php:		$this->_clean($options);
lib/functions/tlUser.class.php:		         " FROM {$this->object_table}";
lib/functions/tlUser.class.php:			$clauses[] = "id = {$this->dbID}";		
lib/functions/tlUser.class.php:			$clauses[] = "login = '".$db->prepare_string($this->login)."'";		
lib/functions/tlUser.class.php:		$info = $db->fetchFirstRow($sql);	
lib/functions/tlUser.class.php:			$this->dbID = $info['id'];
lib/functions/tlUser.class.php:			$this->firstName = $info['first'];
lib/functions/tlUser.class.php:			$this->lastName = $info['last'];
lib/functions/tlUser.class.php:			$this->login = $info['login'];
lib/functions/tlUser.class.php:			$this->emailAddress = $info['email'];
lib/functions/tlUser.class.php:			$this->globalRoleID = $info['role_id'];
lib/functions/tlUser.class.php:			$this->userApiKey = $info['script_key'];
lib/functions/tlUser.class.php:			if ($this->globalRoleID)
lib/functions/tlUser.class.php:				$this->globalRole = new tlRole($this->globalRoleID);
lib/functions/tlUser.class.php:				$this->globalRole->readFromDB($db);
lib/functions/tlUser.class.php:			if ($this->detailLevel & self::TLOBJ_O_GET_DETAIL_ROLES)
lib/functions/tlUser.class.php:				$this->readTestProjectRoles($db);
lib/functions/tlUser.class.php:				$this->readTestPlanRoles($db);
lib/functions/tlUser.class.php:			$this->locale = $info['locale'];
lib/functions/tlUser.class.php:			$this->password = $info['password'];
lib/functions/tlUser.class.php:			$this->isActive = $info['active'];
lib/functions/tlUser.class.php:			$this->defaultTestprojectID = $info['default_testproject_id'];
lib/functions/tlUser.class.php:		         " FROM {$this->tables['user_testproject_roles']} user_testproject_roles " .
lib/functions/tlUser.class.php:		         " WHERE user_id = {$this->dbID}";
lib/functions/tlUser.class.php:		$allRoles = $db->fetchColumnsIntoMap($sql,'testproject_id','role_id');
lib/functions/tlUser.class.php:		$this->tprojectRoles = null;
lib/functions/tlUser.class.php:					$this->tprojectRoles[$tprojectID] = $tprojectRole;
lib/functions/tlUser.class.php:		         " FROM {$this->tables['user_testplan_roles']} user_testplan_roles " .
lib/functions/tlUser.class.php:		         " WHERE user_id = {$this->dbID}";
lib/functions/tlUser.class.php:		$allRoles = $db->fetchColumnsIntoMap($sql,'testplan_id','role_id');
lib/functions/tlUser.class.php:		$this->tplanRoles = null;
lib/functions/tlUser.class.php:					$this->tplanRoles[$tplanID] = $tplanRole;
lib/functions/tlUser.class.php:		$result = $this->checkDetails($db);
lib/functions/tlUser.class.php:			if($this->dbID)
lib/functions/tlUser.class.php:				$sql = "UPDATE {$this->tables['users']} " .
lib/functions/tlUser.class.php:			       	   "SET first = '" . $db->prepare_string($this->firstName) . "'" .
lib/functions/tlUser.class.php:			       	   ", last = '" .  $db->prepare_string($this->lastName)    . "'" .
lib/functions/tlUser.class.php:			       	   ", email = '" . $db->prepare_string($this->emailAddress)   . "'" .
lib/functions/tlUser.class.php:				   	   ", locale = ". "'" . $db->prepare_string($this->locale) . "'" . 
lib/functions/tlUser.class.php:				   	   ", password = ". "'" . $db->prepare_string($this->password) . "'" .
lib/functions/tlUser.class.php:				   	   ", role_id = ". $db->prepare_string($this->globalRoleID) . 
lib/functions/tlUser.class.php:				   	   ", active = ". $db->prepare_string($this->isActive);
lib/functions/tlUser.class.php:				$sql .= " WHERE id = " . $this->dbID;
lib/functions/tlUser.class.php:				$result = $db->exec_query($sql);
lib/functions/tlUser.class.php:				$sql = "INSERT INTO {$this->tables['users']} (login,password,first,last,email,role_id,locale,active) 
lib/functions/tlUser.class.php:					   $db->prepare_string($this->login) . "','" . $db->prepare_string($this->password) . "','" . 
lib/functions/tlUser.class.php:					   $db->prepare_string($this->firstName) . "','" . $db->prepare_string($this->lastName) . "','" . 
lib/functions/tlUser.class.php:					   $db->prepare_string($this->emailAddress) . "'," . $this->globalRoleID. ",'". 
lib/functions/tlUser.class.php:					   $db->prepare_string($this->locale). "'," . $this->isActive . ")";
lib/functions/tlUser.class.php:				$result = $db->exec_query($sql);
lib/functions/tlUser.class.php:					$this->dbID = $db->insert_id($this->tables['users']);
lib/functions/tlUser.class.php:	 * WARNING: DO NOT USE THE FUNCTION - CAUSES DB INCONSISTENCE! 
lib/functions/tlUser.class.php:		$sqlSet[] = "DELETE FROM {$this->table['user_assignments']} WHERE user_id = {$this->dbID}";
lib/functions/tlUser.class.php:		$sqlSet[] = "DELETE FROM {$this->table['users']}  WHERE id = {$this->dbID}";
lib/functions/tlUser.class.php:			$result = $db->exec_query($sql) ? tl::OK : tl::ERROR;
lib/functions/tlUser.class.php:			$result = $this->deleteTestProjectRoles($db);
lib/functions/tlUser.class.php:		$sql = "DELETE FROM {$this->tables['user_testproject_roles']} WHERE user_id = {$this->dbID}";
lib/functions/tlUser.class.php:		return $db->exec_query($sql) ? tl::OK : tl::ERROR;
lib/functions/tlUser.class.php:		$values = array($this->firstName, $this->lastName,$this->login,$this->emailAddress);
lib/functions/tlUser.class.php:		$displayName = trim(str_replace($keys,$values,$this->usernameFormat));
lib/functions/tlUser.class.php:		$this->password = $this->encryptPassword($pwd);
lib/functions/tlUser.class.php:		return $this->password;
lib/functions/tlUser.class.php:		if ($this->getPassword($pwd) == $this->encryptPassword($pwd))
lib/functions/tlUser.class.php:		$this->firstName = trim($this->firstName);
lib/functions/tlUser.class.php:		$this->lastName = trim($this->lastName);
lib/functions/tlUser.class.php:		$this->emailAddress = trim($this->emailAddress);
lib/functions/tlUser.class.php:		$this->locale = trim($this->locale);
lib/functions/tlUser.class.php:		$this->isActive = intval($this->isActive);
lib/functions/tlUser.class.php:		$this->login = trim($this->login);
lib/functions/tlUser.class.php:		$result = self::checkEmailAddress($this->emailAddress);
lib/functions/tlUser.class.php:			$result = $this->checkLogin($this->login);
lib/functions/tlUser.class.php:		if ($result >= tl::OK && !$this->dbID)
lib/functions/tlUser.class.php:			$result = self::doesUserExist($db,$this->login) ? self::E_LOGINALREADYEXISTS : tl::OK;
lib/functions/tlUser.class.php:			$result = self::checkFirstName($this->firstName);
lib/functions/tlUser.class.php:			$result = self::checkLastName($this->lastName);
lib/functions/tlUser.class.php:		if ($login == "" || (tlStringLen($login) > $this->maxLoginLength))
lib/functions/tlUser.class.php:		else if (!preg_match($this->loginRegExp,$login)) //Only allow a basic set of characters
lib/functions/tlUser.class.php:		$tprojects_role = $this->tprojectRoles;
lib/functions/tlUser.class.php:		$tplans_role = $this->tplanRoles;
lib/functions/tlUser.class.php:		$effective_role = $this->globalRole;
lib/functions/tlUser.class.php:		$sql = "SELECT DISTINCT id FROM {$this->tables['users']} users," . 
lib/functions/tlUser.class.php:		         " {$this->tables['user_testplan_roles']} user_testplan_roles " .
lib/functions/tlUser.class.php:		$sql .= " AND user_testplan_roles.role_id = {$this->dbID}";
lib/functions/tlUser.class.php:		$idSet = $db->fetchColumnsIntoArray($sql,"id");
lib/functions/tlUser.class.php:     * Get a list of names with a defined project right (for example for combo-box)
lib/functions/tlUser.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/tlUser.class.php:		$sql = "/* $debugMsg */ SELECT DISTINCT u.id,u.login,u.first,u.last FROM {$this->tables['users']} u" .
lib/functions/tlUser.class.php:			   " JOIN {$this->tables['role_rights']} a ON a.role_id=u.role_id" .
lib/functions/tlUser.class.php:			   " JOIN {$this->tables['rights']} b ON a.right_id = b.id " .
lib/functions/tlUser.class.php:		$defaultRoles = $db->fetchRowsIntoMap($sql,'id');
lib/functions/tlUser.class.php:		$sql = "/* $debugMsg */ SELECT DISTINCT u.id,u.login,u.first,u.last FROM {$this->tables['users']} u" .
lib/functions/tlUser.class.php:			   " JOIN {$this->tables['user_testproject_roles']} p ON p.user_id=u.id" .
lib/functions/tlUser.class.php:			   " JOIN {$this->tables['role_rights']} a ON a.role_id=p.role_id" .
lib/functions/tlUser.class.php:			   " JOIN {$this->tables['rights']} b ON a.right_id = b.id " .
lib/functions/tlUser.class.php:		$projectRoles = $db->fetchRowsIntoMap($sql,'id');
lib/functions/tlUser.class.php:	    // format for ext-js combo-box (remove associated array)
lib/functions/tlUser.class.php:		$sql = "SELECT id,login,first,last FROM {$this->tables['users']}";
lib/functions/tlUser.class.php:		$output = $db->fetchRowsIntoMap($sql,'id');
lib/functions/tlUser.class.php:		$userGlobalRights = (array)$this->globalRole->rights;
lib/functions/tlUser.class.php:			$globalRights[] = $right->name;
lib/functions/tlUser.class.php:			// 20090726 - franciscom -> yes must be moved ASAP
lib/functions/tlUser.class.php:		$userTestPlanRoles = $this->tplanRoles;
lib/functions/tlUser.class.php:		$userTestProjectRoles = $this->tprojectRoles;
lib/functions/tlUser.class.php:		/* if $testprojectID == -1 we dont check rights at test project level! */
lib/functions/tlUser.class.php:			$userTestProjectRights = (array)$userTestProjectRoles[$testprojectID]->rights;
lib/functions/tlUser.class.php:				$testProjectRights[] = $right->name;
lib/functions/tlUser.class.php:		/* if $tplanID == -1 we dont check rights at tp level! */
lib/functions/tlUser.class.php:			$userTestPlanRights = (array) $userTestPlanRoles[$testPlanID]->rights;
lib/functions/tlUser.class.php:				$testPlanRights[] = $right->name;
lib/functions/tlUser.class.php:     * 							'output' => null -> get numeric array
lib/functions/tlUser.class.php:		$debugTag = 'Class:' .  __CLASS__ . '- Method:' . __FUNCTION__ . '-';
lib/functions/tlUser.class.php:		       " FROM {$this->tables['nodes_hierarchy']} NH" .
lib/functions/tlUser.class.php:		       " JOIN {$this->tables['testplans']} TPLAN ON NH.id=TPLAN.id  " .
lib/functions/tlUser.class.php:		       " LEFT OUTER JOIN {$this->tables['user_testplan_roles']} USER_TPLAN_ROLES" .
lib/functions/tlUser.class.php:		       " AND USER_TPLAN_ROLES.user_id = $this->dbID WHERE active=1 AND  ";
lib/functions/tlUser.class.php:		$globalNoRights = ($this->globalRoleID == TL_ROLES_NO_RIGHTS);
lib/functions/tlUser.class.php:		// 20100704 - franciscom
lib/functions/tlUser.class.php:		// if( ($analyseGlobalRole = isset($this->tprojectRoles[$testprojectID]->dbID)) )
lib/functions/tlUser.class.php:		// 	$projectNoRights = ($this->tprojectRoles[$testprojectID]->dbID == TL_ROLES_NO_RIGHTS); 
lib/functions/tlUser.class.php:		if( isset($this->tprojectRoles[$testprojectID]->dbID) )
lib/functions/tlUser.class.php:			$projectNoRights = ($this->tprojectRoles[$testprojectID]->dbID == TL_ROLES_NO_RIGHTS); 
lib/functions/tlUser.class.php:				$testPlanSet = $db->fetchRowsIntoMap($sql,'id');
lib/functions/tlUser.class.php:				$testPlanSet = $db->fetchColumnsIntoMap($sql,'id','name');
lib/functions/tlUser.class.php:				$testPlanSet = $db->get_recordset($sql);
lib/functions/tlUser.class.php:	    	$email_regex = config_get('validation_cfg')->user_email_valid_regex_php;
lib/functions/tlUser.class.php:		$user->login = $login;
lib/functions/tlUser.class.php:		if ($user->readFromDB($db,self::USER_O_SEARCH_BYLOGIN) >= tl::OK)
lib/functions/tlUser.class.php:			return $user->dbID;
lib/functions/tlUser.class.php:		$sql = " UPDATE {$this->tables['users']} SET active = {$booleanVal} " .
lib/functions/tlUser.class.php:			   " WHERE id = " . $this->dbID;
lib/functions/tlUser.class.php:		$result = $db->exec_query($sql);
lib/functions/tlUser.class.php:		if($this->dbID)
lib/functions/tlUser.class.php:			$sql = "UPDATE {$this->tables['users']} " .
lib/functions/tlUser.class.php:		       	   " SET password = ". "'" . $db->prepare_string($this->password) . "'";
lib/functions/tlUser.class.php:			$sql .= " WHERE id = " . $this->dbID;
lib/functions/tlUser.class.php:			$result = $db->exec_query($sql);
lib/functions/exttable.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/exttable.class.php: * @version CVS: $Id: exttable.class.php,v 1.35 2010/08/31 05:37:18 mx-julian Exp $
lib/functions/exttable.class.php: *	20100830 - franciscom - buildColumns() refactored
lib/functions/exttable.class.php: *	20100828 - eloff - Refactored rendering of status
lib/functions/exttable.class.php: *	20100826 - Julian - BUGID 3714 - new attribute $storeTableState
lib/functions/exttable.class.php: *	20100824 - Julian - new attribute $toolbarRefreshButton
lib/functions/exttable.class.php: *	20100823 - franciscom - getColumnIdxByName() - minor refactoring forcing exit with break
lib/functions/exttable.class.php: *  20100823 - eloff - Add convinience methods setSortByColumnName and setGroupByColumnName
lib/functions/exttable.class.php: *  				   Always store column config in full format(array-of-arrays)
lib/functions/exttable.class.php: *  20100822 - asimon - new function getColumnIdxByName() to make sorting by column name possible
lib/functions/exttable.class.php: *  20100819 - asimon - additional parameters (hidden, hideable, groupable) for req based report and other tables
lib/functions/exttable.class.php: *  20100819 - Julian - MultiSort (BUGID 3694), default Values for Grid Settings, more Grid Settings
lib/functions/exttable.class.php: * 	20100817 - Julian - default toolbar items, hideGroupedColumn
lib/functions/exttable.class.php: *  20100816 - asimon - enable sorting by a default column via $sortByColumn
lib/functions/exttable.class.php: *	20100719 - eloff - Pass $tableID via constructor
lib/functions/exttable.class.php: *	20100719 - franciscom - changing default value for $groupByColumn
lib/functions/exttable.class.php: *	20100716 - eloff - Allow grouping on any column
lib/functions/exttable.class.php: *	20100715 - eloff - Add option for grouping on first column
lib/functions/exttable.class.php: *	20100503 - franciscom - BUGID 3419 In "Test result matrix", tests statuses or not colorized
lib/functions/exttable.class.php: *	20100423 - franciscom - refactoring to allow more flexibility
lib/functions/exttable.class.php: *	20090909 - franciscom - changed to allow multiple tables
lib/functions/exttable.class.php: * Helper class used for EXT-JS tables. There is an option to use custom type
lib/functions/exttable.class.php:	public $groupByColumn = -1;
lib/functions/exttable.class.php:	 * 20100816 - asimon - enable sorting by a default column.
lib/functions/exttable.class.php:	public $sortByColumn = -1;
lib/functions/exttable.class.php:	 * 20100816 - asimon - enable sorting by a default column and with configurable direction.
lib/functions/exttable.class.php:	 * Creates a helper object to render a table to a EXT-JS GridPanel.
lib/functions/exttable.class.php:	 * For use of column['type'] see $this->customTypes
lib/functions/exttable.class.php:		$this->addCustomBehaviour('status', array('render' => 'statusRenderer', 'sort' => 'statusCompare'));
lib/functions/exttable.class.php:	 * By adding a behaivour for new type you must also make sure that the related JS-function exists.
lib/functions/exttable.class.php:	 * JS-funtion "colorRendererMethod(val)" that creates custom markup for rendering.
lib/functions/exttable.class.php:	 * $table->addType('color', array('render' => 'colorRendererMethod'))
lib/functions/exttable.class.php:		$this->customBehaviour[$type] = $behaviour;
lib/functions/exttable.class.php:		if( !is_null($this->data) ) // to avoid warnings on foreach
lib/functions/exttable.class.php:			foreach ($this->data as &$row) {
lib/functions/exttable.class.php:		return json_encode($this->data);
lib/functions/exttable.class.php:	 * Build a JS object to describe the columns needed be EXT-JS GridPanel. This
lib/functions/exttable.class.php:		$n_columns = sizeof($this->columns);
lib/functions/exttable.class.php:			$column = $this->columns[$i];
lib/functions/exttable.class.php:			if( isset($column['type']) && isset($this->customBehaviour[$column['type']]) &&
lib/functions/exttable.class.php:				isset($this->customBehaviour[$column['type']]['render']) )
lib/functions/exttable.class.php:				$s .= ",renderer: {$this->customBehaviour[$column['type']]['render']}";
lib/functions/exttable.class.php:	 * Build a JS object to describe the fields needed be EXT-JS ArrayStore. This
lib/functions/exttable.class.php:		$n_columns = sizeof($this->columns);
lib/functions/exttable.class.php:			$column = $this->columns[$i];
lib/functions/exttable.class.php:				isset($this->customBehaviour[$column['type']]) &&
lib/functions/exttable.class.php:				isset($this->customBehaviour[$column['type']]['sort']) )
lib/functions/exttable.class.php:				$s .= ", sortType: {$this->customBehaviour[$column['type']]['sort']}";
lib/functions/exttable.class.php:		$s .= "tableData['{$this->tableID}'] = " . $this->buildContent() . "\n\n";
lib/functions/exttable.class.php:		$s .= "fields['{$this->tableID}'] = " . $this->buildFields() . "\n\n";
lib/functions/exttable.class.php:		$s .= "columnData['{$this->tableID}'] = " . $this->buildColumns() . "\n\n";
lib/functions/exttable.class.php:		$s .= $this->buildCodeLabels() . "\n\n";
lib/functions/exttable.class.php:		$s .= $this->buildCfg() . "\n\n";
lib/functions/exttable.class.php:			$value = $this->{$setting};
lib/functions/exttable.class.php:		return '<div id="' . $this->tableID . '_target"></div>';
lib/functions/exttable.class.php:		foreach ($this->columns as $key => $column) {
lib/functions/exttable.class.php:		$this->groupByColumn = $this->getColumnIdxByName($name);
lib/functions/exttable.class.php:		$this->sortByColumn = $this->getColumnIdxByName($name);
lib/functions/exec.inc.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/exec.inc.php: * @copyright 	2005-2009, TestLink community 
lib/functions/exec.inc.php: * 20100522 - franciscom - BUGID 3479 - Bulk Execution - Custom Fields Bulk Assignment (write_execution())
lib/functions/exec.inc.php: * 20100522 - franciscom - BUGID 3440 - get_bugs_for_exec() - added is_object() check 
lib/functions/exec.inc.php: * 20090815 - franciscom - write_execution() - interface changes 
lib/functions/exec.inc.php: * 20081231 - franciscom - write_execution() changes to manage bulks exec notes
lib/functions/exec.inc.php: * 20080528 - franciscom - BUGID 1504 - changes in write_execution
lib/functions/exec.inc.php: * 20080504 - franciscom - removed deprecated functions
lib/functions/exec.inc.php: * 20051119  - scs - added fix for 227
lib/functions/exec.inc.php: * 20060311 - kl - some modifications to SQL queries dealing with 1.7
lib/functions/exec.inc.php: * 20060528 - franciscom - adding management of bulk update
lib/functions/exec.inc.php: * 20060916 - franciscom - added write_execution_bug()
lib/functions/exec.inc.php: * 20070105 - franciscom - interface changes write_execution()
lib/functions/exec.inc.php: * 20070222 - franciscom - BUGID 645 createResultsMenu()
lib/functions/exec.inc.php: * 20070617 - franciscom - BUGID     insert_id() problems for Postgres and Oracle?
lib/functions/exec.inc.php: * 20100522 - BUGID 3479 - Bulk Execution - Custom Fields Bulk Assignment
lib/functions/exec.inc.php:	$db_now = $db->db_now();
lib/functions/exec.inc.php:	$cf_prefix = $cfield_mgr->get_name_prefix();
lib/functions/exec.inc.php:	$cf_map = $cfield_mgr->get_linked_cfields_at_execution($exec_signature->tproject_id,$ENABLED,'testcase');
lib/functions/exec.inc.php:		$bulk_notes = $db->prepare_string(trim($exec_data['bulk_exec_notes']));		
lib/functions/exec.inc.php:			$my_notes = $is_bulk_save ? $bulk_notes : $db->prepare_string(trim($exec_data['notes'][$tcversion_id]));		
lib/functions/exec.inc.php:				" VALUES ( {$exec_signature->build_id}, {$exec_signature->user_id}, '{$exec_data['status'][$tcversion_id]}',".
lib/functions/exec.inc.php:				"{$exec_signature->tplan_id}, {$tcversion_id},{$db_now},'{$my_notes}'," .
lib/functions/exec.inc.php:				"{$version_number},{$exec_signature->platform_id}" . 
lib/functions/exec.inc.php:			$db->exec_query($sql);  	
lib/functions/exec.inc.php:			$execution_id = $db->insert_id($executions_table);
lib/functions/exec.inc.php:				$cfield_mgr->execution_values_to_db($hash_cf,$tcversion_id, $execution_id, $exec_signature->tplan_id,$cf_map);
lib/functions/exec.inc.php:	$prep_bug_id = $db->prepare_string($bug_id);
lib/functions/exec.inc.php:	$result = $db->exec_query($sql);
lib/functions/exec.inc.php:		$result = $db->exec_query($sql);  	     
lib/functions/exec.inc.php:	$map = $db->get_recordset($sql);
lib/functions/exec.inc.php:	// BUGID 3440 - added is_object() check
lib/functions/exec.inc.php:			$bug_list[$elem['bug_id']]['link_to_bts'] = $bug_interface->buildViewBugLink($elem['bug_id'],GET_BUG_SUMMARY);
lib/functions/exec.inc.php:	$map = $db->get_recordset($sql);
lib/functions/exec.inc.php:		$result = $db->exec_query($the_stm);
lib/functions/exec.inc.php:           "SET notes = '" . $db->prepare_string($notes) . "' " .
lib/functions/exec.inc.php:    return $db->exec_query($sql) ? tl::OK : tl::ERROR;     
lib/functions/object.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/object.class.php: * @copyright 	2007-2009, TestLink community 
lib/functions/object.class.php: * 20100314 - franciscom - added req_relations in getDBTables()
lib/functions/object.class.php: * 20091227 - franciscom - new method getAttachmentTableName()
lib/functions/object.class.php: * 20090806 - franciscom - platforms feature
lib/functions/object.class.php: * 20090615 - franciscom - fixed bug on getDBTables()
lib/functions/object.class.php: * 20090609 - franciscom - added method getDBTables()
lib/functions/object.class.php: * 20090607 - franciscom - added array with tables names as property to be used on
lib/functions/object.class.php:	const E_NOT_IMPLEMENTED = -0xFFFFFFFF;
lib/functions/object.class.php: * Base class for all managed TestLink objects, all tl-managed objects should extend this base class
lib/functions/object.class.php:		if (!isset($this->tables))
lib/functions/object.class.php:			$this->tables = self::getDBTables();
lib/functions/object.class.php:		$this->objectID = str_replace(".","",uniqid("", true));
lib/functions/object.class.php:		$interfaces = $o->getInterfaces();
lib/functions/object.class.php:		$this->serializationInterfaces = null;
lib/functions/object.class.php:		$this->serializationFormatDescriptors = null;
lib/functions/object.class.php:					$this->serializationInterfaces[$name] = $format;
lib/functions/object.class.php:					$this->serializationFormatDescriptors[$format] = $this->$pfn();
lib/functions/object.class.php:		$this->getSupportedSerializationFormatDescriptions();
lib/functions/object.class.php:	 	return $this->userFeedback;
lib/functions/object.class.php:	 	$this->userFeedback = $message;
lib/functions/object.class.php:		return $this->objectID;
lib/functions/object.class.php:		$this->_clean();
lib/functions/object.class.php:		return $this->serializationInterfaces;
lib/functions/object.class.php:	 * @return all supported Import/Export Interfaces - Format Descriptors 
lib/functions/object.class.php:		return $this->serializationFormatDescriptors;
lib/functions/object.class.php:	 * @since 20090615 - franciscom - fixed bug that render useless function when using $tableNames argument
lib/functions/object.class.php:		$this->db = &$db;
lib/functions/object.class.php:		$this->attachmentRepository = tlAttachmentRepository::create($this->db);
lib/functions/object.class.php:		$this->attachmentTableName = $attachmentTableName;
lib/functions/object.class.php:		return $this->attachmentRepository->getAttachmentInfosFor($id,$this->attachmentTableName);
lib/functions/object.class.php:		return $this->attachmentRepository->deleteAttachmentsFor($id,$this->attachmentTableName);
lib/functions/object.class.php:		$this->attachmentRepository = null;
lib/functions/object.class.php:		$this->attachmentTableName = null;
lib/functions/object.class.php:		return $this->attachmentTableName;	
lib/functions/object.class.php:		$this->dbID = $dbID;
lib/functions/object.class.php:		$this->detailLevel = self::TLOBJ_O_GET_DETAIL_FULL;
lib/functions/object.class.php:		$this->detailLevel = $level;
lib/functions/object.class.php:	 * creates any tl-managed objects
lib/functions/object.class.php:			$item->setDetailLevel($detailLevel);
lib/functions/object.class.php:			if ($item->readFromDB($db,$options) >= tl::OK)
lib/functions/object.class.php:	 * used to create any tl-managed objects
lib/functions/object.class.php:	                                                $detailLevel = self::TLOBJ_O_GET_DETAIL_FULL,$limit = -1)
lib/functions/object.class.php:		$ids = $db->fetchColumnsIntoArray($query,$column,$limit);
lib/functions/object.class.php:	 * used to create any tl-managed objects
lib/functions/object.class.php:	 * used to bulk-create tl-managed objects which support the "iDBBulkReadSerialization"-Interface
lib/functions/object.class.php:			$query = $dummyItem->getReadFromDBQuery($ids,self::TLOBJ_O_SEARCH_BY_ID,$detailLevel);
lib/functions/object.class.php:			$result = $db->exec_query($query);
lib/functions/object.class.php:				while($row = $db->fetch_array($result))
lib/functions/object.class.php:					$item->readFromDBRow($row);
lib/functions/object.class.php:						$items[$item->dbID] = $item;
lib/functions/object.class.php:	 * deletes an tl-Managed object from the DB
lib/functions/object.class.php:	 * @param int $id the database-id of the object which should be deleted
lib/functions/object.class.php:			return $item->deleteFromDB($db);
lib/functions/object.class.php:		if ($this->activateCaching)
lib/functions/object.class.php:			self::$objectCache[get_class($this)][$this->detailLevel][$this->dbID] = $this;
lib/functions/object.class.php:		if ($this->activateCaching)
lib/functions/object.class.php:			unset(self::$objectCache[get_class($this)][$this->detailLevel][$this->dbID]);
lib/functions/object.class.php:		if (!$this->activateCaching)
lib/functions/object.class.php:		if (isset(self::$objectCache[get_class($this)][$this->detailLevel][$this->dbID]))
lib/functions/object.class.php:			$object = self::$objectCache[get_class($this)][$this->detailLevel][$this->dbID];
lib/functions/object.class.php:			return $this->copyFromCache($object);
lib/functions/code_testing/testsuite.class.test.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/code_testing/testsuite.class.test.php:echo "<pre> testsuite - constructor - testsuite(&\$db)";echo "</pre>";
lib/functions/code_testing/testsuite.class.test.php:echo "<pre> testsuite - get_by_name(\$name)";echo "</pre>";
lib/functions/code_testing/testsuite.class.test.php:$tsuite_info = $tsuite_mgr->get_by_name($tsuite_name);
lib/functions/code_testing/testsuite.class.test.php:echo "<pre> testsuite - get_children(\$id)";echo "</pre>";
lib/functions/code_testing/testsuite.class.test.php:$tsuite_info=$tsuite_mgr->get_children($tsuite_id);
lib/functions/code_testing/testsuite.class.test.php:echo "<pre> testsuite - get_by_id(\$id)";echo "</pre>";
lib/functions/code_testing/testsuite.class.test.php:$tsuite_info=$tsuite_mgr->get_by_id($tsuite_id);
lib/functions/code_testing/testsuite.class.test.php:echo "<pre> testsuite - get_by_id(\$id)";echo "</pre>";
lib/functions/code_testing/testsuite.class.test.php:$tsuite_info=$tsuite_mgr->get_by_id($tsuite_id);
lib/functions/code_testing/testsuite.class.test.php:echo "<pre> testsuite - get_all()";echo "</pre>";
lib/functions/code_testing/testsuite.class.test.php:$all_tsuites_in_my_tl=$tsuite_mgr->get_all();
lib/functions/code_testing/testsuite.class.test.php:echo "<pre> testsuite - get_by_name(\$name)";echo "</pre>";
lib/functions/code_testing/testsuite.class.test.php:$tsuite_info=$tsuite_mgr->get_by_name($tsuite_name);
lib/functions/code_testing/testsuite.class.test.php:echo "<pre> testsuite - get_testcases_deep(\$id,\$details='simple')";echo "</pre>";
lib/functions/code_testing/testsuite.class.test.php:$testcases_deep=$tsuite_mgr->get_testcases_deep($tsuite_id);
lib/functions/code_testing/testsuite.class.test.php:$testcases_deep=$tsuite_mgr->get_testcases_deep($tsuite_id,'full');
lib/functions/code_testing/testsuite.class.test.php:echo "<pre> testsuite - getKeywords(\$tcID,\$kwID = null)";echo "</pre>";
lib/functions/code_testing/testsuite.class.test.php:$keywords=$tsuite_mgr->getKeywords($tsuite_id);
lib/functions/code_testing/testsuite.class.test.php:echo "<pre> testsuite - get_keywords_map(\$id,\$order_by_clause='')";echo "</pre>";
lib/functions/code_testing/testsuite.class.test.php:$keywords_map=$tsuite_mgr->get_keywords_map($tsuite_id);
lib/functions/code_testing/testsuite.class.test.php:$set_of_tcase_info=$tsuite_mgr->get_by_id($set_of_tsuite_id);
lib/functions/code_testing/testsuite.class.test.php:echo "<pre> testsuite - check_link_and_exec_status(\$id)";echo "</pre>";
lib/functions/code_testing/testsuite.class.test.php:$link_and_exec_status=$tsuite_mgr->check_link_and_exec_status($tsuite_id);
lib/functions/code_testing/testsuite.class.test.php:echo "<pre> testsuite - get_linked_versions(\$id,\$exec_status='ALL',\$active_status='ALL')";
lib/functions/code_testing/testsuite.class.test.php:$linked_versions=$tsuite_mgr->get_linked_versions($tsuite_id);
lib/functions/code_testing/testsuite.class.test.php:echo "<pre> testsuite - get_testproject(\$id)";
lib/functions/code_testing/testsuite.class.test.php:$testproject_id=$tsuite_mgr->get_testproject($tsuite_id);
lib/functions/code_testing/testsuite.class.test.php:echo "<pre> testsuite - get_last_version_info(\$id)";
lib/functions/code_testing/testsuite.class.test.php:$last_version_info=$tsuite_mgr->get_last_version_info($tsuite_id);
lib/functions/code_testing/testsuite.class.test.php:echo "<pre> testsuite - get_executions(\$id,\$version_id,\$tplan_id,\$build_id,<br>
lib/functions/code_testing/testsuite.class.test.php:$executions=$tsuite_mgr->get_executions($tsuite_id,$version_id,$tplan_id,$build_id);
lib/functions/code_testing/testsuite.class.test.php:echo "<pre> testsuite - get_last_execution(\$id,\$version_id,\$tplan_id,\$build_id,\$get_no_executions=0)";echo "</pre>";
lib/functions/code_testing/testsuite.class.test.php:$last_execution=$tsuite_mgr->get_last_execution($tsuite_id,$version_id,$tplan_id,$build_id);
lib/functions/code_testing/testsuite.class.test.php:echo "<pre> testsuite - get_version_exec_assignment(\$tcversion_id,\$tplan_id)";echo "</pre>";
lib/functions/code_testing/testsuite.class.test.php:$version_exec_assignment=$tsuite_mgr->get_version_exec_assignment($tcversion_id,$tplan_id);
lib/functions/code_testing/testsuite.class.test.php:echo "<pre> testsuite - get_linked_cfields_at_design(\$id,\$parent_id=null,\$show_on_execution=null)";echo "</pre>";
lib/functions/code_testing/testsuite.class.test.php:$linked_cfields_at_design=$tsuite_mgr->get_linked_cfields_at_design($tsuite_id);
lib/functions/code_testing/testsuite.class.test.php:echo "<pre> testsuite - get_linked_cfields_at_execution(\$id,\$parent_id=null,<br>
lib/functions/code_testing/testsuite.class.test.php:$linked_cfields_at_execution=$tsuite_mgr->get_linked_cfields_at_execution($tsuite_id);
lib/functions/code_testing/testsuite.class.test.php:echo "<pre> testsuite - html_table_of_custom_field_inputs(\$id,\$parent_id=null,\$scope='design',\$name_suffix='')";echo "</pre>";
lib/functions/code_testing/testsuite.class.test.php:$table_of_custom_field_inputs=$tsuite_mgr->html_table_of_custom_field_inputs($tsuite_id);
lib/functions/code_testing/testsuite.class.test.php:echo "<pre> testsuite - html_table_of_custom_field_values(\$id,\$scope='design',<br>
lib/functions/code_testing/testsuite.class.test.php:echo "<pre> testsuite - html_table_of_custom_field_values($tsuite_id)";echo "</pre>";
lib/functions/code_testing/testsuite.class.test.php:$table_of_custom_field_values=$tsuite_mgr->html_table_of_custom_field_values($tsuite_id); 
lib/functions/code_testing/testcase.class.test.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/code_testing/testcase.class.test.php:echo "<pre> testcase - constructor - testcase(&\$db)";echo "</pre>";
lib/functions/code_testing/testcase.class.test.php:$va = $tcase_mgr->get_last_active_version($items);
lib/functions/code_testing/testcase.class.test.php:$va = $tcase_mgr->get_last_active_version($items[0]);
lib/functions/code_testing/testcase.class.test.php:$va = $tcase_mgr->get_last_active_version($items,$options);
lib/functions/code_testing/testcase.class.test.php:// AND NH_TCVERSION.parent_id IN ()  GROUP BY NH_TCVERSION.parent_id  ORDER BY NH_TCVERSION.parent_id , -1) called at [C:\usr\local\xampp-1.7.2\xampp\htdocs\head-20100315\lib\functions\database.class.php:593]
lib/functions/code_testing/testcase.class.test.php:// #1  database->fetchRowsIntoMap(/* Class:testcase - Method: get_last_active_version 
lib/functions/code_testing/testcase.class.test.php:$va = $tcase_mgr->get_by_id($tcase_id,null,'ALL','ALL',$version_a);
lib/functions/code_testing/testcase.class.test.php:$vb = $tcase_mgr->get_by_id($tcase_id,null,'ALL','ALL',$version_b);
lib/functions/code_testing/testcase.class.test.php:echo "<pre> testcase - $fname(\$pathName,\$pathSeparator='::')";echo "</pre>";
lib/functions/code_testing/testcase.class.test.php:$result=$tcase_mgr->$fname($pathName);
lib/functions/code_testing/testcase.class.test.php:echo "<pre> testcase - get_last_execution(\$id,\$version_id,\$tplan_id,\$build_id,\$platform_id\$options=null)";echo "</pre>";
lib/functions/code_testing/testcase.class.test.php:$last_execution=$tcase_mgr->get_last_execution($tcase_id,$version_id,$tplan_id,$build_id,$platform_id,$options);
lib/functions/code_testing/testcase.class.test.php:echo "<pre> testcase - get_by_id(\$id,\$version_id = TC_ALL_VERSIONS, \$active_status='ALL',\$open_status='ALL')";echo "</pre>";
lib/functions/code_testing/testcase.class.test.php:$tcase_info=$tcase_mgr->get_by_id($tcase_id);
lib/functions/code_testing/testcase.class.test.php:$set_of_tcase_info=$tcase_mgr->get_by_id($set_of_tcase_id);
lib/functions/code_testing/testcase.class.test.php:$info=$tcase_mgr->$method($tcase_name);
lib/functions/code_testing/testcase.class.test.php:$info=$tcase_mgr->$method($tcase_name,$tsuite_name);
lib/functions/code_testing/testcase.class.test.php:$info=$tcase_mgr->$method($tcase_name,$tsuite_name,$tproject_name);
lib/functions/code_testing/testcase.class.test.php:echo "<pre> testcase - check_link_and_exec_status(\$id)";echo "</pre>";
lib/functions/code_testing/testcase.class.test.php:$link_and_exec_status=$tcase_mgr->check_link_and_exec_status($tcase_id);
lib/functions/code_testing/testcase.class.test.php:echo "<pre> testcase - get_linked_versions(\$id,\$exec_status='ALL',\$active_status='ALL')";
lib/functions/code_testing/testcase.class.test.php:$linked_versions=$tcase_mgr->get_linked_versions($tcase_id);
lib/functions/code_testing/testcase.class.test.php:echo "<pre> testcase - get_testproject(\$id)";
lib/functions/code_testing/testcase.class.test.php:$testproject_id=$tcase_mgr->get_testproject($tcase_id);
lib/functions/code_testing/testcase.class.test.php:echo "<pre> testcase - get_last_version_info(\$id)";
lib/functions/code_testing/testcase.class.test.php:$last_version_info=$tcase_mgr->get_last_version_info($tcase_id);
lib/functions/code_testing/testcase.class.test.php:echo "<pre> testcase - get_versions_status_quo(\$id,\$tcversion_id=null, \$testplan_id=null)";
lib/functions/code_testing/testcase.class.test.php:$status_quo=$tcase_mgr->get_versions_status_quo($tcase_id);
lib/functions/code_testing/testcase.class.test.php:echo "<pre> testcase - get_exec_status(\$id)";
lib/functions/code_testing/testcase.class.test.php:$testcase_exec_status=$tcase_mgr->get_exec_status($tcase_id);
lib/functions/code_testing/testcase.class.test.php:echo "<pre> testcase - getKeywords(\$tcID,\$kwID = null)";echo "</pre>";
lib/functions/code_testing/testcase.class.test.php:$keywords=$tcase_mgr->getKeywords($tcase_id);
lib/functions/code_testing/testcase.class.test.php:echo "<pre> testcase - get_keywords_map(\$id,\$order_by_clause='')";echo "</pre>";
lib/functions/code_testing/testcase.class.test.php:$keywords_map=$tcase_mgr->get_keywords_map($tcase_id);
lib/functions/code_testing/testcase.class.test.php:echo "<pre> testcase - get_executions(\$id,\$version_id,\$tplan_id,\$build_id,<br>
lib/functions/code_testing/testcase.class.test.php:$executions=$tcase_mgr->get_executions($tcase_id,$version_id,$tplan_id,$build_id);
lib/functions/code_testing/testcase.class.test.php:echo "<pre> testcase - get_last_execution(\$id,\$version_id,\$tplan_id,\$build_id,\$get_no_executions=0)";echo "</pre>";
lib/functions/code_testing/testcase.class.test.php:$last_execution=$tcase_mgr->get_last_execution($tcase_id,$version_id,$tplan_id,$build_id);
lib/functions/code_testing/testcase.class.test.php:echo "<pre> testcase - get_version_exec_assignment(\$tcversion_id,\$tplan_id)";echo "</pre>";
lib/functions/code_testing/testcase.class.test.php:$version_exec_assignment=$tcase_mgr->get_version_exec_assignment($tcversion_id,$tplan_id);
lib/functions/code_testing/testcase.class.test.php:echo "<pre> testcase - get_linked_cfields_at_design(\$id,\$parent_id=null,\$show_on_execution=null)";echo "</pre>";
lib/functions/code_testing/testcase.class.test.php:$linked_cfields_at_design=$tcase_mgr->get_linked_cfields_at_design($tcase_id);
lib/functions/code_testing/testcase.class.test.php:echo "<pre> testcase - get_linked_cfields_at_execution(\$id,\$parent_id=null,<br>
lib/functions/code_testing/testcase.class.test.php:$linked_cfields_at_execution=$tcase_mgr->get_linked_cfields_at_execution($tcase_id);
lib/functions/code_testing/testcase.class.test.php:echo "<pre> testcase - html_table_of_custom_field_inputs(\$id,\$parent_id=null,\$scope='design',\$name_suffix='')";echo "</pre>";
lib/functions/code_testing/testcase.class.test.php:$table_of_custom_field_inputs=$tcase_mgr->html_table_of_custom_field_inputs($tcase_id);
lib/functions/code_testing/testcase.class.test.php:echo "<pre> testcase - html_table_of_custom_field_values(\$id,\$scope='design',<br>
lib/functions/code_testing/testcase.class.test.php:echo "<pre> testcase - html_table_of_custom_field_values($tcase_id)";echo "</pre>";
lib/functions/code_testing/testcase.class.test.php:$table_of_custom_field_values=$tcase_mgr->html_table_of_custom_field_values($tcase_id); 
lib/functions/code_testing/dBug.php:			$this->initJSandCSS();
lib/functions/code_testing/dBug.php:			$this->{"varIs".ucfirst($forceType)}($var);
lib/functions/code_testing/dBug.php:			$this->checkType($var);
lib/functions/code_testing/dBug.php:		for($i=count($arrBacktrace)-1; $i>=0; $i--) {
lib/functions/code_testing/dBug.php:			$code = $arrLines[($arrFile["line"]-1)];
lib/functions/code_testing/dBug.php:		if(!$this->bInitialized) {
lib/functions/code_testing/dBug.php:			$header = $this->getVariableName() . " (" . $header . ")";
lib/functions/code_testing/dBug.php:			$this->bInitialized = true;
lib/functions/code_testing/dBug.php:				$this->varIsResource($var);
lib/functions/code_testing/dBug.php:				$this->varIsObject($var);
lib/functions/code_testing/dBug.php:				$this->varIsArray($var);
lib/functions/code_testing/dBug.php:				$this->varIsNULL();
lib/functions/code_testing/dBug.php:				$this->varIsBoolean($var);
lib/functions/code_testing/dBug.php:		array_push($this->arrHistory, $var_ser);
lib/functions/code_testing/dBug.php:		$this->makeTableHeader("array","array");
lib/functions/code_testing/dBug.php:				$this->makeTDHeader("array",$key);
lib/functions/code_testing/dBug.php:					if(in_array($var_ser, $this->arrHistory, TRUE))
lib/functions/code_testing/dBug.php:				if(in_array(gettype($value),$this->arrType))
lib/functions/code_testing/dBug.php:					$this->checkType($value);
lib/functions/code_testing/dBug.php:				echo $this->closeTDRow();
lib/functions/code_testing/dBug.php:		else echo "<tr><td>".$this->error("array").$this->closeTDRow();
lib/functions/code_testing/dBug.php:		array_pop($this->arrHistory);
lib/functions/code_testing/dBug.php:		array_push($this->arrHistory, $var_ser);
lib/functions/code_testing/dBug.php:		$this->makeTableHeader("object","object");
lib/functions/code_testing/dBug.php:				$this->makeTDHeader("object",$key);
lib/functions/code_testing/dBug.php:					if(in_array($var_ser, $this->arrHistory, TRUE)) {
lib/functions/code_testing/dBug.php:						$value = (is_object($value)) ? "*RECURSION* -> $".get_class($value) : "*RECURSION*";
lib/functions/code_testing/dBug.php:				if(in_array(gettype($value),$this->arrType))
lib/functions/code_testing/dBug.php:					$this->checkType($value);
lib/functions/code_testing/dBug.php:				echo $this->closeTDRow();
lib/functions/code_testing/dBug.php:				$this->makeTDHeader("object",$value);
lib/functions/code_testing/dBug.php:				echo "[function]".$this->closeTDRow();
lib/functions/code_testing/dBug.php:		else echo "<tr><td>".$this->error("object").$this->closeTDRow();
lib/functions/code_testing/dBug.php:		array_pop($this->arrHistory);
lib/functions/code_testing/dBug.php:		$this->makeTableHeader("resourceC","resource",1);
lib/functions/code_testing/dBug.php:			case "sybase-db result":
lib/functions/code_testing/dBug.php:			case "sybase-ct result":
lib/functions/code_testing/dBug.php:				$this->varIsDBResource($var,$db);
lib/functions/code_testing/dBug.php:				$this->varIsGDResource($var);
lib/functions/code_testing/dBug.php:				$this->varIsXmlResource($var);
lib/functions/code_testing/dBug.php:				echo get_resource_type($var).$this->closeTDRow();
lib/functions/code_testing/dBug.php:		echo $this->closeTDRow()."</table>\n";
lib/functions/code_testing/dBug.php:		if($db == "sybase-db" || $db == "sybase-ct")
lib/functions/code_testing/dBug.php:		$this->makeTableHeader("resource",$db." result",$numfields+1);
lib/functions/code_testing/dBug.php:				$tempField=$field[$k]->name;
lib/functions/code_testing/dBug.php:				$fieldrow=$row[($field[$k]->name)];
lib/functions/code_testing/dBug.php:		$this->makeTableHeader("resource","gd",2);
lib/functions/code_testing/dBug.php:		$this->makeTDHeader("resource","Width");
lib/functions/code_testing/dBug.php:		echo imagesx($var).$this->closeTDRow();
lib/functions/code_testing/dBug.php:		$this->makeTDHeader("resource","Height");
lib/functions/code_testing/dBug.php:		echo imagesy($var).$this->closeTDRow();
lib/functions/code_testing/dBug.php:		$this->makeTDHeader("resource","Colors");
lib/functions/code_testing/dBug.php:		echo imagecolorstotal($var).$this->closeTDRow();
lib/functions/code_testing/dBug.php:		$this->varIsXmlResource($var);
lib/functions/code_testing/dBug.php:		$this->makeTableHeader("xml","xml document",2);
lib/functions/code_testing/dBug.php:		$this->makeTDHeader("xml","xmlRoot");
lib/functions/code_testing/dBug.php:				$this->xmlParse($xml_parser,$data,feof($fp));
lib/functions/code_testing/dBug.php:				echo $this->error("xml").$this->closeTDRow()."</table>\n";
lib/functions/code_testing/dBug.php:			$this->xmlParse($xml_parser,$data,1);
lib/functions/code_testing/dBug.php:		echo $this->closeTDRow()."</table>\n";
lib/functions/code_testing/dBug.php:		$this->xmlAttrib[$this->xmlCount]=$attribs;
lib/functions/code_testing/dBug.php:		$this->xmlName[$this->xmlCount]=$name;
lib/functions/code_testing/dBug.php:		$this->xmlSData[$this->xmlCount]='$this->makeTableHeader("xml","xml element",2);';
lib/functions/code_testing/dBug.php:		$this->xmlSData[$this->xmlCount].='$this->makeTDHeader("xml","xmlName");';
lib/functions/code_testing/dBug.php:		$this->xmlSData[$this->xmlCount].='echo "<strong>'.$this->xmlName[$this->xmlCount].'</strong>".$this->closeTDRow();';
lib/functions/code_testing/dBug.php:		$this->xmlSData[$this->xmlCount].='$this->makeTDHeader("xml","xmlAttributes");';
lib/functions/code_testing/dBug.php:			$this->xmlSData[$this->xmlCount].='$this->varIsArray($this->xmlAttrib['.$this->xmlCount.']);';
lib/functions/code_testing/dBug.php:			$this->xmlSData[$this->xmlCount].='echo "&nbsp;";';
lib/functions/code_testing/dBug.php:		$this->xmlSData[$this->xmlCount].='echo $this->closeTDRow();';
lib/functions/code_testing/dBug.php:		$this->xmlCount++;
lib/functions/code_testing/dBug.php:		for($i=0;$i<$this->xmlCount;$i++) {
lib/functions/code_testing/dBug.php:			eval($this->xmlSData[$i]);
lib/functions/code_testing/dBug.php:			$this->makeTDHeader("xml","xmlText");
lib/functions/code_testing/dBug.php:			echo (!empty($this->xmlCData[$i])) ? $this->xmlCData[$i] : "&nbsp;";
lib/functions/code_testing/dBug.php:			echo $this->closeTDRow();
lib/functions/code_testing/dBug.php:			$this->makeTDHeader("xml","xmlComment");
lib/functions/code_testing/dBug.php:			echo (!empty($this->xmlDData[$i])) ? $this->xmlDData[$i] : "&nbsp;";
lib/functions/code_testing/dBug.php:			echo $this->closeTDRow();
lib/functions/code_testing/dBug.php:			$this->makeTDHeader("xml","xmlChildren");
lib/functions/code_testing/dBug.php:			unset($this->xmlCData[$i],$this->xmlDData[$i]);
lib/functions/code_testing/dBug.php:		echo $this->closeTDRow();
lib/functions/code_testing/dBug.php:		$this->xmlCount=0;
lib/functions/code_testing/dBug.php:		$count=$this->xmlCount-1;
lib/functions/code_testing/dBug.php:		if(!empty($this->xmlCData[$count]))
lib/functions/code_testing/dBug.php:			$this->xmlCData[$count].=$data;
lib/functions/code_testing/dBug.php:			$this->xmlCData[$count]=$data;
lib/functions/code_testing/dBug.php:		//strip '<!--' and '-->' off comments
lib/functions/code_testing/dBug.php:		$data=str_replace(array("&lt;!--","--&gt;"),"",htmlspecialchars($data));
lib/functions/code_testing/dBug.php:		$count=$this->xmlCount-1;
lib/functions/code_testing/dBug.php:		if(!empty($this->xmlDData[$count]))
lib/functions/code_testing/dBug.php:			$this->xmlDData[$count].=$data;
lib/functions/code_testing/dBug.php:			$this->xmlDData[$count]=$data;
lib/functions/code_testing/dBug.php:					font-family:Verdana, Arial, Helvetica, sans-serif; color:#000000; font-size:12px;
lib/functions/code_testing/dBug.php:					{ font-weight:bold; color:#FFFFFF; cursor:pointer; }
lib/functions/code_testing/dBug.php:				table.dBug_array { background-color:#006600; }
lib/functions/code_testing/dBug.php:				table.dBug_array td { background-color:#FFFFFF; }
lib/functions/code_testing/dBug.php:				table.dBug_array td.dBug_arrayHeader { background-color:#009900; }
lib/functions/code_testing/dBug.php:				table.dBug_array td.dBug_arrayKey { background-color:#CCFFCC; }
lib/functions/code_testing/dBug.php:				table.dBug_object { background-color:#0000CC; }
lib/functions/code_testing/dBug.php:				table.dBug_object td { background-color:#FFFFFF; }
lib/functions/code_testing/dBug.php:				table.dBug_object td.dBug_objectHeader { background-color:#4444CC; }
lib/functions/code_testing/dBug.php:				table.dBug_object td.dBug_objectKey { background-color:#CCDDFF; }
lib/functions/code_testing/dBug.php:				table.dBug_resourceC { background-color:#884488; }
lib/functions/code_testing/dBug.php:				table.dBug_resourceC td { background-color:#FFFFFF; }
lib/functions/code_testing/dBug.php:				table.dBug_resourceC td.dBug_resourceCHeader { background-color:#AA66AA; }
lib/functions/code_testing/dBug.php:				table.dBug_resourceC td.dBug_resourceCKey { background-color:#FFDDFF; }
lib/functions/code_testing/dBug.php:				table.dBug_resource { background-color:#884488; }
lib/functions/code_testing/dBug.php:				table.dBug_resource td { background-color:#FFFFFF; }
lib/functions/code_testing/dBug.php:				table.dBug_resource td.dBug_resourceHeader { background-color:#AA66AA; }
lib/functions/code_testing/dBug.php:				table.dBug_resource td.dBug_resourceKey { background-color:#FFDDFF; }
lib/functions/code_testing/dBug.php:				table.dBug_xml { background-color:#888888; }
lib/functions/code_testing/dBug.php:				table.dBug_xml td { background-color:#FFFFFF; }
lib/functions/code_testing/dBug.php:				table.dBug_xml td.dBug_xmlHeader { background-color:#AAAAAA; }
lib/functions/code_testing/dBug.php:				table.dBug_xml td.dBug_xmlKey { background-color:#DDDDDD; }
lib/functions/code_testing/testplan.class.test.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/code_testing/testplan.class.test.php:echo "<pre>Poor's Man - $object_item - code inspection tool<br>";
lib/functions/code_testing/testplan.class.test.php:echo "<pre> $object_item - constructor - $object_class(&\$db)";echo "</pre>";
lib/functions/code_testing/testplan.class.test.php:// echo "<pre> testplan - get_linked_tcversions(\$tplan_id,\$tcase_id=null,\$keyword_id=0,\$executed=null,
lib/functions/code_testing/testplan.class.test.php:echo "<pre> testplan - get_linked_tcversions(\$id,\$filters=null,\$options=null)";echo "</pre>";
lib/functions/code_testing/testplan.class.test.php:$linked_tcversions=$obj_mgr->get_linked_tcversions($tplan_id);
lib/functions/code_testing/testplan.class.test.php:echo "<pre> testplan - get_linked_tcversions(\$id,\$filters=null,\$options=null)";echo "</pre>";
lib/functions/code_testing/testplan.class.test.php:$linked_tcversions=$obj_mgr->get_linked_tcversions($tplan_id,null,$options);
lib/functions/code_testing/testplan.class.test.php:echo "<pre> testplan - get_linked_tcversions(\$id,\$filters=null,\$options=null)";echo "</pre>";
lib/functions/code_testing/testplan.class.test.php:$linked_tcversions=$obj_mgr->get_linked_tcversions($tplan_id,null,$options);
lib/functions/code_testing/testplan.class.test.php:$target_testproject->name='Testplan Class Unit Test';
lib/functions/code_testing/testplan.class.test.php:$target_testproject->color='';
lib/functions/code_testing/testplan.class.test.php:$target_testproject->options=new stdClass();
lib/functions/code_testing/testplan.class.test.php:$target_testproject->options->requirement_mgmt=1;
lib/functions/code_testing/testplan.class.test.php:$target_testproject->options->priority_mgmt=1;
lib/functions/code_testing/testplan.class.test.php:$target_testproject->options->automated_execution=1;
lib/functions/code_testing/testplan.class.test.php:$target_testproject->notes='Created to run testplan unit tests on ';
lib/functions/code_testing/testplan.class.test.php:$target_testproject->active=1;
lib/functions/code_testing/testplan.class.test.php:$target_testproject->tcasePrefix='TPlanUnitTest';
lib/functions/code_testing/testplan.class.test.php:$info=$tproject_mgr->get_by_name($target_testproject->name);
lib/functions/code_testing/testplan.class.test.php:    echo "TestProject with name <b><i>{$name}</i></b> exists!<br>Will be deleted and re-created"; 
lib/functions/code_testing/testplan.class.test.php:    $tproject_mgr->delete($info[0]['id']);
lib/functions/code_testing/testplan.class.test.php:$testproject_id=$tproject_mgr->create($target_testproject->name,
lib/functions/code_testing/testplan.class.test.php:                                      $target_testproject->color,
lib/functions/code_testing/testplan.class.test.php:                                      $target_testproject->options,
lib/functions/code_testing/testplan.class.test.php:                                      $target_testproject->notes,$target_testproject->active,
lib/functions/code_testing/testplan.class.test.php:                                      $target_testproject->tcasePrefix);
lib/functions/code_testing/testplan.class.test.php:$testplan->name='Test Plan Code Testing';
lib/functions/code_testing/testplan.class.test.php:$testplan->notes='Test Plan created running Code Testing code by TestLink Development Team';
lib/functions/code_testing/testplan.class.test.php:echo "<pre> {$object_class} - create(\$name,\$notes,\$testproject_id)";echo "</pre>";
lib/functions/code_testing/testplan.class.test.php:echo "<pre> {$object_class} - create('$testplan->name','$testplan->notes',$testproject_id)";echo "</pre>";
lib/functions/code_testing/testplan.class.test.php:$testplan->id=$obj_mgr->create($testplan->name,$testplan->notes,$testproject_id);
lib/functions/code_testing/testplan.class.test.php:$info=$obj_mgr->get_by_id($testplan->id);
lib/functions/code_testing/testplan.class.test.php:// ---------------------------------------------------------------------------------------------------------
lib/functions/code_testing/testplan.class.test.php:// ---------------------------------------------------------------------------------------------------------
lib/functions/code_testing/testplan.class.test.php:echo "<pre>Poor's Man - $object_item - code inspection tool<br>";
lib/functions/code_testing/testplan.class.test.php:echo "<pre> $object_item - constructor - $object_class(&\$db)";echo "</pre>";
lib/functions/code_testing/testplan.class.test.php:$build->name='Build Code Testing';
lib/functions/code_testing/testplan.class.test.php:$build->notes='Build created running Code Testing code by TestLink Development Team';
lib/functions/code_testing/testplan.class.test.php:echo "<pre> {$object_class} - create(\$tplan_id,\$name,\$notes = '',\$active=1,\$open=1)";echo "</pre>";
lib/functions/code_testing/testplan.class.test.php:echo "<pre> {$object_class} - create($testplan->id,'$build->name','$build->notes')";echo "</pre>";
lib/functions/code_testing/testplan.class.test.php:$build->id=$obj_mgr->create($testplan->id,$build->name,$build->notes);
lib/functions/code_testing/testplan.class.test.php:$info=$obj_mgr->get_by_id($build->id);
lib/functions/code_testing/testplan.class.test.php:echo "<pre> testplan - get_builds(\$testplan_id,\$active=null,\$open=null)";echo "</pre>";
lib/functions/code_testing/testplan.class.test.php:echo "<pre>            get_builds($testplan->id)";echo "</pre>";
lib/functions/code_testing/testplan.class.test.php:$all_builds=$tplan_mgr->get_builds($testplan->id);
lib/functions/code_testing/testplan.class.test.php:// Final Clean-Up
lib/functions/code_testing/testplan.class.test.php:$tproject_mgr->delete($testproject_id);
lib/functions/code_testing/testplan.class.test.php:echo "<pre> testplan - get_all()";echo "</pre>";
lib/functions/code_testing/testplan.class.test.php:$all_testplans_on_tl=$tplan_mgr->get_all();
lib/functions/code_testing/testplan.class.test.php:$tplan_id=-1;
lib/functions/code_testing/testplan.class.test.php:echo "<pre> testplan - get_by_id(\$id)";echo "</pre>";
lib/functions/code_testing/testplan.class.test.php:$tplan_info=$tplan_mgr->get_by_id($tplan_id);
lib/functions/code_testing/testplan.class.test.php:echo "<pre> testplan - get_by_name(\$name,\$tproject_id = 0)";echo "</pre>";
lib/functions/code_testing/testplan.class.test.php:$tplan_info=$tplan_mgr->get_by_name($tplan_name);
lib/functions/code_testing/testplan.class.test.php:echo "<pre> testplan - get_builds(\$tplan_id,\$active=null,\$open=null)";echo "</pre>";
lib/functions/code_testing/testplan.class.test.php:$all_builds=$tplan_mgr->get_builds($tplan_id);
lib/functions/code_testing/testplan.class.test.php:echo "<pre> testplan - count_testcases(\$tplan_id)";echo "</pre>";
lib/functions/code_testing/testplan.class.test.php:$count_testcases=$tplan_mgr->count_testcases($tplan_id);
lib/functions/code_testing/testplan.class.test.php:// echo "<pre> testplan - get_linked_tcversions(\$tplan_id,\$tcase_id=null,\$keyword_id=0,\$executed=null,
lib/functions/code_testing/testplan.class.test.php:echo "<pre> testplan - get_linked_tcversions(\$id,\$filters=null,\$options=null)";echo "</pre>";
lib/functions/code_testing/testplan.class.test.php:$linked_tcversions=$tplan_mgr->get_linked_tcversions($tplan_id);
lib/functions/code_testing/testplan.class.test.php:// -------------------------------------------------------------------------------------------
lib/functions/code_testing/testplan.class.test.php:echo "<pre> build manager - constructor - build_mgr(&\$db)";echo "</pre>";
lib/functions/code_testing/testplan.class.test.php:$all_builds=$tplan_mgr->get_builds($tplan_id);
lib/functions/code_testing/testplan.class.test.php:echo "<pre> build manager - get_by_id(\$id)";echo "</pre>";
lib/functions/code_testing/testplan.class.test.php:$build_info=$build_mgr->get_by_id($build_id);
lib/functions/code_testing/testplan.class.test.php:echo "<pre> testplan - getKeywords(\$testproject_id,\$keywordID = null)";echo "</pre>";
lib/functions/code_testing/testplan.class.test.php:$keywords=$tplan_mgr->getKeywords($tplan_id);
lib/functions/code_testing/testplan.class.test.php:echo "<pre> testplan - get_keywords_map(\$testproject_id)";echo "</pre>";
lib/functions/code_testing/testplan.class.test.php:$keywords_map=$tplan_mgr->get_keywords_map($tplan_id);
lib/functions/code_testing/testplan.class.test.php:echo "<pre> testplan - get_keywords_tcases(\$testproject_id, \$keyword_id=0)";echo "</pre>";
lib/functions/code_testing/testplan.class.test.php:$keywords_tcases=$tplan_mgr->get_keywords_tcases($tplan_id);
lib/functions/code_testing/testplan.class.test.php:echo "<pre> testplan - get_linked_custom_fields(\$id,\$node_type=null)";echo "</pre>";
lib/functions/code_testing/testplan.class.test.php:$linked_custom_fields=$tplan_mgr->get_linked_custom_fields($tplan_id);
lib/functions/code_testing/testplan.class.test.php:echo "<pre> testplan - gen_combo_test_suites(\$id,\$exclude_branches=null,\$mode='dotted')";echo "</pre>";
lib/functions/code_testing/testplan.class.test.php:$combo_test_suites=$tplan_mgr->gen_combo_test_suites($tplan_id,null,'dotted');
lib/functions/code_testing/testplan.class.test.php:$combo_test_suites=$tplan_mgr->gen_combo_test_suites($tplan_id,null,'array');
lib/functions/code_testing/testplan.class.test.php:echo "<pre> testplan - getReqSpec(\$testproject_id, \$id = null)";echo "</pre>";
lib/functions/code_testing/testplan.class.test.php:$requirement_spec=$tplan_mgr->getReqSpec($tplan_id);
lib/functions/code_testing/testplan.class.test.php:$requirement_spec=$tplan_mgr->getReqSpec($tplan_id,$srs_id);
lib/functions/code_testing/testplan.class.test.php:echo "<pre> testplan - get_srs_by_title(\$testproject_id,\$title,\$ignore_case=0)";echo "</pre>";
lib/functions/code_testing/testplan.class.test.php:$srs_by_title=$tplan_mgr->get_srs_by_title($tplan_id,$srs_title);
lib/functions/code_testing/requirement_mgr.class.test.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/code_testing/requirement_mgr.class.test.php:echo "<pre> {$classUnderTest}.class - constructor - $classUnderTest(&\$db)";echo "</pre>";
lib/functions/code_testing/requirement_mgr.class.test.php:// echo "<pre> {$method2test} - $$method2test(&\$db)";echo "</pre>";
lib/functions/code_testing/requirement_mgr.class.test.php:echo "<pre> {$method2test} - $$method2test(&\$reqVersionID,\$value)";echo "</pre>";
lib/functions/code_testing/requirement_mgr.class.test.php:echo "<pre> {$method2test} - $$method2test($reqVersionID,$value)";echo "</pre>";
lib/functions/code_testing/requirement_mgr.class.test.php:$obj_mgr->$method2test($reqVersionID,$value);
lib/functions/code_testing/requirement_mgr.class.test.php:$req_version = $obj_mgr->get_by_id($reqID);
lib/functions/code_testing/requirement_mgr.class.test.php:echo "<pre> {$method2test} - $$method2test(&\$reqVersionID,\$value)";echo "</pre>";
lib/functions/code_testing/requirement_mgr.class.test.php:echo "<pre> {$method2test} - $$method2test($reqVersionID,$value)";echo "</pre>";
lib/functions/code_testing/requirement_mgr.class.test.php:$obj_mgr->$method2test($reqVersionID,$value);
lib/functions/code_testing/requirement_mgr.class.test.php:$req_version = $obj_mgr->get_by_id($reqID);
lib/functions/code_testing/requirement_mgr.class.test.php:echo "<pre> {$method2test} - $$method2test(&\$reqVersionID,\$value)";echo "</pre>";
lib/functions/code_testing/requirement_mgr.class.test.php:echo "<pre> {$method2test} - $$method2test($reqVersionID,$value)";echo "</pre>";
lib/functions/code_testing/requirement_mgr.class.test.php:$obj_mgr->$method2test($reqVersionID,$value);
lib/functions/code_testing/requirement_mgr.class.test.php:$req_version = $obj_mgr->get_by_id($reqID);
lib/functions/code_testing/requirement_mgr.class.test.php:echo "<pre> {$method2test} - $$method2test(&\$reqVersionID,\$value)";echo "</pre>";
lib/functions/code_testing/requirement_mgr.class.test.php:echo "<pre> {$method2test} - $$method2test($reqVersionID,$value)";echo "</pre>";
lib/functions/code_testing/requirement_mgr.class.test.php:$obj_mgr->$method2test($reqVersionID,$value);
lib/functions/code_testing/requirement_mgr.class.test.php:$req_version = $obj_mgr->get_by_id($reqID);
lib/functions/code_testing/requirement_mgr.class.test.php:echo "<pre> {$method2test} - $$method2test(&\$reqVersionID,\$value)";echo "</pre>";
lib/functions/code_testing/requirement_mgr.class.test.php:echo "<pre> {$method2test} - $$method2test($reqVersionID,$value)";echo "</pre>";
lib/functions/code_testing/requirement_mgr.class.test.php:$obj_mgr->$method2test($reqVersionID,$value);
lib/functions/code_testing/requirement_mgr.class.test.php:$req_version = $obj_mgr->get_by_id($reqID);
lib/functions/code_testing/requirement_mgr.class.test.php:echo "<pre> {$method2test} - $$method2test(&\$reqVersionID,\$value)";echo "</pre>";
lib/functions/code_testing/requirement_mgr.class.test.php:echo "<pre> {$method2test} - $$method2test($reqVersionID,$value)";echo "</pre>";
lib/functions/code_testing/requirement_mgr.class.test.php:$obj_mgr->$method2test($reqVersionID,$value);
lib/functions/code_testing/requirement_mgr.class.test.php:$req_version = $obj_mgr->get_by_id($reqID);
lib/functions/code_testing/requirement_mgr.class.test.php:echo "<pre> {$method2test} - $$method2test(&\$reqVersionID,\$value)";echo "</pre>";
lib/functions/code_testing/requirement_mgr.class.test.php:echo "<pre> {$method2test} - $$method2test($reqVersionID,$value)";echo "</pre>";
lib/functions/code_testing/requirement_mgr.class.test.php:$obj_mgr->$method2test($reqVersionID,$value);
lib/functions/code_testing/requirement_mgr.class.test.php:$req_version = $obj_mgr->get_by_id($reqID);
lib/functions/code_testing/requirement_mgr.class.test.php:$value = -18;
lib/functions/code_testing/requirement_mgr.class.test.php:echo "<pre> {$method2test} - $$method2test(&\$reqVersionID,\$value)";echo "</pre>";
lib/functions/code_testing/requirement_mgr.class.test.php:echo "<pre> {$method2test} - $$method2test($reqVersionID,$value)";echo "</pre>";
lib/functions/code_testing/requirement_mgr.class.test.php:$obj_mgr->$method2test($reqVersionID,$value);
lib/functions/code_testing/requirement_mgr.class.test.php:$req_version = $obj_mgr->get_by_id($reqID);
lib/functions/code_testing/requirement_mgr.class.test.php:echo "<pre> {$method2test} - $$method2test(&\$reqVersionID,\$value)";echo "</pre>";
lib/functions/code_testing/requirement_mgr.class.test.php:echo "<pre> {$method2test} - $$method2test($reqVersionID,$value)";echo "</pre>";
lib/functions/code_testing/requirement_mgr.class.test.php:$obj_mgr->$method2test($reqVersionID,$value);
lib/functions/code_testing/requirement_mgr.class.test.php:$req_version = $obj_mgr->get_by_id($reqID);
lib/functions/code_testing/testproject.class.test.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/code_testing/testproject.class.test.php:echo "<pre> testproject - constructor - testproject(&\$db)";echo "</pre>";
lib/functions/code_testing/testproject.class.test.php:$options->requirement_mgmt = 1;
lib/functions/code_testing/testproject.class.test.php:$options->priority_mgmt = 1;
lib/functions/code_testing/testproject.class.test.php:$options->automated_execution = 1;
lib/functions/code_testing/testproject.class.test.php://$new_id = $tproject_mgr->create($name,$color,$options,$notes,$active,$tcasePrefix,$is_public);
lib/functions/code_testing/testproject.class.test.php://$tproject_mgr->update($new_id, $name, $color, $options->requirement_mgmt, 
lib/functions/code_testing/testproject.class.test.php://                      $options->priority_mgmt, $options->automated_execution, 
lib/functions/code_testing/testproject.class.test.php://new dBug($tproject_mgr->get_by_id($new_id));
lib/functions/code_testing/testproject.class.test.php:$tproject_mgr->copy_as(9,$new_id,1);
lib/functions/code_testing/testproject.class.test.php:echo "<pre> testproject - getKeywords(\$testproject_id,\$keywordID = null)";echo "</pre>";
lib/functions/code_testing/testproject.class.test.php:$keywords=$tproject_mgr->getKeywords($tproject_id);
lib/functions/code_testing/testproject.class.test.php:echo "<pre> testproject - get_first_level_test_suites($tproject_id,$mode='simple')";echo "</pre>";
lib/functions/code_testing/testproject.class.test.php:$info=$tproject_mgr->get_first_level_test_suites($tproject_id,$mode='simple');
lib/functions/code_testing/testproject.class.test.php:echo "<pre> testproject - get_keywords_map(\$testproject_id)";echo "</pre>";
lib/functions/code_testing/testproject.class.test.php:$keywords_map=$tproject_mgr->get_keywords_map($tproject_id);
lib/functions/code_testing/testproject.class.test.php:echo "<pre> testproject - get_keywords_tcases(\$testproject_id, \$keyword_id=0)";echo "</pre>";
lib/functions/code_testing/testproject.class.test.php:$keywords_tcases=$tproject_mgr->get_keywords_tcases($tproject_id);
lib/functions/code_testing/testproject.class.test.php:echo "<pre> testproject - get_linked_custom_fields(\$id,\$node_type=null)";echo "</pre>";
lib/functions/code_testing/testproject.class.test.php:$linked_custom_fields=$tproject_mgr->get_linked_custom_fields($tproject_id);
lib/functions/code_testing/testproject.class.test.php:echo "<pre> testproject - gen_combo_test_suites(\$id,\$exclude_branches=null,\$mode='dotted')";echo "</pre>";
lib/functions/code_testing/testproject.class.test.php:$combo_test_suites=$tproject_mgr->gen_combo_test_suites($tproject_id,null,'dotted');
lib/functions/code_testing/testproject.class.test.php:$combo_test_suites=$tproject_mgr->gen_combo_test_suites($tproject_id,null,'array');
lib/functions/code_testing/testproject.class.test.php:echo "<pre> testproject - getReqSpec(\$testproject_id, \$id = null)";echo "</pre>";
lib/functions/code_testing/testproject.class.test.php:$requirement_spec=$tproject_mgr->getReqSpec($tproject_id);
lib/functions/code_testing/testproject.class.test.php:$requirement_spec=$tproject_mgr->getReqSpec($tproject_id,$srs_id);
lib/functions/code_testing/testproject.class.test.php:echo "<pre> testproject - get_srs_by_title(\$testproject_id,\$title,\$ignore_case=0)";echo "</pre>";
lib/functions/code_testing/testproject.class.test.php:$srs_by_title=$tproject_mgr->get_srs_by_title($tproject_id,$srs_title);
lib/functions/code_testing/tree.class.test.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/code_testing/tree.class.test.php:echo "<pre> tree - constructor - tree(&\$db)";echo "</pre>";
lib/functions/code_testing/tree.class.test.php:echo "<pre> tree - get_available_node_types()";echo "</pre>";
lib/functions/code_testing/tree.class.test.php:$available_node_types = $tree_mgr->get_available_node_types();
lib/functions/code_testing/tree.class.test.php:echo "<pre> tree - get_node_hierarchy_info(\$node_id)";echo "</pre>";
lib/functions/code_testing/tree.class.test.php:$node_hierachy_info = $tree_mgr->get_node_hierarchy_info($node_id);
lib/functions/code_testing/tree.class.test.php:echo "<pre> tree - get_subtree(\$node_id)";echo "</pre>";
lib/functions/code_testing/tree.class.test.php:$subtree = $tree_mgr->get_subtree($node_id);
lib/functions/code_testing/tree.class.test.php:echo "<pre> tree - get_subtree(\$node_id,\$exclude_node_types=null," . "<br>" .
lib/functions/code_testing/tree.class.test.php:$subtree = $tree_mgr->get_subtree($node_id,null,null,null,'',false);
lib/functions/code_testing/tree.class.test.php:$subtree = $tree_mgr->get_subtree($node_id,null,null,null,'',true);
lib/functions/code_testing/tree.class.test.php:echo "<pre> tree - get_subtree_list(\$node_id)";echo "</pre>";
lib/functions/code_testing/tree.class.test.php:$subtree_list = $tree_mgr->get_subtree_list($node_id);
lib/functions/code_testing/tree.class.test.php:echo "<pre> tree - get_path(\$node_id,\$to_node_id = null,\$format = 'full') ";echo "</pre>";
lib/functions/code_testing/tree.class.test.php:echo "<pre> tree - get_path($path_begin_node_id) ";echo "</pre>";
lib/functions/code_testing/tree.class.test.php:$path=$tree_mgr->get_path($path_begin_node_id); 
lib/functions/code_testing/tree.class.test.php:echo "<pre> tree - get_path(\$node_id,\$to_node_id = null,\$format = 'full') ";echo "</pre>";
lib/functions/code_testing/tree.class.test.php:echo "<pre> tree - get_path($path_begin_node_id,TREE_ROOT,FORMAT_FULL) ";echo "</pre>";
lib/functions/code_testing/tree.class.test.php:$path=$tree_mgr->get_path($path_begin_node_id,TREE_ROOT,FORMAT_FULL); 
lib/functions/code_testing/tree.class.test.php:echo "<pre> tree - get_path($path_begin_node_id,TREE_ROOT,FORMAT_SIMPLE) ";echo "</pre>";
lib/functions/code_testing/tree.class.test.php:$path=$tree_mgr->get_path($path_begin_node_id,TREE_ROOT,FORMAT_SIMPLE); 
lib/functions/code_testing/tree.class.test.php:echo "<pre> tree - get_path($path_begin_node_id,$path_end_node_id,FORMAT_FULL) ";echo "</pre>";
lib/functions/code_testing/tree.class.test.php:$path=$tree_mgr->get_path($path_begin_node_id,$path_end_node_id,FORMAT_FULL); 
lib/functions/code_testing/tree.class.test.php:echo "<pre> tree - get_children(\$node_id)";echo "</pre>";
lib/functions/code_testing/tree.class.test.php:$children = $tree_mgr->get_children($node_id);
lib/functions/code_testing/tree.class.test.php:echo "<pre> tree - get_node_hierarchy_info(\$node_id) ";echo "</pre>";
lib/functions/code_testing/tree.class.test.php:$node_hierachy_info=$tree_mgr->get_node_hierarchy_info($node_id) ;
lib/functions/code_testing/cfield_mgr.class.test.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/code_testing/cfield_mgr.class.test.php: * rev : 20080811 - franciscom
lib/functions/code_testing/cfield_mgr.class.test.php:echo "<pre>Poor's Man - $object_item - code inspection tool<br>";
lib/functions/code_testing/cfield_mgr.class.test.php:echo "<pre> $object_item - constructor - $object_class(&\$db)";echo "</pre>";
lib/functions/code_testing/cfield_mgr.class.test.php:$cf=$obj_mgr->get_linked_cfields_at_testplan_design($tproject_id,$enabled);
lib/functions/tree.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/tree.class.php: * @copyright 	2005-2009, TestLink community 
lib/functions/tree.class.php: * 20100317 - franciscom - get_node_hierarchy_info() interface changes.
lib/functions/tree.class.php: * 20100306 - franciscom - get_subtree_list() new argument to change output type
lib/functions/tree.class.php: *						   new method() - getAllItemsID - BUGID 0003003: EXTJS does not count # req's
lib/functions/tree.class.php: * 20100209 - franciscom - BUGID 3147 - Delete test project with requirements defined crashed with memory exhausted
lib/functions/tree.class.php: * 20091220 - franciscom - new method createHierarchyMap()
lib/functions/tree.class.php: * 20090926 - franciscom - get_subtree() - interface changes
lib/functions/tree.class.php: * 20090923 - franciscom - get_full_path_verbose() - fixed bug
lib/functions/tree.class.php: * 20090905 - franciscom - get_full_path_verbose() new options
lib/functions/tree.class.php: * 20090801 - franciscom - new method nodeNameExists()
lib/functions/tree.class.php: * 20090726 - franciscom - BUGID 2728 
lib/functions/tree.class.php: * 20090607 - franciscom - refactoring to manage table prefix
lib/functions/tree.class.php: * 20090413 - franciscom - BUGID - get_full_path_verbose() interface changes
lib/functions/tree.class.php: * 20090313 - franciscom - added getTreeRoot()
lib/functions/tree.class.php: * 20090207 - franciscom - new method check_name_is_unique()
lib/functions/tree.class.php: * 20081227 - franciscom - new method - get_full_path_verbose()
lib/functions/tree.class.php:	// configurable values - pseudoconstants
lib/functions/tree.class.php:		$this->db = &$db;
lib/functions/tree.class.php:		$this->node_descr_id = array_flip($this->node_types);
lib/functions/tree.class.php:        $this->object_table = $this->tables['nodes_hierarchy'];
lib/functions/tree.class.php:			$sql = " SELECT * FROM {$this->tables['node_types']} "; 
lib/functions/tree.class.php:			$s_nodeTypes = $this->db->fetchColumnsIntoMap($sql,"description","id");
lib/functions/tree.class.php:		$this->new_node(null,$this->ROOT_NODE_TYPE_ID,$name,1);
lib/functions/tree.class.php:		return $this->db->insert_id($this->object_table);
lib/functions/tree.class.php:                      default=0 -> id must be created automatically.
lib/functions/tree.class.php:		$sql = "INSERT INTO {$this->object_table} " .
lib/functions/tree.class.php:		$values=" VALUES('" . $this->db->prepare_string($name). "'," .
lib/functions/tree.class.php:		$this->db->exec_query($sql);
lib/functions/tree.class.php:		return ($this->db->insert_id($this->object_table));
lib/functions/tree.class.php:	  	$sql = "SELECT * FROM {$this->object_table} WHERE id";
lib/functions/tree.class.php:	  	$getidx=-1;
lib/functions/tree.class.php:      	  	$result=$this->db->fetchRowsIntoMap($sql,'id');    
lib/functions/tree.class.php:			$rs=$this->db->get_recordset($sql);
lib/functions/tree.class.php:	  	$this->_get_subtree_list($node_id,$nodes,$node_type_id);
lib/functions/tree.class.php:		$sql = "SELECT * from {$this->object_table} WHERE parent_id = {$node_id}";
lib/functions/tree.class.php:		$result = $this->db->exec_query($sql);
lib/functions/tree.class.php:		if (!$result || !$this->db->num_rows($result))
lib/functions/tree.class.php:		while($row = $this->db->fetch_array($result))
lib/functions/tree.class.php:			$this->_get_subtree_list($row['id'],$node_list,$node_type_id);	
lib/functions/tree.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/tree.class.php:		$children = $this->get_subtree_list($node_id);
lib/functions/tree.class.php:		$sql = "/* $debugMsg */ DELETE FROM {$this->object_table} WHERE id IN ({$id2del})";
lib/functions/tree.class.php:		$result = $this->db->exec_query($sql);
lib/functions/tree.class.php:              1 - destination node (node B) will be NOT INCLUDED in result.
lib/functions/tree.class.php:              2 - This is refactoring of original get_path method.
lib/functions/tree.class.php:           [to_node_id]: destination node. default null -> path to tree root.
lib/functions/tree.class.php:                               id=1   <--- Tree Root
lib/functions/tree.class.php:                                 + ------+
lib/functions/tree.class.php:		$this->_get_path($node_id,$the_path,$to_node_id,$format); 
lib/functions/tree.class.php:	         [to_node_id]: destination node. default null -> path to tree root.
lib/functions/tree.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/tree.class.php:		       " SELECT * from {$this->object_table} " .
lib/functions/tree.class.php:		$result = $this->db->exec_query($sql);
lib/functions/tree.class.php:		if( $this->db->num_rows($result) == 0 )
lib/functions/tree.class.php:		while ( $row = $this->db->fetch_array($result) )
lib/functions/tree.class.php:				$node_table = $this->node_tables[$this->node_types[$row['node_type_id']]];
lib/functions/tree.class.php:				$this->_get_path($row['parent_id'],$node_list,$to_node_id,$format);
lib/functions/tree.class.php:	  returns: 1 -> operation OK
lib/functions/tree.class.php:	  rev : 20080330 - franciscom - changed node_id type, to allow bulk operation.
lib/functions/tree.class.php:    	$debugMsg='Class:' .__CLASS__ . ' - Method:' . __FUNCTION__ . ' :: ';
lib/functions/tree.class.php:		$sql = "/* $debugMsg */ UPDATE {$this->object_table} SET parent_id = {$parent_id} {$where_clause}";
lib/functions/tree.class.php:		$result = $this->db->exec_query($sql);
lib/functions/tree.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/tree.class.php:	  	$sql = "/* $debugMsg */ SELECT * from {$this->object_table} " .
lib/functions/tree.class.php:	  	$result = $this->db->exec_query($sql);
lib/functions/tree.class.php:	  	if( $this->db->num_rows($result) == 0 )
lib/functions/tree.class.php:	  	while ( $row = $this->db->fetch_array($result) )
lib/functions/tree.class.php:	  	  	$node_table = $this->node_tables[$this->node_types[$row['node_type_id']]];
lib/functions/tree.class.php:	  	  	if( !isset($exclude_node_types[$this->node_types[$row['node_type_id']]]))
lib/functions/tree.class.php:	  returns: -
lib/functions/tree.class.php:		  	$sql = "UPDATE {$this->object_table} SET node_order = {$order} WHERE id = {$node_id}";
lib/functions/tree.class.php:		  	$result = $this->db->exec_query($sql);
lib/functions/tree.class.php:	  returns: -
lib/functions/tree.class.php:	           " FROM {$this->object_table} NH, {$this->tables['node_types']} NT " .
lib/functions/tree.class.php:	    $children=$this->db->get_recordset($sql);
lib/functions/tree.class.php:	        $new_order=$this->getBottomOrder($parent_id)+1;
lib/functions/tree.class.php:	    $this->change_order_bulk($no);    
lib/functions/tree.class.php:	         " FROM {$this->object_table} " . 
lib/functions/tree.class.php:	    $rs=$this->db->get_recordset($sql);
lib/functions/tree.class.php:	                              default: null -> no exclusion filter will be applied.
lib/functions/tree.class.php:	                              default: null -> no exclusion filter will be applied.
lib/functions/tree.class.php:	                            default: null -> no exclusion filter will be applied.
lib/functions/tree.class.php:	                             default: null -> no action taken.
lib/functions/tree.class.php:	                      default: false -> a flat array will be generated
lib/functions/tree.class.php:	                               true  -> a map with recursive structure will be generated.
lib/functions/tree.class.php:	                             childNodes -> (array)
lib/functions/tree.class.php:	       20090311 - franciscom
lib/functions/tree.class.php:	       20080614 - franciscom
lib/functions/tree.class.php:	      		$exclude[] = $this->node_descr_id[$the_key];
lib/functions/tree.class.php:		    $this->_get_subtree_rec($node_id,$the_subtree,$not_in_clause,
lib/functions/tree.class.php:		    $this->_get_subtree($node_id,$the_subtree,$not_in_clause,
lib/functions/tree.class.php:	// 20061008 - franciscom - added ID in order by clause
lib/functions/tree.class.php:	// 20060312 - franciscom
lib/functions/tree.class.php:	  	    $sql = " SELECT * from {$this->object_table} " .
lib/functions/tree.class.php:	             "                FROM {$this->object_table} NH, {$this->tables['node_types']} NT" .
lib/functions/tree.class.php:	             "                FROM {$this->object_table} NHA, {$this->object_table} NHB," .
lib/functions/tree.class.php:	             "                     {$this->tables['testplan_tcversions']}  T,{$this->tables['node_types']} NT" .
lib/functions/tree.class.php:	    $result = $this->db->exec_query($sql);
lib/functions/tree.class.php:	    if( $this->db->num_rows($result) == 0 )
lib/functions/tree.class.php:	    while ( $row = $this->db->fetch_array($result) )
lib/functions/tree.class.php:				$node_table = $this->node_tables[$this->node_types[$row['node_type_id']]];
lib/functions/tree.class.php:				if( !isset($exclude_children_of[$this->node_types[$row['node_type_id']]]) && 
lib/functions/tree.class.php:				  $this->_get_subtree($row['id'],$node_list,$and_not_in_clause,
lib/functions/tree.class.php:	// 20061008 - franciscom - added ID in order by clause
lib/functions/tree.class.php:		  	$s_testCaseNodeTypeID = $this->node_descr_id['testcase'];
lib/functions/tree.class.php:	  	    	$sql = " SELECT * FROM {$this->object_table} " .
lib/functions/tree.class.php:			     "                FROM {$this->tables['nodes_hierarchy']}  NH" .
lib/functions/tree.class.php:			     "                FROM {$this->tables['nodes_hierarchy']} NHA, " .
lib/functions/tree.class.php:			     "                     {$this->tables['nodes_hierarchy']} NHB," .
lib/functions/tree.class.php:			     "                     {$this->tables['testplan_tcversions']} T" .
lib/functions/tree.class.php:	  	$result = $this->db->exec_query($sql);
lib/functions/tree.class.php:	    while($row = $this->db->fetch_array($result))
lib/functions/tree.class.php:	  		$nodeType = $this->node_types[$nodeTypeID];
lib/functions/tree.class.php:	  		    	        $node_table = $this->node_tables[$nodeType];
lib/functions/tree.class.php:		  				$this->_get_subtree_rec($rowID,$node,$and_not_in_clause,
lib/functions/tree.class.php:    	$debugMsg='Class:' .__CLASS__ . ' - Method:' . __FUNCTION__ . ' :: ';
lib/functions/tree.class.php:	        $path_to[$item_id]['name']=$this->get_path($item_id,$goto_root,$path_format);
lib/functions/tree.class.php:	    // BUGID 2728 - added check to avoid crash
lib/functions/tree.class.php:	    	     " SELECT id,name FROM {$this->tables['nodes_hierarchy']}  WHERE id IN ({$unique_nodes})"; 
lib/functions/tree.class.php:	    	$decode=$this->db->fetchRowsIntoMap($sql,'id');
lib/functions/tree.class.php:    	$debugMsg='Class:' .__CLASS__ . ' - Method:' . __FUNCTION__ . ' :: ';
lib/functions/tree.class.php:        		       " SELECT parent_id FROM {$this->object_table} NHA " .
lib/functions/tree.class.php:    	        $rs = $this->db->get_recordset($sql);
lib/functions/tree.class.php:		       " SELECT count(0) AS qty FROM {$this->object_table} NHA " .
lib/functions/tree.class.php:    		   " AND NHA.name = '" . $this->db->prepare_string($name) . "'" .
lib/functions/tree.class.php:		$rs = $this->db->get_recordset($sql);
lib/functions/tree.class.php:		$path = $this->get_path($node_id);
lib/functions/tree.class.php:	 * BUGID 3147 - Delete test project with requirements defined crashed with memory exhausted
lib/functions/tree.class.php:			$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/tree.class.php:		$sql = "/* $debugMsg */ SELECT NH.* FROM {$this->object_table} NH " .
lib/functions/tree.class.php:		$rs = $this->db->get_recordset($sql);
lib/functions/tree.class.php:				$nodeType = $this->node_types[$nodeTypeID];
lib/functions/tree.class.php:				$nodeClassName = $this->class_name[$nodeTypeID];
lib/functions/tree.class.php:						$this->delete_subtree_objects(null,$rowID,$and_not_in_clause,
lib/functions/tree.class.php:							$item_mgr = new $nodeClassName($this->db);
lib/functions/tree.class.php:							$item_mgr->delete($rowID);        
lib/functions/tree.class.php:			$children = $this->db->get_recordset($sql);
lib/functions/tree.class.php:				$sql2 = "/* $debugMsg */ SELECT NH.* FROM {$this->object_table} NH " .
lib/functions/tree.class.php:				$node_info = $this->db->get_recordset($sql2);
lib/functions/tree.class.php:				if( isset($this->class_name[$node_info[0]['node_type_id']]) )
lib/functions/tree.class.php:					$className = $this->class_name[$node_info[0]['node_type_id']];
lib/functions/tree.class.php:						$item_mgr = new $className($this->db);
lib/functions/tree.class.php:						$item_mgr->delete($node_id);        
lib/functions/tree.class.php:					// need to signal error - TO BE DONE
lib/functions/tree.class.php:              [$mode]: dotted -> $level number of dot characters are appended to
lib/functions/tree.class.php:                               id=1   <--- Tree Root = Level 0
lib/functions/tree.class.php:                                 + ------+
lib/functions/tree.class.php:                            id=9   id=2   id=8  <----- Level 1
lib/functions/tree.class.php:                                     id=3       <----- Level 2
lib/functions/tree.class.php:                                       id=4     <----- Level 3
lib/functions/tree.class.php:                                9 	.20071014-16:22:07 TS1
lib/functions/tree.class.php:                     array  -> key: item id (= node id on tree).
lib/functions/tree.class.php:                                9	  array(name => '20071014-16:22:07 TS1',level =>1)
lib/functions/tree.class.php: 	 * based on code from testproject->get_all_testcases_id
lib/functions/tree.class.php:		       " SELECT id,node_type_id from {$this->tables['nodes_hierarchy']} " .
lib/functions/tree.class.php:		$result = $this->db->exec_query($sql);
lib/functions/tree.class.php:			while($row = $this->db->fetch_array($result))
lib/functions/tree.class.php:				$this->getAllItemsID($containerSet,$itemSet,$coupleTypes);
lib/functions/assignment_mgr.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/assignment_mgr.class.php: * @copyright 	2007-2009, TestLink community 
lib/functions/assignment_mgr.class.php: * 20100722 - asimon - BUGID 3406 - added copy_assignments(), delete_by_build_id(),
lib/functions/assignment_mgr.class.php:	    	$sql = "SELECT * FROM {$this->tables['assignment_types']}";
lib/functions/assignment_mgr.class.php:			$hash_types = $this->db->fetchRowsIntoMap($sql,$key_field);
lib/functions/assignment_mgr.class.php:			$sql = " SELECT * FROM {$this->tables['assignment_status']} "; 
lib/functions/assignment_mgr.class.php:			$hash_types = $this->db->fetchRowsIntoMap($sql,$key_field);
lib/functions/assignment_mgr.class.php:		$sql = " DELETE FROM {$this->tables['user_assignments']}  {$where_clause}"; 
lib/functions/assignment_mgr.class.php:		$result = $this->db->exec_query($sql);
lib/functions/assignment_mgr.class.php:  	 *   20100714 - asimon - BUGID 3406: modified to include build ID
lib/functions/assignment_mgr.class.php:			$sql = "INSERT INTO {$this->tables['user_assignments']} " .
lib/functions/assignment_mgr.class.php:			$this->db->exec_query($sql);
lib/functions/assignment_mgr.class.php:	 *   20100714 - asimon - BUGID 3406: modified to include build ID
lib/functions/assignment_mgr.class.php:			$sql = "UPDATE {$this->tables['user_assignments']} SET ";
lib/functions/assignment_mgr.class.php:			// BUGID 3406 - added build_id
lib/functions/assignment_mgr.class.php:			$this->db->exec_query($sql);
lib/functions/assignment_mgr.class.php:		$types = $this->get_available_types();
lib/functions/assignment_mgr.class.php:	    $sql = " SELECT COUNT(id) AS count FROM {$this->tables['user_assignments']} " .
lib/functions/assignment_mgr.class.php:	    $count = $this->db->fetchOneValue($sql);
lib/functions/assignment_mgr.class.php:		$types = $this->get_available_types();
lib/functions/assignment_mgr.class.php:		       " FROM {$this->tables['user_assignments']} UA " .
lib/functions/assignment_mgr.class.php:		       " LEFT OUTER JOIN {$this->tables['testplan_tcversions']} TPTCV " .
lib/functions/assignment_mgr.class.php:		       " LEFT OUTER JOIN {$this->tables['executions']} E " .
lib/functions/assignment_mgr.class.php:			$count = $this->db->fetchOneValue($sql);
lib/functions/assignment_mgr.class.php:		$ua = $this->tables['user_assignments'];
lib/functions/assignment_mgr.class.php:		$creation_ts = $this->db->db_now();
lib/functions/assignment_mgr.class.php:		$types = $this->get_available_types();
lib/functions/assignment_mgr.class.php:			$this->delete_by_build_id($target_build_id, $delete_all_types);
lib/functions/assignment_mgr.class.php:		$this->db->exec_query($sql);
lib/functions/assignment_mgr.class.php:			$types = $this->get_available_types();
lib/functions/assignment_mgr.class.php:		$sql = " DELETE FROM {$this->tables['user_assignments']} " .
lib/functions/assignment_mgr.class.php:		$this->db->exec_query($sql);
lib/functions/roles.inc.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/roles.inc.php: * 'guest' 	- testplan_metrics, mgt_view_tc, mgt_view_key
lib/functions/roles.inc.php: * 'tester' - testplan_execute, testplan_metrics
lib/functions/roles.inc.php: * 'senior tester' 	- testplan_execute, testplan_metrics, mgt_view_tc, mgt_modify_tc, mgt_view_key
lib/functions/roles.inc.php: * 'lead' 	- testplan_execute, testplan_create_build, testplan_metrics, testplan_planning, testplan_assign_rights,
lib/functions/roles.inc.php: * 'admin' 	- testplan_execute, testplan_create_build, testplan_metrics, testplan_planning, testplan_assign_rights,
lib/functions/roles.inc.php: * 	mgt_view_tc, testplan_metrics, mgt_view_key - allow browse basic data
lib/functions/roles.inc.php: * 	testplan_execute - edit Test Results
lib/functions/roles.inc.php: * 	mgt_modify_tc - edit Test Cases
lib/functions/roles.inc.php: * 	mgt_modify_key - edit Keywords
lib/functions/roles.inc.php: * 	mgt_modify_req - edit Requirements
lib/functions/roles.inc.php: * 			- Test Leader plans/prepares a testing
lib/functions/roles.inc.php: * 	mgt_modify_product, mgt_users - just Admin edits Products and Users
lib/functions/roles.inc.php: * @copyright 	2006-2009, TestLink community 
lib/functions/roles.inc.php: *	20100307 - franciscom - removed wrong right due to copy/paste BUGID 3249
lib/functions/roles.inc.php: *	20100220 - franciscom - added inventory rights
lib/functions/roles.inc.php: *  20090425 - franciscom - BUGID 2417 - new right for test projects
lib/functions/roles.inc.php: *  20081030 - franciscom - added new rights -> system
lib/functions/roles.inc.php: *  20070901 - franciscom - BUGID 1016
lib/functions/roles.inc.php: *  20070819 - franciscom - added get_tplan_effective_role(), get_tproject_effective_role()
lib/functions/roles.inc.php:	return $_SESSION['currentUser']->hasRight($db,$roleQuestion,$tprojectID,$tplanID);
lib/functions/roles.inc.php: *          layer 1 - user           <--- uplayer
lib/functions/roles.inc.php: *          layer 2 - test project   <--- in this fuction we are interested in this level.
lib/functions/roles.inc.php: *          layer 3 - test plan
lib/functions/roles.inc.php: *                 login                (from users table - useful for debug)
lib/functions/roles.inc.php: *                 user_role_id         (from users table - useful for debug)
lib/functions/roles.inc.php:			$effectiveRoleID = $user->globalRoleID;
lib/functions/roles.inc.php:			$effectiveRole = $user->globalRole;
lib/functions/roles.inc.php:			if(isset($user->tprojectRoles[$tproject_id]))
lib/functions/roles.inc.php:				$effectiveRoleID = $user->tprojectRoles[$tproject_id]->dbID;
lib/functions/roles.inc.php:				$effectiveRole = $user->tprojectRoles[$tproject_id];
lib/functions/roles.inc.php:			$effective_role[$id] = array('login' => $user->login,
lib/functions/roles.inc.php:										 'user_role_id' => $user->globalRoleID,
lib/functions/roles.inc.php:										 'uplayer_role_id' => $user->globalRoleID,
lib/functions/roles.inc.php: *          layer 1 - user           <--- uplayer
lib/functions/roles.inc.php: *          layer 2 - test project   <--- in this fuction we are interested in this level.
lib/functions/roles.inc.php: *          layer 3 - test plan
lib/functions/roles.inc.php:                  login                (from users table - useful for debug)
lib/functions/roles.inc.php:                  user_role_id         (from users table - useful for debug)
lib/functions/roles.inc.php:                  uplayer_is_inherited 1 -> uplayer role is inherited 
lib/functions/roles.inc.php:                                       0 -> uplayer role is written in table
lib/functions/roles.inc.php:		if(isset($row['user']->tplanRoles[$tplan_id]))
lib/functions/roles.inc.php:			$effective_role[$user_id]['effective_role_id'] = $row['user']->tplanRoles[$tplan_id]->dbID;  
lib/functions/roles.inc.php:			$effective_role[$user_id]['effective_role'] = $row['user']->tplanRoles[$tplan_id];
lib/functions/roles.inc.php:	$role->readFromDb($db);
lib/functions/roles.inc.php:	if ($role->deleteFromDB($db) < tl::OK)
lib/functions/roles.inc.php:		logAuditEvent(TLS("audit_role_deleted",$role->getDisplayName()),"DELETE",$roleID,"roles");
lib/functions/attachments.inc.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/attachments.inc.php: * @copyright 	2007-2009, TestLink community 
lib/functions/attachments.inc.php:	$attachmentInfos = $attachmentRepository->getAttachmentInfosFor($fkid,$fkTableName);
lib/functions/attachments.inc.php:	$attachmentInfos = $object->getAttachmentInfos($fkid);
lib/functions/tlRequirementFilterControl.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/tlRequirementFilterControl.class.php: * @copyright  2006-2010, TestLink community
lib/functions/tlRequirementFilterControl.class.php: * 20100827 - asimon - BUGID 3718 - enable drag&drop per default, disable only if filtering is done
lib/functions/tlRequirementFilterControl.class.php: * 20100812 - asimon - fixed cf input field size
lib/functions/tlRequirementFilterControl.class.php: * 20100812 - asimon - don't show textarea inputs on filter panel
lib/functions/tlRequirementFilterControl.class.php: * 20100811 - asimon - BUGID 3566: show/hide CF
lib/functions/tlRequirementFilterControl.class.php: * 20100808 - asimon - finished first implementation of requirement filtering
lib/functions/tlRequirementFilterControl.class.php: * 20100624 - asimon - CVS merge (experimental branch to HEAD)
lib/functions/tlRequirementFilterControl.class.php: * 20100503 - asimon - start of implementation of filter panel class hierarchy
lib/functions/tlRequirementFilterControl.class.php:	 * input fetching functions in init_args()-method.
lib/functions/tlRequirementFilterControl.class.php:		unset($this->req_mgr);
lib/functions/tlRequirementFilterControl.class.php:		$this->configuration = config_get('tree_filter_cfg')->requirements;
lib/functions/tlRequirementFilterControl.class.php:		$this->configuration->req_cfg = config_get('req_cfg');
lib/functions/tlRequirementFilterControl.class.php:		$this->configuration->req_spec_cfg = config_get('req_spec_cfg');
lib/functions/tlRequirementFilterControl.class.php:    	if ($this->configuration->advanced_filter_mode_choice) {
lib/functions/tlRequirementFilterControl.class.php:    		$this->filter_mode_choice_enabled = true;
lib/functions/tlRequirementFilterControl.class.php:    		$this->filter_mode_choice_enabled = false;
lib/functions/tlRequirementFilterControl.class.php:		foreach ($this->all_settings as $name => $info) {
lib/functions/tlRequirementFilterControl.class.php:		foreach ($this->all_filters as $name => $info) {
lib/functions/tlRequirementFilterControl.class.php:		I_PARAMS($params, $this->args);
lib/functions/tlRequirementFilterControl.class.php:		foreach ($this->all_settings as $name => $info) {
lib/functions/tlRequirementFilterControl.class.php:				$this->$init_method();
lib/functions/tlRequirementFilterControl.class.php:				$this->display_req_settings = true;
lib/functions/tlRequirementFilterControl.class.php:				$this->settings[$name] = false;
lib/functions/tlRequirementFilterControl.class.php:		foreach ($this->all_settings as $name => $info) {
lib/functions/tlRequirementFilterControl.class.php:			if ($this->settings[$name]) {
lib/functions/tlRequirementFilterControl.class.php:				$this->active_filters[$name] = $this->settings[$name]['selected'];
lib/functions/tlRequirementFilterControl.class.php:				$this->active_filters[$name] = null;
lib/functions/tlRequirementFilterControl.class.php:		// 	$this->display_req_settings = true;
lib/functions/tlRequirementFilterControl.class.php:		foreach ($this->all_filters as $name => $info) {
lib/functions/tlRequirementFilterControl.class.php:			if (method_exists($this, $init_method) && $this->configuration->{$name} == ENABLED) {
lib/functions/tlRequirementFilterControl.class.php:				$this->$init_method();
lib/functions/tlRequirementFilterControl.class.php:				$this->display_req_filters = true;
lib/functions/tlRequirementFilterControl.class.php:				$this->filters[$name] = false;
lib/functions/tlRequirementFilterControl.class.php:				$this->active_filters[$name] = null;
lib/functions/tlRequirementFilterControl.class.php:		// 	$this->display_req_filters = true;
lib/functions/tlRequirementFilterControl.class.php:		return $this->active_filters;
lib/functions/tlRequirementFilterControl.class.php:		$filters = $this->get_active_filters();
lib/functions/tlRequirementFilterControl.class.php:        // BUGID 3718 - enable drag&drop per default, later disable if filtering is done
lib/functions/tlRequirementFilterControl.class.php:		$drag_and_drop->enabled = true;
lib/functions/tlRequirementFilterControl.class.php:		$drag_and_drop->BackEndUrl = $gui->basehref . 'lib/ajax/dragdroprequirementnodes.php';
lib/functions/tlRequirementFilterControl.class.php:		$drag_and_drop->useBeforeMoveNode = TRUE;
lib/functions/tlRequirementFilterControl.class.php:		if (!$this->testproject_mgr) {
lib/functions/tlRequirementFilterControl.class.php:			$this->testproject_mgr = new testproject($this->db);
lib/functions/tlRequirementFilterControl.class.php:		if ($this->do_filtering) {
lib/functions/tlRequirementFilterControl.class.php:			$tree_menu = generate_reqspec_tree($this->db, $this->testproject_mgr,
lib/functions/tlRequirementFilterControl.class.php:			                                   $this->args->testproject_id,
lib/functions/tlRequirementFilterControl.class.php:			                                   $this->args->testproject_name,
lib/functions/tlRequirementFilterControl.class.php:			$root_node = $tree_menu->rootnode;
lib/functions/tlRequirementFilterControl.class.php:			$children = $tree_menu->menustring ? $tree_menu->menustring : "[]";
lib/functions/tlRequirementFilterControl.class.php:            $drag_and_drop->enabled = false;
lib/functions/tlRequirementFilterControl.class.php:			$loader = $gui->basehref . 'lib/ajax/getrequirementnodes.php?' .
lib/functions/tlRequirementFilterControl.class.php:			                         "root_node={$this->args->testproject_id}";
lib/functions/tlRequirementFilterControl.class.php:			$root_node->href = "javascript:TPROJECT_REQ_SPEC_MGMT({$this->args->testproject_id})";
lib/functions/tlRequirementFilterControl.class.php:			$root_node->id = $this->args->testproject_id;
lib/functions/tlRequirementFilterControl.class.php:			$root_node->name = $this->args->testproject_name;
lib/functions/tlRequirementFilterControl.class.php:			$root_node->testlink_node_type = 'testproject';
lib/functions/tlRequirementFilterControl.class.php:		$gui->ajaxTree = new stdClass();
lib/functions/tlRequirementFilterControl.class.php:		$gui->ajaxTree->loader = $loader;
lib/functions/tlRequirementFilterControl.class.php:		$gui->ajaxTree->root_node = $root_node;
lib/functions/tlRequirementFilterControl.class.php:		$gui->ajaxTree->children = $children;
lib/functions/tlRequirementFilterControl.class.php:		$gui->ajaxTree->dragDrop = $drag_and_drop;
lib/functions/tlRequirementFilterControl.class.php:		$gui->ajaxTree->cookiePrefix = 'requirement_spec' . $root_node->id . "_" ;
lib/functions/tlRequirementFilterControl.class.php:		$this->settings[$key] = array();
lib/functions/tlRequirementFilterControl.class.php:		$this->settings[$key][$hidden_key] = 0;
lib/functions/tlRequirementFilterControl.class.php:		// look where we can find the setting - POST, SESSION, config?
lib/functions/tlRequirementFilterControl.class.php:		if (isset($this->args->{$key})) {
lib/functions/tlRequirementFilterControl.class.php:		} else if (isset($this->args->{$hidden_key})) {
lib/functions/tlRequirementFilterControl.class.php:			$selection = ($this->configuration->automatic_tree_refresh == ENABLED) ? 1 : 0;
lib/functions/tlRequirementFilterControl.class.php:		$this->settings[$key]['selected'] = $selection;
lib/functions/tlRequirementFilterControl.class.php:		$this->settings[$key][$hidden_key] = $selection;
lib/functions/tlRequirementFilterControl.class.php:		$selection = $this->args->{$key};
lib/functions/tlRequirementFilterControl.class.php:		if (!$selection || $this->args->reset_filters) {
lib/functions/tlRequirementFilterControl.class.php:			$this->do_filtering = true;
lib/functions/tlRequirementFilterControl.class.php:		$this->filters[$key] = array('selected' => $selection);
lib/functions/tlRequirementFilterControl.class.php:		$this->active_filters[$key] = $selection;
lib/functions/tlRequirementFilterControl.class.php:		$selection = $this->args->{$key};
lib/functions/tlRequirementFilterControl.class.php:		if (!$selection || $this->args->reset_filters) {
lib/functions/tlRequirementFilterControl.class.php:			$this->do_filtering = true;
lib/functions/tlRequirementFilterControl.class.php:		$this->filters[$key] = array('selected' => $selection);
lib/functions/tlRequirementFilterControl.class.php:		$this->active_filters[$key] = $selection;
lib/functions/tlRequirementFilterControl.class.php:		$selection = $this->args->{$key};
lib/functions/tlRequirementFilterControl.class.php:		$items = array(self::ANY => $this->option_strings['any']) + 
lib/functions/tlRequirementFilterControl.class.php:		         (array) init_labels($this->configuration->req_cfg->status_labels);
lib/functions/tlRequirementFilterControl.class.php:		if (!$selection || $this->args->reset_filters || $selection == self::ANY
lib/functions/tlRequirementFilterControl.class.php:			$this->do_filtering = true;
lib/functions/tlRequirementFilterControl.class.php:		$this->filters[$key] = array('selected' => $selection, 'items' => $items);
lib/functions/tlRequirementFilterControl.class.php:		$this->active_filters[$key] = $selection;
lib/functions/tlRequirementFilterControl.class.php:		$selection = $this->args->{$key};
lib/functions/tlRequirementFilterControl.class.php:		$items = array(self::ANY => $this->option_strings['any']) + 
lib/functions/tlRequirementFilterControl.class.php:		         (array) init_labels($this->configuration->req_cfg->type_labels);
lib/functions/tlRequirementFilterControl.class.php:		if (!$selection || $this->args->reset_filters
lib/functions/tlRequirementFilterControl.class.php:			$this->do_filtering = true;
lib/functions/tlRequirementFilterControl.class.php:		$this->filters[$key] = array('selected' => $selection, 'items' => $items);
lib/functions/tlRequirementFilterControl.class.php:		$this->active_filters[$key] = $selection;
lib/functions/tlRequirementFilterControl.class.php:		$selection = $this->args->{$key};
lib/functions/tlRequirementFilterControl.class.php:		$items = array(self::ANY => $this->option_strings['any']) + 
lib/functions/tlRequirementFilterControl.class.php:		         (array) init_labels($this->configuration->req_spec_cfg->type_labels);
lib/functions/tlRequirementFilterControl.class.php:		if (!$selection || $this->args->reset_filters
lib/functions/tlRequirementFilterControl.class.php:			$this->do_filtering = true;
lib/functions/tlRequirementFilterControl.class.php:		$this->filters[$key] = array('selected' => $selection, 'items' => $items);
lib/functions/tlRequirementFilterControl.class.php:		$this->active_filters[$key] = $selection;
lib/functions/tlRequirementFilterControl.class.php:		$this->filters[$key] = false;
lib/functions/tlRequirementFilterControl.class.php:		$this->active_filters[$key] = null;
lib/functions/tlRequirementFilterControl.class.php:		if ($this->configuration->req_cfg->expected_coverage_management) {
lib/functions/tlRequirementFilterControl.class.php:			$selection = $this->args->{$key};
lib/functions/tlRequirementFilterControl.class.php:			if (!$selection || !is_numeric($selection) || $this->args->reset_filters) {
lib/functions/tlRequirementFilterControl.class.php:				$this->do_filtering = true;
lib/functions/tlRequirementFilterControl.class.php:			$this->filters[$key] = array('selected' => $selection);
lib/functions/tlRequirementFilterControl.class.php:			$this->active_filters[$key] = $selection;
lib/functions/tlRequirementFilterControl.class.php:		if ($this->configuration->req_cfg->relations->enable) {
lib/functions/tlRequirementFilterControl.class.php:			$selection = $this->args->{$key};
lib/functions/tlRequirementFilterControl.class.php:			if (!$this->req_mgr) {
lib/functions/tlRequirementFilterControl.class.php:				$this->req_mgr = new requirement_mgr($this->db);
lib/functions/tlRequirementFilterControl.class.php:			$req_relations = $this->req_mgr->init_relation_type_select();
lib/functions/tlRequirementFilterControl.class.php:			$items = array(self::ANY => $this->option_strings['any']) + 
lib/functions/tlRequirementFilterControl.class.php:			if (!$selection || $this->args->reset_filters
lib/functions/tlRequirementFilterControl.class.php:				$this->do_filtering = true;
lib/functions/tlRequirementFilterControl.class.php:			$this->filters[$key] = array('selected' => $selection, 
lib/functions/tlRequirementFilterControl.class.php:			$this->active_filters[$key] = $selection;
lib/functions/tlRequirementFilterControl.class.php:			$this->filters[$key] = false;
lib/functions/tlRequirementFilterControl.class.php:			$this->active_filters[$key] = null;
lib/functions/tlRequirementFilterControl.class.php:		$selection = $this->args->{$key};
lib/functions/tlRequirementFilterControl.class.php:		if (!$this->testproject_mgr) {
lib/functions/tlRequirementFilterControl.class.php:			$this->testproject_mgr = new testproject($this->db);
lib/functions/tlRequirementFilterControl.class.php:		$tc_prefix = $this->testproject_mgr->getTestCasePrefix($this->args->testproject_id);
lib/functions/tlRequirementFilterControl.class.php:		$tc_prefix .= $tc_cfg->glue_character;
lib/functions/tlRequirementFilterControl.class.php:		if (!$selection || $selection == $tc_prefix || $this->args->reset_filters) {
lib/functions/tlRequirementFilterControl.class.php:			$this->do_filtering = true;
lib/functions/tlRequirementFilterControl.class.php:		$this->filters[$key] = array('selected' => $selection ? $selection : $tc_prefix);
lib/functions/tlRequirementFilterControl.class.php:		$this->active_filters[$key] = $selection;
lib/functions/tlRequirementFilterControl.class.php:		if (!$this->req_mgr) {
lib/functions/tlRequirementFilterControl.class.php:			$this->req_mgr = new requirement_mgr($this->db);
lib/functions/tlRequirementFilterControl.class.php:		$cfields = $this->req_mgr->get_linked_cfields(null, $this->args->testproject_id);
lib/functions/tlRequirementFilterControl.class.php:		$cf_prefix = $this->req_mgr->cfield_mgr->name_prefix;
lib/functions/tlRequirementFilterControl.class.php:		$this->filters[$key] = false;
lib/functions/tlRequirementFilterControl.class.php:		$this->active_filters[$key] = null;
lib/functions/tlRequirementFilterControl.class.php:				$verbose_type = trim($this->req_mgr->cfield_mgr->custom_field_types[$type]);
lib/functions/tlRequirementFilterControl.class.php:				if ($this->args->reset_filters) {
lib/functions/tlRequirementFilterControl.class.php:					$this->do_filtering = true;
lib/functions/tlRequirementFilterControl.class.php:					                 $this->req_mgr->cfield_mgr->string_custom_field_input($cf, '', $cf_size) .
lib/functions/tlRequirementFilterControl.class.php:			$this->filters[$key] = array('items' => $cf_html_code, 
lib/functions/tlRequirementFilterControl.class.php:			$this->active_filters[$key] = count($selection) ? $selection : null;
lib/functions/reports.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/reports.class.php: * @copyright 	2005-2009, TestLink community 
lib/functions/reports.class.php: *	20090618 - franciscom - BUGID 0002621 
lib/functions/reports.class.php:	private $testPlanID = -1;
lib/functions/reports.class.php:	private	$tprojectID = -1;
lib/functions/reports.class.php:		$this->db = $db;	
lib/functions/reports.class.php:		$this->testPlanID = $tplanId;
lib/functions/reports.class.php:		parent::__construct($this->db);
lib/functions/reports.class.php:	 * @return array of array - described for array $g_reports_list in const.inc.php
lib/functions/reports.class.php:		$sql = " SELECT COUNT(0) FROM {$this->tables['builds']} builds " . 
lib/functions/reports.class.php:		       " WHERE builds.testplan_id = {$this->testPlanID} ";
lib/functions/reports.class.php:		return $this->db->fetchOneValue($sql);
lib/functions/reports.class.php:		$sql = " SELECT COUNT(0) FROM {$this->tables['testplan_tcversions']} testplan_tcversions " .
lib/functions/reports.class.php:		       " WHERE testplan_id = {$this->testPlanID} ";
lib/functions/reports.class.php:		return $this->db->fetchOneValue($sql);
lib/functions/string_api.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/string_api.php: * @copyright 	2007-2009, TestLink community
lib/functions/string_api.php: * @copyright 	Copyright (C) 2002 - 2004  Mantis Team
lib/functions/string_api.php: * 				The base for certain code was adapted from Mantis - a php based bugtracking system
lib/functions/string_api.php: *  20080822 - franciscom - restored missed string_email_links() 
lib/functions/string_api.php: * 	20080606 - havlatm - remove useles mantis related code
lib/functions/string_api.php: * 	20071104 - franciscom - changes to string_email_links()
lib/functions/string_api.php:// ----- Tag Processing -------------------------------------------------------
lib/functions/string_api.php:	$p_string = preg_replace( '/(([[:alpha:]][-+.[:alnum:]]*):\/\/(%[[:digit:]A-Fa-f]{2}|[-_.!~*\';\/?%^\\\\:@&={\|}+$#\(\),\[\][:alnum:]])+)/se',
lib/functions/string_api.php:	# achumakov: characters 0x80-0xFF aren't acceptable, too
lib/functions/string_api.php:	$t_atom = '[^\'@\'](?:[^()<>@,;:\\\".\[\]\000-\037\177-\377 &]+)';
lib/functions/string_api.php:	# correct - just that it's inside an href attribute.
lib/functions/string_api.php: * @param string $p_character - pattern to repeat
lib/functions/string_api.php: * @param integer $p_repeats - number of times to repeat.
lib/functions/string_api.php:		$t_pattern = '/([\s|.|,|\-|_|\/|\?]+)/';
lib/functions/string_api.php:		$t_bits = preg_split( $t_pattern, $p_string, -1, PREG_SPLIT_DELIM_CAPTURE );
lib/functions/string_api.php:		$t_last = $t_bits[ count( $t_bits ) - 1 ];
lib/functions/string_api.php:				|| ( strpos( $t_bit, '.,-/?' ) > 0 ) ) {
lib/functions/string_api.php:	# e.g. 8859-2, windows-1257, Korean, which are treated as 8859-1.
lib/functions/string_api.php:	return preg_replace("/&amp;(#[0-9]+|[a-z]+);/i", "&$1;", @htmlspecialchars( $p_string, ENT_COMPAT, config_get('charset') ) );
lib/functions/requirement_mgr.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/requirement_mgr.class.php: *	20100520 - franciscom - BUGID 2169 - customFieldValuesAsXML() new method_exists
lib/functions/requirement_mgr.class.php: *	20100511 - franciscom - createFromXML() new method
lib/functions/requirement_mgr.class.php: *	20100509 - franciscom - update() interface changes.
lib/functions/requirement_mgr.class.php: *  20100324 - asimon - BUGID 1748 - Moved init_relation_type_select here from reqView.php
lib/functions/requirement_mgr.class.php: *  20100323 - asimon - BUGID 1748 - added count_relations()
lib/functions/requirement_mgr.class.php: *  20100319 - asimon - BUGID 1748 - added functions for requirement relations: 
lib/functions/requirement_mgr.class.php: *	20100309 - franciscom - get_by_id() removed useless code pointed by BUGID 3254
lib/functions/requirement_mgr.class.php: *	20100124 - franciscom - BUGID 0003089: Req versions new attributes - active and open 
lib/functions/requirement_mgr.class.php: *  20091228 - franciscom - exportReqToXML() - added expected_coverage
lib/functions/requirement_mgr.class.php: *  20091227 - franciscom - delete() now manage version_id 
lib/functions/requirement_mgr.class.php: * 	20091225 - franciscom - new method - generateDocID()
lib/functions/requirement_mgr.class.php: *  20091216 - franciscom - create_tc_from_requirement() interface changes
lib/functions/requirement_mgr.class.php: *  20091215 - asimon     - added new method getByDocID()  
lib/functions/requirement_mgr.class.php: *  20091209 - asimon     - contrib for testcase creation, BUGID 2996
lib/functions/requirement_mgr.class.php: *  20091208 - franciscom - contrib by julian - BUGID 2995
lib/functions/requirement_mgr.class.php: *  20091207 - franciscom - create() added node_order
lib/functions/requirement_mgr.class.php: *	20091202 - franciscom - create(), update() 
lib/functions/requirement_mgr.class.php: *                          added contribution by asimon83/mx-julian that creates
lib/functions/requirement_mgr.class.php: *	20091125 - franciscom - expected_coverage management 
lib/functions/requirement_mgr.class.php: *  20090525 - franciscom - avoid getDisplayName() crash due to deleted user 
lib/functions/requirement_mgr.class.php: *  20090514 - franciscom - BUGID 2491
lib/functions/requirement_mgr.class.php: *  20090506 - franciscom - refactoring continued
lib/functions/requirement_mgr.class.php: *  20090505 - franciscom - refactoring started.
lib/functions/requirement_mgr.class.php: *  20090401 - franciscom - BUGID 2316
lib/functions/requirement_mgr.class.php: *  20090315 - franciscom - added require_once '/attachments.inc.php' to avoid autoload() bug
lib/functions/requirement_mgr.class.php: *                          delete() - fixed delete order due to FK.
lib/functions/requirement_mgr.class.php: *  20090222 - franciscom - exportReqToXML() - (will be available for TL 1.9)
lib/functions/requirement_mgr.class.php: *  20081129 - franciscom - BUGID 1852 - bulk_assignment() 
lib/functions/requirement_mgr.class.php:	// 20100220 - franciscom - I'm will work only on XML
lib/functions/requirement_mgr.class.php:    const LATEST_VERSION=-1;
lib/functions/requirement_mgr.class.php:		$this->db = &$db;
lib/functions/requirement_mgr.class.php:		$this->cfield_mgr=new cfield_mgr($this->db);
lib/functions/requirement_mgr.class.php:		$this->tree_mgr =  new tree($this->db);
lib/functions/requirement_mgr.class.php:        $this->attachmentTableName = 'requirements';
lib/functions/requirement_mgr.class.php:		tlObjectWithAttachments::__construct($this->db,$this->attachmentTableName);
lib/functions/requirement_mgr.class.php:		$this->node_types_descr_id= $this->tree_mgr->get_available_node_types();
lib/functions/requirement_mgr.class.php:		$this->node_types_id_descr=array_flip($this->node_types_descr_id);
lib/functions/requirement_mgr.class.php:		$this->my_node_type=$this->node_types_descr_id['requirement'];
lib/functions/requirement_mgr.class.php:	    $this->object_table=$this->tables['requirements'];
lib/functions/requirement_mgr.class.php:	  args: -
lib/functions/requirement_mgr.class.php:    	return $this->export_file_types;
lib/functions/requirement_mgr.class.php:	  args: -
lib/functions/requirement_mgr.class.php:     	return $this->import_file_types;
lib/functions/requirement_mgr.class.php:	$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/requirement_mgr.class.php:	       " FROM {$this->object_table} REQ " .
lib/functions/requirement_mgr.class.php:	       " JOIN {$this->tables['nodes_hierarchy']} NH_REQ ON NH_REQ.id = REQ.id " .
lib/functions/requirement_mgr.class.php:	       " JOIN {$this->tables['nodes_hierarchy']} NH_REQV ON NH_REQV.parent_id = NH_REQ.id ".
lib/functions/requirement_mgr.class.php:	       " JOIN  {$this->tables['req_versions']} REQV ON REQV.id = NH_REQV.id " .  
lib/functions/requirement_mgr.class.php:	       " JOIN {$this->tables['req_specs']} REQ_SPEC ON REQ_SPEC.id = REQ.srs_id " .
lib/functions/requirement_mgr.class.php:	       " JOIN {$this->tables['nodes_hierarchy']} NH_RSPEC ON NH_RSPEC.id = REQ_SPEC.id " .
lib/functions/requirement_mgr.class.php:		$recordset = $this->db->get_recordset($sql);
lib/functions/requirement_mgr.class.php:	    // 20090413 - franciscom - 
lib/functions/requirement_mgr.class.php:	    // 20100309 - franciscom - 
lib/functions/requirement_mgr.class.php:			$recordset = array($this->db->fetchFirstRow($sql));
lib/functions/requirement_mgr.class.php:  	    				$user = tlUser::getByID($this->db,$rs[$key][$userid_field]);
lib/functions/requirement_mgr.class.php:  	    				$rs[$key][$ukey] = $user ? $user->getDisplayName() : $labels['undefined'];
lib/functions/requirement_mgr.class.php:             status_ok -> 1/0
lib/functions/requirement_mgr.class.php:             msg -> some simple message, useful when status_ok ==0
lib/functions/requirement_mgr.class.php:             id -> id of new requirement.
lib/functions/requirement_mgr.class.php:	20091202 - franciscom -  added contribution by asimon83/mx-julian 
lib/functions/requirement_mgr.class.php:	$reqdoc_id = trim_and_limit($reqdoc_id,$field_size->req_docid);
lib/functions/requirement_mgr.class.php:	$title = trim_and_limit($title,$field_size->req_title);
lib/functions/requirement_mgr.class.php:	$tproject_id = $this->tree_mgr->getTreeRoot($srs_id);
lib/functions/requirement_mgr.class.php:	$op = $this->check_basic_data($srs_id,$tproject_id,$title,$reqdoc_id);
lib/functions/requirement_mgr.class.php:		$result = $this->create_req_only($srs_id,$reqdoc_id,$title,$user_id,$node_order);
lib/functions/requirement_mgr.class.php:			if (config_get('internal_links')->enable )
lib/functions/requirement_mgr.class.php:				$scope = req_link_replace($this->db, $scope, $tproject_id);
lib/functions/requirement_mgr.class.php:			$op = $this->create_version($result['id'],$version_number,$scope,$user_id,
lib/functions/requirement_mgr.class.php:	20091202 - franciscom - 
lib/functions/requirement_mgr.class.php:	$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/requirement_mgr.class.php:    $db_now = $this->db->db_now();
lib/functions/requirement_mgr.class.php:    $rs=$this->get_by_id($id,$version_id);
lib/functions/requirement_mgr.class.php:	$tproject_id = is_null($tproject_id) ? $this->tree_mgr->getTreeRoot($srs_id): $tproject_id;
lib/functions/requirement_mgr.class.php:    /* contribution by asimon83/mx-julian */
lib/functions/requirement_mgr.class.php:	if (config_get('internal_links')->enable ) 
lib/functions/requirement_mgr.class.php:		$scope = req_link_replace($this->db, $scope, $tproject_id);
lib/functions/requirement_mgr.class.php:	/* end contribution by asimon83/mx-julian */
lib/functions/requirement_mgr.class.php:	$reqdoc_id=trim_and_limit($reqdoc_id,$field_size->req_docid);
lib/functions/requirement_mgr.class.php:	$title=trim_and_limit($title,$field_size->req_title);
lib/functions/requirement_mgr.class.php:    $chk=$this->check_basic_data($srs_id,$tproject_id,$title,$reqdoc_id,$id);
lib/functions/requirement_mgr.class.php:  		$q = "/* $debugMsg */ UPDATE {$this->tables['nodes_hierarchy']} " .
lib/functions/requirement_mgr.class.php:  		  	 " SET name='" . $this->db->prepare_string($title) . "'";
lib/functions/requirement_mgr.class.php:	  	$sql[] = "/* $debugMsg */ UPDATE {$this->tables['requirements']} " .
lib/functions/requirement_mgr.class.php:	  	         " SET req_doc_id='" . $this->db->prepare_string($reqdoc_id) . "'" .
lib/functions/requirement_mgr.class.php:	  	$sql[] = "/* $debugMsg */ UPDATE {$this->tables['req_versions']} " .
lib/functions/requirement_mgr.class.php:	  			 " SET scope='" . $this->db->prepare_string($scope) . "', " .
lib/functions/requirement_mgr.class.php:	  	         " status='" . $this->db->prepare_string($status) . "', " .
lib/functions/requirement_mgr.class.php:	  	         " type='" . $this->db->prepare_string($type) . "', " .
lib/functions/requirement_mgr.class.php:		    $qres = $this->db->exec_query($stm);
lib/functions/requirement_mgr.class.php:		  	  	$result['msg'] = $this->db->error_msg;
lib/functions/requirement_mgr.class.php:	    	$sql="SELECT NH.id FROM {$this->tables['nodes_hierarchy']} NH WHERE NH.parent_id ";
lib/functions/requirement_mgr.class.php:	    	$children_rs=$this->db->fetchRowsIntoMap($sql,'id');
lib/functions/requirement_mgr.class.php:	    	$this->cfield_mgr->remove_all_design_values_from_node($id);
lib/functions/requirement_mgr.class.php:	  		$sql = "DELETE FROM {$this->tables['req_coverage']} " . $where_clause_coverage;
lib/functions/requirement_mgr.class.php:	  		$result = $this->db->exec_query($sql);
lib/functions/requirement_mgr.class.php:					$result = $this->attachmentRepository->deleteAttachmentsFor($value,$this->attachmentTableName);
lib/functions/requirement_mgr.class.php:	  			$sql = "DELETE FROM {$this->tables['req_versions']} " . $where_clause_children;
lib/functions/requirement_mgr.class.php:	  			$result = $this->db->exec_query($sql);
lib/functions/requirement_mgr.class.php:	  			$sql = "DELETE FROM {$this->tables['nodes_hierarchy']} " . $where_clause_children;
lib/functions/requirement_mgr.class.php:	  			$result = $this->db->exec_query($sql);
lib/functions/requirement_mgr.class.php:	  		$sql = "DELETE FROM {$this->object_table} " . $where_clause_this;
lib/functions/requirement_mgr.class.php:	  		$result = $this->db->exec_query($sql);
lib/functions/requirement_mgr.class.php:	  		$sql = "DELETE FROM {$this->tables['nodes_hierarchy']} " . $where_clause_this;
lib/functions/requirement_mgr.class.php:	  		$result = $this->db->exec_query($sql);
lib/functions/requirement_mgr.class.php:	  		$this->delete_all_relations($id);
lib/functions/requirement_mgr.class.php: * rev: 20080226 - franciscom - get test case external id
lib/functions/requirement_mgr.class.php:	$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/requirement_mgr.class.php:  	       " FROM {$this->tables['nodes_hierarchy']} NHA, " .
lib/functions/requirement_mgr.class.php:  	       " {$this->tables['nodes_hierarchy']} NHB, " .
lib/functions/requirement_mgr.class.php:  	       " {$this->tables['tcversions']} TCV, " .
lib/functions/requirement_mgr.class.php:  	       " {$this->tables['req_coverage']} RC " .
lib/functions/requirement_mgr.class.php:  	return $this->db->get_recordset($sql);
lib/functions/requirement_mgr.class.php:  		$rs = $this->getByDocID($reqdoc_id,$tproject_id);
lib/functions/requirement_mgr.class.php:	$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/requirement_mgr.class.php:    $tcase_mgr = new testcase($this->db);
lib/functions/requirement_mgr.class.php:   	$tsuite_mgr = new testsuite($this->db);
lib/functions/requirement_mgr.class.php:  	$auto_testsuite_name = $req_cfg->default_testsuite_name;
lib/functions/requirement_mgr.class.php:    $node_descr_type=$this->tree_mgr->get_available_node_types();
lib/functions/requirement_mgr.class.php:  		$tproject_id = $this->tree_mgr->getTreeRoot($srs_id);
lib/functions/requirement_mgr.class.php:  	if ( $req_cfg->use_req_spec_as_testsuite_name ) 
lib/functions/requirement_mgr.class.php: 		$full_path = $this->tree_mgr->get_path($srs_id);
lib/functions/requirement_mgr.class.php:  		$truncate_limit = $field_size->testsuite_name - strlen($addition);
lib/functions/requirement_mgr.class.php:  		//           |-- REQ_SPEC_A1 
lib/functions/requirement_mgr.class.php:  		//                          |-- REQ_SPEC_A2
lib/functions/requirement_mgr.class.php:  		//                                         |- REQ100
lib/functions/requirement_mgr.class.php:  		//                                         |- REQ101
lib/functions/requirement_mgr.class.php:  				$sql="/* $debugMsg */ SELECT id,name FROM {$this->tables['nodes_hierarchy']} NH " .
lib/functions/requirement_mgr.class.php:  	     			 " WHERE name='" . $this->db->prepare_string($testsuite_name) . "' " .
lib/functions/requirement_mgr.class.php:  				$tsuiteInfo = $this->db->fetchRowsIntoMap($sql,'id');
lib/functions/requirement_mgr.class.php:  				$tsuiteInfo = $tsuite_mgr->create($parent_id,$testsuite_name,$req_cfg->testsuite_details);
lib/functions/requirement_mgr.class.php:  		$sql=" SELECT id FROM {$this->tables['nodes_hierarchy']} NH " .
lib/functions/requirement_mgr.class.php:  		     " WHERE name='" . $this->db->prepare_string($auto_testsuite_name) . "' " .
lib/functions/requirement_mgr.class.php:  		$result = $this->db->exec_query($sql);
lib/functions/requirement_mgr.class.php:    	if ($this->db->num_rows($result) == 1) {
lib/functions/requirement_mgr.class.php:    		$row = $this->db->fetch_array($result);
lib/functions/requirement_mgr.class.php:    		// not found -> create
lib/functions/requirement_mgr.class.php:	    	$new_tsuite=$tsuite_mgr->create($testproject_id,$auto_testsuite_name,$req_cfg->testsuite_details);
lib/functions/requirement_mgr.class.php:    $siblings = $this->tree_mgr->get_children($tsuite_id,$nt2exclude);
lib/functions/requirement_mgr.class.php:        $reqData = $this->get_by_id($reqID,requirement_mgr::LATEST_VERSION);
lib/functions/requirement_mgr.class.php:        $itemSet = $tcase_mgr->getDuplicatesByName($reqData['title'],$tsuite_id,$getOptions);	
lib/functions/requirement_mgr.class.php:            // 20100106 - franciscom - multiple test case steps feature - removed expected_results
lib/functions/requirement_mgr.class.php:	        // Julian - BUGID 2995
lib/functions/requirement_mgr.class.php:	  	    $tcase = $tcase_mgr->create($tsuite_id,$tcase_name,$req_cfg->testcase_summary_prefix . $reqData['scope'] ,
lib/functions/requirement_mgr.class.php:	  		if (!$this->assign_to_tcase($reqData['id'],$tcase['id']) ) 
lib/functions/requirement_mgr.class.php:    rev:  20090401 - franciscom - BUGID 2316 - refactored
lib/functions/requirement_mgr.class.php:	$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/requirement_mgr.class.php:    	$sql = " /* $debugMsg */ SELECT req_id,testcase_id FROM {$this->tables['req_coverage']} " .
lib/functions/requirement_mgr.class.php: 	    $coverage = $this->db->fetchRowsIntoMap($sql,'req_id');
lib/functions/requirement_mgr.class.php:   	            $sql = "INSERT INTO {$this->tables['req_coverage']} (req_id,testcase_id) " .
lib/functions/requirement_mgr.class.php:           	    $result = $this->db->exec_query($sql);
lib/functions/requirement_mgr.class.php:         	    if ($this->db->affected_rows() == 1)
lib/functions/requirement_mgr.class.php:         	        $tcInfo = $this->tree_mgr->get_node_hierarchy_info($testcase_id);
lib/functions/requirement_mgr.class.php:        	        $reqInfo = $this->tree_mgr->get_node_hierarchy_info($items[$idx]);
lib/functions/requirement_mgr.class.php:        	    	                  "ASSIGN",$this->object_table);
lib/functions/requirement_mgr.class.php:		$sql = " DELETE FROM {$this->tables['req_coverage']} " .
lib/functions/requirement_mgr.class.php:		$result = $this->db->exec_query($sql);
lib/functions/requirement_mgr.class.php:		if ($result && $this->db->affected_rows() == 1)
lib/functions/requirement_mgr.class.php:			$tcInfo = $this->tree_mgr->get_node_hierarchy_info($testcase_id);
lib/functions/requirement_mgr.class.php:			$reqInfo = $this->tree_mgr->get_node_hierarchy_info($req_id);
lib/functions/requirement_mgr.class.php:				                  $tcInfo['name']),"ASSIGN",$this->object_table);
lib/functions/requirement_mgr.class.php:	$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/requirement_mgr.class.php:    $sql = " /* $debugMsg */ SELECT req_id,testcase_id FROM {$this->tables['req_coverage']} " .
lib/functions/requirement_mgr.class.php:    $coverage = $this->db->fetchMapRowsIntoMap($sql,'req_id','testcase_id');
lib/functions/requirement_mgr.class.php:  	$insert_sql = "INSERT INTO {$this->tables['req_coverage']} (req_id,testcase_id) ";
lib/functions/requirement_mgr.class.php:                $this->db->exec_query($sql);
lib/functions/requirement_mgr.class.php:	$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/requirement_mgr.class.php:  	       " FROM {$this->tables['nodes_hierarchy']} nodes_hierarchy, " .
lib/functions/requirement_mgr.class.php:  	       "      {$this->tables['req_coverage']} req_coverage " .
lib/functions/requirement_mgr.class.php:  	return ($this->db->get_recordset($sql));
lib/functions/requirement_mgr.class.php:	$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/requirement_mgr.class.php:  	       " FROM {$this->object_table} REQ, " .
lib/functions/requirement_mgr.class.php:  	       "      {$this->tables['req_coverage']} REQ_COVERAGE," .
lib/functions/requirement_mgr.class.php:  	       "      {$this->tables['nodes_hierarchy']} NHA," .
lib/functions/requirement_mgr.class.php:  	       "      {$this->tables['nodes_hierarchy']} NHB," .
lib/functions/requirement_mgr.class.php:  	       "      {$this->tables['req_specs']} RSPEC " ;
lib/functions/requirement_mgr.class.php:  		return $this->db->fetchRowsIntoMap($sql,'testcase_id',true);
lib/functions/requirement_mgr.class.php:  		return $this->db->get_recordset($sql);
lib/functions/requirement_mgr.class.php:  $this->tree_mgr->change_order_bulk($map_id_order);
lib/functions/requirement_mgr.class.php:	$cfXML = $this->customFieldValuesAsXML($id,$tproject_id);
lib/functions/requirement_mgr.class.php:	$req = $this->get_by_id($id,requirement_mgr::LATEST_VERSION);
lib/functions/requirement_mgr.class.php:	foreach($xml_item->attributes() as $key => $value)
lib/functions/requirement_mgr.class.php:	$dummy['node_order'] = (int)$xml_item->node_order;
lib/functions/requirement_mgr.class.php:	$dummy['title'] = (string)$xml_item->title;
lib/functions/requirement_mgr.class.php:    $dummy['docid'] = (string)$xml_item->docid;
lib/functions/requirement_mgr.class.php:    $dummy['description'] = (string)$xml_item->description;
lib/functions/requirement_mgr.class.php:    $dummy['status'] = (string)$xml_item->status;
lib/functions/requirement_mgr.class.php:    $dummy['type'] = (string)$xml_item->type;
lib/functions/requirement_mgr.class.php:    $dummy['expected_coverage'] = (int)$xml_item->expected_coverage;
lib/functions/requirement_mgr.class.php:	      foreach($xml_item->custom_fields->children() as $key)
lib/functions/requirement_mgr.class.php:	         $dummy['custom_fields'][(string)$key->name]= (string)$key->value;
lib/functions/requirement_mgr.class.php:	$req = $this->xmlToMapRequirement($xml);
lib/functions/requirement_mgr.class.php:	// 	If there is a hit -> we can not create
lib/functions/requirement_mgr.class.php:	$check_in_reqspec = $this->getByDocID($req['docid'],$tproject_id,$parent_id,$getOptions);
lib/functions/requirement_mgr.class.php:		$check_in_tproject = $this->getByDocID($req['docid'],$tproject_id,null,$getOptions);
lib/functions/requirement_mgr.class.php:			$this->create($parent_id,$req['docid'],$req['title'],$req['description'],
lib/functions/requirement_mgr.class.php:			// What to do if is Frozen ??? -> now ignore and update anyway
lib/functions/requirement_mgr.class.php:		// What to do if is Frozen ??? -> now ignore and update anyway
lib/functions/requirement_mgr.class.php:		$last_version = $this->get_last_version_info($reqID);
lib/functions/requirement_mgr.class.php:		$result = $this->update($reqID,$last_version['id'],$req['docid'],$req['title'],$req['description'],
lib/functions/requirement_mgr.class.php:// ---------------------------------------------------------------------------------------
lib/functions/requirement_mgr.class.php:// ---------------------------------------------------------------------------------------
lib/functions/requirement_mgr.class.php:                     null -> use requirement_id as starting point.
lib/functions/requirement_mgr.class.php:                     !is_null -> use this value as testproject id
lib/functions/requirement_mgr.class.php:       20070302 - check for $id not null, is not enough, need to check is > 0
lib/functions/requirement_mgr.class.php:    	$req_info = $this->get_by_id($id);
lib/functions/requirement_mgr.class.php:	$cf_map = $this->cfield_mgr->get_linked_cfields_at_design($tproject_id,$enabled,null,
lib/functions/requirement_mgr.class.php:                     null -> use requirement_id as starting point.
lib/functions/requirement_mgr.class.php:                     !is_null -> use this value as starting point.
lib/functions/requirement_mgr.class.php:    $cf_map = $this->get_linked_cfields($id,$parent_id);
lib/functions/requirement_mgr.class.php:    			          $this->cfield_mgr->string_custom_field_input($cf_info,$name_suffix) .
lib/functions/requirement_mgr.class.php:	$cf_map = $this->get_linked_cfields($id,$PID_NO_NEEDED);
lib/functions/requirement_mgr.class.php:								$this->cfield_mgr->string_custom_field_value($cf_info,$id) .
lib/functions/requirement_mgr.class.php:               Example custom_field_0_67 -> 0=> string field
lib/functions/requirement_mgr.class.php:          [$cf_map]:  hash -> all the custom fields linked and enabled
lib/functions/requirement_mgr.class.php:    $this->cfield_mgr->design_values_to_db($hash,$node_id,$cf_map,$hash_type);
lib/functions/requirement_mgr.class.php:    $cfMap=$this->get_linked_cfields($id,$tproject_id);
lib/functions/requirement_mgr.class.php:        $xml = $this->cfield_mgr->exportValueAsXML($cfMap);
lib/functions/requirement_mgr.class.php:   [parent_id] -> req spec parent of requirement searched
lib/functions/requirement_mgr.class.php:   default 0 -> case sensivite search
lib/functions/requirement_mgr.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/requirement_mgr.class.php:  		$the_doc_id = $this->db->prepare_string(trim($doc_id));
lib/functions/requirement_mgr.class.php:		$sql .= " FROM {$this->object_table} REQ " .
lib/functions/requirement_mgr.class.php:		       	" JOIN {$this->tables['nodes_hierarchy']} NH_REQ ON NH_REQ.id = REQ.id " .
lib/functions/requirement_mgr.class.php:		       	" JOIN {$this->tables['req_specs']} REQ_SPEC ON REQ_SPEC.id = REQ.srs_id " .
lib/functions/requirement_mgr.class.php:		       	" JOIN {$this->tables['nodes_hierarchy']} NH_RSPEC ON NH_RSPEC.id = REQ_SPEC.id " .
lib/functions/requirement_mgr.class.php:  		$output = $this->db->fetchRowsIntoMap($sql,$my['options']['access_key']);
lib/functions/requirement_mgr.class.php:	    $new_item = array('id' => -1, 'status_ok' => 0, 'msg' => 'ok', 'mappings' => null);
lib/functions/requirement_mgr.class.php:			$reqSpecMgr = new requirement_spec_mgr($this->db);
lib/functions/requirement_mgr.class.php:			$target = $reqSpecMgr->get_by_id($parent_id);
lib/functions/requirement_mgr.class.php:        $target_doc = $this->generateDocID($id,$root);		
lib/functions/requirement_mgr.class.php:		$item_versions = $this->get_by_id($id);
lib/functions/requirement_mgr.class.php:			$new_item = $this->create_req_only($parent_id,$target_doc,$item_versions[0]['title'],
lib/functions/requirement_mgr.class.php:					$op = $this->create_version($new_item['id'],$req_version['version'],
lib/functions/requirement_mgr.class.php:				$this->copy_cfields($id,$new_item['id']);
lib/functions/requirement_mgr.class.php:	        	$this->copy_attachments($id,$new_item['id']);
lib/functions/requirement_mgr.class.php:	        		$linked_items = $this->get_coverage($id);
lib/functions/requirement_mgr.class.php:            				$this->assign_to_tcase($new_item['id'],$value['id']);
lib/functions/requirement_mgr.class.php:		$this->attachmentRepository->copyAttachments($source_id,$target_id,$this->attachmentTableName);
lib/functions/requirement_mgr.class.php:	  returns: -
lib/functions/requirement_mgr.class.php:	  $cfmap_from=$this->get_linked_cfields($from_id);
lib/functions/requirement_mgr.class.php:	  $this->cfield_mgr->design_values_to_db($cfield,$to_id,null,'tcase_copy_cfields');
lib/functions/requirement_mgr.class.php:		$item_info = $this->get_by_id($id);
lib/functions/requirement_mgr.class.php:		$itemSet = $this->getByDocID($item_info['req_doc_id'],$tproject_id,null,$getOptions);
lib/functions/requirement_mgr.class.php:		    $prefix = trim_and_limit($item_info['req_doc_id'],$field_size->req_docid-6);
lib/functions/requirement_mgr.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/requirement_mgr.class.php:		$result = array( 'id' => -1, 'status_ok' => 0, 'msg' => 'ok');
lib/functions/requirement_mgr.class.php:		$req_id = $this->tree_mgr->new_node($srs_id,$this->node_types_descr_id['requirement'],
lib/functions/requirement_mgr.class.php:		$db_now = $this->db->db_now();
lib/functions/requirement_mgr.class.php:		$sql = "/* $debugMsg */ INSERT INTO {$this->object_table} " .
lib/functions/requirement_mgr.class.php:    	       " VALUES ({$req_id}, {$srs_id},'" . $this->db->prepare_string($reqdoc_id) . "')";
lib/functions/requirement_mgr.class.php:    	if (!$this->db->exec_query($sql))
lib/functions/requirement_mgr.class.php:	  rev: 20080113 - franciscom - interface changes added tc_ext_id
lib/functions/requirement_mgr.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/requirement_mgr.class.php:		$item_id = $this->tree_mgr->new_node($id,$this->node_types_descr_id['requirement_version']);
lib/functions/requirement_mgr.class.php:		$sql = "/* $debugMsg */ INSERT INTO {$this->tables['req_versions']} " .
lib/functions/requirement_mgr.class.php:	  	       " VALUES({$item_id},{$version},'" . $this->db->prepare_string($scope) . "','" . 
lib/functions/requirement_mgr.class.php:	  	       $this->db->prepare_string($status) . "','" . $this->db->prepare_string($type) . "'," .
lib/functions/requirement_mgr.class.php:	  	       "{$expected_coverage},{$user_id}," . $this->db->db_now() . ")";
lib/functions/requirement_mgr.class.php:		$result = $this->db->exec_query($sql);
lib/functions/requirement_mgr.class.php:			$ret['msg'] = $this->db->error_msg();
lib/functions/requirement_mgr.class.php:		  	$ret['id']=-1;
lib/functions/requirement_mgr.class.php:	  $version_id = $this->tree_mgr->new_node($id,$this->node_types_descr_id['requirement_version']);
lib/functions/requirement_mgr.class.php:	  $last_version_info =  $this->get_last_version_info($id);
lib/functions/requirement_mgr.class.php:	  $this->copy_version($last_version_info['id'],$version_id,$last_version_info['version']+1,$user_id);
lib/functions/requirement_mgr.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/requirement_mgr.class.php:		       " FROM {$this->tables['req_versions']} REQV," .
lib/functions/requirement_mgr.class.php:		       " {$this->tables['nodes_hierarchy']} NH WHERE ".
lib/functions/requirement_mgr.class.php:		$max_version = $this->db->fetchFirstRowSingleColumn($sql,'version');
lib/functions/requirement_mgr.class.php:			$sql = "/* $debugMsg */ SELECT REQV.* FROM {$this->tables['req_versions']} REQV," .
lib/functions/requirement_mgr.class.php:			       " {$this->tables['nodes_hierarchy']} NH ".
lib/functions/requirement_mgr.class.php:			$info = $this->db->fetchFirstRow($sql);
lib/functions/requirement_mgr.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/requirement_mgr.class.php:	    $now = $this->db->db_now();
lib/functions/requirement_mgr.class.php:	    $sql="/* $debugMsg */ INSERT INTO {$this->tables['req_versions']} " .
lib/functions/requirement_mgr.class.php:	         " FROM {$this->tables['req_versions']} " .
lib/functions/requirement_mgr.class.php:	    $result = $this->db->exec_query($sql);
lib/functions/requirement_mgr.class.php:		$this->updateBoolean($reqVersionID,'is_open',$value);
lib/functions/requirement_mgr.class.php:		$this->updateBoolean($reqVersionID,'active',$value);
lib/functions/requirement_mgr.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/requirement_mgr.class.php:		$sql = "/* $debugMsg */ UPDATE {$this->tables['req_versions']} " .
lib/functions/requirement_mgr.class.php:	    $result = $this->db->exec_query($sql);
lib/functions/requirement_mgr.class.php:		$debugMsg = '/* Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__ . ' */';
lib/functions/requirement_mgr.class.php:	    $relations['req'] = current($this->get_by_id($id));
lib/functions/requirement_mgr.class.php:		$tproject_mgr = new testproject($this->db);
lib/functions/requirement_mgr.class.php:		$interproject_linking = config_get('req_cfg')->relations->interproject_linking;
lib/functions/requirement_mgr.class.php:			   " FROM {$this->tables['req_relations']} " .
lib/functions/requirement_mgr.class.php:    	$relations['relations']= $this->db->get_recordset($sql);  
lib/functions/requirement_mgr.class.php:    		$labels = $this->get_all_relation_labels();
lib/functions/requirement_mgr.class.php:	    			$other_req = $this->get_by_id($rel[$other_key]);
lib/functions/requirement_mgr.class.php:			    		$other_tproject = $tproject_mgr->get_by_id($other_req[0]['testproject_id']);
lib/functions/requirement_mgr.class.php:			    		$user = tlUser::getByID($this->db,$rel['author_id']);
lib/functions/requirement_mgr.class.php:			    		$relations['relations'][$key]['author'] = $user->getDisplayName();
lib/functions/requirement_mgr.class.php:		$debugMsg = '/* Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__ . ' */';
lib/functions/requirement_mgr.class.php:			   " FROM {$this->tables['req_relations']} " .
lib/functions/requirement_mgr.class.php:		$rs = $this->db->get_recordset($sql);
lib/functions/requirement_mgr.class.php:		$debugMsg = '/* Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__ . ' */';
lib/functions/requirement_mgr.class.php:			   " FROM {$this->tables['req_relations']} " .
lib/functions/requirement_mgr.class.php:		$rs = $this->db->get_recordset($sql);
lib/functions/requirement_mgr.class.php:		$debugMsg = '/* Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__ . ' */';
lib/functions/requirement_mgr.class.php:		$time = $this->db->db_now();
lib/functions/requirement_mgr.class.php:		$sql = " $debugMsg INSERT INTO {$this->tables['req_relations']} "	. 
lib/functions/requirement_mgr.class.php:		$this->db->exec_query($sql);
lib/functions/requirement_mgr.class.php:		$debugMsg = '/* Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__ . ' */';
lib/functions/requirement_mgr.class.php:		$sql = " $debugMsg DELETE FROM {$this->tables['req_relations']} WHERE id=$id ";
lib/functions/requirement_mgr.class.php:		$this->db->exec_query($sql);
lib/functions/requirement_mgr.class.php:		$debugMsg = '/* Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__ . ' */';
lib/functions/requirement_mgr.class.php:		$sql = " $debugMsg DELETE FROM {$this->tables['req_relations']} " . 
lib/functions/requirement_mgr.class.php:		$this->db->exec_query($sql);
lib/functions/requirement_mgr.class.php:		$labels = config_get('req_cfg')->rel_type_labels;
lib/functions/requirement_mgr.class.php:		$labels = $this->get_all_relation_labels();
lib/functions/requirement_mgr.class.php:				// mark this as equal relation - no parent/child, makes searching simpler
lib/functions/tlAttachment.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/tlAttachment.class.php: * @copyright 	2007-2009, TestLink community 
lib/functions/tlAttachment.class.php:	const E_TITLELENGTH = -1;
lib/functions/tlAttachment.class.php:	 * @var string $fType the mime-type of the file
lib/functions/tlAttachment.class.php:		$this->fkID = NULL;
lib/functions/tlAttachment.class.php:		$this->fkTableName = NULL;
lib/functions/tlAttachment.class.php:		$this->fName = NULL;
lib/functions/tlAttachment.class.php:		$this->title = NULL;
lib/functions/tlAttachment.class.php:		$this->fType = NULL;
lib/functions/tlAttachment.class.php:		$this->fSize = NULL;
lib/functions/tlAttachment.class.php:		$this->destFPath = NULL; 
lib/functions/tlAttachment.class.php:		$this->fContents = NULL;
lib/functions/tlAttachment.class.php:		$this->description = NULL;
lib/functions/tlAttachment.class.php:		$this->dateAdded = NULL;
lib/functions/tlAttachment.class.php:			$this->dbID = null;
lib/functions/tlAttachment.class.php:		$this->compressionType  = tlAttachmentRepository::getCompression();
lib/functions/tlAttachment.class.php:		$this->repositoryPath = tlAttachmentRepository::getPathToRepository();
lib/functions/tlAttachment.class.php:		$this->attachmentCfg = config_get('attachments');
lib/functions/tlAttachment.class.php:		$this->_clean();
lib/functions/tlAttachment.class.php:		$this->dbID = $dbID;
lib/functions/tlAttachment.class.php:		$this->_clean();
lib/functions/tlAttachment.class.php:	 * @param object $db [ref] the db-object
lib/functions/tlAttachment.class.php:	 * @param string $fType the mime-type of the file
lib/functions/tlAttachment.class.php:		$this->_clean();
lib/functions/tlAttachment.class.php:		$config = $this->attachmentCfg;
lib/functions/tlAttachment.class.php:			switch($config->action_on_save_empty_title)
lib/functions/tlAttachment.class.php:		if(!$config->allow_empty_title && $title == "")
lib/functions/tlAttachment.class.php:		$this->fkID = $fkid;
lib/functions/tlAttachment.class.php:		$this->fkTableName = trim($fkTableName);
lib/functions/tlAttachment.class.php:		$this->fType = trim($fType);
lib/functions/tlAttachment.class.php:		$this->fSize = $fSize;
lib/functions/tlAttachment.class.php:		$this->fName = $fName; 
lib/functions/tlAttachment.class.php:		$this->destFPath = trim($destFPath); 
lib/functions/tlAttachment.class.php:		$this->fContents = $fContents;
lib/functions/tlAttachment.class.php:		//for FS-repository, the path to the repository itself is cut off, so the path is
lib/functions/tlAttachment.class.php:		$this->destFPath = str_replace($this->repositoryPath.DIRECTORY_SEPARATOR,"",$destFPath);
lib/functions/tlAttachment.class.php:		$this->title = trim($title);
lib/functions/tlAttachment.class.php:		$this->_clean($options);
lib/functions/tlAttachment.class.php:				"compression_type,file_path,fk_id,fk_table FROM {$this->tables['attachments']} ";
lib/functions/tlAttachment.class.php:			$clauses[] = "id = {$this->dbID}";		
lib/functions/tlAttachment.class.php:		$info = $db->fetchFirstRow($query);			 
lib/functions/tlAttachment.class.php:			$this->fkID = $info['fk_id'];
lib/functions/tlAttachment.class.php:			$this->fkTableName = $info['fk_table'];
lib/functions/tlAttachment.class.php:			$this->fName = $info['file_name'];
lib/functions/tlAttachment.class.php:			$this->destFPath = $info['file_path'];
lib/functions/tlAttachment.class.php:			$this->fType = $info['file_type'];
lib/functions/tlAttachment.class.php:			$this->fSize = $info['file_size'];
lib/functions/tlAttachment.class.php:			$this->dbID =  $info['id'];
lib/functions/tlAttachment.class.php:			$this->description = $info['description'];
lib/functions/tlAttachment.class.php:			$this->dateAdded = $info['date_added'];
lib/functions/tlAttachment.class.php:			$this->title = $info['title'];
lib/functions/tlAttachment.class.php:			$this->compressionType = $info['compression_type'];
lib/functions/tlAttachment.class.php:		return array("id" => $this->dbID,"title" => $this->title,
lib/functions/tlAttachment.class.php:			         "description" => $this->description,
lib/functions/tlAttachment.class.php:			         "file_name" => $this->fName, "file_type" => $this->fType,
lib/functions/tlAttachment.class.php:			         "file_size" => $this->fSize,
lib/functions/tlAttachment.class.php:			         "date_added" => $this->dateAdded,
lib/functions/tlAttachment.class.php:			         "compression_type" => $this->compressionType,
lib/functions/tlAttachment.class.php:			         "file_path" => $this->destFPath,
lib/functions/tlAttachment.class.php:			         "fk_id" => $this->fkID,"fk_table" => $this->fkTableName,
lib/functions/tlAttachment.class.php:		$tableName = $db->prepare_string($this->fkTableName);
lib/functions/tlAttachment.class.php:		$fName = $db->prepare_string($this->fName);
lib/functions/tlAttachment.class.php:		$title = $db->prepare_string($this->title);
lib/functions/tlAttachment.class.php:		$fType = $db->prepare_string($this->fType);
lib/functions/tlAttachment.class.php:		$destFPath = is_null($this->destFPath) ? 'NULL' : "'".$db->prepare_string($this->destFPath)."'";
lib/functions/tlAttachment.class.php:		//for FS-repository the contents are null
lib/functions/tlAttachment.class.php:		$fContents = is_null($this->fContents) ? 'NULL' : "'".$db->prepare_string($this->fContents)."'";
lib/functions/tlAttachment.class.php:		$query = "INSERT INTO {$this->tables['attachments']} 
lib/functions/tlAttachment.class.php:    	    VALUES ({$this->fkID},'{$tableName}','{$fName}',{$destFPath},{$this->fSize},'{$this->fType}'," . $db->db_now() . 
lib/functions/tlAttachment.class.php:       		",$fContents,{$this->compressionType},'{$title}')";
lib/functions/tlAttachment.class.php:		$result = $db->exec_query($query);
lib/functions/tlAttachment.class.php:			$this->dbID = $db->insert_id();
lib/functions/tlAttachment.class.php:		$query = "DELETE FROM {$this->tables['attachments']} WHERE id = {$this->dbID}";
lib/functions/tlAttachment.class.php:		$result = $db->exec_query($query);
lib/functions/tinymce.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/tinymce.class.php: * @copyright 	2007-2009, TestLink community 
lib/functions/tinymce.class.php: *	20071201 - francisco.mancardi@gruppotesi.com
lib/functions/tinymce.class.php: *      FCKeditor - The text editor for Internet - http://www.fckeditor.net
lib/functions/tinymce.class.php: *      Copyright (C) 2003-2007 Frederico Caldeira Knabben
lib/functions/tinymce.class.php:  		$this->InstanceName	= $instanceName;
lib/functions/tinymce.class.php:		$this->Value		= '';
lib/functions/tinymce.class.php:		echo $this->CreateHtml($rows,$cols);
lib/functions/tinymce.class.php:		$HtmlValue = htmlspecialchars($this->Value);
lib/functions/tinymce.class.php:			$my_rows = $this->rows;
lib/functions/tinymce.class.php:	    	$my_cols = $this->cols;
lib/functions/tinymce.class.php:		$Html = "<textarea name=\"{$this->InstanceName}\"" .
lib/functions/tinymce.class.php:		        "id=\"{$this->InstanceName}\" rows=\"{$my_rows}\" cols=\"{$my_cols}\">".
lib/functions/inputparameter.inc.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/inputparameter.inc.php: *  20100109 - franciscom - fixed errors on documentation          
lib/functions/inputparameter.inc.php: * @copyright 	2005-2009, TestLink community 
lib/functions/inputparameter.inc.php:			$args->$pName = $value;
lib/functions/inputparameter.inc.php:	$vInfo->trim = tlStringValidationInfo::TRIM_BOTH;
lib/functions/inputparameter.inc.php:	$vInfo->doStripSlashes = true;
lib/functions/inputparameter.inc.php:            $vInfo->$parameter = $$parameter;
lib/functions/inputparameter.inc.php:	return $iParam->value();
lib/functions/inputparameter.inc.php:            $vInfo->$parameter = $$parameter;
lib/functions/inputparameter.inc.php:	return $iParam->value();
lib/functions/inputparameter.inc.php: * Process a non-negative integer type value from GET/POST/REQUEST 
lib/functions/inputparameter.inc.php:		$vInfo->pfnValidation = $pfnValidation;
lib/functions/inputparameter.inc.php:    	$vInfo->validationInfo = new tlStringValidationInfo();
lib/functions/inputparameter.inc.php:		$vInfo->validationInfo = new tlIntegerValidationInfo();
lib/functions/inputparameter.inc.php:	return $iParam->value();
lib/functions/inputparameter.inc.php:	return $iParam->value();
lib/functions/tlHTMLTable.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/tlHTMLTable.class.php: *  20100828 - eloff - Changed format on status column
lib/functions/tlHTMLTable.class.php: *  20100719 - eloff - Pass $tableID via constructor
lib/functions/tlHTMLTable.class.php: *  20100503 - franciscom - BUGID 3418 - changed in renderStatus(), due to changes on data structure
lib/functions/tlHTMLTable.class.php: *  20091223 - eloff - created class
lib/functions/tlHTMLTable.class.php: * Helper class used to generate HTML-tables. Used to output tables meant for
lib/functions/tlHTMLTable.class.php: * documents and spreadsheets where EXT-tables don't work.
lib/functions/tlHTMLTable.class.php:		$this->code_status = $resultsCfg['code_status'];
lib/functions/tlHTMLTable.class.php:		$this->status_color = $resultsCfg['charts']['status_colour'];
lib/functions/tlHTMLTable.class.php:		$this->prio_code_label = $urgencyCfg['code_label'];
lib/functions/tlHTMLTable.class.php:		$s = '<table class="simple" style="width: 100%; margin-left: 0px;">';
lib/functions/tlHTMLTable.class.php:		foreach ($this->columns as $column) {
lib/functions/tlHTMLTable.class.php:		foreach ($this->data as $rowData) 
lib/functions/tlHTMLTable.class.php:				if( isset($this->columns[$colIndex]['type']) )
lib/functions/tlHTMLTable.class.php:					if ($this->columns[$colIndex]['type'] == 'priority') {
lib/functions/tlHTMLTable.class.php:						$value = $this->renderPriority($value);
lib/functions/tlHTMLTable.class.php:					if ($this->columns[$colIndex]['type'] == 'status') {
lib/functions/tlHTMLTable.class.php:						$value = $this->renderStatus($value);
lib/functions/tlHTMLTable.class.php:		$label = lang_get($this->prio_code_label[$prio]);
lib/functions/exec_cfield_mgr.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/exec_cfield_mgr.class.php: *      20100316 - Julian - cosmetical changes for input field sizes of custom fields
lib/functions/exec_cfield_mgr.class.php: *      20090514 - franciscom - localize label
lib/functions/exec_cfield_mgr.class.php: *      20071006 - franciscom - exec_cfield_mgr() interface change
lib/functions/exec_cfield_mgr.class.php:        $this->db = &$db;
lib/functions/exec_cfield_mgr.class.php:        parent::__construct($this->db);
lib/functions/exec_cfield_mgr.class.php:        $this->cf_map = $this->get_linked_cfields($tproject_id);
lib/functions/exec_cfield_mgr.class.php:	$custom_field_types_id=array_flip($this->custom_field_types);
lib/functions/exec_cfield_mgr.class.php:    if( !is_null($this->cf_map) )
lib/functions/exec_cfield_mgr.class.php:        foreach($this->cf_map as $cf_id => $cf_info)
lib/functions/exec_cfield_mgr.class.php:                          $this->string_custom_field_input($cf_info,'',$inputSize) . "</td></tr>\n";
lib/functions/exec_cfield_mgr.class.php:     *      20080811 - franciscom - BUGID 1650 (REQ)
lib/functions/exec_cfield_mgr.class.php:     *      20071006 - franciscom - interface changed
lib/functions/exec_cfield_mgr.class.php:      $cf = $this->get_linked_cfields_at_design($tproject_id,$enabled,$filters,'testcase');
lib/functions/exec_cfield_mgr.class.php:      $custom_field_types_id=array_flip($this->custom_field_types);
lib/functions/exec_cfield_mgr.class.php:      if( !is_null($this->cf_map) )
lib/functions/exec_cfield_mgr.class.php:        foreach($this->cf_map as $cf_id => $cf_info)
lib/functions/exec_cfield_mgr.class.php:            $verbose_type=$this->custom_field_types[$t_type];
lib/functions/exec_cfield_mgr.class.php:            $input_name[$t_id] = array('cf_name' => "{$this->name_prefix}{$t_type}_{$t_id}",
lib/functions/exec_cfield_mgr.class.php:    $cf_field_names = $this->field_names();
lib/functions/exec_cfield_mgr.class.php:                // BUGID 3301 - replaced POST with REQUEST
lib/functions/xml.inc.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/xml.inc.php: * @copyright 	2004-2009, TestLink community 
lib/functions/xml.inc.php: *	20100213 - franciscom - new function getItemsFromSimpleXMLObj() 
lib/functions/xml.inc.php:  			// echo "DEBUG - " . __FUNCTION__ . " \$idx:$idx<br>";
lib/functions/xml.inc.php:  						$dummy[$key] = $simpleXMLItems[$idx]->$key;
lib/functions/results.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/results.class.php: * @copyright 	2004-2009, TestLink community 
lib/functions/results.class.php: * 20100821 - asimon - BUGID 3682
lib/functions/results.class.php: * 20100721 - asimon - BUGID 3406, 1508: changed for user assignments per build:
lib/functions/results.class.php: * 20100518 - franciscom - BUGID 3474: Link to test case in Query Metrics Report is broken if using platforms
lib/functions/results.class.php: * 20100515 - franciscom - BUGID 3438
lib/functions/results.class.php: * 20090804 - franciscom - added contributed code getPriority()
lib/functions/results.class.php: * 20090618 - franciscom - BUGID 0002621 
lib/functions/results.class.php: * 20090414 - amitkhullar - BUGID: 2374-Show Assigned User in the Not Run Test Cases Report 
lib/functions/results.class.php: * 20090413 - amitkhullar - BUGID 2267 - SQL Error in linked Test Cases
lib/functions/results.class.php: * 20090409 - amitkhullar - Created an results_overloaded function for extending the base class
lib/functions/results.class.php: * 20090327 - amitkhullar- BUGID 2156 - added option to get latest/all results in Query metrics report.
lib/functions/results.class.php: * 20080928 - franciscom - some minor refactoring regarding keywords
lib/functions/results.class.php: * 20080928 - franciscom - refactoring on buildExecutionsMap()
lib/functions/results.class.php: * 20080602 - franciscom - added logic to manage version using tcversion_number
lib/functions/results.class.php: * 20080513 - franciscom - getTCLink() added external_id 
lib/functions/results.class.php: * 20080513 - franciscom - buildExecutionsMap() added external_id in output
lib/functions/results.class.php: * 20080413 - franciscom - refactoring
lib/functions/results.class.php: * 20080302 - franciscom - refactored of tally* functions, to manage
lib/functions/results.class.php: * 20071101 - franciscom - import_file_types, export_file_types
lib/functions/results.class.php: * 20071013 - franciscom - changes to fix MSSQL problems
lib/functions/results.class.php: * 20070916 - franciscom - refactoring to remove global coupling
lib/functions/results.class.php: * 20070825 - franciscom - added node_order in buildExecutionsMap()
lib/functions/results.class.php: * 20070505 - franciscom - removing timer.php
lib/functions/results.class.php: * 20070219 - kevinlevy - nearing completion for 1.7 release
lib/functions/results.class.php: * 20060829 - kevinlevy - development in progress
lib/functions/results.class.php:	 * $this->linked_tcversions
lib/functions/results.class.php:	private $testPlanID = -1;
lib/functions/results.class.php:	private	$tprojectID = -1;
lib/functions/results.class.php:	* suiteIds are are registered and de-registered from aggSuiteList using
lib/functions/results.class.php:	* TO-DO check this description of this object
lib/functions/results.class.php:	* TO-DO check this description of this object
lib/functions/results.class.php:	* TO-DO check this description of this object
lib/functions/results.class.php:	                        $builds_to_query = -1, $lastResult = 'a', 
lib/functions/results.class.php:		$this->latest_results = 1;
lib/functions/results.class.php:		return $this->results_overload($db, $tplan_mgr,$tproject_info, $tplan_info,
lib/functions/results.class.php:	 * $builds_to_query = 'a' will query all build, $builds_to_query = -1 will prevent
lib/functions/results.class.php:	 *      20100720 - asimon - BUGID 3406, 1508: added logic to get result counts on build level
lib/functions/results.class.php:	 * 	    20090327 - amitkhullar - added parameter $latest_results to get the latest results only.	
lib/functions/results.class.php:	 *      20071013 - franciscom - changes to fix MSSQL problems
lib/functions/results.class.php:	 *                 $startTime = "0000-00-00 00:00:00" -> null
lib/functions/results.class.php:  	 *                 $endTime = "9999-01-01 00:00:00" -> null
lib/functions/results.class.php:	 *      20070916 - franciscom - interface changes
lib/functions/results.class.php:	                        $builds_to_query = -1, $lastResult = 'a',
lib/functions/results.class.php:		$this->priorityLevelsCfg = config_get('priority_levels');
lib/functions/results.class.php:		$this->resultsCfg = config_get('results');
lib/functions/results.class.php:		$this->testCaseCfg = config_get('testcase_cfg');
lib/functions/results.class.php:  		$this->db = $db;
lib/functions/results.class.php:  		$this->tplanMgr = $tplan_mgr;
lib/functions/results.class.php:  		$this->map_tc_status = $this->resultsCfg['status_code'];
lib/functions/results.class.php:    	//     $dummy['not_run']=$this->map_tc_status['not_run'];
lib/functions/results.class.php:    	foreach( $this->resultsCfg['status_label_for_exec_ui'] as $tc_status_verbose => $label)
lib/functions/results.class.php:        	$this->tc_status_for_statistics[$tc_status_verbose] = $this->map_tc_status[$tc_status_verbose];
lib/functions/results.class.php:    	if( !isset($this->resultsCfg['status_label_for_exec_ui']['not_run']) )
lib/functions/results.class.php:        	$this->tc_status_for_statistics['not_run'] = $this->map_tc_status['not_run'];  
lib/functions/results.class.php:    	$this->suitesSelected = $suitesSelected;
lib/functions/results.class.php:    	$this->tprojectID = $tproject_info['id'];
lib/functions/results.class.php:    	$this->testCasePrefix = $tproject_info['prefix'];
lib/functions/results.class.php:    	$this->testPlanID = $tplan_info['id'];
lib/functions/results.class.php:		$this->tplanName  = $tplan_info['name'];
lib/functions/results.class.php:    	$this->suiteStructure = $suiteStructure;
lib/functions/results.class.php:		$this->flatArray = $flatArray;
lib/functions/results.class.php:		$this->linked_tcversions = $linked_tcversions;
lib/functions/results.class.php:		if (($this->suiteStructure == null) && ($this->flatArray == null) && ($this->linked_tcversions == null))
lib/functions/results.class.php:		    list($this->suiteStructure,$this->linked_tcversions) = $this->generateExecTree($db,$keywordId, $owner);
lib/functions/results.class.php:		// KL - if no builds are specified, no need to execute the following block of code
lib/functions/results.class.php:		if ($builds_to_query != -1) {
lib/functions/results.class.php:			// get keyword id -> keyword name pairs used in this test plan
lib/functions/results.class.php:			$keywords_in_tplan = $tplan_mgr->get_keywords_map($this->testPlanID,'ORDER BY keyword');
lib/functions/results.class.php:			// KL - 20061229 - this call may not be necessary for all reports
lib/functions/results.class.php:			$this->keywordData = null;
lib/functions/results.class.php:			    $this->keywordData = $this->getKeywordData(array_keys($keywords_in_tplan));
lib/functions/results.class.php:			//$tplan_mgr->get_keywords_tcases($this->testPlanID);
lib/functions/results.class.php:			// get owner id -> owner name pairs used in this test plan
lib/functions/results.class.php:			// KL - 2/01/07
lib/functions/results.class.php:			// if you just query the executions table for those rows with status = $this->map_tc_status['passed']
lib/functions/results.class.php:			$all_results = $this->latest_results;
lib/functions/results.class.php:			$this->executionsMap = $this->buildExecutionsMap($builds_to_query, 'a', $keywordId,
lib/functions/results.class.php:            // new dBug($this->executionsMap);
lib/functions/results.class.php:			$this->createMapOfLastResult($this->suiteStructure, $this->executionsMap, $lastResult);
lib/functions/results.class.php:			$this->aggregateKeywordResults = $this->tallyKeywordResults($this->mapOfLastResultByKeyword, $keywords_in_tplan);
lib/functions/results.class.php:			$this->aggregateOwnerResults = $this->tallyOwnerResults($this->mapOfLastResultByOwner, $arrOwners);
lib/functions/results.class.php:			$this->createMapOfSuiteSummary($this->mapOfLastResult);
lib/functions/results.class.php:			$this->createAggregateMap($this->suiteStructure, $this->mapOfSuiteSummary);
lib/functions/results.class.php:   			$this->totalsForPlan = $this->createTotalsForPlan($this->suiteStructure);
lib/functions/results.class.php:   			$arrBuilds = $tplan_mgr->get_builds($this->testPlanID, testplan::GET_ACTIVE_BUILD);
lib/functions/results.class.php:			// 3406, 1508 - we need the totals per build here, not for the whole plan anymore
lib/functions/results.class.php:			//$this->aggregateBuildResults = $this->tallyBuildResults($this->mapOfLastResultByBuild,
lib/functions/results.class.php:			//                                                        $arrBuilds, $this->totalsForPlan);
lib/functions/results.class.php:			$this->totalsForBuilds = $this->createTotalsForBuilds($arrBuilds);
lib/functions/results.class.php:			$this->aggregateBuildResults = $this->tallyBuildResults($this->mapOfLastResultByBuild,
lib/functions/results.class.php:			                                                        $arrBuilds, $this->totalsForBuilds);
lib/functions/results.class.php:    	return $this->export_file_types;
lib/functions/results.class.php:    	return $this->import_file_types;
lib/functions/results.class.php:	 * IMPORTANT: keys on details map dependends of configuration map $tlCfg->results['status_label']
lib/functions/results.class.php:      		$element = $this->tallyResults($results,sizeOf($results),$item_name);
lib/functions/results.class.php:	 * IMPORTANT: keys on details map dependends of configuration map $tlCfg->results['status_label']
lib/functions/results.class.php:			$element = $this->tallyResults($results,$num,$item_name);
lib/functions/results.class.php:		  	$element[$item_name] = ($ownerId == -1) ? $no_tester_assigned : $ownerIdNamePairs[$ownerId];
lib/functions/results.class.php:	 *     20100721 - asimon - BUGID 3406, 1508
lib/functions/results.class.php:			// 3406, 1508 - total cases is now an array with totals for each build ID
lib/functions/results.class.php:			$element=$this->tallyResults($results,$totalCases,$item_name);
lib/functions/results.class.php:				// and the percentages need to be re-calculated after that of course
lib/functions/results.class.php:				$not_run_count = $this->tplanMgr->assignment_mgr->get_not_run_tc_count_per_build($buildId);
lib/functions/results.class.php:				$rValue[$buildId]['percentage_completed'] = 100 - $not_run_percentage;
lib/functions/results.class.php:			$element=$this->tallyResults($results,$num,$item_name);
lib/functions/results.class.php:	// 		$element=$this->tallyResults($results,$num,$item_name);
lib/functions/results.class.php:		return $this->aggregateKeywordResults;
lib/functions/results.class.php:	 * unassigned test cases show up under owner id = -1
lib/functions/results.class.php:		return $this->aggregateOwnerResults;
lib/functions/results.class.php:		return $this->aggregateBuildResults;
lib/functions/results.class.php:		if ($this->aggregatePrioResults == null) {
lib/functions/results.class.php:			$this->aggregatePrioResults = $this->tallyPriorityResults($this->mapOfLastResultByPrio);
lib/functions/results.class.php:		return $this->aggregatePrioResults;
lib/functions/results.class.php:	// 	if ($this->aggregatePlatformResults == null) 
lib/functions/results.class.php:	// 		$platforms = $this->tplanMgr->getPlatforms($this->testPlanID,'map');
lib/functions/results.class.php:	// 		$this->aggregatePlatformResults = $this->tallyPlatformResults($this->mapOfLastResultByPlatform, $platforms);
lib/functions/results.class.php:	// 	return $this->aggregatePlatformResults;
lib/functions/results.class.php:		return $this->executionsMap;
lib/functions/results.class.php:		return $this->suiteStructure;
lib/functions/results.class.php:	    return $this->linked_tcversions;
lib/functions/results.class.php:		return $this->mapOfSuiteSummary;
lib/functions/results.class.php:		return $this->mapOfLastResult;
lib/functions/results.class.php:		return $this->mapOfAggregate;
lib/functions/results.class.php:		return $this->totalsForPlan;
lib/functions/results.class.php:		return $this->totalsForBuilds;
lib/functions/results.class.php:	 * @return array single-dimension array with pattern level, suite name, suite id
lib/functions/results.class.php:		return $this->flatArray;
lib/functions/results.class.php:		$code_verbose=array_flip($this->tc_status_for_statistics);
lib/functions/results.class.php:		foreach($this->tc_status_for_statistics as $status_verbose => $status_code)
lib/functions/results.class.php:		$total['not_run'] = abs($totalCases - $dummy);
lib/functions/results.class.php:			$percentCompleted = (($totalCases - $total['not_run']) / $totalCases) * 100;
lib/functions/results.class.php:			foreach($this->tc_status_for_statistics as $status_verbose => $status_code)
lib/functions/results.class.php:		$total['not_run'] = abs($totalCases - $dummy);
lib/functions/results.class.php:						number_format((($totalCases - $target['not_run']['qty']) / $totalCases) * 100,2);
lib/functions/results.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/results.class.php:		$sql .= " SELECT user_id FROM {$this->tables['user_assignments']} " .
lib/functions/results.class.php:		$owner_row =  $this->db->fetchFirstRow($sql,'testcase_id', 1);
lib/functions/results.class.php:		$owner_id = $owner_row['user_id'] == '' ? -1 : $owner_row['user_id'];
lib/functions/results.class.php:	 * Fill $this->mapOfLastResult - which provides information on the last result
lib/functions/results.class.php:	 * $this->mapOfLastResult is an array of suite ids
lib/functions/results.class.php:	 * each suiteId      -> arrayOfTCresults, arrayOfSummaryResults
lib/functions/results.class.php:	 * arrayOfTCresults  ->  array of rows containing (buildIdLastExecuted, result) where row id = testcaseId
lib/functions/results.class.php:	 *      20070919 - franciscom - interface changes
lib/functions/results.class.php:	 *      20070825 - franciscom - added node_order
lib/functions/results.class.php:		// 20080602 - franciscom
lib/functions/results.class.php:			$this->mapOfLastResultByBuild[$buildNumber][$testcase_id][$platform_id] = $result;
lib/functions/results.class.php:		$owner_id = $this->getUserForFeature($feature_id);
lib/functions/results.class.php:		if ($this->keywordData != null && array_key_exists($testcase_id, $this->keywordData))
lib/functions/results.class.php:			$associatedKeywords = $this->keywordData[$testcase_id];
lib/functions/results.class.php:		if ($this->mapOfLastResult && array_key_exists($suiteId, $this->mapOfLastResult))
lib/functions/results.class.php:			if (array_key_exists($testcase_id, $this->mapOfLastResult[$suiteId]))
lib/functions/results.class.php:				if (array_key_exists($platform_id, $this->mapOfLastResult[$suiteId][$testcase_id]))
lib/functions/results.class.php:					$buildInMap = $this->mapOfCaseResults[$testcase_id]['buildNumber'];
lib/functions/results.class.php:					$execIDInMap = $this->mapOfCaseResults[$testcase_id]['execID'];
lib/functions/results.class.php:			$this->mapOfLastResultByOwner[$owner_id][$testcase_id][$platform_id] = $result;
lib/functions/results.class.php:			// echo __FUNCTION__ . ' LINE::' . __LINE__  .'<br> - tcversion_id=' . $tcversion_id . '<br>';
lib/functions/results.class.php:			$prio = $this->getPriority($this->testPlanID, $tcversion_id);
lib/functions/results.class.php:			$this->mapOfLastResultByPrio[$prio][$testcase_id][$platform_id] = $result;
lib/functions/results.class.php:			// 20090804 - Eloff
lib/functions/results.class.php:			// $this->mapOfLastResultByPlatform[$platform_id][$testcase_id][$platform_id] = $result;
lib/functions/results.class.php:				$this->mapOfLastResultByKeyword[$associatedKeywords[$i]][$testcase_id] = $result;
lib/functions/results.class.php:			$this->mapOfCaseResults[$testcase_id]['buildNumber'] = $buildNumber;
lib/functions/results.class.php:			$this->mapOfCaseResults[$testcase_id]['execID'] = $executions_id;
lib/functions/results.class.php:			$this->mapOfLastResult[$suiteId][$testcase_id][$platform_id] = array("buildIdLastExecuted" => $buildNumber,
lib/functions/results.class.php:			$code_verbose=array_flip($this->tc_status_for_statistics);
lib/functions/results.class.php:			$code_verbose[$this->map_tc_status['not_run']]='not_run';
lib/functions/results.class.php:				foreach($this->tc_status_for_statistics as $status_verbose => $status_code)
lib/functions/results.class.php:				$this->mapOfSuiteSummary[$suiteId] =  $total;
lib/functions/results.class.php:	 *  it takes into account sub-suite tallies within that suite
lib/functions/results.class.php:				array_push($this->aggSuiteList, $suiteId);
lib/functions/results.class.php:					$this->addResultsToAggregate($summaryArray);
lib/functions/results.class.php:					$this->createAggregateMap($newSuiteStructure, $mapOfSuiteSummary);
lib/functions/results.class.php:				array_pop($this->aggSuiteList);
lib/functions/results.class.php:		foreach($this->tc_status_for_statistics as $status_verbose => $status_code)
lib/functions/results.class.php:				$resultsForSuite = isset($this->mapOfAggregate[$suiteId]) ? $this->mapOfAggregate[$suiteId] : null;
lib/functions/results.class.php:	 * @return array $counters Array similar to $this->totalsForPlan, but with correct numbers per build 
lib/functions/results.class.php:			$counters[$build_id] = $this->totalsForPlan;
lib/functions/results.class.php:			$total = $this->tplanMgr->assignment_mgr->get_count_of_assignments_for_build_id($build_id);
lib/functions/results.class.php:			$not_run = $this->tplanMgr->assignment_mgr->get_not_run_tc_count_per_build($build_id);
lib/functions/results.class.php:		$loop_qty=count($this->aggSuiteList);
lib/functions/results.class.php:			$suiteId = $this->aggSuiteList[$idx];
lib/functions/results.class.php:			if ($this->mapOfAggregate && array_key_exists($suiteId, $this->mapOfAggregate))
lib/functions/results.class.php:				$currentSuite = $this->mapOfAggregate[$suiteId];
lib/functions/results.class.php:				foreach($this->tc_status_for_statistics as $status_verbose => $status_code)
lib/functions/results.class.php:			$this->mapOfAggregate[$suiteId] = $currentSuite;
lib/functions/results.class.php:			   " FROM {$this->tables['testcase_keywords']}" .
lib/functions/results.class.php:		$returnMap =  $this->db->fetchColumnsIntoMap($sql,'testcase_id', 'keyword_id',$CUMULATIVE);
lib/functions/results.class.php:						$this->addLastResultToMap($suiteId, $suiteName,$cexec,$lastResult);
lib/functions/results.class.php:					$summaryTreeForChild = $this->createMapOfLastResult($childSuite, $executionsMap, $lastResult);
lib/functions/results.class.php:	 *  20100518 - franciscom - BUGID 3474: Link to test case in Query Metrics Report is broken if using platforms
lib/functions/results.class.php:	 *	20090302 - amitkhullar - added a parameter $all_results to get latest results (0) only otherwise 
lib/functions/results.class.php:	 *	20080928 - franciscom - seems that adding a control to avoid call to buildBugString()
lib/functions/results.class.php:	 *	20070916 - franciscom - removed session coupling
lib/functions/results.class.php:		$allSuites = $this->getAllSuites();
lib/functions/results.class.php:		$canExecute = has_rights($this->db,"tp_execute");
lib/functions/results.class.php:		if (($lastResult == $this->map_tc_status['passed']) || ($lastResult == $this->map_tc_status['failed']) ||
lib/functions/results.class.php:				($lastResult == $this->map_tc_status['blocked'])){
lib/functions/results.class.php:		if (($builds_to_query != -1) && ($builds_to_query != 'a')) {
lib/functions/results.class.php:		$suffixLink = htmlspecialchars($this->testCasePrefix . $this->testCaseCfg->glue_character);
lib/functions/results.class.php:		foreach($this->linked_tcversions as $tcase_info)
lib/functions/results.class.php:				$owner_id = $this->getUserForFeature($info['feature_id']);
lib/functions/results.class.php:				// BUGID - 2374: Show Assigned User in the Not Run Test Cases Report 
lib/functions/results.class.php:									'testcasePrefix' => $this->testCasePrefix . $this->testCaseCfg->glue_character,
lib/functions/results.class.php:									'status' => $this->map_tc_status['not_run'],
lib/functions/results.class.php:					if (($lastResult == 'a') || ($lastResult == $this->map_tc_status['not_run'])) 
lib/functions/results.class.php:						// echo 'NOTRUN - DEBUG- Added Not Run info <br>';
lib/functions/results.class.php:					// TO-DO - this is where we can include the searching of results
lib/functions/results.class.php:					// over multiple test plans - by modifying this select statement slightly
lib/functions/results.class.php:					$sql = "SELECT * FROM {$this->tables['executions']} executions " .
lib/functions/results.class.php:						   "WHERE tcversion_id = " . $info['executed'] . " AND testplan_id = $this->testPlanID " .
lib/functions/results.class.php:					// mike_h - 20070806 - when ordering executions by the timestamp, 
lib/functions/results.class.php:					// amitkhullar - BUGID 2156 - added option to get latest/all results in Query metrics report.				
lib/functions/results.class.php:					  //echo "<br>debug - <b><i>" . __FUNCTION__ . "</i></b><br><b>" . $sql . "</b><br>";
lib/functions/results.class.php:					$execQuery = $this->db->fetchArrayRowsIntoMap($sql,'id');
lib/functions/results.class.php:						if ($lastResult != $this->map_tc_status['not_run']) 
lib/functions/results.class.php:								//@todo: Refactor for this code - BUGID 2242 
lib/functions/results.class.php:								$infoToSave['bugString'] = $searchBugs ? $this->buildBugString($this->db, $executions_id) : '';
lib/functions/results.class.php:								//-amitkhullar - BugID:2267
lib/functions/results.class.php:								// 20100518 - franciscom - BUGID 3474: Link to test case in Query Metrics Report is broken if using platforms
lib/functions/results.class.php:															  "&tplan_id=" . $this->testPlanID . '">' .  
lib/functions/results.class.php:					elseif (($lastResult == 'a') || ($lastResult == $this->map_tc_status['not_run'])) 
lib/functions/results.class.php:	 * @TODO - figure out what file to include so i don't have
lib/functions/results.class.php:	 * 20090727 - Eloff - changed structured of returned array to
lib/functions/results.class.php:		$loop2do = sizeof($this->flatArray);
lib/functions/results.class.php:				$name = $this->flatArray[$i];
lib/functions/results.class.php:				$suiteId = $this->flatArray[$i];
lib/functions/results.class.php:		for ($i = 0 ; $i < count($this->suiteStructure) ; $i++) 
lib/functions/results.class.php:				$name = $this->suiteStructure[$i];
lib/functions/results.class.php:				$suiteId = $this->suiteStructure[$i];
lib/functions/results.class.php:	 * Builds a multi-dimentional array which represents the tree structure.
lib/functions/results.class.php:	 * Builds both $this->flatArray and $this->suiteStructure
lib/functions/results.class.php:		$tplan_mgr = $this->tplanMgr;
lib/functions/results.class.php:		$tproject_mgr = new testproject($this->db);
lib/functions/results.class.php:		$tree_manager = $tplan_mgr->tree_manager;
lib/functions/results.class.php:		$hash_descr_id = $tree_manager->get_available_node_types();
lib/functions/results.class.php:	    $test_spec = $tproject_mgr->get_subtree($this->tprojectID,$RECURSIVE_MODE);
lib/functions/results.class.php:		$tplan_tcversions = $tplan_mgr->get_linked_tcversions($this->testPlanID,$filters,$options);
lib/functions/results.class.php:		// $this->linked_tcversions = &$tp_tcs;
lib/functions/results.class.php:		$test_spec['name'] = $this->tplanName;
lib/functions/results.class.php:		$test_spec['id'] = $this->tprojectID;
lib/functions/results.class.php:			$tck_map = $tproject_mgr->get_keywords_tcases($this->tprojectID,$keyword_id);
lib/functions/results.class.php:		$testcase_count = $this->removeEmptySuites($test_spec,$hash_id_descr,$tck_map,$tplan_tcversions,$owner);
lib/functions/results.class.php:	    // echo "<pre>debug 20080928 - \ - " . __FUNCTION__ . " --- "; print_r($xmem['msg']); echo "</pre>";  
lib/functions/results.class.php:		$suiteStructure = $this->processExecTreeNode(1,$test_spec,$hash_id_descr);
lib/functions/results.class.php:	 * ex: "A->A.A->A.A.A"
lib/functions/results.class.php:				if (($parentId == $this->tprojectID) && ($this->suitesSelected != 'all')) {
lib/functions/results.class.php:					if (!in_array($id, $this->suitesSelected)){
lib/functions/results.class.php:					$this->depth = $level - $CONSTANT_DEPTH_ADJUSTMENT  ;
lib/functions/results.class.php:					$changeInDepth = $this->depth - $this->previousDepth;
lib/functions/results.class.php:					$this->previousDepth = $this->depth;
lib/functions/results.class.php:					$this->flatArray[$this->flatArrayIndex] = $changeInDepth;
lib/functions/results.class.php:					$this->flatArrayIndex++;
lib/functions/results.class.php:					$this->flatArray[$this->flatArrayIndex] = $hierarchySuiteName;
lib/functions/results.class.php:					$this->flatArrayIndex++;
lib/functions/results.class.php:					$this->flatArray[$this->flatArrayIndex] = $id;
lib/functions/results.class.php:					$this->flatArrayIndex++;
lib/functions/results.class.php:					$currentNode[$currentNodeIndex] = $this->processExecTreeNode($level+1,$current,$hash_id_descr,$hierarchySuiteName);
lib/functions/results.class.php:		$suffix = htmlspecialchars($this->testCasePrefix . $this->testCaseCfg->glue_character . $tcExternalID) .
lib/functions/results.class.php:	 * @param timestamp $milestoneDate - (optional) milestone deadline
lib/functions/results.class.php:	// 				" FROM {$this->tables['testplan_tcversions']} TPTCV " .
lib/functions/results.class.php:	// 				" JOIN {$this->tables['executions']} E ON " .
lib/functions/results.class.php:	// 				" JOIN {$this->tables['tcversions']} TCV ON " .
lib/functions/results.class.php:	// 				" WHERE TPTCV.testplan_id = {$this->testPlanID} " .
lib/functions/results.class.php:	// 				" AND E.testplan_id = {$this->testPlanID} " .
lib/functions/results.class.php:	// 				" AND NOT E.status = '{$this->map_tc_status['not_run']}' " . 
lib/functions/results.class.php:	// 			$tmpResult = $this->db->fetchOneValue($sql);
lib/functions/results.class.php:	// 			if (($urgency*$importance) >= $this->priorityLevelsCfg[HIGH])
lib/functions/results.class.php:	// 				tLog("getPrioritizedResults> Result-priority HIGH: $urgency, $importance = " . $output[HIGH]);
lib/functions/results.class.php:	// 			elseif (($urgency*$importance) >= $this->priorityLevelsCfg[MEDIUM])
lib/functions/results.class.php:	// 				tLog("getPrioritizedResults> Result-priority MEDIUM: $urgency, $importance = " . $output[MEDIUM]);
lib/functions/results.class.php:	// 				tLog("getPrioritizedResults> Result-priority LOW: $urgency, $importance = " . $output[LOW]);
lib/functions/results.class.php:		/** @TODO - REFACTOR IS OUT OF STANDARD MAGIC NUMBERS */
lib/functions/results.class.php:				$sql = "SELECT COUNT( TPTCV.id ) FROM {$this->tables['testplan_tcversions']} TPTCV " .
lib/functions/results.class.php:						" JOIN {$this->tables['tcversions']} TCV ON TPTCV.tcversion_id = TCV.id " .
lib/functions/results.class.php:						" WHERE TPTCV.testplan_id = " . $this->testPlanID .
lib/functions/results.class.php:				$tmpResult = $this->db->fetchOneValue($sql);
lib/functions/results.class.php:				if (($urgency*$importance) >= $this->priorityLevelsCfg[HIGH])
lib/functions/results.class.php:					tLog("getPrioritizedTestCases> Result-priority HIGH: $urgency, $importance = " . $output[HIGH]);
lib/functions/results.class.php:				elseif (($urgency*$importance) >= $this->priorityLevelsCfg[MEDIUM])
lib/functions/results.class.php:					tLog("getPrioritizedTestCases> Result-priority MEDIUM: $urgency, $importance = " . $output[MEDIUM]);
lib/functions/results.class.php:					tLog("getPrioritizedTestCases> Result-priority LOW: $urgency, $importance = " . $output[LOW]);
lib/functions/results.class.php:			$status['msg']='<pre> Class:' . $pclass . ' - File:' . $pfile . '<br>';
lib/functions/results.class.php:			$status['msg'] .= 'Function:' . $pfunction . ' - Line:' . $pline . ' - ';
lib/functions/results.class.php:					$tcCount = $this->removeEmptySuites($current,$hash_id_descr,
lib/functions/results.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/results.class.php:		        " FROM {$this->tables['testplan_tcversions']} TPTCV " .
lib/functions/results.class.php:			    " JOIN {$this->tables['tcversions']} TCV ON TPTCV.tcversion_id = TCV.id " .
lib/functions/results.class.php:		$prio = $this->db->fetchOneValue($sql);
lib/functions/results.class.php:		if ($prio >= $this->priorityLevelsCfg[HIGH])
lib/functions/results.class.php:		else if ($prio >= $this->priorityLevelsCfg[MEDIUM])
lib/functions/results.class.php:} // ---- end class result -----
lib/functions/results.class.php:	                        $builds_to_query = -1, $lastResult = 'a', $latest_results_arg = 1,
lib/functions/results.class.php:		$this->latest_results = $latest_results_arg;
lib/functions/results.class.php:		return $this->results_overload($db, $tplan_mgr,$tproject_info, $tplan_info,
lib/functions/tlFilterControl.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/tlFilterControl.class.php: * @copyright  2006-2010, TestLink community
lib/functions/tlFilterControl.class.php: * 20100808 - asimon - little changes for first implementation of requirement filtering
lib/functions/tlFilterControl.class.php: * 20100803 - asimon - corrected error in parameter initializing in init_args()
lib/functions/tlFilterControl.class.php: * 20100628 - asimon - removal of constants
lib/functions/tlFilterControl.class.php: * 20100624 - asimon - CVS merge (experimental branch to HEAD)
lib/functions/tlFilterControl.class.php: * 20100503 - asimon - start of implementation of filter panel class hierarchy
lib/functions/tlFilterControl.class.php:	 * Value of [ANY]-selection in advanced filter mode.
lib/functions/tlFilterControl.class.php:		$this->read_config();
lib/functions/tlFilterControl.class.php:		$this->init_args();
lib/functions/tlFilterControl.class.php:		$this->advanced_filter_mode = ($this->filter_mode_choice_enabled 
lib/functions/tlFilterControl.class.php:		                              && $this->args->advanced_filter_mode
lib/functions/tlFilterControl.class.php:		                              && !$this->args->simple_filter_mode);
lib/functions/tlFilterControl.class.php:    	if ($this->advanced_filter_mode) {
lib/functions/tlFilterControl.class.php:		$this->filter_mode_button_label = lang_get($label);
lib/functions/tlFilterControl.class.php:		$this->filter_mode_button_name = $label;
lib/functions/tlFilterControl.class.php:		$this->filter_item_quantity = $qty;
lib/functions/tlFilterControl.class.php:		$this->init_settings();
lib/functions/tlFilterControl.class.php:		$this->init_filters();
lib/functions/tlFilterControl.class.php:		unset($this->testproject_mgr);
lib/functions/tlFilterControl.class.php:		$this->option_strings['any'] = $gui_open . lang_get('any') . $gui_close;
lib/functions/tlFilterControl.class.php:    	$this->option_strings['none'] = $gui_open . lang_get('nobody') . $gui_close;
lib/functions/tlFilterControl.class.php:    	$this->option_strings['somebody'] = $gui_open . lang_get('filter_somebody') . $gui_close;
lib/functions/tlFilterControl.class.php:		$this->args = new stdClass();
lib/functions/tlFilterControl.class.php:		$this->args->basehref = $_SESSION['basehref'];
lib/functions/tlFilterControl.class.php:		$this->user = $_SESSION['currentUser'];
lib/functions/tlFilterControl.class.php:		$this->args->user_id = $this->user->dbID;
lib/functions/tlFilterControl.class.php:		$this->args->user_name = $this->user->getDisplayName();
lib/functions/tlFilterControl.class.php:		$this->args->testproject_id = isset($_SESSION['testprojectID']) ?
lib/functions/tlFilterControl.class.php:		$this->args->testproject_name = isset($_SESSION['testprojectName']) ?
lib/functions/tlFilterControl.class.php:		// 20100803 - asimon - corrected error in parameter initializing
lib/functions/tlFilterControl.class.php:		I_PARAMS($params, $this->args);
lib/functions/tlFilterControl.class.php:		$this->args->reset_filters = false;
lib/functions/tlFilterControl.class.php:			$this->args->reset_filters = true; // mark filter reset in args
lib/functions/tlFilterControl.class.php:			$this->do_filtering = false; // mark that no filtering has to be done after reset
lib/functions/tlFilterControl.class.php:		$this->args->simple_filter_mode = 
lib/functions/tlFilterControl.class.php:		$this->args->advanced_filter_mode = 
lib/functions/testsuite.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/testsuite.class.php: * @copyright 	2005-2009, TestLink community 
lib/functions/testsuite.class.php: * 20100602 - franciscom - BUGID 3498 - get_by_name() - missing JOIN
lib/functions/testsuite.class.php: * 20100328 - franciscom - get_by_id() interface and return set changes
lib/functions/testsuite.class.php: *						   get_children() - new method - contribution - BUGID 2645
lib/functions/testsuite.class.php: * 20100315 - amitkhullar - Added options for CFields for Export.
lib/functions/testsuite.class.php: * 20100227 - franciscom - BUGID 0003233: After test suite edit, display of Test suite do not 
lib/functions/testsuite.class.php: * 20100210	- franciscom - keywords XML export refactored
lib/functions/testsuite.class.php: * 20100209 - franciscom - changes in delete_subtree_objects() call due to BUGID 3147 
lib/functions/testsuite.class.php: * 20100204 - franciscom - copy_to() refactoring	
lib/functions/testsuite.class.php: * 20100201 - franciscom - get_testcases_deep() - added external_id in output
lib/functions/testsuite.class.php: * 20091122 - franciscom - item template logic refactored - read_file() removed
lib/functions/testsuite.class.php: * 20090821 - franciscom - BUGID 0002781
lib/functions/testsuite.class.php: * 20090801 - franciscom - BUGID 2767 Duplicate testsuite name error message issue 
lib/functions/testsuite.class.php: * 20090514 - franciscom - typo bug on html_table_of_custom_field_inputs()
lib/functions/testsuite.class.php: * 20090330 - franciscom - changes in calls to get_linked_cfields_at_design()
lib/functions/testsuite.class.php: * 20090329 - franciscom - html_table_of_custom_field_values()
lib/functions/testsuite.class.php: * 20090209 - franciscom - new method - get_children_testcases()
lib/functions/testsuite.class.php: * 20090208 - franciscom - get_testcases_deep() - interface changes
lib/functions/testsuite.class.php: * 20090207 - franciscom - update() - added duplicated name check
lib/functions/testsuite.class.php: * 20090204 - franciscom - exportTestSuiteDataToXML() - added node_order
lib/functions/testsuite.class.php: * 20090106 - franciscom - BUGID - exportTestSuiteDataToXML()
lib/functions/testsuite.class.php: * 20080106 - franciscom - viewer_edit_new() changes to use user templates
lib/functions/testsuite.class.php: * 20080105 - franciscom - copy_to() changed return type
lib/functions/testsuite.class.php: * 20071111 - franciscom - new method get_subtree();
lib/functions/testsuite.class.php: * 20071101 - franciscom - import_file_types, export_file_types
lib/functions/testsuite.class.php: * 20070826 - franciscom - minor fix html_table_of_custom_field_values()
lib/functions/testsuite.class.php: * 20070602 - franciscom - added  nt copy on copy_to() method
lib/functions/testsuite.class.php: * 20070501 - franciscom - added localization of custom field labels
lib/functions/testsuite.class.php: * 20070324 - franciscom - create() interface changes
lib/functions/testsuite.class.php: * 20070204 - franciscom - fixed minor GUI bug on html_table_of_custom_field_inputs()
lib/functions/testsuite.class.php: * 20070116 - franciscom - BUGID 543
lib/functions/testsuite.class.php: * 20070102 - franciscom - changes to delete_deep() to support custom fields
lib/functions/testsuite.class.php: * 20061230 - franciscom - custom field management
lib/functions/testsuite.class.php:		$this->db = &$db;	
lib/functions/testsuite.class.php:		$this->tree_manager =  new tree($this->db);
lib/functions/testsuite.class.php:		$this->node_types_descr_id=$this->tree_manager->get_available_node_types();
lib/functions/testsuite.class.php:		$this->node_types_id_descr=array_flip($this->node_types_descr_id);
lib/functions/testsuite.class.php:		$this->my_node_type=$this->node_types_descr_id['testsuite'];
lib/functions/testsuite.class.php:		$this->cfield_mgr=new cfield_mgr($this->db);
lib/functions/testsuite.class.php:		// second argument is used to set $this->attachmentTableName,property that this calls
lib/functions/testsuite.class.php:		// tlObjectWithAttachments::__construct($this->db,'nodes_hierarchy');
lib/functions/testsuite.class.php:		parent::__construct($this->db,"nodes_hierarchy");
lib/functions/testsuite.class.php:		$this->object_table = $this->tables['testsuites'];
lib/functions/testsuite.class.php:		return $this->export_file_types;
lib/functions/testsuite.class.php:    args: -
lib/functions/testsuite.class.php:		return $this->import_file_types;
lib/functions/testsuite.class.php:	                  $ret['status_ok'] -> 0/1
lib/functions/testsuite.class.php:	                  $ret['id']        -> when status_ok=1, id of the new element
lib/functions/testsuite.class.php:	       20070324 - BUGID 710
lib/functions/testsuite.class.php:	        $check = $this->tree_manager->nodeNameExists($name,$this->my_node_type,null,$parent_id);
lib/functions/testsuite.class.php:			$tsuite_id = $this->tree_manager->new_node($parent_id,$this->my_node_type,
lib/functions/testsuite.class.php:			$sql = "INSERT INTO {$this->tables['testsuites']} (id,details) " .
lib/functions/testsuite.class.php:				   " VALUES ({$tsuite_id},'" . $this->db->prepare_string($details) . "')";
lib/functions/testsuite.class.php:			$result = $this->db->exec_query($sql);
lib/functions/testsuite.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testsuite.class.php:	  	$check = $this->tree_manager->nodeNameExists($name,$this->my_node_type,$id,$parent_id);
lib/functions/testsuite.class.php:			$sql = "/* $debugMsg */ UPDATE {$this->tables['testsuites']} " .
lib/functions/testsuite.class.php:			       " SET details = '" . $this->db->prepare_string($details) . "'" .
lib/functions/testsuite.class.php:			$result = $this->db->exec_query($sql);
lib/functions/testsuite.class.php:				$sql = "/* $debugMsg */ UPDATE {$this->tables['nodes_hierarchy']}  SET name='" . 
lib/functions/testsuite.class.php:					   $this->db->prepare_string($name) . "' WHERE id= {$id}";
lib/functions/testsuite.class.php:				$result = $this->db->exec_query($sql);
lib/functions/testsuite.class.php:				$ret['msg'] = $this->db->error_msg();
lib/functions/testsuite.class.php:	 * - Children Test Cases
lib/functions/testsuite.class.php:	 * - Test Suite Attachments
lib/functions/testsuite.class.php:	 * - Test Suite Custom fields 
lib/functions/testsuite.class.php:	 * - Test Suite Keywords
lib/functions/testsuite.class.php:	  	$tcase_mgr = New testcase($this->db);
lib/functions/testsuite.class.php:		$tsuite_info = $this->get_by_id($id);
lib/functions/testsuite.class.php:	  	$testcases=$this->get_children_testcases($id);
lib/functions/testsuite.class.php:	  			$tcase_mgr->delete($elem['id']);
lib/functions/testsuite.class.php:	  	$this->cfield_mgr->remove_all_design_values_from_node($id);
lib/functions/testsuite.class.php:	  	$this->deleteAttachments($id);  //inherited
lib/functions/testsuite.class.php:	  	$this->deleteKeywords($id);
lib/functions/testsuite.class.php:	  	$sql = "DELETE FROM {$this->object_table} WHERE id={$id}";
lib/functions/testsuite.class.php:	  	$result = $this->db->exec_query($sql);
lib/functions/testsuite.class.php:	  	$sql = "DELETE FROM {$this->tables['nodes_hierarchy']} WHERE id={$id}";
lib/functions/testsuite.class.php:	  	$result = $this->db->exec_query($sql);
lib/functions/testsuite.class.php:	  20100602 - BUGID 3498	
lib/functions/testsuite.class.php:			   " FROM {$this->tables['testsuites']} TS " .
lib/functions/testsuite.class.php:			   " JOIN {$this->tables['nodes_hierarchy']} NH " .
lib/functions/testsuite.class.php:			   " WHERE NH.name = '" . $this->db->prepare_string($name) . "'";
lib/functions/testsuite.class.php:		$recordset = $this->db->get_recordset($sql);
lib/functions/testsuite.class.php:	  		20100328 - BUGID 2645 - contribution - added parent_id
lib/functions/testsuite.class.php:	        20070324 - added node_order in result set
lib/functions/testsuite.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testsuite.class.php:		       "  FROM {$this->tables['testsuites']} TS, " .
lib/functions/testsuite.class.php:		       " {$this->tables['nodes_hierarchy']} NH   WHERE TS.id = NH.id AND TS.id "; 
lib/functions/testsuite.class.php:	    $rs = $this->db->fetchRowsIntoMap($sql,'id');
lib/functions/testsuite.class.php:	  args : -
lib/functions/testsuite.class.php:		       " FROM {$this->tables['testsuites']} testsuites, " .
lib/functions/testsuite.class.php:		       " {$this->tables['nodes_hierarchy']} nodes_hierarchy " . 
lib/functions/testsuite.class.php:	  $recordset = $this->db->get_recordset($sql);
lib/functions/testsuite.class.php:	 * returns: -
lib/functions/testsuite.class.php:		$gui->cf = '';
lib/functions/testsuite.class.php:	    $gui->sqlResult = '';
lib/functions/testsuite.class.php:		$gui->sqlAction = '';
lib/functions/testsuite.class.php:		// 20100314 - franciscom 
lib/functions/testsuite.class.php:		$gui->refreshTree = property_exists($gui,'refreshTree') ? $gui->refreshTree : false;
lib/functions/testsuite.class.php:        $gui->modify_tc_rights = has_rights($this->db,"mgt_modify_tc");
lib/functions/testsuite.class.php:			$gui->modify_tc_rights = 'no';
lib/functions/testsuite.class.php:			$gui->sqlResult = $sqlResult;
lib/functions/testsuite.class.php:			$gui->sqlAction = $action;
lib/functions/testsuite.class.php:		$gui->container_data = $this->get_by_id($id);
lib/functions/testsuite.class.php:		$gui->moddedItem = $gui->container_data;
lib/functions/testsuite.class.php:			$gui->moddedItem = $this->get_by_id($modded_item_id);
lib/functions/testsuite.class.php:		$gui->cf = $this->html_table_of_custom_field_values($id);
lib/functions/testsuite.class.php:		$gui->keywords_map = $this->get_keywords_map($id,' ORDER BY keyword ASC ');
lib/functions/testsuite.class.php:		$gui->attachmentInfos = getAttachmentInfosFrom($this,$id);
lib/functions/testsuite.class.php:		$gui->id = $id;
lib/functions/testsuite.class.php:	 	$gui->idpage_title = lang_get('testsuite');
lib/functions/testsuite.class.php:		$gui->level = 'testsuite';
lib/functions/testsuite.class.php:		$smarty->assign('gui',$gui);
lib/functions/testsuite.class.php:		$smarty->display($template_dir . 'containerView.tpl');
lib/functions/testsuite.class.php:	  returns: -
lib/functions/testsuite.class.php:	       20090801 - franciscom - added $userInput
lib/functions/testsuite.class.php:	       20080105 - franciscom - added $userTemplateCfg
lib/functions/testsuite.class.php:	       20071202 - franciscom - interface changes -> template_dir
lib/functions/testsuite.class.php:	    $cf_smarty=-2; // MAGIC must be explained
lib/functions/testsuite.class.php:	    $pnode_info=$this->tree_manager->get_node_hierarchy_info($parent_id);
lib/functions/testsuite.class.php:	    $parent_info['description']=lang_get($this->node_types_id_descr[$pnode_info['node_type_id']]);
lib/functions/testsuite.class.php:		$smarty->assign('sqlResult', $internalMsg['result_msg']);
lib/functions/testsuite.class.php:		$smarty->assign('containerID',$parent_id);	 
lib/functions/testsuite.class.php:		$smarty->assign('user_feedback', $internalMsg['user_feedback'] );
lib/functions/testsuite.class.php:				$the_data = $this->get_by_id($id);
lib/functions/testsuite.class.php:				$smarty->assign('containerID',$id);	
lib/functions/testsuite.class.php:	    $cf_smarty = $this->html_table_of_custom_field_inputs($id,$parent_id);
lib/functions/testsuite.class.php:		// 20090503 - now templates will be also used after 'add_testsuite', when
lib/functions/testsuite.class.php:			   $webEditorData=$this->_initializeWebEditors($webEditorHtmlNames,$userTemplateKey);
lib/functions/testsuite.class.php:			$of->Value = isset($webEditorData[$key]) ? $webEditorData[$key] : null;
lib/functions/testsuite.class.php:			$smarty->assign($key, $of->CreateHTML());
lib/functions/testsuite.class.php:	    $smarty->assign('cf',$cf_smarty);	
lib/functions/testsuite.class.php:		$smarty->assign('parent_info', $parent_info);
lib/functions/testsuite.class.php:		$smarty->assign('level', 'testsuite');
lib/functions/testsuite.class.php:		$smarty->assign('name',$name);
lib/functions/testsuite.class.php:		$smarty->assign('container_data',$the_data);
lib/functions/testsuite.class.php:		$smarty->display($template_dir . $the_tpl);
lib/functions/testsuite.class.php:	         [check_duplicate_name]: default: 0 -> do not check
lib/functions/testsuite.class.php:	                                          1 -> check for duplicate when doing copy
lib/functions/testsuite.class.php:	           id: new created if everything OK, -1 if problems.
lib/functions/testsuite.class.php:           20090821 - franciscom - BUGID 0002781
lib/functions/testsuite.class.php:	       20070324 - BUGID 710
lib/functions/testsuite.class.php:		$tcase_mgr = new testcase($this->db);
lib/functions/testsuite.class.php:		$tsuite_info = $this->get_by_id($id);
lib/functions/testsuite.class.php:		$op = $this->create($parent_id,$tsuite_info['name'],$tsuite_info['details'],
lib/functions/testsuite.class.php:	  	$this->copy_attachments($id,$new_tsuite_id);
lib/functions/testsuite.class.php:  			$this->copy_keyword_assignment($id,$new_tsuite_id,$kmap);
lib/functions/testsuite.class.php:  	    $this->copy_cfields_values($id,$new_tsuite_id);
lib/functions/testsuite.class.php:		$subtree = $this->tree_manager->get_subtree($id,$my['filters']);
lib/functions/testsuite.class.php:					case $this->node_types_descr_id['testcase']:
lib/functions/testsuite.class.php:						$tcOp = $tcase_mgr->copy_to($elem['id'],$the_parent_id,$user_id,$copyTCaseOpt);
lib/functions/testsuite.class.php:					case $this->node_types_descr_id['testsuite']:
lib/functions/testsuite.class.php:						$tsuite_info = $this->get_by_id($elem['id']);
lib/functions/testsuite.class.php:						$ret = $this->create($the_parent_id,$tsuite_info['name'],
lib/functions/testsuite.class.php:			      		$tcase_mgr->copy_attachments($elem['id'],$ret['id']);
lib/functions/testsuite.class.php:  							$this->copy_keyword_assignment($elem['id'],$ret['id'],$kmap);
lib/functions/testsuite.class.php:  	    				$this->copy_cfields_values($elem['id'],$ret['id']);
lib/functions/testsuite.class.php:	           see tree->get_subtree() for details.
lib/functions/testsuite.class.php: 		$my['filters'] = array('exclude_node_types' => $this->nt2exclude,
lib/functions/testsuite.class.php: 	                           'exclude_children_of' => $this->nt2exclude_children);
lib/functions/testsuite.class.php:		$subtree = $this->tree_manager->get_subtree($id,$my['filters'],$my['options']);
lib/functions/testsuite.class.php:		$tcase_mgr = new testcase($this->db);
lib/functions/testsuite.class.php:		$subtree = $this->get_subtree($id);
lib/functions/testsuite.class.php:			$tcNodeType = $this->node_types_descr_id['testcase'];
lib/functions/testsuite.class.php:						list($identity,$prefix,$glueChar,$external) = $tcase_mgr->getExternalID($elem['id'],null,$prefix);
lib/functions/testsuite.class.php:	  	    $parentNodes=$this->tree_manager->get_node_hierarchy_info($parentSet);
lib/functions/testsuite.class.php:	  	       $item=$tcase_mgr->get_last_version_info($value['id']);
lib/functions/testsuite.class.php:	    $subtree=$this->tree_manager->get_children($id,array('testsuite' => 'exclude_me'));
lib/functions/testsuite.class.php:		  $tsuite=$this->get_by_id($id);
lib/functions/testsuite.class.php:	        $tcase_mgr = new testcase($this->db);
lib/functions/testsuite.class.php:	           $item=$tcase_mgr->get_last_version_info($value['id']);
lib/functions/testsuite.class.php:	       20070602 - franciscom
lib/functions/testsuite.class.php:		// BUGID 3147 - Delete test project with requirements defined crashed with memory exhausted
lib/functions/testsuite.class.php:	  	$this->tree_manager->delete_subtree_objects($id,$id,'',array('testcase' => 'exclude_tcversion_nodes'));
lib/functions/testsuite.class.php:	  	$this->delete($id);
lib/functions/testsuite.class.php:	        20070116 - franciscom - BUGID 543
lib/functions/testsuite.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testsuite.class.php:		       " FROM {$this->tables['object_keywords']}, {$this->tables['keywords']} keywords " .
lib/functions/testsuite.class.php:		$map_keywords = $this->db->fetchRowsIntoMap($sql,'keyword_id');
lib/functions/testsuite.class.php:	        [order_by_clause]: default: '' -> no order choosen
lib/functions/testsuite.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testsuite.class.php:		       " FROM {$this->tables['object_keywords']}, {$this->tables['keywords']} keywords " .
lib/functions/testsuite.class.php:		$map_keywords = $this->db->fetchColumnsIntoMap($sql,'keyword_id','keyword');
lib/functions/testsuite.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testsuite.class.php:		$kw = $this->getKeywords($id,$kw_id);
lib/functions/testsuite.class.php:			$sql = "/* $debugMsg */ INSERT INTO {$this->tables['object_keywords']} " .
lib/functions/testsuite.class.php:        	$status = $this->db->exec_query($sql) ? 1 : 0;
lib/functions/testsuite.class.php:			$status = $status && $this->addKeyword($id,$kw_ids[$idx]);
lib/functions/testsuite.class.php:		$sql = " DELETE FROM {$this->tables['object_keywords']} WHERE fk_id = {$id} ";
lib/functions/testsuite.class.php:		return($this->db->exec_query($sql));
lib/functions/testsuite.class.php:	  rev: 20090204 - franciscom - added node_order
lib/functions/testsuite.class.php:			$tsuiteData = $this->get_by_id($container_id);
lib/functions/testsuite.class.php:				$kwMap = $this->getKeywords($container_id);
lib/functions/testsuite.class.php:					$kwXML = "<keywords>" . $keywordMgr->toXMLString($kwMap,true) . "</keywords>";
lib/functions/testsuite.class.php:				// 20090106 - franciscom - custom fields
lib/functions/testsuite.class.php:	        	$cfMap=$this->get_linked_cfields_at_design($container_id,null,null,$tproject_id);
lib/functions/testsuite.class.php:		$test_spec = $this->get_subtree($container_id,self::USE_RECURSIVE_MODE);
lib/functions/testsuite.class.php:		    		$xmlTC .= $this->exportTestSuiteDataToXML($cNode['id'],$tproject_id,$optExport);
lib/functions/testsuite.class.php:		    		    $tcase_mgr = new testcase($this->db);
lib/functions/testsuite.class.php:		    		$xmlTC .= $tcase_mgr->exportTestCaseDataToXML($cNode['id'],testcase::LATEST_VERSION,
lib/functions/testsuite.class.php:	// -------------------------------------------------------------------------------
lib/functions/testsuite.class.php:	// -------------------------------------------------------------------------------
lib/functions/testsuite.class.php:	                              1 -> filter on field show_on_execution=1
lib/functions/testsuite.class.php:	                              0 or null -> don't filter
lib/functions/testsuite.class.php:	        20061231 - franciscom - added $parent_id
lib/functions/testsuite.class.php:				$tproject_id = $this->getTestProjectFromTestSuite($id,$parent_id);
lib/functions/testsuite.class.php:			$cf_map = $this->cfield_mgr->get_linked_cfields_at_design($tproject_id,$enabled,$filters,
lib/functions/testsuite.class.php:			$tproject_id = $this->tree_manager->getTreeRoot( (!is_null($id) && $id > 0) ? $id : $parent_id);
lib/functions/testsuite.class.php:	                              1 -> filter on field show_on_execution=1
lib/functions/testsuite.class.php:	                              0 or null -> don't filter
lib/functions/testsuite.class.php:	        20061231 - franciscom - added $parent_id
lib/functions/testsuite.class.php:	  $the_path=$this->tree_manager->get_path(!is_null($id) ? $id : $parent_id);
lib/functions/testsuite.class.php:	  $tproject_id=($path_len > 0)? $the_path[$path_len-1]['parent_id'] : $parent_id;
lib/functions/testsuite.class.php:	  $cf_map=$this->cfield_mgr->get_linked_cfields_at_design($tproject_id,$enabled,$filters,
lib/functions/testsuite.class.php:	    $cf_map=$this->get_linked_cfields_at_design($id,$parent_id);
lib/functions/testsuite.class.php:	    $cf_map=$this->get_linked_cfields_at_execution($id,$parent_id);
lib/functions/testsuite.class.php:	                    $this->cfield_mgr->string_custom_field_input($cf_info) .
lib/functions/testsuite.class.php:	                              1 -> filter on field show_on_execution=1
lib/functions/testsuite.class.php:	                              0 or null -> don't filter
lib/functions/testsuite.class.php:	      $cf_map = $this->get_linked_cfields_at_design($id,$parent_id,$filters,$tproject_id);
lib/functions/testsuite.class.php:	      $cf_map=$this->get_linked_cfields_at_execution($id);
lib/functions/testsuite.class.php:	                        $this->cfield_mgr->string_custom_field_value($cf_info,$id) .
lib/functions/testsuite.class.php:		$this->attachmentRepository->copyAttachments($source_id,$target_id,$this->attachmentTableName);
lib/functions/testsuite.class.php:		$sourceItems = $this->getKeywords($source_id);
lib/functions/testsuite.class.php:			$this->addKeywords($target_id,$keySet);		
lib/functions/testsuite.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testsuite.class.php:		$sourceItems = $this->cfield_mgr->getByLinkID($source_id,array('scope' => 'design'));
lib/functions/testsuite.class.php:	               " INSERT INTO {$this->tables['cfield_design_values']} " . 
lib/functions/testsuite.class.php:	               " FROM {$this->tables['cfield_design_values']} " .
lib/functions/testsuite.class.php:			$this->db->exec_query($sql);
lib/functions/testsuite.class.php:	    $subtree = $this->tree_manager->get_children($id, array('testcase' => 'exclude_me'));
lib/functions/testsuite.class.php:	    	$itemSet = $this->get_by_id($itemKeys, 'ORDER BY node_order');
lib/functions/files.inc.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/files.inc.php: * @copyright 	2005-2009, TestLink community 
lib/functions/files.inc.php: * Writes contents to a gzip-file
lib/functions/files.inc.php: * Read contents from a gzip-file
lib/functions/tlRight.class.php:		$this->activateCaching = true;
lib/functions/tlRight.class.php:		$this->name = null;
lib/functions/tlRight.class.php:			$this->dbID = null;
lib/functions/tlRight.class.php:		return $this->name;
lib/functions/tlRight.class.php:		$this->dbID = $dbID;
lib/functions/tlRight.class.php:		$this->name = $name;
lib/functions/tlRight.class.php:		$this->name = $right->name;
lib/functions/tlRight.class.php:		if ($this->readFromCache() >= tl::OK)
lib/functions/tlRight.class.php:		$this->_clean($options);
lib/functions/tlRight.class.php:		$query = $this->getReadFromDBQuery($this->dbID,$options);
lib/functions/tlRight.class.php:		$info = $db->fetchFirstRow($query);
lib/functions/tlRight.class.php:			$readSucceeded = $this->readFromDBRow($info);
lib/functions/tlRight.class.php:			$this->addToCache();	
lib/functions/tlRight.class.php:		$this->initialize($row['id'],$row['description']);
lib/functions/tlRight.class.php:		$this->removeFromCache();
lib/functions/tlRight.class.php:		$this->removeFromCache();
lib/functions/tlsmarty.inc.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/tlsmarty.inc.php: * @copyright 	2005-2009, TestLink community 
lib/functions/tlsmarty.inc.php: *	20100621 - eloff - added guard_header_smarty() function
lib/functions/tlsmarty.inc.php: * 	20100121 - franciscom - added show_help_icon to remove error on event viewer
lib/functions/tlsmarty.inc.php: * 	20090304 - franciscom - removed some MAGIC NUMBERS 
lib/functions/tlsmarty.inc.php: * 	20081027 - havlatm - moved to include Smarty library
lib/functions/tlsmarty.inc.php: * 	20080424 - havlatm - added $tlCfg
lib/functions/tlsmarty.inc.php:	To use a different version of Sencha (Old EXT-JS) that provided with TL */
lib/functions/tlsmarty.inc.php:    define('TL_EXTJS_RELATIVE_PATH','third_party/ext-js' );
lib/functions/tlsmarty.inc.php:		$smarty->assign($params['var'], $the_ret);
lib/functions/tlsmarty.inc.php: * as ext-js.
lib/functions/tlsmarty.inc.php: *     <script src="big-library.js type="text/javascript"></script>
lib/functions/tlsmarty.inc.php:        // $this->Smarty();
lib/functions/tlsmarty.inc.php:        $this->template_dir = TL_ABS_PATH . 'gui/templates/';
lib/functions/tlsmarty.inc.php:        $this->compile_dir = TL_TEMP_PATH;
lib/functions/tlsmarty.inc.php:        $this->config_dir = TL_ABS_PATH . 'gui/templates/';
lib/functions/tlsmarty.inc.php:        $testproject_coloring = $tlCfg->gui->testproject_coloring;
lib/functions/tlsmarty.inc.php:        $testprojectColor = $tlCfg->gui->background_color ; //TL_BACKGROUND_DEFAULT;
lib/functions/tlsmarty.inc.php:                $testprojectColor = $tlCfg->gui->background_color;
lib/functions/tlsmarty.inc.php:        $this->assign('testprojectColor', $testprojectColor);
lib/functions/tlsmarty.inc.php:        if ($tlCfg->smarty_debug)
lib/functions/tlsmarty.inc.php:            $this->debugging = true;
lib/functions/tlsmarty.inc.php:        // -------------------------------------------------------------------------------------
lib/functions/tlsmarty.inc.php:        $this->assign('SP_html_help_file',null);
lib/functions/tlsmarty.inc.php:        $this->assign('menuUrl',null);
lib/functions/tlsmarty.inc.php:        $this->assign('args',null);
lib/functions/tlsmarty.inc.php:        $this->assign('additionalArgs',null);
lib/functions/tlsmarty.inc.php:        $this->assign('pageTitle',null);
lib/functions/tlsmarty.inc.php:        $this->assign('css_only',null);
lib/functions/tlsmarty.inc.php:        $this->assign('body_onload',null);
lib/functions/tlsmarty.inc.php:        $this->assign('attach_tableStyles',"font-size:12px");
lib/functions/tlsmarty.inc.php:        $this->assign('attach_tableClassName',"simple");
lib/functions/tlsmarty.inc.php:        $this->assign('attach_inheritStyle',0);
lib/functions/tlsmarty.inc.php:        $this->assign('attach_show_upload_btn',1);
lib/functions/tlsmarty.inc.php:        $this->assign('attach_show_title',1);
lib/functions/tlsmarty.inc.php:        $this->assign('attach_downloadOnly',false);
lib/functions/tlsmarty.inc.php:        $this->assign('inc_help_alt',null);
lib/functions/tlsmarty.inc.php:        $this->assign('inc_help_title',null);
lib/functions/tlsmarty.inc.php:        $this->assign('inc_help_style',null);
lib/functions/tlsmarty.inc.php:        $this->assign('show_help_icon',true);
lib/functions/tlsmarty.inc.php:        $this->assign('tplan_name',null);
lib/functions/tlsmarty.inc.php:        $this->assign('name',null);
lib/functions/tlsmarty.inc.php:        // -----------------------------------------------------------------------------
lib/functions/tlsmarty.inc.php:        $this->assign('basehref', $basehref);
lib/functions/tlsmarty.inc.php:        $this->assign('css', $basehref . TL_TESTLINK_CSS);
lib/functions/tlsmarty.inc.php:        $this->assign('locale', $my_locale);
lib/functions/tlsmarty.inc.php:        // -----------------------------------------------------------------------------
lib/functions/tlsmarty.inc.php:        $this->assign('session',isset($_SESSION) ? $_SESSION : null);
lib/functions/tlsmarty.inc.php:        $this->assign('tlCfg',$tlCfg);
lib/functions/tlsmarty.inc.php:        $this->assign('gsmarty_gui',$tlCfg->gui);
lib/functions/tlsmarty.inc.php:        $this->assign('gsmarty_spec_cfg',config_get('spec_cfg'));
lib/functions/tlsmarty.inc.php:        $this->assign('gsmarty_attachments',config_get('attachments'));
lib/functions/tlsmarty.inc.php:        $this->assign('pageCharset',$tlCfg->charset);
lib/functions/tlsmarty.inc.php:        $this->assign('tlVersion',TL_VERSION);
lib/functions/tlsmarty.inc.php:        $this->assign('gsmarty_bugInterfaceOn',config_get('bugInterfaceOn'));
lib/functions/tlsmarty.inc.php:        $this->assign('testproject_coloring',null);
lib/functions/tlsmarty.inc.php:        // -----------------------------------------------------------------------------
lib/functions/tlsmarty.inc.php:        $this->assign('gsmarty_option_yes_no', array(0 => lang_get('No'), 1 => lang_get('Yes')));
lib/functions/tlsmarty.inc.php:        $this->assign('gsmarty_option_priority', array(HIGH => lang_get('high_priority'), 
lib/functions/tlsmarty.inc.php:        $this->assign('gsmarty_option_importance', array(HIGH => lang_get('high_importance'), 
lib/functions/tlsmarty.inc.php:        $this->assign('openHead', 'no');
lib/functions/tlsmarty.inc.php:        $this->assign('jsValidate', null);
lib/functions/tlsmarty.inc.php:        $this->assign('jsTree', null);
lib/functions/tlsmarty.inc.php:        $this->assign('editorType', null);
lib/functions/tlsmarty.inc.php:        $this->assign('user_feedback', null);
lib/functions/tlsmarty.inc.php:        $this->assign('feedback_type', ''); // Possibile values: soft
lib/functions/tlsmarty.inc.php:        $this->assign('action', 'updated'); //todo: simplify (remove) - use user_feedback
lib/functions/tlsmarty.inc.php:        $this->assign('sqlResult', null); //todo: simplify (remove) - use user_feedback
lib/functions/tlsmarty.inc.php:        $this->assign('refresh', 'no');
lib/functions/tlsmarty.inc.php:        $this->assign('result', null);
lib/functions/tlsmarty.inc.php:        $this->assign('optLocale',config_get('locales'));
lib/functions/tlsmarty.inc.php:        $this->assign('gsmarty_href_keywordsView',
lib/functions/tlsmarty.inc.php:        $this->assign('gsmarty_html_select_date_field_order',
lib/functions/tlsmarty.inc.php:        $this->assign('gsmarty_date_format',$g_locales_date_format[$my_locale]);
lib/functions/tlsmarty.inc.php:        $this->assign('gsmarty_timestamp_format',$g_locales_timestamp_format[$my_locale]);
lib/functions/tlsmarty.inc.php:        // -----------------------------------------------------------------------------
lib/functions/tlsmarty.inc.php:        $this->assign("tlImages",$tlImages);
lib/functions/tlsmarty.inc.php:        $this->assign("sort_img",$sort_img);
lib/functions/tlsmarty.inc.php:        $this->assign("checked_img",TL_THEME_IMG_DIR . "/apply_f2_16.png");
lib/functions/tlsmarty.inc.php:        $this->assign("delete_img",TL_THEME_IMG_DIR . "/trash.png");
lib/functions/tlsmarty.inc.php:        $this->assign("toggle_api_info_img",$toggle_api_info_img);
lib/functions/tlsmarty.inc.php:        $this->assign("toggle_direct_link_img",$toggle_direct_link_img);
lib/functions/tlsmarty.inc.php:                $this->assign("sortHintIcon",$sortHintIcon);
lib/functions/tlsmarty.inc.php:                $this->assign("noSortableColumnClass","sorttable_nosort");
lib/functions/tlsmarty.inc.php:                $this->assign("sortHintIcon",'');
lib/functions/tlsmarty.inc.php:                $this->assign("noSortableColumnClass",'');
lib/functions/tlsmarty.inc.php:        $this->register_function("lang_get", "lang_get_smarty");
lib/functions/tlsmarty.inc.php:        $this->register_function("localize_date", "localize_date_smarty");
lib/functions/tlsmarty.inc.php:        $this->register_function("localize_timestamp", "localize_timestamp_smarty");
lib/functions/tlsmarty.inc.php:        $this->register_function("localize_tc_status","translate_tc_status_smarty");
lib/functions/tlsmarty.inc.php:        $this->register_modifier("basename","basename");
lib/functions/tlsmarty.inc.php:        $this->register_modifier("dirname","dirname");
lib/functions/tlPlatform.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/tlPlatform.class.php: * @copyright   2006-2009, TestLink community
lib/functions/tlPlatform.class.php: *	20100711 - franciscom - BUGID 3564: TestCases added via tl.addTestCaseToTestPlan won't show up for execution
lib/functions/tlPlatform.class.php: *	20100705 - franciscom - getLinkedToTestplan() - interface changes
lib/functions/tlPlatform.class.php: *	20100225 - eloff - rename platformVisibleForTestplan() to platformsActiveForTestplan()
lib/functions/tlPlatform.class.php: *	20100202 - franciscom - create() - changed return type
lib/functions/tlPlatform.class.php: *	20100201 - franciscom - linkToTestplan(), unlinkFromTestplan() - refactoring to manage null	as $id
lib/functions/tlPlatform.class.php: *		                    deleteByTestProject() - new method.
lib/functions/tlPlatform.class.php: *  20100124 - franciscom - fixed bug on getAll() - filter by active test project is not more there.
lib/functions/tlPlatform.class.php: *  20091201 - Eloff - added options to getAll() to include linked_count
lib/functions/tlPlatform.class.php: *  20091118 - franciscom - getID() - fixed added testproject id in where clause
lib/functions/tlPlatform.class.php: *	20091031 - franciscom - getAll(),getAllAsMap(),getLinkedToTestplanAsMap() - added orderBy
lib/functions/tlPlatform.class.php: *	20090807 - franciscom - added check on empty name with exception (throwIfEmptyName())
lib/functions/tlPlatform.class.php: *	20090805 - Eloff - Updated code according to guidelines
lib/functions/tlPlatform.class.php:	const E_NAMENOTALLOWED = -1;
lib/functions/tlPlatform.class.php:	const E_NAMELENGTH = -2;
lib/functions/tlPlatform.class.php:	const E_NAMEALREADYEXISTS = -4;
lib/functions/tlPlatform.class.php:	const E_DBERROR = -8;
lib/functions/tlPlatform.class.php:	const E_WRONGFORMAT = -16;
lib/functions/tlPlatform.class.php:		$this->tproject_id = $tproject_id;
lib/functions/tlPlatform.class.php:		$this->tproject_id = $tproject_id;	
lib/functions/tlPlatform.class.php:		$op = array('status' => self::E_DBERROR, 'id' => -1);
lib/functions/tlPlatform.class.php:		$safeName = $this->throwIfEmptyName($name);
lib/functions/tlPlatform.class.php:		$alreadyExists = $this->getID($name);
lib/functions/tlPlatform.class.php:			$op = array('status' => self::E_NAMEALREADYEXISTS, 'id' => -1);
lib/functions/tlPlatform.class.php:			$sql = "INSERT INTO {$this->tables['platforms']} " .
lib/functions/tlPlatform.class.php:				   " VALUES ('" . $this->db->prepare_string($safeName) . 
lib/functions/tlPlatform.class.php:				   "', $this->tproject_id, '".$this->db->prepare_string($notes)."')";
lib/functions/tlPlatform.class.php:			$result = $this->db->exec_query($sql);
lib/functions/tlPlatform.class.php:				$op['id'] = $this->db->insert_id($this->tables['platforms']);
lib/functions/tlPlatform.class.php:				" FROM {$this->tables['platforms']} " .
lib/functions/tlPlatform.class.php:		return $this->db->fetchFirstRow($sql);
lib/functions/tlPlatform.class.php:     * @TODO remove - francisco
lib/functions/tlPlatform.class.php:    	return $this->getByID($id);
lib/functions/tlPlatform.class.php:		$safeName = $this->throwIfEmptyName($name);
lib/functions/tlPlatform.class.php:		$sql = " UPDATE {$this->tables['platforms']} " .
lib/functions/tlPlatform.class.php:		       " SET name = '" . $this->db->prepare_string($name) . "' " .
lib/functions/tlPlatform.class.php:		       ", notes =  '". $this->db->prepare_string($notes) . "' " .
lib/functions/tlPlatform.class.php:		$result =  $this->db->exec_query($sql);
lib/functions/tlPlatform.class.php:		$sql = "DELETE FROM {$this->tables['platforms']} WHERE id = {$id}";
lib/functions/tlPlatform.class.php:		$result = $this->db->exec_query($sql);
lib/functions/tlPlatform.class.php:				$sql = " INSERT INTO {$this->tables['testplan_platforms']} " .
lib/functions/tlPlatform.class.php:				$result = $this->db->exec_query($sql);
lib/functions/tlPlatform.class.php:				$sql = " DELETE FROM {$this->tables['testplan_platforms']} " .
lib/functions/tlPlatform.class.php:			    $result = $this->db->exec_query($sql);
lib/functions/tlPlatform.class.php:		$sql = " SELECT id FROM {$this->tables['platforms']} " .
lib/functions/tlPlatform.class.php:			   " WHERE name = '" . $this->db->prepare_string($name) . "'" .
lib/functions/tlPlatform.class.php:			   " AND testproject_id = {$this->tproject_id} ";
lib/functions/tlPlatform.class.php:		return $this->db->fetchOneValue($sql);
lib/functions/tlPlatform.class.php:		$tproject_filter = " WHERE PLAT.testproject_id = {$this->tproject_id} ";
lib/functions/tlPlatform.class.php:					" FROM {$this->tables['platforms']} PLAT " .
lib/functions/tlPlatform.class.php:					" LEFT JOIN {$this->tables['testplan_platforms']} TPLAT " .
lib/functions/tlPlatform.class.php:					" FROM {$this->tables['platforms']} PLAT {$tproject_filter} ";
lib/functions/tlPlatform.class.php:		return $this->db->get_recordset($sql);
lib/functions/tlPlatform.class.php:	 * get all available platforms in the active testproject ($this->tproject_id)
lib/functions/tlPlatform.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/tlPlatform.class.php:				" FROM {$this->tables['platforms']} " .
lib/functions/tlPlatform.class.php:				" WHERE testproject_id = {$this->tproject_id} {$orderBy}";
lib/functions/tlPlatform.class.php:			$rs = $this->db->fetchColumnsIntoMap($sql, $accessKey, 'name');
lib/functions/tlPlatform.class.php:			$rs = $this->db->fetchRowsIntoMap($sql, $accessKey);
lib/functions/tlPlatform.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/tlPlatform.class.php:			   " FROM {$this->tables['testplan_platforms']} " .
lib/functions/tlPlatform.class.php:		$num_tplans = $this->db->fetchOneValue($sql);
lib/functions/tlPlatform.class.php:	 * 20100705 - franciscom - interface - BUGID 3564
lib/functions/tlPlatform.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/tlPlatform.class.php:			   " FROM {$this->tables['platforms']} P " .
lib/functions/tlPlatform.class.php:			   " JOIN {$this->tables['testplan_platforms']} TP " .
lib/functions/tlPlatform.class.php:				$rs = $this->db->get_recordset($sql);
lib/functions/tlPlatform.class.php:				$rs = $this->db->fetchRowsIntoMap($sql,'id');
lib/functions/tlPlatform.class.php:				$rs = $this->db->fetchRowsIntoMap($sql,'name');
lib/functions/tlPlatform.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/tlPlatform.class.php:				" FROM {$this->tables['platforms']} P " .
lib/functions/tlPlatform.class.php:				" JOIN {$this->tables['testplan_platforms']} TP " .
lib/functions/tlPlatform.class.php:		return $this->db->fetchColumnsIntoMap($sql, 'id', 'name');
lib/functions/tlPlatform.class.php:			$msg = "Class: " . __CLASS__ . " - " . "Method: " . __FUNCTION__ ;
lib/functions/tlPlatform.class.php:		$sql = "DELETE FROM {$this->tables['platforms']} WHERE testproject_id = {$tproject_id}";
lib/functions/tlPlatform.class.php:		$result = $this->db->exec_query($sql);
lib/functions/logging.inc.php:* [05/Jan/27 13:05:56][INFO][guest] - Login ok. (Timing: 0.000763)
lib/functions/logging.inc.php:* [05/Jan/27 13:06:03][DEBUG][havlatm] - User id = 10, Rights = admin
lib/functions/logging.inc.php:	$t = $g_tlLogger->getTransaction();
lib/functions/logging.inc.php:	//to avoid transforming old code, we check if we have old string-like logLevel or new tlLogger-LogLevel
lib/functions/logging.inc.php:	$t->add($logLevel,$message,$source,$activityCode,$objectID,$objectType);
lib/functions/logging.inc.php:				echo "\n<!--\n";
lib/functions/logging.inc.php:				echo "\n-->\n";
lib/functions/logging.inc.php:    $current = $stopTime[1] - $tlTimingStart[$name][1];
lib/functions/logging.inc.php:    $current += $stopTime[0] - $tlTimingStart[$name][0];
lib/functions/table.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/table.class.php: *  20100828 - eloff - Changed format on status column
lib/functions/table.class.php: *  20100823 - eloff - Always store column config in full format(array-of-arrays)
lib/functions/table.class.php: *  20100719 - eloff - Pass $tableID via constructor
lib/functions/table.class.php:		// Expand the simple column format (array-of-titles) to full array-of-arrays
lib/functions/table.class.php:		$this->columns = array();
lib/functions/table.class.php:				$this->columns[] = $column;
lib/functions/table.class.php:				$this->columns[] = array('title' => $column);
lib/functions/table.class.php:		$this->data = $data;
lib/functions/table.class.php:		$this->tableID = $tableID;
lib/functions/pagestatistics.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/pagestatistics.class.php: * @copyright 	2007-2009, TestLink community 
lib/functions/pagestatistics.class.php: * @since 		1.9 - Jun, 2009
lib/functions/pagestatistics.class.php: * @since 	1.9 - Jun, 2009
lib/functions/pagestatistics.class.php:		$this->initialize();		
lib/functions/pagestatistics.class.php:		$this->startPerformanceCounter("OVERALL",tlPerformanceCounter::TYPE_ALL);
lib/functions/pagestatistics.class.php:		$this->performanceCounters[$title] = new tlPerformanceCounter($this->db,$type);
lib/functions/pagestatistics.class.php:		$output = "<div style=\"border:1px solid black;color:red;font-weight:bold\">";
lib/functions/pagestatistics.class.php:		foreach($this->performanceCounters as $title => $counter)
lib/functions/pagestatistics.class.php: * @since 1.9 - Jun, 2009
lib/functions/pagestatistics.class.php:		$this->counterType = $type;
lib/functions/pagestatistics.class.php:		$this->reset();
lib/functions/pagestatistics.class.php:		$this->echoOnDestruct = $echoOnDestruct;
lib/functions/pagestatistics.class.php:		if ($this->echoOnDestruct)
lib/functions/pagestatistics.class.php:			$this->stop();
lib/functions/pagestatistics.class.php:		if ($this->counterType & self::TYPE_MEMORY)
lib/functions/pagestatistics.class.php:			$this->updateMemory();
lib/functions/pagestatistics.class.php:			$output .= "MEMORY: {$this->memoryStart} to {$this->memoryEnd} (max. Peak {$this->memoryPeak});\n";
lib/functions/pagestatistics.class.php:		if ($this->counterType & self::TYPE_TIME)
lib/functions/pagestatistics.class.php:			$duration = $this->getDuration();
lib/functions/pagestatistics.class.php:		if ($this->counterType & self::TYPE_SQL)
lib/functions/pagestatistics.class.php:			$this->updateSQL();
lib/functions/pagestatistics.class.php:			$output .= "SQL queries: ".($this->sqlQueries).";\n";			
lib/functions/pagestatistics.class.php:			$output .= "took ".$this->sqlOverall." secs;\n";
lib/functions/pagestatistics.class.php:		$current = $this->getmicrotime();
lib/functions/pagestatistics.class.php:		return ($current - $this->initialStart);
lib/functions/pagestatistics.class.php:		$this->resetTimer();
lib/functions/pagestatistics.class.php:		$this->resetMemory();
lib/functions/pagestatistics.class.php:		$this->resetSQL();
lib/functions/pagestatistics.class.php:		if ($this->counterType & self::TYPE_TIME)
lib/functions/pagestatistics.class.php:			$this->initialStart = $this->getmicrotime();
lib/functions/pagestatistics.class.php:			$this->duration = 0;
lib/functions/pagestatistics.class.php:		if ($this->counterType & self::TYPE_MEMORY)
lib/functions/pagestatistics.class.php:			$this->memoryStart = memory_get_usage(true);	
lib/functions/pagestatistics.class.php:			$this->memoryEnd = 0;
lib/functions/pagestatistics.class.php:			$this->memoryPeak = memory_get_peak_usage(true);
lib/functions/pagestatistics.class.php:		if ($this->counterType & self::TYPE_SQL)
lib/functions/pagestatistics.class.php:			$this->initialOverall = $this->db->overallDuration;
lib/functions/pagestatistics.class.php:			$this->initialQueries = $this->db->nQuery;		
lib/functions/pagestatistics.class.php:		$this->stopTimer();
lib/functions/pagestatistics.class.php:		$this->updateMemory();
lib/functions/pagestatistics.class.php:		$this->updateSQL();
lib/functions/pagestatistics.class.php:		if ($this->counterType & self::TYPE_MEMORY)
lib/functions/pagestatistics.class.php:			$this->memoryEnd = memory_get_usage(true);
lib/functions/pagestatistics.class.php:			$this->memoryPeak = memory_get_peak_usage(true);
lib/functions/pagestatistics.class.php:		if ($this->counterType & self::TYPE_SQL)
lib/functions/pagestatistics.class.php:			$this->sqlOverall = $this->db->overallDuration - $this->initialOverall;
lib/functions/pagestatistics.class.php:			$this->sqlQueries = $this->db->nQuery - $this->initialQueries;
lib/functions/pagestatistics.class.php:		if ($this->counterType & self::TYPE_TIME)
lib/functions/pagestatistics.class.php:			$current = $this->getmicrotime();
lib/functions/pagestatistics.class.php:			$this->duration = ($current - $this->initialStart);
lib/functions/testproject.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/testproject.class.php: * @copyright 	2005-2009, TestLink community 
lib/functions/testproject.class.php: * 20100821 - franciscom - get_all_testplans() - interface changes
lib/functions/testproject.class.php: * 20100516 - franciscom - BUGID 3464 - delete()
lib/functions/testproject.class.php: * 20100310 - asimon - BUGID 3227 - refactored get_all_requirement_ids() and count_all_requirements()
lib/functions/testproject.class.php: *                                  to not be recursive and pascal-like anymore
lib/functions/testproject.class.php: * 20100309 - asimon - BUGID 3227 - added get_all_requirement_ids() and count_all_requirements()
lib/functions/testproject.class.php: * 20100209 - franciscom - BUGID 3147 - Delete test project with requirements defined crashed with memory exhausted
lib/functions/testproject.class.php: * 20100203 - franciscom - addKeyword() return type changed
lib/functions/testproject.class.php: * 20100201 - franciscom - delete() - missing delete of platforms
lib/functions/testproject.class.php: * 20100102 - franciscom - show() - interface changes
lib/functions/testproject.class.php: * 20091206 - franciscom - fixed bug on get_subtree() created furing refactoring
lib/functions/testproject.class.php: * 20090606 - franciscom - get_by_prefix() interface changes
lib/functions/testproject.class.php: * 20090512 - franciscom - added setPublicStatus()
lib/functions/testproject.class.php: * 20090412 - franciscom - BUGID 2363 - getTCasesLinkedToAnyTPlan()
lib/functions/testproject.class.php: * 20090205 - franciscom - getReqSpec() - interface additions
lib/functions/testproject.class.php: * 20090125 - franciscom - added utility method _createHierarchyMap()
lib/functions/testproject.class.php: * 20090106 - franciscom - get_by_prefix()
lib/functions/testproject.class.php: * 20081103 - franciscom - get_all_testcases_id() minor refactoring
lib/functions/testproject.class.php: * 20080518 - franciscom - create() interface changes
lib/functions/testproject.class.php: * 20080507 - franciscom - get_keywords_tcases() - changed return type
lib/functions/testproject.class.php: * 20080501 - franciscom - typo erro bug in get_keywords_tcases()
lib/functions/testproject.class.php: * 20080322 - franciscom - get_keywords_tcases() - keyword_id can be array
lib/functions/testproject.class.php: * 20080322 - franciscom - interface changes get_all_testplans()
lib/functions/testproject.class.php: * 20080112 - franciscom - changed methods to manage prefix field
lib/functions/testproject.class.php: * 20080107 - franciscom - get_accessible_for_user(), added more data
lib/functions/testproject.class.php: * 20080106 - franciscom - checkName() method
lib/functions/testproject.class.php: * 20080104 - franciscom - fixed bug on gen_combo_test_suites()
lib/functions/testproject.class.php: * 20071111 - franciscom - new method get_subtree();
lib/functions/testproject.class.php: * 20071106 - franciscom - createReqSpec() - changed return type
lib/functions/testproject.class.php: * 20071104 - franciscom - get_accessible_for_user
lib/functions/testproject.class.php: * 20071002 - azl - added ORDER BY to get_all method
lib/functions/testproject.class.php: * 20070620 - franciscom - BUGID 914  fixed delete() (no delete from nodes_hierarchy)
lib/functions/testproject.class.php: * 20070603 - franciscom - added delete()
lib/functions/testproject.class.php: * 20070219 - franciscom - fixed bug on get_first_level_test_suites()
lib/functions/testproject.class.php: * 20070128 - franciscom - added check_tplan_name_existence()
lib/functions/testproject.class.php:		$this->db = &$db;
lib/functions/testproject.class.php:		$this->tree_manager = new tree($this->db);
lib/functions/testproject.class.php:		$this->cfield_mgr=new cfield_mgr($this->db);
lib/functions/testproject.class.php:		tlObjectWithAttachments::__construct($this->db,'nodes_hierarchy');
lib/functions/testproject.class.php:        $this->object_table=$this->tables['testprojects'];
lib/functions/testproject.class.php: *	20100213 - havlatm - support for options serialization, renamed
lib/functions/testproject.class.php: *	20060709 - franciscom - return type changed
lib/functions/testproject.class.php: *	20080112 - franciscom - added $tcasePrefix
lib/functions/testproject.class.php: *	20090601 - havlatm - update session if required
lib/functions/testproject.class.php:	$root_node_id = $this->tree_manager->new_root_node($name);
lib/functions/testproject.class.php:	$tcprefix = $this->formatTcPrefix($tcasePrefix);
lib/functions/testproject.class.php:	$sql = " INSERT INTO {$this->object_table} (id,color," .
lib/functions/testproject.class.php:	                     $this->db->prepare_string($color) . "','" .
lib/functions/testproject.class.php:		                 $this->db->prepare_string($notes) . "'," .
lib/functions/testproject.class.php:		                 $this->db->prepare_string($tcprefix) . "')";
lib/functions/testproject.class.php:	$result = $this->db->exec_query($sql);
lib/functions/testproject.class.php:			$this->setSessionProject($root_node_id);
lib/functions/testproject.class.php: * 	20100213 - havlatm - options updated, header description
lib/functions/testproject.class.php: *	20060312 - franciscom - name is setted on nodes_hierarchy table
lib/functions/testproject.class.php:	    $tcprefix=$this->formatTcPrefix($tcasePrefix);
lib/functions/testproject.class.php:	    $add_upd .=",prefix='" . $this->db->prepare_string($tcprefix) . "'" ;
lib/functions/testproject.class.php:	$sql = " UPDATE {$this->object_table} SET color='" . $this->db->prepare_string($color) . "', ".
lib/functions/testproject.class.php:			" notes='" . $this->db->prepare_string($notes) . "' {$add_upd} " .
lib/functions/testproject.class.php:	$result = $this->db->exec_query($sql);
lib/functions/testproject.class.php:		$sql = "UPDATE {$this->tables['nodes_hierarchy']} SET name='" .
lib/functions/testproject.class.php:				$this->db->prepare_string($name) .
lib/functions/testproject.class.php:		$result = $this->db->exec_query($sql);
lib/functions/testproject.class.php:		$this->setSessionProject($id);
lib/functions/testproject.class.php:		$tproject_info = $this->get_by_id($projectId);
lib/functions/testproject.class.php:		$_SESSION['testprojectOptions']->requirementsEnabled = 
lib/functions/testproject.class.php:						isset($tproject_info['opt']->requirementsEnabled) 
lib/functions/testproject.class.php:						? $tproject_info['opt']->requirementsEnabled : 0;
lib/functions/testproject.class.php:		$_SESSION['testprojectOptions']->testPriorityEnabled = 
lib/functions/testproject.class.php:						isset($tproject_info['opt']->testPriorityEnabled) 
lib/functions/testproject.class.php:						? $tproject_info['opt']->testPriorityEnabled : 0;
lib/functions/testproject.class.php:		$_SESSION['testprojectOptions']->automationEnabled = 
lib/functions/testproject.class.php:						isset($tproject_info['opt']->automationEnabled) 
lib/functions/testproject.class.php:						? $tproject_info['opt']->automationEnabled : 0;
lib/functions/testproject.class.php:		$_SESSION['testprojectOptions']->inventoryEnabled = 
lib/functions/testproject.class.php:						isset($tproject_info['opt']->inventoryEnabled) 
lib/functions/testproject.class.php:						? $tproject_info['opt']->inventoryEnabled : 0;
lib/functions/testproject.class.php:	       " FROM {$this->object_table} testprojects, " .
lib/functions/testproject.class.php:	       " {$this->tables['nodes_hierarchy']} nodes_hierarchy".
lib/functions/testproject.class.php:	$recordset = $this->db->get_recordset($sql);
lib/functions/testproject.class.php:	$this->parseTestProjectRecordset($recordset);
lib/functions/testproject.class.php:	$condition = "nodes_hierarchy.name='" . $this->db->prepare_string($name) . "'";
lib/functions/testproject.class.php:	return $this->getTestProject($condition);
lib/functions/testproject.class.php:	$result = $this->getTestProject($condition);
lib/functions/testproject.class.php:    $safe_prefix = $this->db->prepare_string($prefix);
lib/functions/testproject.class.php:	$result = $this->getTestProject($condition);
lib/functions/testproject.class.php:args:[order_by]: default " ORDER BY nodes_hierarchy.name " -> testproject name
lib/functions/testproject.class.php:    20090409 - amitkhullar- added active parameter
lib/functions/testproject.class.php:    20071104 - franciscom - added order_by
lib/functions/testproject.class.php:	$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testproject.class.php:	       " FROM {$this->object_table} testprojects, " .
lib/functions/testproject.class.php:	       " {$this->tables['nodes_hierarchy']} nodes_hierarchy ".
lib/functions/testproject.class.php:		$recordset = $this->db->get_recordset($sql);
lib/functions/testproject.class.php:		$this->parseTestProjectRecordset($recordset);
lib/functions/testproject.class.php:		$recordset = $this->db->fetchRowsIntoMap($sql,$my['options']['access_key']);
lib/functions/testproject.class.php:                     map: key -> test project id
lib/functions/testproject.class.php:                          value -> test project name
lib/functions/testproject.class.php:                     map_of_map: key -> test project id
lib/functions/testproject.class.php:                                 value -> array ('name' => test project name,
lib/functions/testproject.class.php:                     array_of_map: value -> array  with all testproject table fields plus name.
lib/functions/testproject.class.php:     20071104 - franciscom - added user_id,role_id to remove global coupling
lib/functions/testproject.class.php:     20070725 - franciscom - added output_type
lib/functions/testproject.class.php:     20060312 - franciscom - add nodes_hierarchy on join
lib/functions/testproject.class.php:    $sql = " SELECT id,role_id FROM {$this->tables['users']}  where id={$user_id}";
lib/functions/testproject.class.php:    $user_info = $this->db->get_recordset($sql);
lib/functions/testproject.class.php: 	          FROM {$this->tables['nodes_hierarchy']} nodes_hierarchy
lib/functions/testproject.class.php: 	          JOIN {$this->object_table} testprojects ON nodes_hierarchy.id=testprojects.id
lib/functions/testproject.class.php:	          LEFT OUTER JOIN {$this->tables['user_testproject_roles']} user_testproject_roles
lib/functions/testproject.class.php:	if (has_rights($this->db,'mgt_modify_product') != 'yes')
lib/functions/testproject.class.php:	    $items = $this->db->get_recordset($sql);
lib/functions/testproject.class.php:		$this->parseTestProjectRecordset($items);
lib/functions/testproject.class.php:	    $arrTemp = $this->db->fetchRowsIntoMap($sql,'id');
lib/functions/testproject.class.php:           see tree->get_subtree() for details.
lib/functions/testproject.class.php:  rev : 20080104 - franciscom - added exclude_testcases
lib/functions/testproject.class.php: 	$my['filters'] = array('exclude_node_types' => $this->nt2exclude,
lib/functions/testproject.class.php: 	                       'exclude_children_of' => $this->nt2exclude_children,
lib/functions/testproject.class.php:	$subtree = $this->tree_manager->get_subtree($id,$my['filters'],$my['options']);
lib/functions/testproject.class.php: * @todo havlatm (20100214): smarty should not be in this class - move code to appropariate page
lib/functions/testproject.class.php:	$gui->modify_tc_rights = has_rights($this->db,"mgt_modify_tc");
lib/functions/testproject.class.php:	$gui->mgt_modify_product = has_rights($this->db,"mgt_modify_product");
lib/functions/testproject.class.php:	$gui->sqlResult = '';
lib/functions/testproject.class.php:	$gui->sqlAction = '';
lib/functions/testproject.class.php:		$gui->sqlResult = $sqlResult;
lib/functions/testproject.class.php:	$gui->container_data = $this->get_by_id($id);
lib/functions/testproject.class.php: 	$gui->moddedItem = $gui->container_data;
lib/functions/testproject.class.php: 	$gui->level = 'testproject';
lib/functions/testproject.class.php: 	$gui->page_title = lang_get('testproject');
lib/functions/testproject.class.php: 	$gui->refreshTree = false;
lib/functions/testproject.class.php:    $gui->attachmentInfos = getAttachmentInfosFrom($this,$id);
lib/functions/testproject.class.php:		$gui->moddedItem = $this->get_by_id($modded_item_id);
lib/functions/testproject.class.php:    $smarty->assign('gui', $gui);	
lib/functions/testproject.class.php:	$smarty->display($template_dir . 'containerView.tpl');
lib/functions/testproject.class.php:	$this->get_all_testcases_id($id,$tcIDs);
lib/functions/testproject.class.php:              test suites are ordered in parent-child way, means
lib/functions/testproject.class.php:            [$mode]: dotted -> $level number of dot characters are appended to
lib/functions/testproject.class.php:                               id=1   <--- Tree Root = Level 0
lib/functions/testproject.class.php:                                 + ------+
lib/functions/testproject.class.php:                            id=9   id=2   id=8  <----- Level 1
lib/functions/testproject.class.php:                                     id=3       <----- Level 2
lib/functions/testproject.class.php:                                       id=4     <----- Level 3
lib/functions/testproject.class.php:                                9 	.20071014-16:22:07 TS1
lib/functions/testproject.class.php:                     array  -> key: testsuite id (= node id on tree).
lib/functions/testproject.class.php:                                9	  array(name => '20071014-16:22:07 TS1',level =>1)
lib/functions/testproject.class.php:		$test_spec = $this->get_subtree($id,!self::RECURSIVE_MODE,self::EXCLUDE_TESTCASES,$exclude_branches);
lib/functions/testproject.class.php:		  $ret = $this->_createHierarchyMap($test_spec);
lib/functions/testproject.class.php:      	if($this->get_by_name($name,"testprojects.id <> {$id}") )
lib/functions/testproject.class.php:      $sql = " SELECT id FROM {$this->object_table} " .
lib/functions/testproject.class.php:   	         " WHERE prefix='" . $this->db->prepare_string($prefix) . "'";
lib/functions/testproject.class.php:		  $rs = $this->db->get_recordset($sql);
lib/functions/testproject.class.php:		$sql = "UPDATE {$this->tables['testprojects']} SET active=" . $status . " WHERE id=" . $id;
lib/functions/testproject.class.php:		$result = $this->db->exec_query($sql);
lib/functions/testproject.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testproject.class.php:		$sql = "/* $debugMsg */ SELECT prefix FROM {$this->object_table} WHERE id = {$id}";
lib/functions/testproject.class.php:		$ret = $this->db->fetchOneValue($sql);
lib/functions/testproject.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testproject.class.php:		$sql = "/* $debugMsg */ UPDATE {$this->object_table} " .
lib/functions/testproject.class.php:		$recordset = $this->db->exec_query($sql);
lib/functions/testproject.class.php:		$sql = " SELECT tc_counter  FROM {$this->object_table}  WHERE id = {$id}";
lib/functions/testproject.class.php:		$recordset = $this->db->get_recordset($sql);
lib/functions/testproject.class.php:	$sql = "UPDATE {$this->object_table} SET is_public={$isPublic} WHERE id={$id}";
lib/functions/testproject.class.php:	$result = $this->db->exec_query($sql);
lib/functions/testproject.class.php:		$kw->initialize(null,$testprojectID,$keyword,$notes);
lib/functions/testproject.class.php:		$op = array('status' => tlKeyword::E_DBERROR, 'id' => -1);
lib/functions/testproject.class.php:		$op['status'] = $kw->writeToDB($this->db);
lib/functions/testproject.class.php:			$op['id'] = $kw->dbID;
lib/functions/testproject.class.php:		$kw->initialize($id,$testprojectID,$keyword,$notes);
lib/functions/testproject.class.php:		$result = $kw->writeToDB($this->db);
lib/functions/testproject.class.php:			logAuditEvent(TLS("audit_keyword_saved",$keyword),"SAVE",$kw->dbID,"keywords");
lib/functions/testproject.class.php:		return tlKeyword::getByID($this->db,$id);
lib/functions/testproject.class.php:		$ids = $this->getKeywordIDsFor($testproject_id);
lib/functions/testproject.class.php:		return tlKeyword::getByIDs($this->db,$ids);
lib/functions/testproject.class.php:		$keyword = $this->getKeyword($id);
lib/functions/testproject.class.php:			$result = tlDBObject::deleteObjectFromDB($this->db,$id,"tlKeyword");
lib/functions/testproject.class.php:			logAuditEvent(TLS("audit_keyword_deleted",$keyword->name),"DELETE",$id,"keywords");
lib/functions/testproject.class.php:		$kwIDs = $this->getKeywordIDsFor($testproject_id);
lib/functions/testproject.class.php:			$resultKw = $this->deleteKeyword($kwIDs[$i]);
lib/functions/testproject.class.php:		$query = " SELECT id FROM {$this->tables['keywords']}  " .
lib/functions/testproject.class.php:		$keywordIDs = $this->db->fetchColumnsIntoArray($query,'id');
lib/functions/testproject.class.php:		$kwIDs = $this->getKeywordIDsFor($testproject_id);
lib/functions/testproject.class.php:			$keyword->readFromDb($this->db);
lib/functions/testproject.class.php:			$keyword->writeToXML($xmlCode,true);
lib/functions/testproject.class.php:		$kwIDs = $this->getKeywordIDsFor($testproject_id);
lib/functions/testproject.class.php:			$keyword->readFromDb($this->db);
lib/functions/testproject.class.php:			$keyword->writeToCSV($csv,$delim);
lib/functions/testproject.class.php:				$kw->initialize(null,$testproject_id,NULL,NULL);
lib/functions/testproject.class.php:				if ($kw->readFromCSV(implode($delim,$data)) >= tl::OK)
lib/functions/testproject.class.php:					if ($kw->writeToDB($this->db) >= tl::OK)
lib/functions/testproject.class.php:						logAuditEvent(TLS("audit_keyword_created",$kw->name),"CREATE",$kw->dbID,"keywords");
lib/functions/testproject.class.php:		return $this->importKeywordsFromSimpleXML($testproject_id,$simpleXMLObj);
lib/functions/testproject.class.php:		return $this->importKeywordsFromSimpleXML($testproject_id,$simpleXMLObj);
lib/functions/testproject.class.php:		if(!$simpleXMLObj || $simpleXMLObj->getName() != 'keywords')
lib/functions/testproject.class.php:		if( ($status == tl::OK) && $simpleXMLObj->keyword )
lib/functions/testproject.class.php:			foreach($simpleXMLObj->keyword as $keyword)
lib/functions/testproject.class.php:				$kw->initialize(null,$testproject_id,NULL,NULL);
lib/functions/testproject.class.php:				if ($kw->readFromSimpleXML($keyword) >= tl::OK)
lib/functions/testproject.class.php:					if ($kw->writeToDB($this->db) >= tl::OK)
lib/functions/testproject.class.php:						logAuditEvent(TLS("audit_keyword_created",$kw->name),"CREATE",$kw->dbID,"keywords");
lib/functions/testproject.class.php:		$keywords = $this->getKeywords($testproject_id);
lib/functions/testproject.class.php:				$keywordMap[$kw->dbID] = $kw->name;
lib/functions/testproject.class.php:	 *    20070104 - franciscom - added [$get_not_empy]
lib/functions/testproject.class.php:  		$additional_table=", {$this->tables['requirements']} REQ ";
lib/functions/testproject.class.php:           " FROM {$this->tables['req_specs']} SRS, {$this->tables['nodes_hierarchy']} NH " . $additional_table .
lib/functions/testproject.class.php:  	return $this->db->fetchColumnsIntoMap($sql,'id','title');
lib/functions/testproject.class.php:   * @author Francisco Mancardi - francisco.mancardi@gmail.com
lib/functions/testproject.class.php:   *      20090125 - franciscom
lib/functions/testproject.class.php:	  	$subtree = $this->tree_manager->get_subtree($id,$my['filters']);
lib/functions/testproject.class.php:		  $ret = $this->_createHierarchyMap($subtree);
lib/functions/testproject.class.php:              [$mode]: dotted -> $level number of dot characters are appended to
lib/functions/testproject.class.php:                               id=1   <--- Tree Root = Level 0
lib/functions/testproject.class.php:                                 + ------+
lib/functions/testproject.class.php:                            id=9   id=2   id=8  <----- Level 1
lib/functions/testproject.class.php:                                     id=3       <----- Level 2
lib/functions/testproject.class.php:                                       id=4     <----- Level 3
lib/functions/testproject.class.php:                                9 	.20071014-16:22:07 TS1
lib/functions/testproject.class.php:                     array  -> key: item id (= node id on tree).
lib/functions/testproject.class.php:                                9	  array(name => '20071014-16:22:07 TS1',level =>1)
lib/functions/testproject.class.php:	 * 20090506 - francisco.mancardi@gruppotesi.com - Requirements Refactoring
lib/functions/testproject.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testproject.class.php:    	$sql = "  /* $debugMsg */ SELECT {$fields} FROM {$this->tables['req_specs']} RSPEC, " .
lib/functions/testproject.class.php:       		   " {$this->tables['nodes_hierarchy']} NH " .
lib/functions/testproject.class.php:	    $rs = is_null($access_key) ? $this->db->get_recordset($sql) : $this->db->fetchRowsIntoMap($sql,$access_key);
lib/functions/testproject.class.php:	 * rev: 20071106 - franciscom - changed return type
lib/functions/testproject.class.php:    	$chk=$this->check_srs_title($testproject_id,$title,$ignore_case);
lib/functions/testproject.class.php:			$sql = "INSERT INTO {$this->tables['req_specs']} " .
lib/functions/testproject.class.php:					    VALUES (" . $testproject_id . ",'" . $this->db->prepare_string($title) . "','" .
lib/functions/testproject.class.php:					                $this->db->prepare_string($scope) .  "','" . $this->db->prepare_string($type) . "','" .
lib/functions/testproject.class.php:					                $this->db->prepare_string($countReq) . "'," . $this->db->prepare_string($user_id) . ", " .
lib/functions/testproject.class.php:					                $this->db->db_now() . ")";
lib/functions/testproject.class.php:			if (!$this->db->exec_query($sql))
lib/functions/testproject.class.php:			  $result['id']=$this->db->insert_id($this->tables['req_specs']);
lib/functions/testproject.class.php:                          default 0 -> case sensivite search
lib/functions/testproject.class.php:			$sql .= " WHERE UPPER(title)='" . strtoupper($this->db->prepare_string($title)) . "'";
lib/functions/testproject.class.php:			$sql .= " WHERE title='" . $this->db->prepare_string($title) . "'";
lib/functions/testproject.class.php:		$output = $this->db->fetchRowsIntoMap($sql,'id');
lib/functions/testproject.class.php:                          default 0 -> case sensivite search
lib/functions/testproject.class.php:			$rs = $this->get_srs_by_title($testproject_id,$title,$ignore_case);
lib/functions/testproject.class.php:// ----------------------------------------------------------------------------------------
lib/functions/testproject.class.php:		$query = "DELETE FROM {$this->tables['user_testproject_roles']} " . 
lib/functions/testproject.class.php:		if ($this->db->exec_query($query))
lib/functions/testproject.class.php:			$testProject = $this->get_by_id($tproject_id);
lib/functions/testproject.class.php:		$query = "SELECT user_id,role_id FROM {$this->tables['user_testproject_roles']} " .
lib/functions/testproject.class.php:		$roles = $this->db->fetchRowsIntoMap($query,'user_id');
lib/functions/testproject.class.php:		$query = "INSERT INTO {$this->tables['user_testproject_roles']} " .
lib/functions/testproject.class.php:		if($this->db->exec_query($query))
lib/functions/testproject.class.php:			$testProject = $this->get_by_id($tproject_id);
lib/functions/testproject.class.php:			$role = tlRole::getByID($this->db,$roleID,tlRole::TLOBJ_O_GET_DETAIL_MINIMUM);
lib/functions/testproject.class.php:			$user = tlUser::getByID($this->db,$userID,tlUser::TLOBJ_O_GET_DETAIL_MINIMUM);
lib/functions/testproject.class.php:				logAuditEvent(TLS("audit_users_roles_added_testproject",$user->getDisplayName(),
lib/functions/testproject.class.php:					$testProject['name'],$role->name),"ASSIGN",$tproject_id,"testprojects");
lib/functions/testproject.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testproject.class.php:		$reqspec_mgr = new requirement_spec_mgr($this->db);
lib/functions/testproject.class.php:		$this->deleteKeywords($id);
lib/functions/testproject.class.php:		$this->deleteAttachments($id);
lib/functions/testproject.class.php:		$reqSpecSet=$reqspec_mgr->get_all_in_testproject($id);
lib/functions/testproject.class.php:				$reqspec_mgr->delete_deep($reqSpec['id']);
lib/functions/testproject.class.php:		$tplanSet = $this->get_all_testplans($id);
lib/functions/testproject.class.php:			$tplan_mgr = new testplan($this->db);
lib/functions/testproject.class.php:				$tplan_mgr->delete($key);
lib/functions/testproject.class.php:		$platform_mgr = new tlPlatform($this->db,$id);
lib/functions/testproject.class.php:		$platform_mgr->deleteByTestProject($id);
lib/functions/testproject.class.php:		$a_sql[] = array("/* $debugMsg */ UPDATE {$this->tables['users']}  " . 
lib/functions/testproject.class.php:		$inventory_mgr = new tlInventory($id,$this->db);
lib/functions/testproject.class.php:		$inventorySet = $inventory_mgr->getAll($invOpt);
lib/functions/testproject.class.php:				$inventory_mgr->deleteInventory($key);
lib/functions/testproject.class.php:				$result = $this->db->exec_query($sql);
lib/functions/testproject.class.php:		if ($this->deleteUserRoles($id) < tl::OK)
lib/functions/testproject.class.php:		// ---------------------------------------------------------------------------------------
lib/functions/testproject.class.php:			$sql = "/* $debugMsg */ DELETE FROM {$this->tables['cfield_testprojects']} WHERE testproject_id = {$id} ";
lib/functions/testproject.class.php:			$this->db->exec_query($sql);
lib/functions/testproject.class.php:			$sql = "/* $debugMsg */ DELETE FROM {$this->object_table} WHERE id = {$id}";
lib/functions/testproject.class.php:			$result = $this->db->exec_query($sql);
lib/functions/testproject.class.php:					$this->setSessionProject(null);
lib/functions/testproject.class.php:			// BUGID 3147 - Delete test project with requirements defined crashed with memory exhausted
lib/functions/testproject.class.php:			$this->tree_manager->delete_subtree_objects($id,$id,'',array('testcase' => 'exclude_tcversion_nodes'));
lib/functions/testproject.class.php:			$sql = "/* $debugMsg */ DELETE FROM {$this->tables['nodes_hierarchy']} WHERE id = {$id} ";
lib/functions/testproject.class.php:			$this->db->exec_query($sql);
lib/functions/testproject.class.php:  args :idList: comma-separated list of IDs (should be the projectID, but could
lib/functions/testproject.class.php:			$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testproject.class.php:			$tcNodeTypeID = $this->tree_manager->node_descr_id['testcase'];
lib/functions/testproject.class.php:			$tsuiteNodeTypeID = $this->tree_manager->node_descr_id['testsuite'];
lib/functions/testproject.class.php:		$sql = "/* $debugMsg */  SELECT id,node_type_id from {$this->tables['nodes_hierarchy']} " .
lib/functions/testproject.class.php:		$result = $this->db->exec_query($sql);
lib/functions/testproject.class.php:			while($row = $this->db->fetch_array($result))
lib/functions/testproject.class.php:				$this->get_all_testcases_id($suiteIDs,$tcIDs);
lib/functions/testproject.class.php:        [keyword_id]= 0 -> no filter
lib/functions/testproject.class.php:                      <> 0 -> look only for this keyword
lib/functions/testproject.class.php:		                        FROM {$this->tables['keywords']} K, {$this->tables['testcase_keywords']}
lib/functions/testproject.class.php:		         FROM {$this->tables['keywords']} K, {$this->tables['testcase_keywords']}
lib/functions/testproject.class.php:		$map_keywords = $this->db->fetchMapRowsIntoMap($sql,'testcase_id','keyword_id');
lib/functions/testproject.class.php:                     default: 0 -> 1.6 and up behaviour
lib/functions/testproject.class.php:                     default: null -> no filter on test plan status
lib/functions/testproject.class.php:                              1 -> active test plans
lib/functions/testproject.class.php:                              0 -> inactive test plans
lib/functions/testproject.class.php:                     [$exclude_tplans]: null -> do not apply exclusion
lib/functions/testproject.class.php:                                        id -> test plan id to exclude
lib/functions/testproject.class.php:  	20100821 - franciscom - added options
lib/functions/testproject.class.php:	       " FROM {$this->tables['nodes_hierarchy']} NH,{$this->tables['testplans']} TPLAN";
lib/functions/testproject.class.php:    $where .= " AND (testproject_id = " . $this->db->prepare_int($testproject_id) . " ";
lib/functions/testproject.class.php:		$map = $this->db->fetchColumnsIntoMap($sql,'id','name');
lib/functions/testproject.class.php:		$map = $this->db->fetchRowsIntoMap($sql,'id');
lib/functions/testproject.class.php:        [case_sensitive]: 1-> do case sensitive search
lib/functions/testproject.class.php:  returns: 1 -> tplan name exists
lib/functions/testproject.class.php:	       " FROM {$this->tables['nodes_hierarchy']} NH, {$this->tables['testplans']} testplans " .
lib/functions/testproject.class.php:	$sql .= "'" . $this->db->prepare_string($tplan_name) . "'";
lib/functions/testproject.class.php:    $result = $this->db->exec_query($sql);
lib/functions/testproject.class.php:    $status= $this->db->num_rows($result) ? 1 : 0;
lib/functions/testproject.class.php:          20070219 - franciscom
lib/functions/testproject.class.php:  $fl=$this->tree_manager->get_children($tproject_id,
lib/functions/testproject.class.php:	$tplanNodeType = $this->tree_manager->node_descr_id['testplan'];
lib/functions/testproject.class.php:           " FROM {$this->tables['nodes_hierarchy']} NHA " .
lib/functions/testproject.class.php:           " JOIN {$this->tables['testplan_tcversions']} ON NHA.id = tcversion_id ";
lib/functions/testproject.class.php:    $sql .= " JOIN {$this->tables['nodes_hierarchy']} NH ON testplan_id = NH.id  " .
lib/functions/testproject.class.php:    $rs = $this->db->fetchRowsIntoMap($sql,'testcase_id');
lib/functions/testproject.class.php:    $this->get_all_testcases_id($id,$all);
lib/functions/testproject.class.php:        $linked=$this->getTCasesLinkedToAnyTPlan($id);
lib/functions/testproject.class.php:   	           " FROM {$this->tables['tcversions']} TCV,{$this->tables['nodes_hierarchy']} NHA, " .
lib/functions/testproject.class.php:	           "      {$this->tables['nodes_hierarchy']} NHB " .
lib/functions/testproject.class.php:	    $retval['items']=$this->db->fetchRowsIntoMap($sql,'id');       
lib/functions/testproject.class.php:// -------------------------------------------------------------------------------
lib/functions/testproject.class.php:// -------------------------------------------------------------------------------
lib/functions/testproject.class.php:         [node_type]: default: null -> no filter
lib/functions/testproject.class.php:                      only on testcase -> 'testcase'.
lib/functions/testproject.class.php:    $hash_descr_id = $this->tree_manager->get_available_node_types();
lib/functions/testproject.class.php:    $additional_table=",{$this->tables['cfield_node_types']} CFNT ";
lib/functions/testproject.class.php:       " FROM {$this->tables['custom_fields']} CF, {$this->tables['cfield_testprojects']} CFTP " .
lib/functions/testproject.class.php:  $map = $this->db->fetchRowsIntoMap($sql,$access_key);
lib/functions/testproject.class.php:	$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testproject.class.php:	$rs_source=$this->get_by_id($id);
lib/functions/testproject.class.php:		$sql="/* $debugMsg */ UPDATE {$this->tables['nodes_hierarchy']} " .
lib/functions/testproject.class.php:			 "SET name='" . $this->db->prepare_string(trim($new_name)) . "' " .
lib/functions/testproject.class.php:		$this->db->exec_query($sql);
lib/functions/testproject.class.php:	$this->copy_cfields_assignments($id,$new_id);	
lib/functions/testproject.class.php:	$oldNewMappings['keywords'] = $this->copy_keywords($id,$new_id);
lib/functions/testproject.class.php:	$oldNewMappings['platforms'] = $this->copy_platforms($id,$new_id);
lib/functions/testproject.class.php:		$oldNewMappings['requirements'] = $this->copy_requirements($id,$new_id);
lib/functions/testproject.class.php:	$elements = $this->tree_manager->get_children($id,$filters['exclude_node_types']);
lib/functions/testproject.class.php:    $item_mgr['testsuites'] = new testsuite($this->db);
lib/functions/testproject.class.php:		$op = $item_mgr['testsuites']->copy_to($piece['id'],$new_id,$user_id,$copyTSuiteOpt);				
lib/functions/testproject.class.php:	$this->copy_testplans($id,$new_id,$user_id,$oldNewMappings);
lib/functions/testproject.class.php:	$this->copy_user_roles($id,$new_id);
lib/functions/testproject.class.php: * @param string $IDList commaseparated list of Container-IDs - can be testproject ID or reqspec IDs 
lib/functions/testproject.class.php: * 20100310 - asimon - removed recursion logic
lib/functions/testproject.class.php:	$coupleTypes['target'] = $this->tree_manager->node_descr_id['requirement'];
lib/functions/testproject.class.php:	$coupleTypes['container'] = $this->tree_manager->node_descr_id['requirement_spec'];
lib/functions/testproject.class.php:	$this->tree_manager->getAllItemsID($IDList,$reqIDs,$coupleTypes);
lib/functions/testproject.class.php:	return count($this->get_all_requirement_ids($tp_id));
lib/functions/testproject.class.php:	$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testproject.class.php:	$sql = "/* $debugMsg */ SELECT * FROM {$this->tables['user_testproject_roles']} " .
lib/functions/testproject.class.php:	$rs=$this->db->get_recordset($sql);
lib/functions/testproject.class.php:      		$sql="/* $debugMsg */ INSERT INTO {$this->tables['user_testproject_roles']}  " .
lib/functions/testproject.class.php:      		$this->db->exec_query($sql);
lib/functions/testproject.class.php:	$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testproject.class.php:	$platform_mgr = new tlPlatform($this->db,$source_id);
lib/functions/testproject.class.php:	$platformSet = $platform_mgr->getAll();
lib/functions/testproject.class.php:		$platform_mgr->setTestProjectID($target_id);
lib/functions/testproject.class.php:			$op = $platform_mgr->create($platform['name'],$platform['notes']);
lib/functions/testproject.class.php:	$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testproject.class.php:	$sql = "/* $debugMsg */ SELECT * FROM {$this->tables['keywords']} " .
lib/functions/testproject.class.php:	$itemSet = $this->db->fetchRowsIntoMap($sql,'id');
lib/functions/testproject.class.php:			$op = $this->addKeyword($target_id,$item['keyword'],$item['notes']);
lib/functions/testproject.class.php:	$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testproject.class.php:           " SELECT field_id FROM {$this->tables['cfield_testprojects']} " .
lib/functions/testproject.class.php:  	$row_set = $this->db->fetchRowsIntoMap($sql,'field_id');   
lib/functions/testproject.class.php:		$this->cfield_mgr->link_to_testproject($target_id,$cfield_set);
lib/functions/testproject.class.php:	$tplanSet = $this->get_all_testplans($source_id);
lib/functions/testproject.class.php:			$tplanMgr = new testplan($this->db);
lib/functions/testproject.class.php:			$new_id = $tplanMgr->create($tplanSet[$itemID]['name'],$tplanSet[$itemID]['notes'],
lib/functions/testproject.class.php:				$tplanMgr->copy_as($itemID,$new_id,null,$target_id,$user_id,null,$mappings);
lib/functions/testproject.class.php:	$elements = $this->tree_manager->get_children($source_id,$filters['exclude_node_types']);
lib/functions/testproject.class.php:		$reqSpecMgr = new requirement_spec_mgr($this->db);
lib/functions/testproject.class.php:			$op = $reqSpecMgr->copy_to($piece['id'],$target_id,$target_id,$user_id,$options);
lib/functions/configCheck.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/configCheck.php: * @copyright 	2007-2009, TestLink community 
lib/functions/configCheck.php: *  20100617 - franciscom - domxml is not needed anymore
lib/functions/configCheck.php: *  20090713 - franciscom - tested is_writable() on windows with PHP 5.
lib/functions/configCheck.php: *  20090416 - havlatm - checking: database, GD lib and browser support
lib/functions/configCheck.php: *  20090126 - franciscom - check_php_extensions() refactoring
lib/functions/configCheck.php: *  20090109 - havlatm - import checking functions from Installer 
lib/functions/configCheck.php: * 	20081122 - franciscom - checkForExtensions() - added check of needed extensions to use pChart
lib/functions/configCheck.php: *  20081015 - franciscom - getSecurityNotes() - refactoring
lib/functions/configCheck.php:// ---------------------------------------------------------------------------------------------------
lib/functions/configCheck.php:	// $_SERVER['SERVER_PORT'] is not defined in case of php-cgi.exe
lib/functions/configCheck.php: * 		checkPhpExtensions() - refactore
lib/functions/configCheck.php:// * rev: 20081122 - franciscom - added gd2 check
lib/functions/configCheck.php:	$user->login = "admin";
lib/functions/configCheck.php:	if ($user->readFromDB($db,tlUser::USER_O_SEARCH_BYLOGIN) >= tl::OK && 
lib/functions/configCheck.php:		 $user->comparePassword("admin") >= tl::OK)
lib/functions/configCheck.php: *      20081015 - franciscom - LDAP checks refactored
lib/functions/configCheck.php: *      20080925 - franciscom - added option to not show results
lib/functions/configCheck.php: *      20070626 - franciscom - added LDAP checks  
lib/functions/configCheck.php:	// 20070121 - needed when schemas change has been done
lib/functions/configCheck.php:	// 20070911 - fixing bug 1021 
lib/functions/configCheck.php:	if($g_bugInterface && !$g_bugInterface->connect())
lib/functions/configCheck.php:        // 20090713 - franciscom - tested on windows XP with PHP 5.2.9 seems OK
lib/functions/configCheck.php:	$res = $db->exec_query($sql,1);  
lib/functions/configCheck.php:	$myrow = $db->fetch_array($res);
lib/functions/configCheck.php:			$msg = "You need to upgrade your Testlink Database to {$last_version} - <br>" .
lib/functions/configCheck.php:        $final_msg .=  "<td><span class='tab-warning'>{$max_execution_time} seconds - " .
lib/functions/configCheck.php:        $final_msg .= '<td><span class="tab-success">OK ('.$max_execution_time.' seconds)</span></td></tr>';
lib/functions/configCheck.php:       $final_msg .= "<td><span class='tab-warning'>$memory_limit MegaBytes - " .
lib/functions/configCheck.php:        $final_msg .= '<td><span class="tab-success">OK ('.$memory_limit.' MegaBytes)</span></td></tr>';
lib/functions/configCheck.php:		$final_msg .=  "<td><span class='tab-warning'>Failed! is enabled - " .
lib/functions/configCheck.php:		$final_msg .= "<td><span class='tab-success'>OK</span></td></tr>\n";
lib/functions/configCheck.php:  $td_ok = "<td><span class='tab-success'>OK</span></td></tr>\n";
lib/functions/configCheck.php:  $td_failed = '<td><span class="tab-warning">Failed! %s %s.</span></td></tr>';
lib/functions/configCheck.php:                                 'ko' => " not enabled. You MUST install it to use EXT-JS tree component. "));
lib/functions/configCheck.php:	$out .= "<td><span class='tab-$color'>$msg</span></td></tr>\n";
lib/functions/configCheck.php:    $out .= "<td><span class='tab-$color'>".$gc_maxlifetime_min .
lib/functions/configCheck.php:    		" minutes and $gc_maxlifetime_sec seconds - ($res)</span></td></tr>\n";
lib/functions/configCheck.php:    		$out .= '<td><span class="tab-success">'.$type.'</span></td></tr>';
lib/functions/configCheck.php:    		$out .= '<td><span class="tab-warning">Unsupported type: '.$type.
lib/functions/configCheck.php:  		- havlatm: converted to table format, error passed via argument, 
lib/functions/configCheck.php:        - added argument to point to info
lib/functions/configCheck.php:        - added warning regarding possible problems between MySQL and PHP 
lib/functions/configCheck.php:	// 5.2 is required because json is used in ext-js component
lib/functions/configCheck.php:	// -1 if left is less, 0 if equal, +1 if left is higher
lib/functions/configCheck.php:		$final_msg .= "<td><span class='tab-error'>Failed!</span> - You are running on PHP " . 
lib/functions/configCheck.php:		$final_msg .= "<td><span class='tab-success'>OK ( {$min_version} [minimum version] ";
lib/functions/configCheck.php: * 		a) installation - writable
lib/functions/configCheck.php: * 		b) installed - readable
lib/functions/configCheck.php:  				$out .= "<td><span class='tab-success'>OK (writable)</span></td></tr>\n"; 
lib/functions/configCheck.php: 					$out .= "<td><span class='tab-error'>Failed! Please fix the file " .
lib/functions/configCheck.php: 					$out .= "<td><span class='tab-warning'>Not writable! Please fix the file " .
lib/functions/configCheck.php:  				$out .= "<td><span class='tab-success'>OK</span></td></tr>\n"; 
lib/functions/configCheck.php:	 				$out .= "<td><span class='tab-error'>Directory is not writable! Please fix " .
lib/functions/configCheck.php: 					$out .= "<td><span class='tab-warning'>Directory is not writable! Please fix " .
lib/functions/configCheck.php:  				$out .= "<td><span class='tab-success'>OK (read only)</span></td></tr>\n"; 
lib/functions/configCheck.php: 				$out .= "<td><span class='tab-warning'>It's recommended to have read only permission for security reason.</span></td></tr>"; 
lib/functions/configCheck.php:				$out .= "<td><span class='tab-error'>Failed! The file is not on place.</span></td></tr>"; 
lib/functions/configCheck.php:				$out .= "<td><span class='tab-warning'>The file is not on place.</span></td></tr>"; 
lib/functions/configCheck.php:	$msg_ko = "<td><span class='tab-error'>Failed!</span></td></tr>";
lib/functions/configCheck.php:	$msg_ok = "<td><span class='tab-success'>OK</span></td></tr>";
lib/functions/configCheck.php:		echo "<td><span class='tab-success'>OK</span></td></tr>";
lib/functions/configCheck.php:		echo "<td><span class='tab-error'>Unsupported: {$_SERVER['HTTP_USER_AGENT']}</span></td></tr>";
lib/functions/configCheck.php:			'<span class="tab-success">Enabled</span>\');</script>'.
lib/functions/configCheck.php:			'<noscript><span class="tab-error">Javascript is disabled!</span></noscript>' .
lib/functions/configCheck.php:	// 20100502 - this file is not needed => IMHO we do not need to check existence
lib/functions/configCheck.php:// 20070911 - azl
lib/functions/configCheck.php:// 20071029 - azl - modified to only get active test plans bug # 1148
lib/functions/configCheck.php:	$testPlans = $db->get_recordset($sql);
lib/functions/tlRole.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/tlRole.class.php: * @copyright 	2004-2009, TestLink community 
lib/functions/tlRole.class.php: *	20091129 - franciscom - new method getRoleColourCfg() used by contribution
lib/functions/tlRole.class.php: *	20090221 - franciscom - hasRight() - BUG - function parameter name crashes with local variable
lib/functions/tlRole.class.php: *	20090101 - franciscom - writeToDB() problems with Postgres
lib/functions/tlRole.class.php:	const E_DBERROR = -2;	
lib/functions/tlRole.class.php:	const E_NAMELENGTH = -3;
lib/functions/tlRole.class.php:	const E_NAMEALREADYEXISTS = -4;
lib/functions/tlRole.class.php:	const E_EMPTYROLE = -5;
lib/functions/tlRole.class.php:		$this->object_table = $this->tables['roles']; 
lib/functions/tlRole.class.php:		$this->replacementRoleID = config_get('role_replace_for_deleted_roles');
lib/functions/tlRole.class.php:		$this->activateCaching = true;
lib/functions/tlRole.class.php:		$this->description = null;
lib/functions/tlRole.class.php:		$this->rights = null;
lib/functions/tlRole.class.php:			$this->name = null;
lib/functions/tlRole.class.php:			$this->dbID = null;
lib/functions/tlRole.class.php:		$this->description = $role->description;
lib/functions/tlRole.class.php:		$this->rights = $role->rights;
lib/functions/tlRole.class.php:		$this->name = $role->name;
lib/functions/tlRole.class.php:	 * @param $options integer any combination of TLOBJ_O_ or ROLE_O - Flags
lib/functions/tlRole.class.php:		if ($this->readFromCache() >= tl::OK)
lib/functions/tlRole.class.php:		$this->_clean($options);
lib/functions/tlRole.class.php:		$getFullDetails = ($this->detailLevel & self::TLOBJ_O_GET_DETAIL_RIGHTS);
lib/functions/tlRole.class.php:		$sql .= " FROM {$this->object_table} a ";
lib/functions/tlRole.class.php:			$sql .= " LEFT OUTER JOIN {$this->tables['role_rights']} b ON a.id = b.role_id " . 
lib/functions/tlRole.class.php:			          " LEFT OUTER JOIN {$this->tables['rights']}  c ON b.right_id = c.id ";
lib/functions/tlRole.class.php:			$clauses[] = "a.description = '".$db->prepare_string($this->name)."'";
lib/functions/tlRole.class.php:			$clauses[] = "a.id = {$this->dbID}";		
lib/functions/tlRole.class.php:		$rightInfo = $db->get_recordset($sql);			 
lib/functions/tlRole.class.php:			$this->dbID = $rightInfo[0]['role_id'];
lib/functions/tlRole.class.php:			$this->name = $rightInfo[0]['role_desc'];
lib/functions/tlRole.class.php:			$this->description = $rightInfo[0]['notes'];
lib/functions/tlRole.class.php:				$this->rights = $this->buildRightsArray($rightInfo);
lib/functions/tlRole.class.php:			$this->addToCache();
lib/functions/tlRole.class.php:		$this->removeFromCache();
lib/functions/tlRole.class.php:		$result = $this->checkDetails($db);
lib/functions/tlRole.class.php:			if ($this->dbID)
lib/functions/tlRole.class.php:				$result = $this->deleteRightsFromDB($db);
lib/functions/tlRole.class.php:					$sql = "UPDATE {$this->object_table} " .
lib/functions/tlRole.class.php:					       " SET description = '".$db->prepare_string($this->name)."',".
lib/functions/tlRole.class.php:						   " notes ='".$db->prepare_string($this->description)."'".
lib/functions/tlRole.class.php:						   " WHERE id = {$this->dbID}";
lib/functions/tlRole.class.php:					$result = $db->exec_query($sql);	
lib/functions/tlRole.class.php:				$sql = "INSERT INTO {$this->object_table} (description,notes) " .
lib/functions/tlRole.class.php:				       " VALUES ('".$db->prepare_string($this->name)."',".
lib/functions/tlRole.class.php:					   "'" . $db->prepare_string($this->description)."')";
lib/functions/tlRole.class.php:				$result = $db->exec_query($sql);	
lib/functions/tlRole.class.php:					$this->dbID = $db->insert_id($this->object_table);
lib/functions/tlRole.class.php:				$result = $this->addRightsToDB($db);
lib/functions/tlRole.class.php:		$this->name = trim($this->name);
lib/functions/tlRole.class.php:		$this->description = trim($this->description);
lib/functions/tlRole.class.php:		if (!sizeof($this->rights))
lib/functions/tlRole.class.php:			$result = self::checkRoleName($this->name);
lib/functions/tlRole.class.php:			$result = self::doesRoleExist($db,$this->name,$this->dbID) ? self::E_NAMEALREADYEXISTS : tl::OK;
lib/functions/tlRole.class.php:		$role->name = $name;
lib/functions/tlRole.class.php:		if ($role->readFromDB($db,self::ROLE_O_SEARCH_BYNAME) >= tl::OK && $role->dbID != $id)
lib/functions/tlRole.class.php:			return $role->dbID;
lib/functions/tlRole.class.php:		$displayName = $this->name;
lib/functions/tlRole.class.php:			$roleName = str_replace(" ","_",substr($displayName,1,-1));
lib/functions/tlRole.class.php:		$this->removeFromCache();
lib/functions/tlRole.class.php:		$result = $this->deleteRightsFromDB($db);
lib/functions/tlRole.class.php:			$this->replaceUserRolesWith($db,$this->replacementRoleID);
lib/functions/tlRole.class.php:			$sql = "DELETE FROM {$this->object_table} WHERE id = {$this->dbID}";
lib/functions/tlRole.class.php:			$result = $db->exec_query($sql) ? tl::OK : tl::ERROR;
lib/functions/tlRole.class.php:			$sql = "UPDATE {$this->tables[$table]} SET role_id = {$newRole} WHERE role_id = {$this->dbID}";
lib/functions/tlRole.class.php:			$result = $result && ($db->exec_query($sql) ? true : false);
lib/functions/tlRole.class.php:		$idSet = $this->getUserIDsWithGlobalRole($db);
lib/functions/tlRole.class.php:		$sql = "SELECT id FROM {$this->tables['users']} " .
lib/functions/tlRole.class.php:		       " WHERE role_id = {$this->dbID}";
lib/functions/tlRole.class.php:		$idSet = $db->fetchColumnsIntoArray($sql,"id");
lib/functions/tlRole.class.php:		$sql = "SELECT DISTINCT id FROM {$this->tables['users']} users," .
lib/functions/tlRole.class.php:		         " {$this->tables['user_testproject_roles']} user_testproject_roles " .
lib/functions/tlRole.class.php:		$sql .= " AND user_testproject_roles.role_id = {$this->dbID} AND users.id < 10";
lib/functions/tlRole.class.php:		$idSet = $db->fetchColumnsIntoArray($sql,"id");
lib/functions/tlRole.class.php:		$sql = "SELECT DISTINCT id FROM {$this->tables['users']} users," . 
lib/functions/tlRole.class.php:		         " {$this->tables['user_testplan_roles']} user_testplan_roles " .
lib/functions/tlRole.class.php:		$sql .= " AND user_testplan_roles.role_id = {$this->dbID}";
lib/functions/tlRole.class.php:		$idSet = $db->fetchColumnsIntoArray($sql,"id");
lib/functions/tlRole.class.php:	    $idSet = $this->getUserIDsWithTestProjectRole($db);
lib/functions/tlRole.class.php:		$idSet = $this->getUserIDsWithTestPlanRole($db);
lib/functions/tlRole.class.php:		$global_users = $this->getUserIDsWithGlobalRole($db);
lib/functions/tlRole.class.php:		$tplan_users = $this->getUserIDsWithTestPlanRole($db);
lib/functions/tlRole.class.php:		$tproject_users = $this->getUserIDsWithTestProjectRole($db);
lib/functions/tlRole.class.php:		$roleRights = (array)$this->rights;
lib/functions/tlRole.class.php:			$rights[] = $right->name;
lib/functions/tlRole.class.php:		$tablename = $this->tables['role_rights'];
lib/functions/tlRole.class.php:		$sql = "DELETE FROM {$tablename} WHERE role_id = {$this->dbID}";
lib/functions/tlRole.class.php:		$result = $db->exec_query($sql);
lib/functions/tlRole.class.php:		if ($this->rights)
lib/functions/tlRole.class.php:			foreach($this->rights as $right)
lib/functions/tlRole.class.php:				$rightID = $right->dbID;
lib/functions/tlRole.class.php:				$sql = "INSERT INTO {$this->tables['role_rights']} (role_id,right_id) " .
lib/functions/tlRole.class.php:				       "VALUES ({$this->dbID},{$rightID})";
lib/functions/tlRole.class.php:				$status_ok = $status_ok && ($db->exec_query($sql) ? 1 : 0);
lib/functions/tlRole.class.php:		$sql = "SELECT right_id,description FROM {$this->tables['role_rights']} a " .
lib/functions/tlRole.class.php:		       "JOIN {$this->tables['rights']} b ON a.right_id = b.id " .
lib/functions/tlRole.class.php:		         "WHERE role_id = {$this->dbID}";
lib/functions/tlRole.class.php:		$rightInfo = $db->get_recordset($sql);
lib/functions/tlRole.class.php:		$this->rights = buildRightsArray($rightInfo);
lib/functions/tlRole.class.php:			$right->name = $id['description'];
lib/functions/tlRole.class.php:		$inheritedRole->name = "<inherited>";
lib/functions/tlRole.class.php:        $roles = $db->fetchColumnsIntoArray($sql,"description");
lib/functions/int_serialization.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/int_serialization.php: * @copyright 	2005-2009, TestLink community 
lib/functions/tlKeyword.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/tlKeyword.class.php: * @copyright 	2007-2009, TestLink community 
lib/functions/tlKeyword.class.php: * 20100210 - franciscom - toXMLString() new method
lib/functions/tlKeyword.class.php:	const E_NAMENOTALLOWED = -1;
lib/functions/tlKeyword.class.php:	const E_NAMELENGTH = -2;
lib/functions/tlKeyword.class.php:	const E_NAMEALREADYEXISTS = -4;
lib/functions/tlKeyword.class.php:	const E_DBERROR = -8;
lib/functions/tlKeyword.class.php:	const E_WRONGFORMAT = -16;
lib/functions/tlKeyword.class.php:		$this->name = null;
lib/functions/tlKeyword.class.php:		$this->notes = null;
lib/functions/tlKeyword.class.php:		$this->testprojectID = null;
lib/functions/tlKeyword.class.php:			$this->dbID = null;
lib/functions/tlKeyword.class.php:		$this->_clean();
lib/functions/tlKeyword.class.php:		$this->dbID = $dbID;
lib/functions/tlKeyword.class.php:		$this->name = $name;
lib/functions/tlKeyword.class.php:		$this->notes = $notes;
lib/functions/tlKeyword.class.php:		$this->testprojectID = $testprojectID;
lib/functions/tlKeyword.class.php:		$this->_clean($options);
lib/functions/tlKeyword.class.php:		$query = $this->getReadFromDBQuery($this->dbID,$options);
lib/functions/tlKeyword.class.php:		$info = $db->fetchFirstRow($query);
lib/functions/tlKeyword.class.php:			$this->readFromDBRow($info);
lib/functions/tlKeyword.class.php:		$this->initialize($row['id'],$row['testproject_id'],$row['keyword'],$row['notes']);
lib/functions/tlKeyword.class.php:		$query = " SELECT id,keyword,notes,testproject_id FROM {$this->tables['keywords']} ";
lib/functions/tlKeyword.class.php:		$result = $this->checkKeyword($db);
lib/functions/tlKeyword.class.php:			$name = $db->prepare_string($this->name);
lib/functions/tlKeyword.class.php:			$notes = $db->prepare_string($this->notes);
lib/functions/tlKeyword.class.php:			if ($this->dbID)
lib/functions/tlKeyword.class.php:				$query = "UPDATE {$this->tables['keywords']} " .
lib/functions/tlKeyword.class.php:				         " SET keyword = '{$name}',notes = '{$notes}',testproject_id = {$this->testprojectID}" .
lib/functions/tlKeyword.class.php:						 " WHERE id = {$this->dbID}";
lib/functions/tlKeyword.class.php:				$result = $db->exec_query($query);
lib/functions/tlKeyword.class.php:				$query = " INSERT INTO {$this->tables['keywords']} (keyword,testproject_id,notes) " .
lib/functions/tlKeyword.class.php:						 " VALUES ('" . $name .	"'," . $this->testprojectID . ",'" . $notes . "')";
lib/functions/tlKeyword.class.php:				$result = $db->exec_query($query);
lib/functions/tlKeyword.class.php:					$this->dbID = $db->insert_id($this->tables['keywords']);
lib/functions/tlKeyword.class.php:		$this->name = trim($this->name);
lib/functions/tlKeyword.class.php:		$this->notes = trim($this->notes);
lib/functions/tlKeyword.class.php:		$result = tlKeyword::doesKeywordExist($db,$this->name,$this->testprojectID,$this->dbID);
lib/functions/tlKeyword.class.php:			$result = tlKeyword::checkKeywordName($this->name);
lib/functions/tlKeyword.class.php:		$sql = "DELETE FROM {$this->tables['testcase_keywords']} WHERE keyword_id = " . $this->dbID;
lib/functions/tlKeyword.class.php:		$result = $db->exec_query($sql);
lib/functions/tlKeyword.class.php:			$sql = "DELETE FROM {$this->tables['object_keywords']}  WHERE keyword_id = " . $this->dbID;
lib/functions/tlKeyword.class.php:			$result = $db->exec_query($sql);
lib/functions/tlKeyword.class.php:			$sql = "DELETE FROM {$this->tables['keywords']} WHERE id = " . $this->dbID;
lib/functions/tlKeyword.class.php:			$result = $db->exec_query($sql);
lib/functions/tlKeyword.class.php:	//@TODO schlundus, remove - for legacy purposes only 
lib/functions/tlKeyword.class.php:		return array("id" => $this->dbID,"keyword" => $this->name,
lib/functions/tlKeyword.class.php:			         "notes" => $this->notes,"testproject_id" => $this->testprojectID);
lib/functions/tlKeyword.class.php:		$name = $db->prepare_string(strtoupper($name));
lib/functions/tlKeyword.class.php:		if ($db->fetchFirstRow($query))
lib/functions/tlKeyword.class.php:		$keywords = array($this->getInfo());
lib/functions/tlKeyword.class.php:		$keywords = is_null($keywordSet) ? array($this->getInfo()) : $keywordSet;
lib/functions/tlKeyword.class.php:		return $this->readFromSimpleXML($keyword);
lib/functions/tlKeyword.class.php:		$this->name = NULL;
lib/functions/tlKeyword.class.php:		$this->notes = NULL;
lib/functions/tlKeyword.class.php:		if (!$keyword || $keyword->getName() != 'keyword')
lib/functions/tlKeyword.class.php:		$attributes = $keyword->attributes();
lib/functions/tlKeyword.class.php:		$this->name = (string)$attributes['name'];
lib/functions/tlKeyword.class.php:		if ($keyword->notes)
lib/functions/tlKeyword.class.php:			$this->notes = (string)$keyword->notes[0];
lib/functions/tlKeyword.class.php:		$keyword = array($this->getInfo());
lib/functions/tlKeyword.class.php:		$this->name = isset($data[0]) ? $data[0] : null;
lib/functions/tlKeyword.class.php:		$this->notes = isset($data[1]) ? $data[1] : null;
lib/functions/tlAttachmentRepository.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/tlAttachmentRepository.class.php: * @copyright 	2007-2009, TestLink community 
lib/functions/tlAttachmentRepository.class.php: * 20091220 - franciscom - new method copyAttachments()
lib/functions/tlAttachmentRepository.class.php:    	$this->repositoryType = self::getType();
lib/functions/tlAttachmentRepository.class.php:    	$this->repositoryCompressionType = self::getCompression();
lib/functions/tlAttachmentRepository.class.php:		$this->repositoryPath = self::getPathToRepository();
lib/functions/tlAttachmentRepository.class.php:		$this->attachmentCfg = config_get('attachments');
lib/functions/tlAttachmentRepository.class.php:		if ($this->repositoryType == TL_REPOSITORY_TYPE_FS)
lib/functions/tlAttachmentRepository.class.php:		 	$destFPath = $this->buildRepositoryFilePath($destFName,$fkTableName,$fkid);
lib/functions/tlAttachmentRepository.class.php:			$fileUploaded = $this->storeFileInFSRepository($fTmpName,$destFPath);
lib/functions/tlAttachmentRepository.class.php:			$fContents = $this->getFileContentsForDBRepository($fTmpName,$destFName);
lib/functions/tlAttachmentRepository.class.php:			$fileUploaded = ($attachment->create($fkid,$fkTableName,$fName,$destFPath,$fContents,$fType,$fSize,$title) >= tl::OK);
lib/functions/tlAttachmentRepository.class.php:				$fileUploaded = $attachment->writeToDb($this->db);
lib/functions/tlAttachmentRepository.class.php:		$destFPath = $this->buildRepositoryFolderFor($tableName,$id,true);
lib/functions/tlAttachmentRepository.class.php:	 * Fetches the contents of a file for storing it into the DB-repository
lib/functions/tlAttachmentRepository.class.php:		switch($this->repositoryCompressionType)
lib/functions/tlAttachmentRepository.class.php:				$tmpGZName = $this->repositoryPath.DIRECTORY_SEPARATOR.$destFName.".gz";
lib/functions/tlAttachmentRepository.class.php:	 * Stores a file into the FS-repository
lib/functions/tlAttachmentRepository.class.php:		switch($this->repositoryCompressionType)
lib/functions/tlAttachmentRepository.class.php:		$path = $this->repositoryPath.DIRECTORY_SEPARATOR.$tableName;
lib/functions/tlAttachmentRepository.class.php:		$destFPath = $this->repositoryPath.DIRECTORY_SEPARATOR.$filePath;
lib/functions/tlAttachmentRepository.class.php:		return $attachment->deleteFromDB($this->db);
lib/functions/tlAttachmentRepository.class.php:			$attachmentInfo = $this->getAttachmentInfo($id);
lib/functions/tlAttachmentRepository.class.php:				$bResult = $this->deleteAttachmentFromFS($id,$attachmentInfo);
lib/functions/tlAttachmentRepository.class.php:			$bResult = $this->deleteAttachmentFromDB($id,null) && $bResult;
lib/functions/tlAttachmentRepository.class.php:			$attachmentInfo = $this->getAttachmentInfo($id);
lib/functions/tlAttachmentRepository.class.php:			//for DB-repository the filename is null
lib/functions/tlAttachmentRepository.class.php:			$content = $this->$fname($id);
lib/functions/tlAttachmentRepository.class.php:		         " FROM {$this->tables['attachments']} WHERE id = {$id}";
lib/functions/tlAttachmentRepository.class.php:		$row = $this->db->fetchFirstRow($query);
lib/functions/tlAttachmentRepository.class.php:			$destFPath = $this->repositoryPath.DIRECTORY_SEPARATOR.$filePath;
lib/functions/tlAttachmentRepository.class.php:		         " FROM {$this->tables['attachments']} WHERE id = {$id}";
lib/functions/tlAttachmentRepository.class.php:		$row = $this->db->fetchFirstRow($query);
lib/functions/tlAttachmentRepository.class.php:		$attachmentIDs = $this->getAttachmentIDsFor($fkid,$fkTableName);
lib/functions/tlAttachmentRepository.class.php:			$bSuccess = ($this->deleteAttachment($id) && $bSuccess);
lib/functions/tlAttachmentRepository.class.php:			$folder = $this->buildRepositoryFolderFor($fkTableName,$fkid);
lib/functions/tlAttachmentRepository.class.php:		if ($attachment->readFromDB($this->db))
lib/functions/tlAttachmentRepository.class.php:			$info = $attachment->getInfo();
lib/functions/tlAttachmentRepository.class.php:		$attachmentIDs = $this->getAttachmentIDsFor($fkid,$fkTableName);
lib/functions/tlAttachmentRepository.class.php:			$attachmentInfo = $this->getAttachmentInfo($attachmentIDs[$idx]);
lib/functions/tlAttachmentRepository.class.php:		$order_by = $this->attachmentCfg->order_by;
lib/functions/tlAttachmentRepository.class.php:		$query = "SELECT id FROM {$this->tables['attachments']} WHERE fk_id = {$fkid} " .
lib/functions/tlAttachmentRepository.class.php:		         " AND fk_table = '" . $this->db->prepare_string($fkTableName). "' " . $order_by;
lib/functions/tlAttachmentRepository.class.php:		$attachmentIDs = $this->db->fetchColumnsIntoArray($query,'id');
lib/functions/tlAttachmentRepository.class.php:		$attachments = $this->getAttachmentInfosFor($source_id,$fkTableName);
lib/functions/tlAttachmentRepository.class.php:				$mangled_fname = $f_parts[count($f_parts)-1];
lib/functions/tlAttachmentRepository.class.php:					$destFPath = $this->buildRepositoryFilePath($mangled_fname,$table_name,$target_id);
lib/functions/tlAttachmentRepository.class.php:					$file_contents = $this->getAttachmentContentFromDB($value['id']);
lib/functions/tlAttachmentRepository.class.php:					$attachmentMgr->create($target_id,$fkTableName,$value['file_name'],
lib/functions/tlAttachmentRepository.class.php:					$attachmentMgr->writeToDB($this->db);
lib/functions/web_editor.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/web_editor.php: * @copyright 	2005-2009, TestLink community 
lib/functions/web_editor.php: * 	20080826 - franciscom - BUGID 1692
lib/functions/web_editor.php:  args:-
lib/functions/web_editor.php:    $defaultCfg = $cfg->text_editor['all'];
lib/functions/web_editor.php:	$webEditorCfg = isset($cfg->text_editor[$feature]) ? $cfg->text_editor[$feature] : $defaultCfg;
lib/functions/web_editor.php:			$of->BasePath = $base_path . 'third_party/fckeditor/';
lib/functions/web_editor.php:			$of->ToolbarSet = $webEditorCfg['toolbar'];
lib/functions/web_editor.php:			$of->Config['CustomConfigurationsPath']  = $base_path . $webEditorCfg['configFile'];
lib/functions/web_editor.php:				$of->Height = $webEditorCfg['height'];
lib/functions/web_editor.php:				$of->Width = $webEditorCfg['width'];
lib/functions/web_editor.php:				$of->rows = $webEditorCfg['rows'];
lib/functions/web_editor.php:				$of->cols = $webEditorCfg['cols'];
lib/functions/web_editor.php:				$of->rows = $webEditorCfg['rows'];
lib/functions/web_editor.php:				$of->cols = $webEditorCfg['cols'];
lib/functions/print.inc.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/print.inc.php: * @copyright 2007-2009, TestLink community 
lib/functions/print.inc.php: *  20100803 - amitkhullar - Added condition check for null req. custom fields @line 230/346  
lib/functions/print.inc.php: *  20100723 - asimon - BUGID 3459: added platform ID to renderTestCaseForPrinting(),
lib/functions/print.inc.php: *  20100723 - asimon - BUGID 3451 and related: solved by changes in renderTestCaseForPrinting()
lib/functions/print.inc.php: *  20100326 - asimon - started refactoring and moving of requirement printing functions from 
lib/functions/print.inc.php: *  20100306 - contribution by romans - BUGID 0003235: Printing Out Test Report Shows
lib/functions/print.inc.php: *  20100106 - franciscom - Multiple Test Case Steps Feature
lib/functions/print.inc.php: *  20100105 - franciscom - added tableColspan,firstColWidth config 
lib/functions/print.inc.php: *  20090906 - franciscom - added contribution by Eloff:
lib/functions/print.inc.php: *                          - regarding platforms feature
lib/functions/print.inc.php: *                          - Moved toc to be outside of report content
lib/functions/print.inc.php: *                          - Changed the anchor ids
lib/functions/print.inc.php: *  20090902 - franciscom - preconditions (printed only if not empty).
lib/functions/print.inc.php: *  20090719 - franciscom - added Test Case CF location management 
lib/functions/print.inc.php: *  20090330 - franciscom - fixed internal bug when decoding user names
lib/functions/print.inc.php: *	20090410 - amkhullar - BUGID 2368
lib/functions/print.inc.php: *  20090330 - franciscom - renderTestSpecTreeForPrinting() - 
lib/functions/print.inc.php: *  20090329 - franciscom - renderTestCaseForPrinting() refactoring of code regarding custom fields
lib/functions/print.inc.php: *                          renderTestSuiteNodeForPrinting() - print ALWAYS custom fields
lib/functions/print.inc.php: * 	20090326 - amkhullar - BUGID 2207 - Code to Display linked bugs to a TC in Test Report
lib/functions/print.inc.php: *	20090322 - amkhullar - added check box for Test Case Custom Field display on Test Plan/Report
lib/functions/print.inc.php: *  20090223 - havlatm - estimated execution moved to extra chapter, refactoring a few functions
lib/functions/print.inc.php: * 	20090129 - havlatm - removed base tag from header (problems with internal links for some browsers)
lib/functions/print.inc.php: *  20081207 - franciscom - BUGID 1910 - changes on display of estimated execution time
lib/functions/print.inc.php: *  20080820 - franciscom - added contribution (BUGID 1670)
lib/functions/print.inc.php: *                         - Custom Field with Name CF_ESTIMATED_EXEC_TIME exists
lib/functions/print.inc.php: *                         - Custom Field is managed at design time
lib/functions/print.inc.php: *                         - Custom Field is assigned to Test Cases
lib/functions/print.inc.php: *	20080819 - franciscom - renderTestCaseForPrinting() - removed mysql only code
lib/functions/print.inc.php: *	20080602 - franciscom - display testcase external id
lib/functions/print.inc.php: *	20080525 - havlatm - fixed missing test result
lib/functions/print.inc.php: *	20080505 - franciscom - renderTestCaseForPrinting() - added custom fields
lib/functions/print.inc.php: *	20080418 - franciscom - document_generation configuration .
lib/functions/print.inc.php: *	20071014 - franciscom - renderTestCaseForPrinting() added printing of test case version
lib/functions/print.inc.php: *	20070509 - franciscom - changes in renderTestSpecTreeForPrinting() interface
lib/functions/print.inc.php:		$reqStatusLabels = init_labels($req_cfg->status_labels);
lib/functions/print.inc.php:	    $reqTypeLabels = init_labels($req_cfg->type_labels);
lib/functions/print.inc.php:	$arrReq = $req_mgr->get_by_id($node['id']);
lib/functions/print.inc.php:		$printingOptions['tocCode'] .= '<p style="padding-left: ' . 
lib/functions/print.inc.php:		            htmlspecialchars($author->getDisplayName()) . "</td></tr>\n";
lib/functions/print.inc.php:		$current = count($req_mgr->get_coverage($req['id']));
lib/functions/print.inc.php:		$relations = $req_mgr->get_relations($req['id']);
lib/functions/print.inc.php:				if ($req_cfg->relations->interproject_linking) {
lib/functions/print.inc.php:		$req_coverage = $req_mgr->get_coverage($req['id']);
lib/functions/print.inc.php:		$linked_cf = $req_mgr->get_linked_cfields($req['id']);
lib/functions/print.inc.php:		$reqSpecTypeLabels = init_labels($req_spec_cfg->type_labels);
lib/functions/print.inc.php:	$spec = $req_spec_mgr->get_by_id($node['id']);
lib/functions/print.inc.php:	 	$printingOptions['tocCode'] .= $spacing.'<b><p style="padding-left: '.(10*$level).'px;">' .
lib/functions/print.inc.php:		            htmlspecialchars($author->getDisplayName()) . "</td></tr>\n";
lib/functions/print.inc.php:		$current = $req_spec_mgr->get_requirements_count($spec['id']);
lib/functions/print.inc.php:		$linked_cf = $req_spec_mgr->get_linked_cfields($spec['id']);
lib/functions/print.inc.php: 	    $map_id_descr = $tree_mgr->node_types;
lib/functions/print.inc.php:    $cssFile = $base_href . $themeDir . $docCfg->css_template;
lib/functions/print.inc.php:	$output = "<!DOCTYPE HTML PUBLIC '-//W3C//DTD HTML 4.01 Transitional//EN'>\n";
lib/functions/print.inc.php:	$output .= '<meta http-equiv="Content-Type" content="text/html; charset=' . config_get('charset') . '">';
lib/functions/print.inc.php:	// $output .= '<link type="text/css" rel="stylesheet" href="'. $base_href . $docCfg->css_template ."\" />\n";
lib/functions/print.inc.php:	// way to add CSS directly to the exported file (not used - test required)
lib/functions/print.inc.php:    // $docCss = file_get_contents(TL_ABS_PATH . $docCfg->css_template);
lib/functions/print.inc.php:    // $output .= '<style type="text/css" media="all">'."\n<!--\n".$docCss."\n-->\n</style>\n";
lib/functions/print.inc.php:	if ($docCfg->company_name != '' )
lib/functions/print.inc.php:		$output .= '<div style="float:right;">' . htmlspecialchars($docCfg->company_name) ."</div>\n";
lib/functions/print.inc.php:	$output .= '<div>'. $doc_info->tproject_name . "</div><hr />\n";
lib/functions/print.inc.php:	if ($docCfg->company_logo != '' )
lib/functions/print.inc.php:		$output .= '<p style="text-align: center;"><img alt="TestLink logo" ' .
lib/functions/print.inc.php:		           'title="configure using $tlCfg->company->logo_image"'.
lib/functions/print.inc.php:        	     ' src="' . $_SESSION['basehref'] . TL_THEME_IMG_DIR . $docCfg->company_logo . '" /></p>';
lib/functions/print.inc.php:	$output .= '<div class="doc_title"><p>' . $doc_info->title . '</p>';
lib/functions/print.inc.php:	$output .= '<p>'.$doc_info->type_name.'</p>';
lib/functions/print.inc.php:		         '<p id="prodname">'. lang_get('project') .": " . $doc_info->tproject_name . "</p>\n";
lib/functions/print.inc.php:	$output .= '<p id="author">' . lang_get('author').": " . $doc_info->author . "</p>\n" .
lib/functions/print.inc.php:	if ($docCfg->company_copyright != '')
lib/functions/print.inc.php:		$output .= '<div class="pagefooter" id="copyright">' . $docCfg->company_copyright."</div>\n";
lib/functions/print.inc.php:	if ($docCfg->confidential_msg != '')
lib/functions/print.inc.php:		$output .= '<div class="pagefooter" id="confidential">' .	$docCfg->confidential_msg . "</div>\n";
lib/functions/print.inc.php:       20100723 - asimon - BUGID 3459 - $added platform_id
lib/functions/print.inc.php:       20070509 - franciscom - added $tplan_id in order to refactor and
lib/functions/print.inc.php: 	    $map_id_descr = $tree_mgr->node_types;
lib/functions/print.inc.php:		        // 20090330 - franciscom
lib/functions/print.inc.php:	            	$cfields = $tplan_mgr->html_table_of_custom_field_values($tplan_id,'design',null,$cfieldFormatting);
lib/functions/print.inc.php:			// platform changes - $code .= renderTOC($printingOptions);
lib/functions/print.inc.php:			// 3459 - added $platform_id
lib/functions/print.inc.php:			// 3459 - added $platform_id
lib/functions/print.inc.php:			$authorName = $user->getDisplayName();
lib/functions/print.inc.php: *      20100724 - asimon - BUGID 3459 - added platform ID
lib/functions/print.inc.php: *      20100723 - asimon - BUGID 3451 and related finally solved
lib/functions/print.inc.php: *      20090517 - havlatm - fixed execution layot; added tester name
lib/functions/print.inc.php: *      20080819 - franciscom - removed mysql only code
lib/functions/print.inc.php: *      20071014 - franciscom - display test case version
lib/functions/print.inc.php: *      20070509 - franciscom - added Contribution
lib/functions/print.inc.php:	    	list($tcase_prefix,$dummy) = $tc_mgr->getPrefix($id);
lib/functions/print.inc.php:	    $tcase_prefix .= $cfg['testcase']->glue_character;
lib/functions/print.inc.php:    $tcInfo = $tc_mgr->get_by_id($id,$versionID);
lib/functions/print.inc.php:	// ----- BUGID 3451 and related ---------------------------------------
lib/functions/print.inc.php:	// $versionID was used in the following "dirty" SQL statement, but was still set to "-1" 
lib/functions/print.inc.php:	// ----- BUGID 3451 and related ---------------------------------------
lib/functions/print.inc.php:        	$locationFilters = $tc_mgr->buildCFLocationMap();
lib/functions/print.inc.php:		// 20090719 - franciscom - cf location
lib/functions/print.inc.php:					$tc_mgr->html_table_of_custom_field_values($id,'design',$fvalue,null,$tplan_id,
lib/functions/print.inc.php: * using existent methods - franciscom - 20090329 
lib/functions/print.inc.php:		$exec_info = $db->get_recordset($sql,null,1);
lib/functions/print.inc.php:        $cfields['execScope'] = $tc_mgr->html_table_of_custom_field_values($versionID,'execution',null,
lib/functions/print.inc.php:		$printingOptions['tocCode'] .= '<p style="padding-left: ' . 
lib/functions/print.inc.php:	if($cfg['doc']->tc_version_enabled && isset($node['version'])) 
lib/functions/print.inc.php:		$code .= '&nbsp;<span style="font-size: 80%;"' . $cfg['gui']->role_separator_open . 
lib/functions/print.inc.php:        	   	$labels['version'] . $cfg['gui']->title_separator_1 .  $node['version'] . 
lib/functions/print.inc.php:           		$cfg['gui']->role_separator_close . '</span>';
lib/functions/print.inc.php:        $code .= '<td colspan="' .  ($cfg['tableColspan']-1) . '">' . $authorName;
lib/functions/print.inc.php:            // 20090719 - franciscom - cf location
lib/functions/print.inc.php:    // 20090719 - franciscom - cf location
lib/functions/print.inc.php:		  			'<td colspan="' . ($cfg['tableColspan']-1) . '"><b>' . $labels["test_status_not_run"] . 
lib/functions/print.inc.php:	  	$requirements = $req_mgr->get_all_for_tcase($id);
lib/functions/print.inc.php:	  	$code .= '<td colspan="' . ($cfg['tableColspan']-1) . '">';
lib/functions/print.inc.php:      	$code .= '<td colspan="' . ($cfg['tableColspan']-1) . '">';
lib/functions/print.inc.php:	  	$arrKeywords = $tc_mgr->getKeywords($id);
lib/functions/print.inc.php:  rev: 20090329 - franciscom - added ALWAYS Custom Fields
lib/functions/print.inc.php:       20081207 - franciscom - refactoring using static to decrease exec time.
lib/functions/print.inc.php:	 	$printingOptions['tocCode'] .= $spacing.'<b><p style="padding-left: '.(10*$level).'px;">' .
lib/functions/print.inc.php:	$docHeadingLevel = $level - 1; //we would like to have html top heading H1 - H6
lib/functions/print.inc.php:	// ----- get Test Suite text -----------------
lib/functions/print.inc.php:		$tInfo = $tsuite_mgr->get_by_id($node['id']);
lib/functions/print.inc.php:            $cfields[$key] = $tsuite_mgr->html_table_of_custom_field_values($node['id'],$key,null,
lib/functions/print.inc.php:     20100723 - asimon - BUGID 3459: added $platform_id
lib/functions/print.inc.php:	$tcPrefix = $tProjectMgr->getTestCasePrefix($tprojectID);
lib/functions/print.inc.php:        	"check your \$tlCfg->results['status_label'] configuration ";
lib/functions/print.inc.php:    // 20100306 - contribution by romans
lib/functions/print.inc.php:    	// amitkhullar-BUGID 2207 - Code to Display linked bugs to a TC in Test Report
lib/functions/info.inc.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/info.inc.php: * @copyright 	2005-2009, TestLink community 
lib/functions/info.inc.php:	$smarty->assign('title', $title);
lib/functions/info.inc.php:	$smarty->assign('content', $message);
lib/functions/info.inc.php:	$smarty->display('workAreaSimple.tpl');
lib/functions/specview.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/specview.php: * @copyright 	2004-2009, TestLink community 
lib/functions/specview.php: *  20100726 - asimon - BUGID 3628: in addLinkedVersionsInfo(), a missing [0] in condition 
lib/functions/specview.php: *  20100721 - asimon - BUGID 3406 - added $options for new user assignments per build to 
lib/functions/specview.php: *	20100417 - franciscom - BUGID 2498  Add test case to test plan - Filter Test Cases based on Test Importance
lib/functions/specview.php: *  20100411 - franciscom - BUGID 2797 - filter by test case execution type
lib/functions/specview.php: *  20100218 - asimon - BUGID 3026 - added parameter $testcaseFilter on keywordFilteredSpecView
lib/functions/specview.php: *	20100119 - franciscom - addCustomFieldsToView() - missing work on platforms
lib/functions/specview.php: *	20090808 - franciscom - gen_spec_view() interface changes + refactoring
lib/functions/specview.php: *	20090325 - franciscom - added new info about when and who has linked a tcversion
lib/functions/specview.php: *	20090325 - franciscom - BUGID - better implementation of BUGID 1497
lib/functions/specview.php: *	20081109 - franciscom - fixed filter on getTestSpecFromNode()
lib/functions/specview.php: *	20081030 - franciscom - created removeEmptyTestSuites(), removeEmptyBranches() to refactor.
lib/functions/specview.php: *	20081019 - franciscom - removed new option to prune empty test suites
lib/functions/specview.php: *	20080919 - franciscom - BUGID 1716
lib/functions/specview.php: *	20080811 - franciscom - BUGID 1650 (REQ)
lib/functions/specview.php: *	20080422 - franciscom - BUGID 1497
lib/functions/specview.php: *                              [z] => 100  ---> nodes_hierarchy.order             
lib/functions/specview.php: *                              [feature_id] => 9      --->> testplan_tcversions.ID
lib/functions/specview.php: *                      	1 -> will return only linked tcversion
lib/functions/specview.php: *                   		0 -> returns all test cases specs.
lib/functions/specview.php: *                            1 -> for every test case cfields of area 'testplan_design'
lib/functions/specview.php: *                            0 -> do nothing
lib/functions/specview.php: *                                  [user_id] => 0       ---> !=0 if execution has been assigned
lib/functions/specview.php: *                                  [feature_id] => 12   ---> testplan_tcversions.id
lib/functions/specview.php: *                                  [linked_ts] => 2009-06-10 23:00
lib/functions/specview.php: *  20100721 - asimon - BUGID 3406 - added user_assignments_per_build to options
lib/functions/specview.php: *  20090808 - franciscom - changed interface to reduce number of arguments
lib/functions/specview.php: *	20070707 - franciscom - BUGID 921 - problems with display order in execution screen
lib/functions/specview.php: *	20070630 - franciscom - added new logic to include in for inactive test cases, testcase version id.
lib/functions/specview.php: *	20061105 - franciscom - added new data on output: [tcversions_qty]
lib/functions/specview.php: * 	20090625 - Eloff - added priority output
lib/functions/specview.php:	// BUGID 2797 - filter by test case execution type
lib/functions/specview.php:	$hash_descr_id = $tcase_mgr->tree_manager->get_available_node_types();
lib/functions/specview.php:	// BUGID 2797 - filter by test case execution type
lib/functions/specview.php:		$tcaseSet = $tcase_mgr->get_by_id($a_tcid,testcase::ALL_VERSIONS);
lib/functions/specview.php:		removeEmptyTestSuites($result['spec_view'],$tcase_mgr->tree_manager,
lib/functions/specview.php:	//  \--- TS2
lib/functions/specview.php:	//        \--TC1
lib/functions/specview.php:	//        \--TC2
lib/functions/specview.php:	//  \--- TS3 
lib/functions/specview.php:	//        \-- TXX
lib/functions/specview.php:	// be removed -> WRONG
lib/functions/specview.php:	// --------------------------------------------------------------------------------------------
lib/functions/specview.php: *  20100721 - asimon - BUGID 3046, added $options
lib/functions/specview.php: *	20080919 - franciscom - BUGID 2716
lib/functions/specview.php:	$doFilterByKeyword=(!is_null($argsObj->keyword_id) && $argsObj->keyword_id > 0) ? true : false;
lib/functions/specview.php:	// BUGID 2797 - filter by test case execution type
lib/functions/specview.php:	// $filters = array('keyword_id' => $argsObj->keyword_id, 'exec_type' => $argsObj->executionType);
lib/functions/specview.php:	$filters = array('keyword_id' => $argsObj->keyword_id);
lib/functions/specview.php:	$tplan_tcases = $tplanMgr->get_linked_tcversions($argsObj->tplan_id, $filters, $options);
lib/functions/specview.php:	if( !is_null($tplan_tcases) && $doFilterByKeyword && $argsObj->keywordsFilterType == 'AND')
lib/functions/specview.php:		$filteredSet=$tcaseMgr->filterByKeyword(array_keys($tplan_tcases),
lib/functions/specview.php:			                                    $argsObj->keyword_id,$argsObj->keywordsFilterType);
lib/functions/specview.php:		$tplan_tcases = $tplanMgr->get_linked_tcversions($argsObj->tplan_id, $filters, $options);
lib/functions/specview.php: * 20100721 - asimon - BUGID 3406 - added $options for new user assignments per build
lib/functions/specview.php: * 20100218 - asimon - BUGID 3026 - added parameter $testcaseFilter to include functionality
lib/functions/specview.php:	$tsuite_data = $tsuiteMgr->get_by_id($argsObj->id);
lib/functions/specview.php:	$filterAssignedTo = property_exists($argsObj,'filter_assigned_to') ? $argsObj->filter_assigned_to : null;	
lib/functions/specview.php:	// @TODO - 20081019 
lib/functions/specview.php:	// $argsObj->keyword_id and $keywordsFilter
lib/functions/specview.php:	$filters = array('keyword_id' => $argsObj->keyword_id, 'assigned_to' => $filterAssignedTo);
lib/functions/specview.php:	// 20100715 - asimon - why the double writing to $tplan_linked_tcversions?
lib/functions/specview.php:	// $tplan_linked_tcversions = $tplanMgr->get_linked_tcversions($argsObj->tplan_id, $filters, $options);
lib/functions/specview.php:	if(!is_null($keywordsFilter) && !is_null($keywordsFilter->items))
lib/functions/specview.php:		$keywordsTestCases = $tprojectMgr->get_keywords_tcases($argsObj->tproject_id,
lib/functions/specview.php:			                                                   $keywordsFilter->items,$keywordsFilter->type);
lib/functions/specview.php:	// BUGID 3026 - added $testcaseFilter
lib/functions/specview.php:	// 20100722 - asimon - additional check here because of warning from array_combine when $testCaseSet is null 
lib/functions/specview.php:	$filters = array('keywords' => $argsObj->keyword_id, 'testcases' => $testCaseSet);
lib/functions/specview.php:	$out = gen_spec_view($dbHandler, 'testplan', $argsObj->tplan_id, $argsObj->id, $tsuite_data['name'],
lib/functions/specview.php: * 20100417 - franciscom - BUGID 2498 - added logic to filter by importance (defined on test case spec)
lib/functions/specview.php: * 20100411 - franciscom - added logic to filter by execution type
lib/functions/specview.php:	$test_spec = $tobj_mgr->get_subtree($nodeId);
lib/functions/specview.php:	// 20100411 - BUGID 2797 - filter by test case execution type
lib/functions/specview.php:		$tck_map = $tobj_mgr->get_keywords_tcases($masterContainerId,$filters['keyword_id']);
lib/functions/specview.php:			$tcversionSet = $tcaseMgr->get_last_active_version($targetSet,$options);
lib/functions/specview.php:					// $allowedSet = $tcaseMgr->filter_tcversions_by_exec_type($tcvidSet,$filters['exec_type'],$options);
lib/functions/specview.php:					$allowedSet = $tcaseMgr->filter_tcversions_by_exec_type($tcvidSet,$filters,$options);
lib/functions/specview.php:		// - do not contain other test suites    OR
lib/functions/specview.php:		// - do not contain test cases
lib/functions/specview.php:				$treeMgr->get_subtree_list($tsuite_id,$nodeTypes['testsuite']);  
lib/functions/specview.php: *	20100119 - franciscom - start fixing missing platform refactoring
lib/functions/specview.php:								$cf_map = $tcaseMgr->html_table_of_custom_field_inputs($linked_version_id,null,'testplan_design',
lib/functions/specview.php:  	$parent_idx=-1;
lib/functions/specview.php:	$parent_idx=-1;
lib/functions/specview.php:				// 20080811 - franciscom - BUGID 1650 (REQ)
lib/functions/specview.php: *  20100726 - asimon - BUGID 3628
lib/functions/specview.php:	$pivot_id=-1;
lib/functions/specview.php:					// 20090625 - Eloff
lib/functions/specview.php:					// 20100726 - BUGID 3628 - asimon - missing [0] in condition 
lib/functions/specview.php:        $platforms = $platform_mgr->getAll();
lib/functions/specview.php:        $platforms = $platform_mgr->getLinkedToTestplan($testplan_id);
lib/functions/tlTestCaseFilterControl.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/tlTestCaseFilterControl.class.php: * @copyright  2006-2010, TestLink community
lib/functions/tlTestCaseFilterControl.class.php: * This class is used from different navigator-frames (left frames with a test case tree in it)
lib/functions/tlTestCaseFilterControl.class.php: * - planTCNavigator.php/tpl use it in "plan_mode" for these features:
lib/functions/tlTestCaseFilterControl.class.php: *    --> assign test case execution
lib/functions/tlTestCaseFilterControl.class.php: *    --> update linked test case versions
lib/functions/tlTestCaseFilterControl.class.php: *    --> set urgent tests
lib/functions/tlTestCaseFilterControl.class.php: * - execNavigator.php/tpl in "execution_mode" 
lib/functions/tlTestCaseFilterControl.class.php: *    --> test execution
lib/functions/tlTestCaseFilterControl.class.php: * - planAddTCNavigator.php/tpl in "plan_add_mode"
lib/functions/tlTestCaseFilterControl.class.php: *    --> add/remove test cases
lib/functions/tlTestCaseFilterControl.class.php: * - listTestCases.php/tcTree.tpl in "edit_mode"
lib/functions/tlTestCaseFilterControl.class.php: *    --> edit test specification
lib/functions/tlTestCaseFilterControl.class.php: *    --> assign keywords
lib/functions/tlTestCaseFilterControl.class.php: *    --> assign requirements
lib/functions/tlTestCaseFilterControl.class.php: * 20100830 - asimon - BUGID 3726: store user's selection of build and platform
lib/functions/tlTestCaseFilterControl.class.php: * 20100811 - asimon - BUGID 3566: show/hide CF
lib/functions/tlTestCaseFilterControl.class.php: * 20100810 - asimon - added TC ID filter for Test Cases
lib/functions/tlTestCaseFilterControl.class.php: * 20100807 - franciscom - BUGID 3660
lib/functions/tlTestCaseFilterControl.class.php: * 20100727 - asimon - BUGID 3630 - syntax error in get_argument_string()
lib/functions/tlTestCaseFilterControl.class.php: * 20100716 - asimon - BUGID 3406 - changes on init_settings() and $mode_setting_mapping
lib/functions/tlTestCaseFilterControl.class.php: * 20100713 - asimon - fixed Drag&Drop error caused by init_filter_custom_fields()
lib/functions/tlTestCaseFilterControl.class.php: * 20100702 - asimon - fixed error in init_setting_testplan()
lib/functions/tlTestCaseFilterControl.class.php: * 20100701 - asimon - BUGID 3414 - additional work in init_filter_custom_fields()
lib/functions/tlTestCaseFilterControl.class.php: * 20100628 - asimon - removal of constants
lib/functions/tlTestCaseFilterControl.class.php: * 20100624 - asimon - CVS merge (experimental branch to HEAD)
lib/functions/tlTestCaseFilterControl.class.php: * 20100503 - asimon - start of implementation of filter panel class hierarchy
lib/functions/tlTestCaseFilterControl.class.php: * --------------------------------------------------------
lib/functions/tlTestCaseFilterControl.class.php: * An important note on BUGID 3516 (request-URL too large):
lib/functions/tlTestCaseFilterControl.class.php: * --------------------------------------------------------
lib/functions/tlTestCaseFilterControl.class.php: * no token has been sent to it - so it generates a new one.
lib/functions/tlTestCaseFilterControl.class.php: * ------------------------------------------------------------------------------------------------
lib/functions/tlTestCaseFilterControl.class.php:	 * input fetching functions in init_args()-method.
lib/functions/tlTestCaseFilterControl.class.php:		$this->mode = array_key_exists($mode,$this->mode_filter_mapping) ? $mode : 'edit_mode';
lib/functions/tlTestCaseFilterControl.class.php:		$this->delete_own_session_data();
lib/functions/tlTestCaseFilterControl.class.php:		$this->delete_old_session_data();
lib/functions/tlTestCaseFilterControl.class.php:		$this->save_session_data();
lib/functions/tlTestCaseFilterControl.class.php:		unset($this->tc_mgr);
lib/functions/tlTestCaseFilterControl.class.php:		unset($this->testplan_mgr);
lib/functions/tlTestCaseFilterControl.class.php:		unset($this->platform_mgr);
lib/functions/tlTestCaseFilterControl.class.php:		unset($this->exec_cf_mgr);
lib/functions/tlTestCaseFilterControl.class.php:		$this->configuration = config_get('tree_filter_cfg')->testcases->{$this->mode};
lib/functions/tlTestCaseFilterControl.class.php:		// load also exec config - it is not only needed in exec mode
lib/functions/tlTestCaseFilterControl.class.php:		$this->configuration->exec_cfg = config_get('exec_cfg');
lib/functions/tlTestCaseFilterControl.class.php:		$this->configuration->tc_cfg = config_get('testcase_cfg');
lib/functions/tlTestCaseFilterControl.class.php:    	if (isset($this->configuration->advanced_filter_mode_choice)
lib/functions/tlTestCaseFilterControl.class.php:    	&& $this->configuration->advanced_filter_mode_choice == ENABLED) {
lib/functions/tlTestCaseFilterControl.class.php:    		$this->filter_mode_choice_enabled = true;
lib/functions/tlTestCaseFilterControl.class.php:    		$this->filter_mode_choice_enabled = false;
lib/functions/tlTestCaseFilterControl.class.php:		foreach ($this->all_settings as $name => $info) {
lib/functions/tlTestCaseFilterControl.class.php:		foreach ($this->all_filters as $name => $info) {
lib/functions/tlTestCaseFilterControl.class.php:		I_PARAMS($params, $this->args);
lib/functions/tlTestCaseFilterControl.class.php:		$this->args->{$type} = (isset($_REQUEST[$type])) ? trim($_REQUEST[$type]) : 'Or';
lib/functions/tlTestCaseFilterControl.class.php:			$this->args->{$ek} = (isset($_REQUEST[$ek])) ? $_REQUEST[$ek] : null;
lib/functions/tlTestCaseFilterControl.class.php:		$this->args->{'filter_assigned_user_include_unassigned'} = 
lib/functions/tlTestCaseFilterControl.class.php:		$this->args->form_token = null;
lib/functions/tlTestCaseFilterControl.class.php:		if (!is_null($sent_token) && isset($_SESSION[$this->mode][$sent_token])) {
lib/functions/tlTestCaseFilterControl.class.php:			$this->form_token = $sent_token;
lib/functions/tlTestCaseFilterControl.class.php:			$this->args->form_token = $sent_token;
lib/functions/tlTestCaseFilterControl.class.php:			$this->generate_form_token();
lib/functions/tlTestCaseFilterControl.class.php:		$this->args->feature = isset($_REQUEST['feature']) ? trim($_REQUEST['feature']) : null;
lib/functions/tlTestCaseFilterControl.class.php:		switch ($this->mode) {
lib/functions/tlTestCaseFilterControl.class.php:				switch($this->args->feature) {
lib/functions/tlTestCaseFilterControl.class.php:				switch($this->args->feature) {
lib/functions/tlTestCaseFilterControl.class.php:	 * Iterates through all available settings and adds an array to $this->settings
lib/functions/tlTestCaseFilterControl.class.php:		foreach ($this->all_settings as $name => $info) {
lib/functions/tlTestCaseFilterControl.class.php:			if (in_array($name, $this->mode_setting_mapping[$this->mode])
lib/functions/tlTestCaseFilterControl.class.php:				$this->$init_method();
lib/functions/tlTestCaseFilterControl.class.php:				$this->settings[$name] = false;
lib/functions/tlTestCaseFilterControl.class.php:		if ($this->mode == 'plan_mode' && $this->args->feature != 'tc_exec_assignment') {
lib/functions/tlTestCaseFilterControl.class.php:			$this->settings['setting_build'] = false;
lib/functions/tlTestCaseFilterControl.class.php:			$this->display_settings = true;
lib/functions/tlTestCaseFilterControl.class.php:			$this->active_filters[$filtername] = null;
lib/functions/tlTestCaseFilterControl.class.php:		$this->display_filters = false;
lib/functions/tlTestCaseFilterControl.class.php:		foreach ($this->all_filters as $name => $info) {
lib/functions/tlTestCaseFilterControl.class.php:			if (in_array($name, $this->mode_filter_mapping[$this->mode]) && 
lib/functions/tlTestCaseFilterControl.class.php:				method_exists($this, $init_method) && $this->configuration->{$name} == ENABLED) {
lib/functions/tlTestCaseFilterControl.class.php:				$this->$init_method();
lib/functions/tlTestCaseFilterControl.class.php:				$this->display_filters = true;
lib/functions/tlTestCaseFilterControl.class.php:				$this->filters[$name] = false;
lib/functions/tlTestCaseFilterControl.class.php:				$this->active_filters[$name] = null;
lib/functions/tlTestCaseFilterControl.class.php:		foreach ($this->all_settings as $name => $info) {
lib/functions/tlTestCaseFilterControl.class.php:			if ($this->settings[$name]) {
lib/functions/tlTestCaseFilterControl.class.php:				$this->active_filters[$name] = $this->settings[$name]['selected'];
lib/functions/tlTestCaseFilterControl.class.php:				$this->active_filters[$name] = null;
lib/functions/tlTestCaseFilterControl.class.php:			switch ($this->mode) {
lib/functions/tlTestCaseFilterControl.class.php:					$value = (object) $this->active_filters;
lib/functions/tlTestCaseFilterControl.class.php:					// otherwise simply return the array as-is
lib/functions/tlTestCaseFilterControl.class.php:					$value = $this->active_filters;
lib/functions/tlTestCaseFilterControl.class.php:			$this->active_filters['testcases_to_show'] = $testcases_to_show;
lib/functions/tlTestCaseFilterControl.class.php:		$this->save_session_data();
lib/functions/tlTestCaseFilterControl.class.php:		if (!isset($_SESSION[$this->mode]) || is_null($_SESSION[$this->mode]) || !is_array($_SESSION[$this->mode])) {
lib/functions/tlTestCaseFilterControl.class.php:			$_SESSION[$this->mode] = array();
lib/functions/tlTestCaseFilterControl.class.php:		$_SESSION[$this->mode][$this->form_token] = $this->active_filters;
lib/functions/tlTestCaseFilterControl.class.php:		$_SESSION[$this->mode][$this->form_token]['timestamp'] = time();
lib/functions/tlTestCaseFilterControl.class.php:		if (isset($_SESSION[$this->mode]) && is_array($_SESSION[$this->mode])) {
lib/functions/tlTestCaseFilterControl.class.php:			foreach ($_SESSION[$this->mode] as $token => $data) {
lib/functions/tlTestCaseFilterControl.class.php:				if ($data['timestamp'] < (time() - $token_validity_duration)) {
lib/functions/tlTestCaseFilterControl.class.php:					unset($_SESSION[$this->mode][$token]);
lib/functions/tlTestCaseFilterControl.class.php:		if (isset($_SESSION[$this->mode]) && isset($_SESSION[$this->mode][$this->form_token])) {
lib/functions/tlTestCaseFilterControl.class.php:			unset($_SESSION[$this->mode][$this->form_token]);
lib/functions/tlTestCaseFilterControl.class.php:	 * between left navigator-frame with its settings and right frame.
lib/functions/tlTestCaseFilterControl.class.php:		} while (isset($_SESSION[$this->mode][$token]));
lib/functions/tlTestCaseFilterControl.class.php:		$this->form_token = $token;
lib/functions/tlTestCaseFilterControl.class.php:	 * Active filters will be formatted as a GET-argument string.
lib/functions/tlTestCaseFilterControl.class.php:			$string .= '&form_token=' . $this->form_token;
lib/functions/tlTestCaseFilterControl.class.php:			if ($this->settings['setting_build']) {
lib/functions/tlTestCaseFilterControl.class.php:				           $this->settings['setting_build']['selected'];
lib/functions/tlTestCaseFilterControl.class.php:			if ($this->settings['setting_platform']) {
lib/functions/tlTestCaseFilterControl.class.php:				           $this->settings['setting_platform']['selected'];
lib/functions/tlTestCaseFilterControl.class.php:			if (is_array($this->active_filters['filter_keywords'])) {
lib/functions/tlTestCaseFilterControl.class.php:				$keyword_list = implode(',', $this->active_filters['filter_keywords']);
lib/functions/tlTestCaseFilterControl.class.php:			} else if ($this->active_filters['filter_keywords']) {
lib/functions/tlTestCaseFilterControl.class.php:				$keyword_list = $this->active_filters['filter_keywords'];
lib/functions/tlTestCaseFilterControl.class.php:				           $this->active_filters['filter_keywords_filter_type'];
lib/functions/tlTestCaseFilterControl.class.php:			if ($this->active_filters['filter_priority'] > 0) {
lib/functions/tlTestCaseFilterControl.class.php:				$string .= '&filter_priority=' . $this->active_filters['filter_priority'];
lib/functions/tlTestCaseFilterControl.class.php:			if ($this->active_filters['filter_assigned_user']) {
lib/functions/tlTestCaseFilterControl.class.php:				$unassigned = $this->active_filters['filter_assigned_user_include_unassigned'] ? '1' : '0';
lib/functions/tlTestCaseFilterControl.class.php:				           serialize($this->active_filters['filter_assigned_user']) .
lib/functions/tlTestCaseFilterControl.class.php:			if ($this->active_filters['filter_result_result']) {
lib/functions/tlTestCaseFilterControl.class.php:				           serialize($this->active_filters['filter_result_result']) .
lib/functions/tlTestCaseFilterControl.class.php:				           $this->active_filters['filter_result_method'] .
lib/functions/tlTestCaseFilterControl.class.php:				           $this->active_filters['filter_result_build'];
lib/functions/tlTestCaseFilterControl.class.php:	 * No return value - all variables will be stored in gui object
lib/functions/tlTestCaseFilterControl.class.php:		$filters = $this->get_active_filters();
lib/functions/tlTestCaseFilterControl.class.php:		$drag_and_drop->enabled = false;
lib/functions/tlTestCaseFilterControl.class.php:		$drag_and_drop->BackEndUrl = '';
lib/functions/tlTestCaseFilterControl.class.php:		$drag_and_drop->useBeforeMoveNode = FALSE;
lib/functions/tlTestCaseFilterControl.class.php:		if (!$this->testproject_mgr) {
lib/functions/tlTestCaseFilterControl.class.php:			$this->testproject_mgr = new testproject($this->db);
lib/functions/tlTestCaseFilterControl.class.php:		$tc_prefix = $this->testproject_mgr->getTestCasePrefix($this->args->testproject_id);
lib/functions/tlTestCaseFilterControl.class.php:		switch ($this->mode) {
lib/functions/tlTestCaseFilterControl.class.php:				$additional_info->useCounters = CREATE_TC_STATUS_COUNTERS_OFF;
lib/functions/tlTestCaseFilterControl.class.php:				$additional_info->useColours = COLOR_BY_TC_STATUS_OFF;
lib/functions/tlTestCaseFilterControl.class.php:				$additional_info->testcases_colouring_by_selected_build = DISABLED;
lib/functions/tlTestCaseFilterControl.class.php:				$filters->show_testsuite_contents = 1;
lib/functions/tlTestCaseFilterControl.class.php:				$filters->hide_testcases = 0;
lib/functions/tlTestCaseFilterControl.class.php:				if ($this->args->feature == 'test_urgency') {
lib/functions/tlTestCaseFilterControl.class.php:					$filters->hide_testcases = 1;
lib/functions/tlTestCaseFilterControl.class.php:				list($tree_menu, $testcases_to_show) = generateExecTree($this->db,
lib/functions/tlTestCaseFilterControl.class.php:		                                                       $gui->menuUrl,
lib/functions/tlTestCaseFilterControl.class.php:		                                                       $this->args->testproject_id,
lib/functions/tlTestCaseFilterControl.class.php:		                                                       $this->args->testproject_name,
lib/functions/tlTestCaseFilterControl.class.php:		                                                       $this->args->testplan_id,
lib/functions/tlTestCaseFilterControl.class.php:		                                                       $this->args->testplan_name,
lib/functions/tlTestCaseFilterControl.class.php:				$this->set_testcases_to_show($testcases_to_show);
lib/functions/tlTestCaseFilterControl.class.php:				$root_node = $tree_menu->rootnode;
lib/functions/tlTestCaseFilterControl.class.php:				$children = $tree_menu->menustring ? $tree_menu->menustring : "[]";
lib/functions/tlTestCaseFilterControl.class.php:				$cookie_prefix = $this->args->feature;
lib/functions/tlTestCaseFilterControl.class.php:				if ($gui->tree_drag_and_drop_enabled[$this->args->feature]) {
lib/functions/tlTestCaseFilterControl.class.php:					$drag_and_drop->enabled = true;
lib/functions/tlTestCaseFilterControl.class.php:					$drag_and_drop->BackEndUrl = $this->args->basehref . 
lib/functions/tlTestCaseFilterControl.class.php:					$drag_and_drop->useBeforeMoveNode = false;
lib/functions/tlTestCaseFilterControl.class.php:				if ($this->do_filtering) {
lib/functions/tlTestCaseFilterControl.class.php:					$tree_menu = generateTestSpecTree($this->db, $this->args->testproject_id,
lib/functions/tlTestCaseFilterControl.class.php:					                                  $this->args->testproject_name,
lib/functions/tlTestCaseFilterControl.class.php:					                                  $gui->menuUrl, $filters, $options);
lib/functions/tlTestCaseFilterControl.class.php:					$root_node = $tree_menu->rootnode;
lib/functions/tlTestCaseFilterControl.class.php:					$children = $tree_menu->menustring ? $tree_menu->menustring : "[]";
lib/functions/tlTestCaseFilterControl.class.php:					$cookie_prefix = $this->args->feature;
lib/functions/tlTestCaseFilterControl.class.php:					$loader = $this->args->basehref . 'lib/ajax/gettprojectnodes.php?' .
lib/functions/tlTestCaseFilterControl.class.php:					          "root_node={$this->args->testproject_id}&" .
lib/functions/tlTestCaseFilterControl.class.php:					          $this->configuration->tc_cfg->glue_character);
lib/functions/tlTestCaseFilterControl.class.php:					$tcase_qty = $this->testproject_mgr->count_testcases($this->args->testproject_id);
lib/functions/tlTestCaseFilterControl.class.php:					$root_node->href = "javascript:EP({$this->args->testproject_id})";
lib/functions/tlTestCaseFilterControl.class.php:					$root_node->id = $this->args->testproject_id;
lib/functions/tlTestCaseFilterControl.class.php:					$root_node->name = $this->args->testproject_name . " ($tcase_qty)";
lib/functions/tlTestCaseFilterControl.class.php:					$root_node->testlink_node_type='testproject';
lib/functions/tlTestCaseFilterControl.class.php:					$cookie_prefix = 'tproject_' . $root_node->id . "_";
lib/functions/tlTestCaseFilterControl.class.php:				$cookie_prefix = "planaddtc_{$this->args->testproject_id}_{$this->args->user_id}_";
lib/functions/tlTestCaseFilterControl.class.php:				if ($this->do_filtering) {
lib/functions/tlTestCaseFilterControl.class.php:					$tree_menu = generateTestSpecTree($this->db,
lib/functions/tlTestCaseFilterControl.class.php:					                                  $this->args->testproject_id,
lib/functions/tlTestCaseFilterControl.class.php:					                                  $this->args->testproject_name,
lib/functions/tlTestCaseFilterControl.class.php:					                                  $gui->menuUrl,
lib/functions/tlTestCaseFilterControl.class.php:					$root_node = $tree_menu->rootnode;
lib/functions/tlTestCaseFilterControl.class.php:				    $children = $tree_menu->menustring ? $tree_menu->menustring : "[]";
lib/functions/tlTestCaseFilterControl.class.php:					$loader = $this->args->basehref . 'lib/ajax/gettprojectnodes.php?' .
lib/functions/tlTestCaseFilterControl.class.php:					                    "root_node={$this->args->testproject_id}&show_tcases=0";
lib/functions/tlTestCaseFilterControl.class.php:					$root_node->href = "javascript:EP({$this->args->testproject_id})";
lib/functions/tlTestCaseFilterControl.class.php:					$root_node->id = $this->args->testproject_id;
lib/functions/tlTestCaseFilterControl.class.php:					$root_node->name = $this->args->testproject_name;
lib/functions/tlTestCaseFilterControl.class.php:					$root_node->testlink_node_type = 'testproject';
lib/functions/tlTestCaseFilterControl.class.php:				$filters->hide_testcases = false;
lib/functions/tlTestCaseFilterControl.class.php:				$filters->show_testsuite_contents = $this->configuration->exec_cfg->show_testsuite_contents;
lib/functions/tlTestCaseFilterControl.class.php:				$additional_info->useCounters = $this->configuration->exec_cfg->enable_tree_testcase_counters;
lib/functions/tlTestCaseFilterControl.class.php:				$additional_info->useColours = new stdClass();
lib/functions/tlTestCaseFilterControl.class.php:				$additional_info->useColours->testcases = 
lib/functions/tlTestCaseFilterControl.class.php:					$this->configuration->exec_cfg->enable_tree_testcases_colouring;
lib/functions/tlTestCaseFilterControl.class.php:				$additional_info->useColours->counters = 
lib/functions/tlTestCaseFilterControl.class.php:					$this->configuration->exec_cfg->enable_tree_counters_colouring;
lib/functions/tlTestCaseFilterControl.class.php:				$additional_info->testcases_colouring_by_selected_build =
lib/functions/tlTestCaseFilterControl.class.php:					$this->configuration->exec_cfg->testcases_colouring_by_selected_build; 
lib/functions/tlTestCaseFilterControl.class.php:				list($tree_menu, $testcases_to_show) = generateExecTree($this->db,
lib/functions/tlTestCaseFilterControl.class.php:				                                                        $gui->menuUrl,
lib/functions/tlTestCaseFilterControl.class.php:				                                                        $this->args->testproject_id,
lib/functions/tlTestCaseFilterControl.class.php:				                                                        $this->args->testproject_name,
lib/functions/tlTestCaseFilterControl.class.php:				                                                        $this->args->testplan_id,
lib/functions/tlTestCaseFilterControl.class.php:				                                                        $this->args->testplan_name,
lib/functions/tlTestCaseFilterControl.class.php:				$this->set_testcases_to_show($testcases_to_show);
lib/functions/tlTestCaseFilterControl.class.php:				$root_node = $tree_menu->rootnode;
lib/functions/tlTestCaseFilterControl.class.php:				$children = $tree_menu->menustring ? $tree_menu->menustring : "[]";
lib/functions/tlTestCaseFilterControl.class.php:				$cookie_prefix = 'exec_tplan_id_' . $this->args->testplan_id;
lib/functions/tlTestCaseFilterControl.class.php:		$gui->tree = $tree_menu;
lib/functions/tlTestCaseFilterControl.class.php:		$gui->ajaxTree = new stdClass();
lib/functions/tlTestCaseFilterControl.class.php:		$gui->ajaxTree->loader = $loader;
lib/functions/tlTestCaseFilterControl.class.php:		$gui->ajaxTree->root_node = $root_node;
lib/functions/tlTestCaseFilterControl.class.php:		$gui->ajaxTree->children = $children;
lib/functions/tlTestCaseFilterControl.class.php:		$gui->ajaxTree->cookiePrefix = $cookie_prefix;
lib/functions/tlTestCaseFilterControl.class.php:		$gui->ajaxTree->dragDrop = $drag_and_drop;
lib/functions/tlTestCaseFilterControl.class.php:		$this->settings[$key] = array();
lib/functions/tlTestCaseFilterControl.class.php:		$this->settings[$key][$hidden_key] = false;
lib/functions/tlTestCaseFilterControl.class.php:		// look where we can find the setting - POST, SESSION, config?
lib/functions/tlTestCaseFilterControl.class.php:		if (isset($this->args->{$key})) {
lib/functions/tlTestCaseFilterControl.class.php:		} else if (isset($this->args->{$hidden_key})) {
lib/functions/tlTestCaseFilterControl.class.php:			$selection = ($spec_cfg->automatic_tree_refresh > 0) ? 1 : 0;
lib/functions/tlTestCaseFilterControl.class.php:		$this->settings[$key]['selected'] = $selection;
lib/functions/tlTestCaseFilterControl.class.php:		$this->settings[$key][$hidden_key] = $selection;
lib/functions/tlTestCaseFilterControl.class.php:		if (is_null($this->testplan_mgr)) {
lib/functions/tlTestCaseFilterControl.class.php:			$this->testplan_mgr = new testplan($this->db);
lib/functions/tlTestCaseFilterControl.class.php:		$tplan_id = $this->settings['setting_testplan']['selected'];
lib/functions/tlTestCaseFilterControl.class.php:		$active = ($this->mode == 'plan_mode') ? null : testplan::GET_ACTIVE_BUILD;
lib/functions/tlTestCaseFilterControl.class.php:		$open = ($this->mode == 'plan_mode') ? null : testplan::GET_OPEN_BUILD;
lib/functions/tlTestCaseFilterControl.class.php:		$this->settings[$key]['items'] = $this->testplan_mgr->get_builds_for_html_options($tplan_id, $active, $open);
lib/functions/tlTestCaseFilterControl.class.php:		$tplan_builds = array_keys($this->settings[$key]['items']);
lib/functions/tlTestCaseFilterControl.class.php:		// BUGID 3406 - depending on mode, we need different labels for this selector on GUI
lib/functions/tlTestCaseFilterControl.class.php:		$label = ($this->mode == 'plan_mode') ? 'assign_build' : 'exec_build';
lib/functions/tlTestCaseFilterControl.class.php:		$this->settings[$key]['label'] = lang_get($label);
lib/functions/tlTestCaseFilterControl.class.php:		$newest_build_id = $this->testplan_mgr->get_max_build_id($tplan_id, $active, $open);
lib/functions/tlTestCaseFilterControl.class.php:		$this->args->{$key} = $this->args->{$key} > 0 ? $this->args->{$key} : $session_selection;
lib/functions/tlTestCaseFilterControl.class.php:		if (!$this->args->{$key}) {
lib/functions/tlTestCaseFilterControl.class.php:			$this->args->{$key} = $newest_build_id;
lib/functions/tlTestCaseFilterControl.class.php:		$this->settings[$key]['selected'] = (in_array($this->args->{$key}, $tplan_builds)) ? 
lib/functions/tlTestCaseFilterControl.class.php:		                                    $this->args->{$key} : $newest_build_id;
lib/functions/tlTestCaseFilterControl.class.php:		if (!$this->settings[$key]['selected'] && sizeof($this->settings[$key]['items'])) {
lib/functions/tlTestCaseFilterControl.class.php:			$this->settings[$key]['selected'] = end($tplan_builds);
lib/functions/tlTestCaseFilterControl.class.php:		$_SESSION[$session_key] = $this->settings[$key]['selected'];
lib/functions/tlTestCaseFilterControl.class.php:		if (is_null($this->testplan_mgr)) {
lib/functions/tlTestCaseFilterControl.class.php:			$this->testplan_mgr = new testplan($this->db);
lib/functions/tlTestCaseFilterControl.class.php:		$testplans = $this->user->getAccessibleTestPlans($this->db, $this->args->testproject_id);
lib/functions/tlTestCaseFilterControl.class.php:		if (isset($_SESSION['testplanID']) && $_SESSION['testplanID'] != $this->args->{$key}) {
lib/functions/tlTestCaseFilterControl.class.php:			// --> they were chosen for another testplan, not this one!
lib/functions/tlTestCaseFilterControl.class.php:			$this->args->reset_filters = true;
lib/functions/tlTestCaseFilterControl.class.php:				if ($plan['id'] == $this->args->{$key}) {
lib/functions/tlTestCaseFilterControl.class.php:		$info = $this->testplan_mgr->get_by_id($_SESSION['testplanID']);
lib/functions/tlTestCaseFilterControl.class.php:		$this->args->testplan_name = $info['name'];
lib/functions/tlTestCaseFilterControl.class.php:		$this->args->testplan_id = $info['id'];
lib/functions/tlTestCaseFilterControl.class.php:		$this->args->{$key} = $info['id'];
lib/functions/tlTestCaseFilterControl.class.php:		$this->settings[$key]['selected'] = $info['id'];
lib/functions/tlTestCaseFilterControl.class.php:			$add_plan = $this->mode == 'plan_add_mode';
lib/functions/tlTestCaseFilterControl.class.php:				$builds = $this->testplan_mgr->get_builds($plan['id'],
lib/functions/tlTestCaseFilterControl.class.php:				$this->settings[$key]['items'][$plan['id']] = $plan['name'];
lib/functions/tlTestCaseFilterControl.class.php:		if (!$this->platform_mgr) {
lib/functions/tlTestCaseFilterControl.class.php:			$this->platform_mgr = new tlPlatform($this->db);
lib/functions/tlTestCaseFilterControl.class.php:		$this->settings[$key] = array('items' => null, 'selected' => $this->args->{$key});
lib/functions/tlTestCaseFilterControl.class.php:		$testplan_id = $this->settings['setting_testplan']['selected'];
lib/functions/tlTestCaseFilterControl.class.php:		$this->settings[$key]['items'] = $this->platform_mgr->getLinkedToTestplanAsMap($testplan_id);
lib/functions/tlTestCaseFilterControl.class.php:		if (!$this->settings[$key]['selected']) {
lib/functions/tlTestCaseFilterControl.class.php:			$this->settings[$key]['selected'] = $session_selection;
lib/functions/tlTestCaseFilterControl.class.php:		if (!isset($this->settings[$key]['items']) || !is_array($this->settings[$key]['items'])) {
lib/functions/tlTestCaseFilterControl.class.php:			$this->settings[$key] = false;
lib/functions/tlTestCaseFilterControl.class.php:		} else if (isset($this->settings[$key]['items']) && is_array($this->settings[$key]['items']) && 
lib/functions/tlTestCaseFilterControl.class.php:				   is_null($this->settings[$key]['selected'])) {
lib/functions/tlTestCaseFilterControl.class.php:			$this->settings[$key]['selected'] =	key($this->settings[$key]['items']);
lib/functions/tlTestCaseFilterControl.class.php:		$_SESSION[$session_key] = $this->settings[$key]['selected'];
lib/functions/tlTestCaseFilterControl.class.php:		$selection = $this->args->{$key};
lib/functions/tlTestCaseFilterControl.class.php:		if (!$this->testproject_mgr) {
lib/functions/tlTestCaseFilterControl.class.php:			$this->testproject_mgr = new testproject($this->db);
lib/functions/tlTestCaseFilterControl.class.php:		if (!$this->tc_mgr) {
lib/functions/tlTestCaseFilterControl.class.php:			$this->tc_mgr = new testcase($this->db);
lib/functions/tlTestCaseFilterControl.class.php:		$tc_prefix = $this->testproject_mgr->getTestCasePrefix($this->args->testproject_id);
lib/functions/tlTestCaseFilterControl.class.php:		$tc_prefix .= $this->configuration->tc_cfg->glue_character;
lib/functions/tlTestCaseFilterControl.class.php:		if (!$selection || $selection == $tc_prefix || $this->args->reset_filters) {
lib/functions/tlTestCaseFilterControl.class.php:			$this->do_filtering = true;
lib/functions/tlTestCaseFilterControl.class.php:			$internal_id = $this->tc_mgr->getInternalID($selection);
lib/functions/tlTestCaseFilterControl.class.php:		$this->filters[$key] = array('selected' => $selection ? $selection : $tc_prefix);
lib/functions/tlTestCaseFilterControl.class.php:		$this->active_filters[$key] = $internal_id;
lib/functions/tlTestCaseFilterControl.class.php:		$selection = $this->args->{$key};
lib/functions/tlTestCaseFilterControl.class.php:		if (!$selection || $this->args->reset_filters) {
lib/functions/tlTestCaseFilterControl.class.php:			$this->do_filtering = true;
lib/functions/tlTestCaseFilterControl.class.php:		$this->filters[$key] = array('selected' => $selection);
lib/functions/tlTestCaseFilterControl.class.php:		$this->active_filters[$key] = $selection;
lib/functions/tlTestCaseFilterControl.class.php:		if (!$this->testproject_mgr) {
lib/functions/tlTestCaseFilterControl.class.php:			$this->testproject_mgr = new testproject($this->db);
lib/functions/tlTestCaseFilterControl.class.php:		$first_level_suites = $this->testproject_mgr->get_first_level_test_suites($this->args->testproject_id,
lib/functions/tlTestCaseFilterControl.class.php:		$selection = $this->args->{$key};
lib/functions/tlTestCaseFilterControl.class.php:		if (!$selection || $this->args->reset_filters) {
lib/functions/tlTestCaseFilterControl.class.php:			$this->do_filtering = true;
lib/functions/tlTestCaseFilterControl.class.php:		$this->filters[$key] = null; // BUGID 3660
lib/functions/tlTestCaseFilterControl.class.php:			$this->filters[$key] = array('items' => array(0 => ''),
lib/functions/tlTestCaseFilterControl.class.php:				$this->filters[$key]['items'][$suite_id] = $suite_name;
lib/functions/tlTestCaseFilterControl.class.php:					$this->filters[$key]['exclude_branches'][$suite_id] = 'exclude_me';
lib/functions/tlTestCaseFilterControl.class.php:			$this->active_filters[$key] = $this->filters[$key]['exclude_branches'];
lib/functions/tlTestCaseFilterControl.class.php:			$this->active_filters[$key] = null;
lib/functions/tlTestCaseFilterControl.class.php:		$this->filters[$key] = false;
lib/functions/tlTestCaseFilterControl.class.php:		switch ($this->mode) {
lib/functions/tlTestCaseFilterControl.class.php:				if (!$this->testproject_mgr) {
lib/functions/tlTestCaseFilterControl.class.php:					$this->testproject_mgr = new testproject($this->db);
lib/functions/tlTestCaseFilterControl.class.php:				$keywords = $this->testproject_mgr->get_keywords_map($this->args->testproject_id);
lib/functions/tlTestCaseFilterControl.class.php:				if (!$this->testplan_mgr) {
lib/functions/tlTestCaseFilterControl.class.php:					$this->testplan_mgr = new testplan($this->db);
lib/functions/tlTestCaseFilterControl.class.php:				$tplan_id = $this->settings['setting_testplan']['selected'];
lib/functions/tlTestCaseFilterControl.class.php:				$keywords = $this->testplan_mgr->get_keywords_map($tplan_id, ' ORDER BY keyword ');
lib/functions/tlTestCaseFilterControl.class.php:		$selection = $this->args->{$key};
lib/functions/tlTestCaseFilterControl.class.php:		$type_selection = $this->args->{$type};
lib/functions/tlTestCaseFilterControl.class.php:			$this->filters[$key] = array();
lib/functions/tlTestCaseFilterControl.class.php:			if (!$selection || !$type_selection || $this->args->reset_filters) {
lib/functions/tlTestCaseFilterControl.class.php:				$this->do_filtering = true;
lib/functions/tlTestCaseFilterControl.class.php:			$this->filters[$key]['items'] = array($this->option_strings['any']) + $keywords;
lib/functions/tlTestCaseFilterControl.class.php:			$this->filters[$key]['selected'] = $selection;
lib/functions/tlTestCaseFilterControl.class.php:			$this->filters[$key]['size'] = min(count($this->filters[$key]['items']),
lib/functions/tlTestCaseFilterControl.class.php:			$this->filters[$key][$type] = array();
lib/functions/tlTestCaseFilterControl.class.php:			$this->filters[$key][$type]['items'] = array('Or' => lang_get('logical_or'),
lib/functions/tlTestCaseFilterControl.class.php:			$this->filters[$key][$type]['selected'] = $type_selection;
lib/functions/tlTestCaseFilterControl.class.php:		// delete keyword filter if "any" (0) is part of the selection - regardless of filter mode
lib/functions/tlTestCaseFilterControl.class.php:		if (is_array($this->filters[$key]['selected'])
lib/functions/tlTestCaseFilterControl.class.php:		&& in_array(0, $this->filters[$key]['selected'])) {
lib/functions/tlTestCaseFilterControl.class.php:			$this->active_filters[$key] = null;
lib/functions/tlTestCaseFilterControl.class.php:			$this->active_filters[$key] = $this->filters[$key]['selected'];
lib/functions/tlTestCaseFilterControl.class.php:		$this->active_filters[$type] = $selection ? $type_selection : null;
lib/functions/tlTestCaseFilterControl.class.php:		$selection = $this->args->{$key};
lib/functions/tlTestCaseFilterControl.class.php:		if (!$selection || $this->args->reset_filters) {
lib/functions/tlTestCaseFilterControl.class.php:			$this->do_filtering = true;
lib/functions/tlTestCaseFilterControl.class.php:		$this->filters[$key] = array('selected' => $selection);
lib/functions/tlTestCaseFilterControl.class.php:		$this->active_filters[$key] = $selection;
lib/functions/tlTestCaseFilterControl.class.php:		if (!$this->tc_mgr) {
lib/functions/tlTestCaseFilterControl.class.php:			$this->tc_mgr = new testcase($this->db);
lib/functions/tlTestCaseFilterControl.class.php:		$selection = $this->args->{$key};
lib/functions/tlTestCaseFilterControl.class.php:		if (!$selection || $this->args->reset_filters) {
lib/functions/tlTestCaseFilterControl.class.php:			$this->do_filtering = true;
lib/functions/tlTestCaseFilterControl.class.php:		$this->filters[$key] = array('items' => array(), 'selected' => $selection);
lib/functions/tlTestCaseFilterControl.class.php:		$this->filters[$key]['items'] = $this->tc_mgr->get_execution_types();
lib/functions/tlTestCaseFilterControl.class.php:		$this->filters[$key]['items'] = array(0 => $this->option_strings['any'])
lib/functions/tlTestCaseFilterControl.class.php:		                                      + $this->filters[$key]['items'];
lib/functions/tlTestCaseFilterControl.class.php:		$this->active_filters[$key] = $selection;
lib/functions/tlTestCaseFilterControl.class.php:		$tplan_id = $this->settings['setting_testplan']['selected'];
lib/functions/tlTestCaseFilterControl.class.php:		$selection = $this->args->{$key};
lib/functions/tlTestCaseFilterControl.class.php:		if (!$selection || $this->args->reset_filters) {
lib/functions/tlTestCaseFilterControl.class.php:			$this->do_filtering = true;
lib/functions/tlTestCaseFilterControl.class.php:		$all_testers = getTestersForHtmlOptions($this->db, $tplan_id, $this->args->testproject_id, null,
lib/functions/tlTestCaseFilterControl.class.php:			                                    array(TL_USER_ANYBODY => $this->option_strings['any'],
lib/functions/tlTestCaseFilterControl.class.php:			                                          TL_USER_NOBODY => $this->option_strings['none'],
lib/functions/tlTestCaseFilterControl.class.php:			                                          TL_USER_SOMEBODY => $this->option_strings['somebody']),
lib/functions/tlTestCaseFilterControl.class.php:		if ($this->mode == 'execution_mode') {
lib/functions/tlTestCaseFilterControl.class.php:			$role = $this->user->getEffectiveRole($this->db, $this->args->testproject_id, $tplan_id);
lib/functions/tlTestCaseFilterControl.class.php:			$simple_tester_roles = array_flip($this->configuration->exec_cfg->simple_tester_roles);
lib/functions/tlTestCaseFilterControl.class.php:			$right_to_execute = $role->hasRight('testplan_execute');
lib/functions/tlTestCaseFilterControl.class.php:			$right_to_manage = $role->hasRight('testplan_planning');
lib/functions/tlTestCaseFilterControl.class.php:			if (isset($simple_tester_roles[$role->dbID]) || ($right_to_execute && !$right_to_manage)) {
lib/functions/tlTestCaseFilterControl.class.php:			$view_mode = $simple ? $this->configuration->exec_cfg->view_mode->tester : 'all';
lib/functions/tlTestCaseFilterControl.class.php:				$visible_testers = (array)$this->user->getDisplayName();
lib/functions/tlTestCaseFilterControl.class.php:				$selection = (array)$this->user->dbID;
lib/functions/tlTestCaseFilterControl.class.php:		$this->filters[$key] = array('items' => $visible_testers,
lib/functions/tlTestCaseFilterControl.class.php:		                             $unassigned_key => $this->args->{$unassigned_key});
lib/functions/tlTestCaseFilterControl.class.php:			$this->active_filters[$key] = null;
lib/functions/tlTestCaseFilterControl.class.php:			$this->active_filters[$unassigned_key] = 0;
lib/functions/tlTestCaseFilterControl.class.php:			$this->active_filters[$key] = array_flip($selection);
lib/functions/tlTestCaseFilterControl.class.php:			foreach ($this->active_filters[$key] as $user_key => $user_value) {
lib/functions/tlTestCaseFilterControl.class.php:				$this->active_filters[$key][$user_key] = $user_key;
lib/functions/tlTestCaseFilterControl.class.php:			$this->active_filters[$unassigned_key] = $this->filters[$key][$unassigned_key];
lib/functions/tlTestCaseFilterControl.class.php:		if (!$this->exec_cf_mgr) {
lib/functions/tlTestCaseFilterControl.class.php:			$this->exec_cf_mgr = new exec_cfield_mgr($this->db, $this->args->testproject_id);
lib/functions/tlTestCaseFilterControl.class.php:		$field_names = $this->exec_cf_mgr->field_names();
lib/functions/tlTestCaseFilterControl.class.php:		$menu = $this->exec_cf_mgr->html_table_of_custom_field_inputs(self::CF_INPUT_SIZE);
lib/functions/tlTestCaseFilterControl.class.php:		$selection = $this->exec_cf_mgr->get_set_values();
lib/functions/tlTestCaseFilterControl.class.php:		$ses_string = $this->mode . "_cf_filter_collapsed";
lib/functions/tlTestCaseFilterControl.class.php:		// asimon - 20100713
lib/functions/tlTestCaseFilterControl.class.php:		// Fixed drag&drop error caused by this function. It always set $this->do_filtering
lib/functions/tlTestCaseFilterControl.class.php:		if (!$selection || $this->args->reset_filters) {
lib/functions/tlTestCaseFilterControl.class.php:			$this->do_filtering = true;
lib/functions/tlTestCaseFilterControl.class.php:		$this->filters[$key] = array('items' => $menu, 
lib/functions/tlTestCaseFilterControl.class.php:		$this->active_filters[$key] = $selection;
lib/functions/tlTestCaseFilterControl.class.php:		if (is_null($this->testplan_mgr)) {
lib/functions/tlTestCaseFilterControl.class.php:			$this->testplan_mgr = new testplan($this->db);
lib/functions/tlTestCaseFilterControl.class.php:		$tplan_id = $this->settings['setting_testplan']['selected'];
lib/functions/tlTestCaseFilterControl.class.php:		$this->configuration->results = config_get('results');
lib/functions/tlTestCaseFilterControl.class.php:		// determine, which config to load and use for filter methods - depends on mode!
lib/functions/tlTestCaseFilterControl.class.php:		$cfg = ($this->mode == 'execution_mode') ? 
lib/functions/tlTestCaseFilterControl.class.php:		$this->configuration->filter_methods = config_get($cfg);
lib/functions/tlTestCaseFilterControl.class.php:		if ($this->mode == 'execution_mode') {
lib/functions/tlTestCaseFilterControl.class.php:			$js_key_to_select = $this->configuration->filter_methods['status_code']['current_build'];
lib/functions/tlTestCaseFilterControl.class.php:		} else if ($this->mode == 'plan_mode') {
lib/functions/tlTestCaseFilterControl.class.php:			$js_key_to_select = $this->configuration->filter_methods['status_code']['specific_build'];
lib/functions/tlTestCaseFilterControl.class.php:		$result_selection = $this->args->{$result_key};
lib/functions/tlTestCaseFilterControl.class.php:		$method_selection = $this->args->{$method_key};
lib/functions/tlTestCaseFilterControl.class.php:		$build_selection = $this->args->{$build_key};
lib/functions/tlTestCaseFilterControl.class.php:		$default_filter_method = $this->configuration->filter_methods['default_type'];
lib/functions/tlTestCaseFilterControl.class.php:		$any_result_key = $this->configuration->results['status_code']['all'];
lib/functions/tlTestCaseFilterControl.class.php:		$newest_build_id = $this->testplan_mgr->get_max_build_id($tplan_id, testplan::GET_ACTIVE_BUILD);
lib/functions/tlTestCaseFilterControl.class.php:		if (is_null($result_selection) || is_null($method_selection) || $this->args->reset_filters) {
lib/functions/tlTestCaseFilterControl.class.php:			$this->do_filtering = true;
lib/functions/tlTestCaseFilterControl.class.php:		$this->filters[$key] = array($result_key => array('items' => null,
lib/functions/tlTestCaseFilterControl.class.php:		$this->filters[$key][$result_key]['items'] = createResultsMenu();
lib/functions/tlTestCaseFilterControl.class.php:		$this->filters[$key][$result_key]['items'][$any_result_key] = $this->option_strings['any'];
lib/functions/tlTestCaseFilterControl.class.php:		foreach ($this->configuration->filter_methods['status_code'] as $statusname => $statusshortcut) {
lib/functions/tlTestCaseFilterControl.class.php:			$code = $this->configuration->filter_methods['status_code'][$statusname];
lib/functions/tlTestCaseFilterControl.class.php:			$this->filters[$key][$method_key]['items'][$code] =
lib/functions/tlTestCaseFilterControl.class.php:				lang_get($this->configuration->filter_methods['status_label'][$statusname]);
lib/functions/tlTestCaseFilterControl.class.php:		$this->filters[$key][$build_key]['items'] =
lib/functions/tlTestCaseFilterControl.class.php:			$this->testplan_mgr->get_builds_for_html_options($tplan_id, testplan::GET_ACTIVE_BUILD);
lib/functions/tlTestCaseFilterControl.class.php:			$this->active_filters[$result_key] = null;
lib/functions/tlTestCaseFilterControl.class.php:			$this->active_filters[$method_key] = null;
lib/functions/tlTestCaseFilterControl.class.php:			$this->active_filters[$build_key] = null;
lib/functions/tlTestCaseFilterControl.class.php:			$this->active_filters[$result_key] = $result_selection;
lib/functions/tlTestCaseFilterControl.class.php:			$this->active_filters[$method_key] = $method_selection;
lib/functions/tlTestCaseFilterControl.class.php:			$this->active_filters[$build_key] = $build_selection;
lib/functions/remote_exec.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/remote_exec.php: * ----------------------------------------------------------------------------------- */
lib/functions/remote_exec.php:// Contributed code - manish
lib/functions/remote_exec.php:* XML-RPC Server Settings need to be configured using the custom fields feature.
lib/functions/remote_exec.php:* @param $cfield_manager: Custom Field manager object, to read the XML-RPC server params.
lib/functions/remote_exec.php:*         values: 'result' -> (Pass, Fail or Blocked)
lib/functions/remote_exec.php:*                 'notes' -> Notes text
lib/functions/remote_exec.php:*                 'message' -> Message from server
lib/functions/remote_exec.php:	$server_params = $cfield_manager->getXMLServerParams($testcase_id);
lib/functions/remote_exec.php:  	// (-1 for executions results, and fault code and error message for message.
lib/functions/remote_exec.php:  	$tc_info = $tree_manager->get_node_hierarchy_info($testcase_id);
lib/functions/remote_exec.php:  	//Create XML-RPC Objects to pass on to the the servers
lib/functions/remote_exec.php:  	$serverResp = $xmlrpc_client->send($messageToServer);
lib/functions/remote_exec.php:  	} elseif ($serverResp->faultCode()) {
lib/functions/remote_exec.php:  		$message = lang_get("XMLRPC_error_number") . $serverResp->faultCode() . ": ".$serverResp->faultString();
lib/functions/remote_exec.php:  		$arrayVal = $serverResp->value();
lib/functions/remote_exec.php:  		$myResult = $arrayVal->arraymem(0)->scalarval();
lib/functions/remote_exec.php:  		$myNotes = $arrayVal->arraymem(1)->scalarval();
lib/functions/users.inc.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/users.inc.php: * @copyright 	2006-2009, TestLink community 
lib/functions/users.inc.php: *	20100502 - franciscom - resetPassword() - fixed bad comparison to set $errorMsg
lib/functions/users.inc.php: *	20100427 - franciscom - BUGID 3396 
lib/functions/users.inc.php: *	20091215 - eloff - read active testplan from cookie into session
lib/functions/users.inc.php: *	20090817 - franciscom - getUsersForHtmlOptions() - implementation changes
lib/functions/users.inc.php: *	20090517 - franciscom - getTestersForHtmlOptions() interface changes
lib/functions/users.inc.php: *	20081221 - franciscom - buildUserMap() interface changes
lib/functions/users.inc.php: *	20081213 - franciscom - refactoring removing old config options 
lib/functions/users.inc.php: *	20080822 - franciscom - resetPassword() - added generatePassword()
lib/functions/users.inc.php: *	20080405 - franciscom - getGrantsForUserMgmt()
lib/functions/users.inc.php: *	20080315 - franciscom - added initalize_tabsmenu()
lib/functions/users.inc.php: *	20080210 - franciscom - fixed message for error tlUser::E_PWDDONTMATCH
lib/functions/users.inc.php:	$order_by = $gui_cfg->tprojects_combo_order_by;
lib/functions/users.inc.php:	$arrProducts = $tproject_mgr->get_accessible_for_user($id,'map',$order_by);
lib/functions/users.inc.php:	 // 20051208 - JBA - added to set the lastProduct the user has selected before logging off.
lib/functions/users.inc.php:       20071228 - franciscom - added active_filter
lib/functions/users.inc.php:	// 			if($user->isActive == $active_filter)
lib/functions/users.inc.php:		// 	$usersMap[$id] = $user->getDisplayName();
lib/functions/users.inc.php:		// 	if($user->isActive == 0)
lib/functions/users.inc.php:			$usersMap[$userID] = $users[$userID]->getDisplayName();
lib/functions/users.inc.php:			if($users[$userID]->isActive == 0)
lib/functions/users.inc.php:	$result = $user->readFromDB($db);
lib/functions/users.inc.php:		if ($user->emailAddress != "")
lib/functions/users.inc.php:			$result = $user->setPassword($newPassword);
lib/functions/users.inc.php:				$mail_op = @email_send(config_get('from_email'), $user->emailAddress,lang_get('mail_passwd_subject'), 
lib/functions/users.inc.php:				if ($mail_op->status_ok)
lib/functions/users.inc.php:					$result = $user->writePasswordToDB($db); // BUGID 3396
lib/functions/users.inc.php:					$errorMsg = $mail_op->msg;
lib/functions/users.inc.php: * @param $users UNUSED - remove
lib/functions/users.inc.php:        if($roleInfo['effective_role']->hasRight('testplan_execute') && 
lib/functions/users.inc.php:           ($orOperand || $roleInfo['user']->isActive == $activeTarget) )
lib/functions/users.inc.php:	$hl->view_roles = 0;
lib/functions/users.inc.php:	$hl->create_role = 0;
lib/functions/users.inc.php:	$hl->edit_role = 0;
lib/functions/users.inc.php:	$hl->view_users = 0;
lib/functions/users.inc.php:	$hl->create_user = 0;
lib/functions/users.inc.php:	$hl->edit_user = 0;
lib/functions/users.inc.php:	$hl->assign_users_tproject = 0;
lib/functions/users.inc.php:	$hl->assign_users_tplan = 0;
lib/functions/users.inc.php:    $grants->user_mgmt = $userObj->hasRight($dbHandler,"mgt_users");
lib/functions/users.inc.php:    $grants->role_mgmt = $userObj->hasRight($dbHandler,"role_management");
lib/functions/users.inc.php:    $grants->tproject_user_role_assignment = "no";
lib/functions/users.inc.php:    $grants->tplan_user_role_assignment = "no";
lib/functions/users.inc.php:    if($grants->user_mgmt == 'yes')
lib/functions/users.inc.php:        $grants->tplan_user_role_assignment = 'yes';
lib/functions/users.inc.php:        $grants->tproject_user_role_assignment = 'yes';  
lib/functions/users.inc.php:        $grants->tplan_user_role_assignment = $userObj->hasRight($dbHandler,"testplan_user_role_assignment",
lib/functions/users.inc.php:        $answers->user_role_assignment = $userObj->hasRight($dbHandler,"user_role_assignment",null,-1);
lib/functions/users.inc.php:        $answers->testproject_user_role_assignment=$userObj->hasRight($dbHandler,"testproject_user_role_assignment",$tprojectID,-1);
lib/functions/users.inc.php:        if($answers->user_role_assignment == "yes" || $answers->testproject_user_role_assignment == "yes")
lib/functions/users.inc.php:            $grants->tproject_user_role_assignment = "yes";
lib/functions/users.inc.php:        $grants->$key = $value == "yes" ? "yes" : "no";       
lib/functions/common.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/common.php: *  20100714 - asimon - BUGID 3601: show req spec link only when req mgmt is enabled
lib/functions/common.php: *	20100616 - eloff - config_get: log warning when requested option does not exist
lib/functions/common.php: * 	20100310 - franciscom - changes to make code compatible with smarty 3
lib/functions/common.php: * 	20100207 - havlatm - cleanup
lib/functions/common.php: * 	20100124 - eloff - added $redirect parameter to checkSessionValid()
lib/functions/common.php: * 	20100124 - eloff - BUGID 3012 - added buildExternalIdString()
lib/functions/common.php: * 	20091215 - eloff - save active testplan_id to cookie
lib/functions/common.php: * 	20091121 - franciscom - getItemTemplateContents() - contribution refactored
lib/functions/common.php: * 	20090425 - amitkhullar - BUGID 2431 - Improper Session Handler	
lib/functions/common.php: * 	20090409 - amitkhullar- BUGID 2354
lib/functions/common.php: * 	20090111 - franciscom - commented some required_once and some global coupling
lib/functions/common.php: * 	20081027 - havlatm - refactorization, description
lib/functions/common.php: * 	20080907 - franciscom - isValidISODateTime()
lib/functions/common.php: * 	20080518 - franciscom - translate_tc_status()
lib/functions/common.php: * 	20080412 - franciscom - templateConfiguration()
lib/functions/common.php: * 	20080326 - franciscom - config_get() - refactored removed eval()
lib/functions/common.php: * 	20071027 - franciscom - added ini_get_bool() from mantis code, needed to user
lib/functions/common.php: * 	20071002 - jbarchibald - BUGID 1051
lib/functions/common.php: * 	20070705 - franciscom - init_labels()
lib/functions/common.php: * 	20070623 - franciscom - improved info in header of localize_dateOrTimeStamp()
lib/functions/common.php:/** @TODO use the next include only if it is used -> must be removed */
lib/functions/common.php:    	$len = tlStringLen($classFileName) - $tlClassPrefixLen;
lib/functions/common.php:// ----- End of loading and begin functions ---------------------------------------------
lib/functions/common.php: *         aa['status'] = 1 -> OK , 0 -> KO
lib/functions/common.php: *         aa['dbms_msg''] = 'ok', or $db->error_msg().
lib/functions/common.php:	$result = $db->connect(DSN, DB_HOST, DB_USER, DB_PASS, DB_NAME);
lib/functions/common.php:		if((DB_TYPE == 'mysql') && ($charSet == 'UTF-8'))
lib/functions/common.php:			$db->exec_query("SET CHARACTER SET utf8");
lib/functions/common.php:			$db->exec_query("SET collation_connection = 'utf8_general_ci'");
lib/functions/common.php:	$g_tlLogger->endTransaction();
lib/functions/common.php:	$g_tlLogger->startTransaction();
lib/functions/common.php: * 200806 - havlatm - removed rpath
lib/functions/common.php:		 * a) store just data -not all object
lib/functions/common.php:		if (($now - $lastActivity) <= (config_get("sessionInactivityTimeout") * 60))
lib/functions/common.php:			$user->readFromDB($db);
lib/functions/common.php: *  20100714 - asimon - BUGID 3601: show req spec link only when req mgmt is enabled
lib/functions/common.php: *	20091119 - franciscom - removed global coupling 
lib/functions/common.php:				  isset($_SESSION['testprojectOptions']->requirementsEnabled) && 
lib/functions/common.php:				    $_SESSION['testprojectOptions']->requirementsEnabled))
lib/functions/common.php: * 	20091111 - havlatm - menu generation added, name changed (from upd_session_tplan_tproject)
lib/functions/common.php: *	20090726 - franciscom - getAccessibleTestPlans() now is method on user class
lib/functions/common.php:		$all_tprojects = $tproject->get_all();
lib/functions/common.php:	$tproject->setSessionProject($tproject_id);
lib/functions/common.php:	$tplan_data = $_SESSION['currentUser']->getAccessibleTestPlans($db,$tproject_id,$tplan_id);
lib/functions/common.php:		$tplan_data = $_SESSION['currentUser']->getAccessibleTestPlans($db,$tproject_id);
lib/functions/common.php: * - init session
lib/functions/common.php: * - init database
lib/functions/common.php: * - check rights
lib/functions/common.php: * - initialize project data (if requested)
lib/functions/common.php:	$g_attachments->disabled_msg = "";
lib/functions/common.php:		  $g_attachments->enabled = FALSE;
lib/functions/common.php:		  $g_attachments->disabled_msg = $ret['msg'];
lib/functions/common.php: * @param   string   Browser location - use for redirection or refresh of another frame
lib/functions/common.php:				$t_value = $cfg->$config_id;
lib/functions/common.php: * @author Copyright (C) 2000 - 2004  Mantis Team, Kenzaburo Ito
lib/functions/common.php:	header('Content-Type: text/plain; charset='. $charSet . '; name=' . $fileName );
lib/functions/common.php:	header('Content-Transfer-Encoding: BASE64;' );
lib/functions/common.php:	header('Content-Disposition: attachment; filename="' . $fileName .'"');
lib/functions/common.php: * @author Copyright (C) 2000 - 2004  Mantis Team, Kenzaburo Ito
lib/functions/common.php:// Contributed code - manish
lib/functions/common.php:* XML-RPC Server Settings need to be configured using the custom fields feature.
lib/functions/common.php:* @param $cfield_manager: Custom Field manager object, to read the XML-RPC server params.
lib/functions/common.php:*         values: 'result' -> (Pass, Fail or Blocked)
lib/functions/common.php:*                 'notes' -> Notes text
lib/functions/common.php:*                 'message' -> Message from server
lib/functions/common.php:	$server_params = $cfield_manager->getXMLServerParams($testcase_id);
lib/functions/common.php:  	// (-1 for executions results, and fault code and error message for message.
lib/functions/common.php:  	$tc_info = $tree_manager->get_node_hierarchy_info($testcase_id);
lib/functions/common.php:  	//Create XML-RPC Objects to pass on to the the servers
lib/functions/common.php:  	$serverResp = $xmlrpc_client->send($messageToServer);
lib/functions/common.php:  	} elseif ($serverResp->faultCode()) {
lib/functions/common.php:  		$message = lang_get("XMLRPC_error_number") . $serverResp->faultCode() . ": ".$serverResp->faultString();
lib/functions/common.php:  		$arrayVal = $serverResp->value();
lib/functions/common.php:  		$myResult = $arrayVal->arraymem(0)->scalarval();
lib/functions/common.php:  		$myNotes = $arrayVal->arraymem(1)->scalarval();
lib/functions/common.php: * @author Francisco Mancardi - 20050905 - refactoring
lib/functions/common.php:/** @todo havlatm - 20100207 - what's that? and why here. Remove' */
lib/functions/common.php:// nodes_order format:  NODE_ID-?,NODE_ID-?
lib/functions/common.php:// 2-0,10-0,3-0
lib/functions/common.php:	// $value= X-Y
lib/functions/common.php:	$fb = explode('-',$value);
lib/functions/common.php: * @TODO: franciscom - 20091003 - document return value
lib/functions/common.php:    $tcfg->template_dir = "{$last_part}/";
lib/functions/common.php:    $tcfg->default_template = isset($custom_templates[$access_key]) ? $custom_templates[$access_key] : ($access_key . '.tpl');
lib/functions/common.php:    $tcfg->template = null;
lib/functions/common.php: *          accepted format: YYYY-MM-DD HH:MM:SS
lib/functions/common.php: * rev: 20080907 - franciscom - Code taked form PHP manual
lib/functions/common.php:   if (preg_match("/^(\d{4})-(\d{2})-(\d{2}) ([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$/", $ISODateTime, $matches)) 
lib/functions/common.php:		logAuditEvent(TLS("audit_security_user_right_missing",$currentUser->login,$script,$action),$action,$currentUser->dbID,"users");
lib/functions/common.php:		throw new Exception("Invalid UTF-8 Data detected!");
lib/functions/common.php: * @param $webEditorName webeditor name, that identifies a propety of $tlCfg->$itemTemplate
lib/functions/common.php: *        $tlCfg->itemTemplate OR $tlCfg->itemTemplate->$webEditorName 
lib/functions/common.php:      	switch($editorTemplate->$webEditorName->type)
lib/functions/common.php:      			$value = $editorTemplate->$webEditorName->value;
lib/functions/common.php:      			$value = lang_get($editorTemplate->$webEditorName->value);
lib/functions/common.php:      			$value = getFileContents($editorTemplate->$webEditorName->value);
lib/functions/common.php:					         " {$editorTemplate->$webEditorName->value} ";
lib/functions/common.php:		$glueChar = config_get('testcase_cfg')->glue_character;
lib/functions/email_api.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/email_api.php: * @author 		2002 - 2004 Mantis Team (the code is based on mantis BT project code)
lib/functions/email_api.php: * @copyright 	2003-2009, TestLink community 
lib/functions/email_api.php: * @param boolean $p_exit_on_error == true - calls exit() on errors, else - returns true 
lib/functions/email_api.php:// 20070107 - KL - modified signature to allow caller to specify htmlFormat = true if they so choose
lib/functions/email_api.php:// 20090308 - havlatm - removed unused parameter $p_category
lib/functions/email_api.php:	$op->status_ok = true;
lib/functions/email_api.php: 	$op->msg = 'ok';
lib/functions/email_api.php:		$op->status_ok=false;
lib/functions/email_api.php:		$op->msg=lang_get('stmp_host_unconfigured');
lib/functions/email_api.php:	# short-circuit if no recipient is defined, or email disabled
lib/functions/email_api.php:	$mail->PluginDir = PHPMAILER_PATH;
lib/functions/email_api.php:  	// 20090201 - franciscom
lib/functions/email_api.php:  	$mail->SetLanguage( 'en', PHPMAILER_PATH . 'language' . DIRECTORY_SEPARATOR );
lib/functions/email_api.php:		case 0: $mail->IsMail();
lib/functions/email_api.php:		case 1: $mail->IsSendmail();
lib/functions/email_api.php:		case 2: $mail->IsSMTP();
lib/functions/email_api.php:					$mail->SMTPKeepAlive = true;
lib/functions/email_api.php:					# I see the smallest evel - to initialize only one 'private'
lib/functions/email_api.php:						$mail->smtp = $g_phpMailer_smtp;
lib/functions/email_api.php:	$mail->IsHTML($htmlFormat);    # set email format to plain text
lib/functions/email_api.php:	$mail->WordWrap = 80;
lib/functions/email_api.php:	$mail->Priority = config_get( 'mail_priority' );   # Urgent = 1, Not Urgent = 5, Disable = 0
lib/functions/email_api.php:	$mail->CharSet = config_get( 'charset');
lib/functions/email_api.php:	$mail->Host = config_get( 'smtp_host' );
lib/functions/email_api.php:  	$mail->From = config_get( 'from_email' );
lib/functions/email_api.php:	  $mail->From     = $p_from;
lib/functions/email_api.php:	$mail->Sender   = config_get( 'return_path_email' );
lib/functions/email_api.php:	$mail->FromName = '';
lib/functions/email_api.php:		$mail->SMTPAuth = true;
lib/functions/email_api.php:		$mail->Username = config_get( 'smtp_username' );
lib/functions/email_api.php:		$mail->Password = config_get( 'smtp_password' );
lib/functions/email_api.php:				$mail->AddAddress( $t_recipient, '' );
lib/functions/email_api.php:  	// 20051106 - fm
lib/functions/email_api.php:				$mail->AddCC( $t_cc, '' );
lib/functions/email_api.php:	$mail->Subject = $t_subject;
lib/functions/email_api.php:	$mail->Body    = make_lf_crlf( "\n".$t_message );
lib/functions/email_api.php:	if ( !$mail->Send() ) {
lib/functions/email_api.php:		  PRINT 'Mailer Error: '. $mail->ErrorInfo.'<br />';
lib/functions/email_api.php:		  	$op->status_ok = false;
lib/functions/email_api.php:      		$op->msg = $mail->ErrorInfo;
lib/functions/email_api.php:	if ( !is_null( $mail->smtp ) )  {
lib/functions/email_api.php:		# I see the smallest evel - to initialize only one 'private'
lib/functions/email_api.php:		$g_phpMailer_smtp = $mail->smtp;
lib/functions/email_api.php:# --------------------
lib/functions/email_api.php:		if ( $g_phpMailer_smtp->Connected() )  {
lib/functions/email_api.php:			$g_phpMailer_smtp->Quit();
lib/functions/email_api.php:			$g_phpMailer_smtp->Close();
lib/functions/email_api.php:# --------------------
lib/functions/email_api.php:# --------------------
lib/functions/logger.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/logger.class.php: * @copyright 2005-2009, TestLink community 
lib/functions/logger.class.php: *  20100823 - franciscom - BUGID 3656 - reopened crash when using table prefix
lib/functions/logger.class.php: *	20100808 - franciscom - BUGID 3656 - crash on some DBMS due to Transactions instead of transactions
lib/functions/logger.class.php: *	20091005 - amitkhullar - improved function getEventsFor() - BUG 2862
lib/functions/logger.class.php: *	20090603 - franciscom - adding table prefix management
lib/functions/logger.class.php: *	20080517 - franciscom - exclude mktime() logs 
lib/functions/logger.class.php: *	20080316 - franciscom - added getEnableLoggingStatus() methods
lib/functions/logger.class.php: *	20080315 - franciscom - discovered bug on tlTransaction->writeToDB thanks to POSTGRES
lib/functions/logger.class.php: *	                        watchPHPErrors() - added new error to suppress
lib/functions/logger.class.php: *	20080216 - franciscom - limit length of entryPoint
lib/functions/logger.class.php:		$this->loggers['db'] = new tlDBLogger($db);
lib/functions/logger.class.php:		$this->loggers['file'] = new tlFileLogger();
lib/functions/logger.class.php:		$this->setLogLevelFilter(self::ERROR | self::WARNING | self::AUDIT);
lib/functions/logger.class.php:		$this->eventManager = tlEventManager::create($db);
lib/functions/logger.class.php:	                                  $limit = -1,$startTime = null,$endTime = null, $users = null)
lib/functions/logger.class.php:		return $this->eventManager->getEventsFor(tlLogger::AUDIT,$objectIDs,$objectTypes,$activityCodes,
lib/functions/logger.class.php:	                             $activityCodes = null,$limit = -1,$startTime = null,
lib/functions/logger.class.php:		return $this->eventManager->getEventsFor($logLevels,$objectIDs,$objectTypes,$activityCodes,
lib/functions/logger.class.php:		return $this->eventManager->deleteEventsFor($logLevels,$startTime);
lib/functions/logger.class.php:		$this->logLevelFilter = $filter;
lib/functions/logger.class.php:		foreach($this->loggers as $key => $loggerObj)
lib/functions/logger.class.php:			$this->loggers[$key]->setLogLevelFilter($filter);
lib/functions/logger.class.php:	    	$this->doLogging = false;
lib/functions/logger.class.php:			   $this->loggers[$loggerKey]->disableLogging();
lib/functions/logger.class.php:	 	    $this->doLogging = false;
lib/functions/logger.class.php:		        $this->loggers[$loggerKey]->enableLogging();
lib/functions/logger.class.php:		$status=is_null($logger) ? $this->doLogging : $this->loggers[$logger]->getEnableLoggingStatus();
lib/functions/logger.class.php:		// 	return $this->doLogging;
lib/functions/logger.class.php:		// 	return $this->loggers[$logger]->getEnableLoggingStatus();
lib/functions/logger.class.php:		if (isset($this->transactions[$name]))
lib/functions/logger.class.php:			return $this->transactions[$name];
lib/functions/logger.class.php:	 * rev: 20080216 - franciscom - entrypoint len limiting
lib/functions/logger.class.php:			$entryPoint = substr($entryPoint,-self::ENTRYPOINT_MAX_LEN);
lib/functions/logger.class.php:			$userID = isset($_SESSION['currentUser']) ? $_SESSION['currentUser']->dbID : 0;
lib/functions/logger.class.php:		$t = new tlTransaction($this->db);
lib/functions/logger.class.php:		$this->transactions[$name] = &$t;
lib/functions/logger.class.php:		$t->initialize($this->loggers,$entryPoint,$name,$userID,$sessionID);
lib/functions/logger.class.php:		return $this->transactions[$name];
lib/functions/logger.class.php:		if (!isset($this->transactions[$name]))
lib/functions/logger.class.php:		$this->transactions[$name]->close();
lib/functions/logger.class.php:		unset($this->transactions[$name]);
lib/functions/logger.class.php:		$this->loggers = $logger;
lib/functions/logger.class.php:		$this->name = $name;
lib/functions/logger.class.php:		$this->entryPoint = $entryPoint;
lib/functions/logger.class.php:		$this->startTime = time();
lib/functions/logger.class.php:		$this->userID = $userID;
lib/functions/logger.class.php:		$this->sessionID = $sessionID;
lib/functions/logger.class.php:		$this->writeTransaction($this);
lib/functions/logger.class.php:		if (!is_null($this->name))
lib/functions/logger.class.php:			$this->close();
lib/functions/logger.class.php:		$this->loggers = null;
lib/functions/logger.class.php:		$this->name = null;
lib/functions/logger.class.php:		$this->entryPoint = null;
lib/functions/logger.class.php:		$this->startTime = null;
lib/functions/logger.class.php:		$this->userID = null;
lib/functions/logger.class.php:		$this->sessionID = null;
lib/functions/logger.class.php:			$this->dbID = null;
lib/functions/logger.class.php:		$this->endTime = time();
lib/functions/logger.class.php:		tlTimingStop($this->name);
lib/functions/logger.class.php:		$this->duration = tlTimingCurrent($this->name);
lib/functions/logger.class.php:		$result = $this->writeTransaction($this);
lib/functions/logger.class.php:		$this->name = null;
lib/functions/logger.class.php:		$e->initialize($this->dbID,$this->userID,$this->sessionID,$logLevel,$description,
lib/functions/logger.class.php:		$this->writeEvent($e);
lib/functions/logger.class.php:		$this->events[] = $e;
lib/functions/logger.class.php:		$this->_clean($options);
lib/functions/logger.class.php:		         " FROM {$this->tables['transactions']} ";
lib/functions/logger.class.php:			$clauses[] = "id = {$this->dbID}";
lib/functions/logger.class.php:		$info = $db->fetchFirstRow($query);
lib/functions/logger.class.php:			$this->dbID = $info['id'];
lib/functions/logger.class.php:			$this->entry_point = $info['entry_point'];
lib/functions/logger.class.php:			$this->startTime = $info['start_time'];
lib/functions/logger.class.php:			$this->endTime = $info['end_time'];
lib/functions/logger.class.php:			$this->userID = $info['user_id'];
lib/functions/logger.class.php:			$this->sessionID = $info['session_id'];
lib/functions/logger.class.php:		if (!$this->dbID)
lib/functions/logger.class.php:			$entryPoint = $db->prepare_string($this->entryPoint);
lib/functions/logger.class.php:			$startTime = $db->prepare_int(time());
lib/functions/logger.class.php:			$endTime = $db->prepare_int(0);
lib/functions/logger.class.php:			$userID = $db->prepare_int($this->userID);
lib/functions/logger.class.php:			if (!is_null($this->sessionID))
lib/functions/logger.class.php:				$sessionID = "'".$db->prepare_string($this->sessionID)."'";
lib/functions/logger.class.php:			$query = "INSERT INTO {$this->tables['transactions']} " .
lib/functions/logger.class.php:			$result = $db->exec_query($query);
lib/functions/logger.class.php:				$this->dbID = $db->insert_id($this->tables['transactions']);
lib/functions/logger.class.php:			$endTime = $db->prepare_int(time());
lib/functions/logger.class.php:			$query = "UPDATE {$this->tables['transactions']} SET end_time = {$endTime} WHERE id = {$this->dbID}";
lib/functions/logger.class.php:			$result = $db->exec_query($query);
lib/functions/logger.class.php:		foreach($this->loggers as $key => $loggerObj)
lib/functions/logger.class.php:			$this->loggers[$key]->writeEvent($e);
lib/functions/logger.class.php:		foreach($this->loggers as $key => $loggerObj)
lib/functions/logger.class.php:			$this->loggers[$key]->writeTransaction($t);
lib/functions/logger.class.php:    rev: 20080514 - franciscom - added empty() to avoid crash
lib/functions/logger.class.php:	                             $activityCodes = null,$limit = -1,$startTime = null,
lib/functions/logger.class.php:			$objectTypes = $this->db->prepare_string(implode("','",$objectTypes));
lib/functions/logger.class.php:	        $usersFilter = " JOIN {$this->tables['transactions']}  T ON T.id = E.transaction_id AND T.user_id IN ({$users}) ";
lib/functions/logger.class.php:		$query = "SELECT E.id FROM {$this->tables['events']} E {$usersFilter}";
lib/functions/logger.class.php:		return tlEvent::createObjectsFromDBbySQL($this->db,$query,'id',"tlEvent",true,
lib/functions/logger.class.php:		$query = "DELETE FROM {$this->tables['events']} ";
lib/functions/logger.class.php:		$this->db->exec_query($query);
lib/functions/logger.class.php:		$query = "SELECT id FROM {$this->tables['transactions']} t " .
lib/functions/logger.class.php:		         "WHERE (SELECT COUNT(0) FROM {$this->tables['events']} e WHERE e.transaction_id = t.id) = 0";
lib/functions/logger.class.php:		$transIDs = $this->db->fetchColumnsIntoArray($query,"id");
lib/functions/logger.class.php:			$query = "DELETE FROM {$this->tables['transactions']} WHERE id IN ({$transIDs})";
lib/functions/logger.class.php:			$this->db->exec_query($query);
lib/functions/logger.class.php:		return tlLogger::$logLevels[$this->logLevel];
lib/functions/logger.class.php:		$this->logLevel = null;
lib/functions/logger.class.php:		$this->description = null;
lib/functions/logger.class.php:		$this->source = null;
lib/functions/logger.class.php:		$this->timestamp = null;
lib/functions/logger.class.php:		$this->userID = null;
lib/functions/logger.class.php:		$this->sessionID = null;
lib/functions/logger.class.php:		$this->source = null;
lib/functions/logger.class.php:		$this->objectID = null;
lib/functions/logger.class.php:		$this->objectType = null;
lib/functions/logger.class.php:		$this->transaction = null;
lib/functions/logger.class.php:			$this->dbID = null;
lib/functions/logger.class.php:		$this->timestamp = time();
lib/functions/logger.class.php:		$this->transactionID = $transactionID;
lib/functions/logger.class.php:		$this->userID = $userID;
lib/functions/logger.class.php:		$this->sessionID = $sessionID;
lib/functions/logger.class.php:		$this->logLevel = $logLevel;
lib/functions/logger.class.php:		$this->description = $description;
lib/functions/logger.class.php:		$this->source = $source;
lib/functions/logger.class.php:		$this->activityCode = $activityCode;
lib/functions/logger.class.php:		$this->objectID = $objectID;
lib/functions/logger.class.php:		$this->objectType = $objectType;
lib/functions/logger.class.php:		$this->_clean($options);
lib/functions/logger.class.php:		         " FROM {$this->tables['events']} ";
lib/functions/logger.class.php:			$clauses[] = "id = {$this->dbID}";
lib/functions/logger.class.php:		$info = $db->fetchFirstRow($query);
lib/functions/logger.class.php:			$this->dbID = $info['id'];
lib/functions/logger.class.php:			$this->transactionID = $info['transaction_id'];
lib/functions/logger.class.php:			$this->logLevel = $info['log_level'];
lib/functions/logger.class.php:			$this->source = $info['source'];
lib/functions/logger.class.php:			$this->description = $info['source'];
lib/functions/logger.class.php:				$this->description = $tmp;
lib/functions/logger.class.php:			$this->timestamp = $info['fired_at'];
lib/functions/logger.class.php:			$this->objectID = $info['object_id'];
lib/functions/logger.class.php:			$this->objectType = $info['object_type'];
lib/functions/logger.class.php:			$this->activityCode = $info['activity'];
lib/functions/logger.class.php:			if ($this->transactionID && $options & self::TLOBJ_O_GET_DETAIL_TRANSACTION)
lib/functions/logger.class.php:				$this->transaction = tlTransaction::getByID($db,$this->transactionID,self::TLOBJ_O_GET_DETAIL_MINIMUM);
lib/functions/logger.class.php:				if ($this->transaction)
lib/functions/logger.class.php:					$this->userID = $this->transaction->userID;
lib/functions/logger.class.php:					$this->sessionID = $this->transaction->sessionID;
lib/functions/logger.class.php:		if (!$this->dbID)
lib/functions/logger.class.php:			$logLevel = $db->prepare_int($this->logLevel);
lib/functions/logger.class.php:			if (is_object($this->description))
lib/functions/logger.class.php:				$description = $this->description->serialize();
lib/functions/logger.class.php:				$description = $this->description;
lib/functions/logger.class.php:			$description = $db->prepare_string($description);
lib/functions/logger.class.php:			if (!is_null($this->source))
lib/functions/logger.class.php:				$source = "'".$db->prepare_string($this->source)."'";
lib/functions/logger.class.php:			if (!is_null($this->objectType))
lib/functions/logger.class.php:				$objectType = "'".$db->prepare_string($this->objectType)."'";
lib/functions/logger.class.php:			if (!is_null($this->activityCode))
lib/functions/logger.class.php:				$activityCode = "'".$db->prepare_string($this->activityCode)."'";
lib/functions/logger.class.php:			if (!is_null($this->objectID))
lib/functions/logger.class.php:				$objectID = $db->prepare_int($this->objectID);
lib/functions/logger.class.php:			$firedAt = $db->prepare_int($this->timestamp);
lib/functions/logger.class.php:			$transactionID = $db->prepare_int($this->transactionID);
lib/functions/logger.class.php:			$query = "INSERT INTO {$this->tables['events']} (transaction_id,log_level,description,source," .
lib/functions/logger.class.php:			$result = $db->exec_query($query);
lib/functions/logger.class.php:				$this->dbID = $db->insert_id($this->tables['events']);
lib/functions/logger.class.php:		$this->pendingTransaction = null;
lib/functions/logger.class.php:			$this->doLogging = false;
lib/functions/logger.class.php:		$this->doLogging = true;
lib/functions/logger.class.php:		return $this->doLogging;
lib/functions/logger.class.php:	  if ($this->getEnableLoggingStatus() == false)
lib/functions/logger.class.php:		if (!$this->logLevelFilter)
lib/functions/logger.class.php:		if ($this->checkDBConnection() < tl::OK)
lib/functions/logger.class.php:		if ($t->endTime)
lib/functions/logger.class.php:			$this->pendingTransaction = null;
lib/functions/logger.class.php:			if ($t->dbID)
lib/functions/logger.class.php:			  $this->disableLogging();
lib/functions/logger.class.php:				$t->writeToDb($this->db);
lib/functions/logger.class.php:			  $this->enableLogging();
lib/functions/logger.class.php:			$this->pendingTransaction = $t;
lib/functions/logger.class.php:		if (!$this->doLogging)
lib/functions/logger.class.php:		if (!($e->logLevel & $this->logLevelFilter))
lib/functions/logger.class.php:		if ($this->checkDBConnection() < tl::OK)
lib/functions/logger.class.php:		$this->disableLogging();
lib/functions/logger.class.php:		if ($this->pendingTransaction)
lib/functions/logger.class.php:			$this->pendingTransaction->writeToDb($this->db);
lib/functions/logger.class.php:			$e->transactionID = $this->pendingTransaction->dbID;
lib/functions/logger.class.php:			$this->pendingTransaction = null;
lib/functions/logger.class.php:		$result = $e->writeToDb($this->db);
lib/functions/logger.class.php:		$this->enableLogging();
lib/functions/logger.class.php:		$this->logLevelFilter = $filter & ~tlLogger::DEBUG;
lib/functions/logger.class.php:		if (!$this->db)
lib/functions/logger.class.php:				$this->db = &$db;
lib/functions/logger.class.php:		if (!$this->db || !$this->db->db->isConnected())
lib/functions/logger.class.php:			$this->doLogging = false;
lib/functions/logger.class.php:		$this->doLogging = true;
lib/functions/logger.class.php:		return $this->doLogging;
lib/functions/logger.class.php:	  if ($this->getEnableLoggingStatus() == false)
lib/functions/logger.class.php:		if (!$this->logLevelFilter)
lib/functions/logger.class.php:		$bFinished = $t->endTime ? 1 : 0;
lib/functions/logger.class.php:							$t->getObjectID(),
lib/functions/logger.class.php:							$t->name,
lib/functions/logger.class.php:							$t->entryPoint,
lib/functions/logger.class.php:							gmdate("y/M/j H:i:s",$t->startTime),
lib/functions/logger.class.php:							$bFinished ? gmdate("y/M/j H:i:s",$t->endTime) : null,
lib/functions/logger.class.php:							$t->duration,
lib/functions/logger.class.php:		return $this->writeEntry(self::getLogFileName(),$line);
lib/functions/logger.class.php:		if (!($e->logLevel & $this->logLevelFilter))
lib/functions/logger.class.php:		if (is_object($e->description))
lib/functions/logger.class.php:			$description = $e->description->localize('en_GB');
lib/functions/logger.class.php:			$description = $e->description;
lib/functions/logger.class.php:		$replacements = array(gmdate("y/M/j H:i:s",$e->timestamp),
lib/functions/logger.class.php:								tlLogger::$logLevels[$e->logLevel],
lib/functions/logger.class.php:								$e->source,$description,
lib/functions/logger.class.php:								$e->sessionID ? $e->sessionID : "<nosession>");
lib/functions/logger.class.php:		$this->writeEntry(self::getLogFileName(),$line);
lib/functions/logger.class.php:		if ($e->logLevel == tlLogger::AUDIT)
lib/functions/logger.class.php:			$this->writeEntry(self::getAuditLogFileName(),$line);
lib/functions/logger.class.php:		$this->logLevelFilter = $filter;
lib/functions/logger.class.php:		return $tlCfg->log_path . 'userlog' . $uID . ".log";
lib/functions/logger.class.php:		return $tlCfg->log_path . "audits.log";
lib/functions/logger.class.php:	 * @author Andreas Morsing - logfilenames are dynamic
lib/functions/logger.class.php:		@unlink($this->getLogFileName());
lib/functions/logger.class.php:        $g_tlLogger->$pfn($loggerKey);
lib/functions/logger.class.php:$g_tlLogger->startTransaction();
lib/functions/logger.class.php: * rev: 20080504 - franciscom - added xmlrpc.inc,xmlrpcs.inc,xmlrpc_wrappers.inc in exclude set
lib/functions/logger.class.php:		logWarningEvent($errors[$errno]."\n".$errstr." - in ".$errfile." - Line ".$errline,"PHP");
lib/functions/logger.class.php:		$g_tlLogger->endTransaction();
lib/functions/metastring.class.php:/** TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/metastring.class.php: * a "Not-localized" Event is generated
lib/functions/metastring.class.php: * "Not-localized" events
lib/functions/metastring.class.php:	$mString->helper->bDontFireEvent = true;
lib/functions/metastring.class.php:	 * @var boolean set this to true, if not-localized strings should not generate events 
lib/functions/metastring.class.php: * Class for localize-able String with parameters
lib/functions/metastring.class.php:		$this->helper = new tlMetaStringHelper();
lib/functions/metastring.class.php:			$this->initialize($label,$args);
lib/functions/metastring.class.php:		$this->helper->label = $label;
lib/functions/metastring.class.php:		$this->helper->params = $args;
lib/functions/metastring.class.php:		$this->helper->bDontLocalize = false;
lib/functions/metastring.class.php:		$this->helper->bDontFireEvent = false;
lib/functions/metastring.class.php:		return @serialize($this->helper);
lib/functions/metastring.class.php:			$helper->label = $representation;
lib/functions/metastring.class.php:			$helper->params = null;
lib/functions/metastring.class.php:			$helper->bDontLocalize = true;
lib/functions/metastring.class.php:		$metaString->helper = &$helper;
lib/functions/metastring.class.php:		return $this->localize();
lib/functions/metastring.class.php:		if ($this->helper->bDontLocalize)
lib/functions/metastring.class.php:			$str = $this->helper->label;
lib/functions/metastring.class.php:			$str = lang_get($this->helper->label,$locale,$this->helper->bDontFireEvent);
lib/functions/metastring.class.php:		$params = $this->helper->params;
lib/functions/database.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/database.class.php: * @copyright 	2002-2004  Mantis Team   - mantisbt-dev@lists.sourceforge.net
lib/functions/database.class.php: * @version    	CVS: $Id: database.class.php,v 1.55 2010/08/31 12:18:16 mx-julian Exp $
lib/functions/database.class.php: * 20100111 - franciscon - BUGID - display debug_print_backtrace() when query fails
lib/functions/database.class.php: * 20090720 - franciscom - fetchRowsIntoMap() - added some error management code 
lib/functions/database.class.php: * 20090202 - franciscom - BUGID 1318 - fetchFirstRowSingleColumn() added new control
lib/functions/database.class.php: * 20081129 - franciscom - Added CUMULATIVE constant
lib/functions/database.class.php: * 20081116 - franciscom - fetchColumnsIntoMap() added cumulative argument
lib/functions/database.class.php: * 20080722 - franciscom -  trying to solve memory usage problems, have add option
lib/functions/database.class.php: * 20080722 - franciscom -  problems with MSSQL and ADODB_FETCH_ASSOC
lib/functions/database.class.php: * 20080315 - franciscom -  due to problems with PostGres with $ADODB_COUNTRECS=FALSE;
lib/functions/database.class.php: * 20080204 - franciscom -  setting ADODB_FETCH_ASSOC as default fetch mode
lib/functions/database.class.php: * 20060708 - franciscom -  changed Connect() to NConnect(), to avoid
lib/functions/database.class.php: * effect, for DBMS like POSTGRES method num_rows() will return ALWAYS -1, causing problems
lib/functions/database.class.php:	    $this->logEnabled=$value?1:0;
lib/functions/database.class.php:	    return $this->logEnabled;
lib/functions/database.class.php:	    $this->logQueries=$value?1:0;
lib/functions/database.class.php:	    return $this->logQueries;
lib/functions/database.class.php:		$this->db = NewADOConnection($db_type);
lib/functions/database.class.php:		$this->db->SetFetchMode($fetch_mode);
lib/functions/database.class.php:		return($this->db);
lib/functions/database.class.php:	# 20060708 - franciscom -  changed Connect() to NConnect() see ADODB Manuals
lib/functions/database.class.php:			$t_result = $this->db->NConnect($p_hostname, $p_username, $p_password, $p_database_name );
lib/functions/database.class.php:			$t_result = $this->db->IsConnected();
lib/functions/database.class.php:			$this->is_connected = true;
lib/functions/database.class.php:			$result['dbms_msg']=$this->error();
lib/functions/database.class.php:	function exec_query( $p_query, $p_limit = -1, $p_offset = -1 )
lib/functions/database.class.php:		$this->nQuery++;
lib/functions/database.class.php:		$t_start = $this->microtime_float();
lib/functions/database.class.php:		if ( ( $p_limit != -1 ) || ( $p_offset != -1 ) ) {
lib/functions/database.class.php:			$t_result = $this->db->SelectLimit( $p_query, $p_limit, $p_offset );
lib/functions/database.class.php:			$t_result = $this->db->Execute( $p_query );
lib/functions/database.class.php:		$t_elapsed = number_format( $this->microtime_float() - $t_start, 4);
lib/functions/database.class.php:		$this->overallDuration += $t_elapsed;
lib/functions/database.class.php:		$message = "SQL [". $this->nQuery . "] executed [took {$t_elapsed} secs]" .
lib/functions/database.class.php:		           "[all took {$this->overallDuration} secs]:\n\t\t" . $p_query;
lib/functions/database.class.php:		$this->overallDuration += $t_elapsed;	
lib/functions/database.class.php:			$ec       = $this->error_num();
lib/functions/database.class.php:			$emsg     = $this->error_msg();
lib/functions/database.class.php:		if($this->logEnabled)
lib/functions/database.class.php:		// 20080927 - may be this causes lot of memory usage
lib/functions/database.class.php:		if($this->logQueries)
lib/functions/database.class.php:			array_push ($this->queries_array, array( $p_query, $t_elapsed, $ec, $emsg ) );
lib/functions/database.class.php:			tLog("ERROR ON exec_query() - database.class.php <br />" . $this->error(htmlspecialchars($p_query)) . 
lib/functions/database.class.php:			echo "<pre> DB Access Error - debug_print_backtrace() OUTPUT START </pre>";
lib/functions/database.class.php:		if ( $p_result->EOF ) {
lib/functions/database.class.php:		// mysql obeys FETCH_MODE_BOTH, hence ->fields works, other drivers do not support this
lib/functions/database.class.php:		// 20090713 - pmo - add oci8po
lib/functions/database.class.php:		switch ($this->db->databaseType) 
lib/functions/database.class.php:				$t_array = $p_result->fields;
lib/functions/database.class.php:				$t_array = $p_result->GetRowAssoc(false);
lib/functions/database.class.php:		$p_result->MoveNext();
lib/functions/database.class.php:    // 20080315 - franciscom - Got new code from Mantis, that manages FETCH_MODE_ASSOC
lib/functions/database.class.php:		if ( $p_result && ( $this->num_rows( $p_result ) > 0 ) ) 
lib/functions/database.class.php:			$p_result->Move( $p_index1 );
lib/functions/database.class.php:			$t_result = $p_result->GetArray();
lib/functions/database.class.php:		if ( isset($p_table) && ($this->db_is_pgsql() || $this->db_is_oracle()))
lib/functions/database.class.php:			if ( $this->db_is_pgsql() ) 
lib/functions/database.class.php:			elseif ($this->db_is_oracle())
lib/functions/database.class.php:			$result = $this->exec_query( $sql );
lib/functions/database.class.php:			return $this->db_result($result);
lib/functions/database.class.php:		return $this->db->Insert_ID( );
lib/functions/database.class.php:			// case 'postgres64': - 20060523
lib/functions/database.class.php:		return in_array ( $p_table_name , $this->db->MetaTables( "TABLE" ) ) ;
lib/functions/database.class.php:		return in_array ( $p_field_name , $this->db->MetaColumnNames( $p_table_name ) ) ;
lib/functions/database.class.php:		$c_table = $this->db->prepare_string( $p_table );
lib/functions/database.class.php:		$c_field = $this->db->prepare_string( $p_field );
lib/functions/database.class.php:		$c_key   = $this->db->prepare_string( $p_key );
lib/functions/database.class.php:		$result = $this->exec_query( $sql );
lib/functions/database.class.php:		$count = $this->num_rows( $result );
lib/functions/database.class.php:			$row = $this->db->fetch_array( $result );
lib/functions/database.class.php:	# 20051226 - fm
lib/functions/database.class.php:		$t_escaped = $this->db->qstr( $p_string, false );
lib/functions/database.class.php:		// from second char(1) to one before last(-1)
lib/functions/database.class.php:		return(substr($t_escaped,1,-1));
lib/functions/database.class.php:	    switch($this->db->databaseType)
lib/functions/database.class.php:				return $this->db->DBTimeStamp(time());
lib/functions/database.class.php:	#	-> 882226357
lib/functions/database.class.php:	# > SELECT UNIX_TIMESTAMP('1997-10-04 22:23:00');
lib/functions/database.class.php:	#	-> 875996580
lib/functions/database.class.php:			$p_timestamp = $this->db->UnixTimeStamp($p_date);
lib/functions/database.class.php:		return $this->db->DBTimeStamp($p_timestamp) ;
lib/functions/database.class.php:			$p_timestamp = $this->db->UnixTimeStamp($p_date);
lib/functions/database.class.php:		return count( $this->queries_array );
lib/functions/database.class.php:		foreach ($this->queries_array as $t_val_array) {
lib/functions/database.class.php:		$t_count = count( $this->queries_array );
lib/functions/database.class.php:			$t_total += $this->queries_array[$i][1];
lib/functions/database.class.php:		$t_result = $this->db->Close();
lib/functions/database.class.php:		return $this->db->ErrorNo();
lib/functions/database.class.php:		return $this->db->ErrorMsg();
lib/functions/database.class.php:		$msg= $this->error_num() . " - " . $this->error_msg();
lib/functions/database.class.php:			$msg .= " - " . $p_query ;
lib/functions/database.class.php:		return $p_result->RecordCount( );
lib/functions/database.class.php:		return $this->db->Affected_Rows( );
lib/functions/database.class.php:		$row = $this->fetchFirstRow($sql);
lib/functions/database.class.php:	 * Fetches the first row (in a assoc-array)
lib/functions/database.class.php:		$result = $this->exec_query($sql);
lib/functions/database.class.php:			$row = $this->fetch_array($result);
lib/functions/database.class.php:	  	$row = $this->fetchFirstRow($sql);
lib/functions/database.class.php:	function fetchColumnsIntoArray($sql,$column,$limit = -1)
lib/functions/database.class.php:		$result = $this->exec_query($sql,$limit);
lib/functions/database.class.php:			while($row = $this->fetch_array($result))
lib/functions/database.class.php:	 *        cumulative=0 -> return items= array('X' => array('A','C'), 'Y' => array('B','0') )
lib/functions/database.class.php:	 *        cumulative=1 -> return items= 
lib/functions/database.class.php:	function fetchRowsIntoMap($sql,$column,$cumulative = 0,$limit = -1)
lib/functions/database.class.php:		$result = $this->exec_query($sql,$limit);
lib/functions/database.class.php:			while($row = $this->fetch_array($result))
lib/functions/database.class.php:				// -----------------------------------------------
lib/functions/database.class.php:				$errorMsg=__CLASS__ . '/' . __FUNCTION__ . ' - ';
lib/functions/database.class.php:    			    $errorMsg .= ' - SQL:' . $sql;
lib/functions/database.class.php:                // -----------------------------------------------
lib/functions/database.class.php:	 *        cumulative=0 -> return items= array('X' => 'B', 'Y' => 'B')
lib/functions/database.class.php:	 *        cumulative=1 -> return items= array('X' => array('A','B'), 'Y' => array('B') )
lib/functions/database.class.php:	function fetchColumnsIntoMap($sql,$column1,$column2,$cumulative=0,$limit = -1)
lib/functions/database.class.php:		$result = $this->exec_query($sql,$limit);
lib/functions/database.class.php:			while ($myrow = $this->fetch_array($result))
lib/functions/database.class.php:		$version = $this->db->ServerInfo();
lib/functions/database.class.php:	function get_recordset($sql,$fetch_mode = null,$limit = -1)
lib/functions/database.class.php:		$result = $this->exec_query($sql,$limit);
lib/functions/database.class.php:			while($row = $this->fetch_array($result))
lib/functions/database.class.php:	function fetchArrayRowsIntoMap($sql,$column,$limit = -1)
lib/functions/database.class.php:		$result = $this->exec_query($sql,$limit);
lib/functions/database.class.php:			while($row = $this->fetch_array($result))
lib/functions/database.class.php:	function fetchMapRowsIntoMap($sql,$column_main_key,$column_sec_key,$cumulative = 0,$limit = -1)
lib/functions/database.class.php:		$result = $this->exec_query($sql,$limit);
lib/functions/database.class.php:			while($row = $this->fetch_array($result))
lib/functions/database.class.php:		$db_type = $this->db->databaseType;
lib/functions/database.class.php:				$sql = 'CREATE DATABASE "' . $this->prepare_string($db_name) . '" ' . "WITH ENCODING='UNICODE' "; 
lib/functions/database.class.php:				$sql = 'CREATE DATABASE [' . $this->prepare_string($db_name) . '] '; 
lib/functions/database.class.php:				$sql = "CREATE DATABASE `" . $this->prepare_string($db_name) . "` CHARACTER SET utf8 "; 
lib/functions/lang_api.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/lang_api.php: * @copyright 	2005-2009, TestLink community 
lib/functions/lang_api.php: *	20100823 - franciscom - forcing loading of en_GB, for displaying missing localization
lib/functions/lang_api.php: *	20100820 - franciscom - new feature on init_labels()
lib/functions/lang_api.php: *	20070501 - franciscom - lang_get_smarty() now accept a list of
lib/functions/lang_api.php: *	20070501 - franciscom - enabled logic to manage a custom_strings.txt file
lib/functions/lang_api.php: *	20050508 - fm - changes to lang_get_smarty()
lib/functions/lang_api.php: *	200800606 - havlatm - added description.php resource
lib/functions/lang_api.php: * 		Copyright (C) 2000 - 2002  Kenzaburo Ito - kenito@300baud.org
lib/functions/lang_api.php: * 		Copyright (C) 2002 - 2004  Mantis Team   - mantisbt-dev@lists.sourceforge.net
lib/functions/lang_api.php: *      20070501 - franciscom - added TL_LOCALIZE_TAG in order to
lib/functions/lang_api.php:		$stringFileCharset = "ISO-8859-1";
lib/functions/lang_api.php:			// 20100823 - franciscom
lib/functions/lang_api.php: * 20050708 - fm
lib/functions/lang_api.php:		$smarty->assign($params['var'], $myLabels);
lib/functions/lang_api.php: * 20100820 - franciscom - support for null as string_to_translate
lib/functions/lang_api.php: * 20050708 - fm - Modified to cope with situation where you need to assign 
lib/functions/lang_api.php:		$smarty->assign($params['var'],$retVal);
lib/functions/csv.inc.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/csv.inc.php: *	20100508 - franciscom - BUGID 3447 - importCSVData() 
lib/functions/csv.inc.php:// 20061014 - franciscom
lib/functions/date_api.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/date_api.php: * @copyright 	2002 - 2004  Mantis Team   - mantisbt-dev@lists.sourceforge.net
lib/functions/date_api.php: * @copyright 	2005-2009, TestLink community 
lib/functions/date_api.php: *	20100405 - franciscom - fixed problems found while trying to solve BUGID 3295
lib/functions/date_api.php: *	20080816 - franciscom
lib/functions/date_api.php: * create html code for months combo-box
lib/functions/date_api.php:	for ($i=$current_year; $i>1999; $i--) {
lib/functions/date_api.php:	$t_chars = preg_split('//', $p_format, -1, PREG_SPLIT_NO_EMPTY) ;
lib/functions/date_api.php:		// 20080816 - $t_date = preg_split('/-/', date( 'Y-m-d', $p_date), -1, PREG_SPLIT_NO_EMPTY) ;
lib/functions/date_api.php:		$t_date = preg_split('/-| |:/', date( 'Y-m-d H:i:s', $p_date), -1, PREG_SPLIT_NO_EMPTY) ;
lib/functions/date_api.php:		// 20080816 -  $t_date = array( 0, 0, 0 );
lib/functions/date_api.php:		// 20100405 - think is WRONG use valid value (0) for time
lib/functions/date_api.php:		$t_date = array( 0, 0, 0, -1, -1, -1 );
lib/functions/date_api.php:		$t_blank_line_time = "<option value=\"-1\"></option>" ;
lib/functions/date_api.php:		// -----------------------------------------------------------------
lib/functions/build_progress.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/build_progress.class.php: * 20100821 - asimon - BUGID 3682
lib/functions/build_progress.class.php: * 20100820 - asimon - added last missing comments, little refactorization for table prefix
lib/functions/build_progress.class.php: * 20100731 - asimon - initial commit		
lib/functions/build_progress.class.php:		return $this->assigned_execution_map;
lib/functions/build_progress.class.php:		return $this->unassigned_execution_map;
lib/functions/build_progress.class.php:		return $this->status_map;
lib/functions/build_progress.class.php:		return $this->results_matrix;
lib/functions/build_progress.class.php:		return $this->build_set;
lib/functions/build_progress.class.php:		$this->labels = array('na' => lang_get('not_aplicable'));
lib/functions/build_progress.class.php:			$this->status_map[$status] = $res_cfg['status_code'][$status];
lib/functions/build_progress.class.php:		$this->tplan_mgr = new testplan($this->db);
lib/functions/build_progress.class.php:		$this->tproject_mgr = new testproject($this->db);
lib/functions/build_progress.class.php:		$this->tplan_id = is_numeric($tplan_id) ? $tplan_id : 0;
lib/functions/build_progress.class.php:		if ($this->tplan_id) {
lib/functions/build_progress.class.php:			$this->tplan_info = $this->tplan_mgr->get_by_id($this->tplan_id);
lib/functions/build_progress.class.php:			$this->load_builds();
lib/functions/build_progress.class.php:			$this->load_assigned_execution_map();
lib/functions/build_progress.class.php:			$this->load_unassigned_execution_map();
lib/functions/build_progress.class.php:			$this->build_results_matrix();
lib/functions/build_progress.class.php:		$this->build_set = $this->tplan_mgr->get_builds($this->tplan_id, testplan::GET_ACTIVE_BUILD);
lib/functions/build_progress.class.php:		if (is_array($this->build_set)) {
lib/functions/build_progress.class.php:			$keys = array_keys($this->build_set);
lib/functions/build_progress.class.php:			$this->build_list =  implode(",", $keys);
lib/functions/build_progress.class.php:		foreach ($this->build_set as $build_id => $build_info) {
lib/functions/build_progress.class.php:		       " FROM {$this->tables['user_assignments']} UA " .
lib/functions/build_progress.class.php:		       " LEFT OUTER JOIN {$this->tables['testplan_tcversions']} TPTCV " . 
lib/functions/build_progress.class.php:		       " LEFT OUTER JOIN {$this->tables['executions']} E " . 
lib/functions/build_progress.class.php:		$this->assigned_execution_map[$build_id] = $this->db->fetchMapRowsIntoMap($sql, 'user_id', 'tcversion_id', 
lib/functions/build_progress.class.php:		foreach ($this->build_set as $build_id => $build_info) {
lib/functions/build_progress.class.php:		       " FROM {$this->tables['executions']} E " .
lib/functions/build_progress.class.php:		       " LEFT OUTER JOIN {$this->tables['testplan_tcversions']} TPTCV " .
lib/functions/build_progress.class.php:		       " LEFT OUTER JOIN {$this->tables['user_assignments']} UA " .
lib/functions/build_progress.class.php:		$this->unassigned_execution_map[$build_id] = $this->db->fetchRowsIntoMap($sql, 'tcversion_id', 
lib/functions/build_progress.class.php:		foreach ($this->assigned_execution_map as $build_id => $build_executions) {
lib/functions/build_progress.class.php:					$counters = $this->compute_results($build_id, $user_id, $tcversion_executions);
lib/functions/build_progress.class.php:					$this->results_matrix[$build_id][$user_id] = $counters;
lib/functions/build_progress.class.php:		foreach ($this->unassigned_execution_map as $build_id => $build_executions) {
lib/functions/build_progress.class.php:				$counters = $this->compute_results($build_id, TL_NO_USER, $build_executions);
lib/functions/build_progress.class.php:				$this->results_matrix[$build_id][TL_NO_USER] = $counters;
lib/functions/build_progress.class.php:			$counters['total'] = $this->labels['na'];
lib/functions/build_progress.class.php:			$nr_count = $this->labels['na'];
lib/functions/build_progress.class.php:			$counters['total'] = $this->tplan_mgr->assignment_mgr->get_count_of_assignments_for_build_id(
lib/functions/build_progress.class.php:			$nr_count = $this->tplan_mgr->assignment_mgr->get_not_run_tc_count_per_build($build_id, 
lib/functions/build_progress.class.php:		foreach ($this->status_map as $status => $code) {
lib/functions/build_progress.class.php:				$counters[$status]['percentage'] = $this->labels['na'];
lib/functions/build_progress.class.php:			$progress = number_format(100 - $percent, 2);
lib/functions/build_progress.class.php:			$percent = $this->labels['na'];
lib/functions/build_progress.class.php:			$progress = $this->labels['na'];
lib/functions/requirement_spec_mgr.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/requirement_spec_mgr.class.php: *	20100320 - franciscom - xmlToMapReqSpec() added attributes: type,total_req 
lib/functions/requirement_spec_mgr.class.php: *	20100311 - franciscom - fixed bug due to missed isset() control
lib/functions/requirement_spec_mgr.class.php: *  20100307 - amitkhullar - small bug fix for Requirements based report.
lib/functions/requirement_spec_mgr.class.php: *  20100209 - franciscom - changes in delete_subtree_objects() call due to BUGID 3147 
lib/functions/requirement_spec_mgr.class.php: * 	20091228 - franciscom - get_requirements() - refactored to manage req versions
lib/functions/requirement_spec_mgr.class.php: *                          get_coverage() - refactored to manage req versions
lib/functions/requirement_spec_mgr.class.php: * 	20091225 - franciscom - new method - generateDocID()
lib/functions/requirement_spec_mgr.class.php: * 	20091223 - franciscom - new method - copy_to() + changes to check_main_data()
lib/functions/requirement_spec_mgr.class.php: *  20091209 - asimon     - contrib for testcase creation, BUGID 2996
lib/functions/requirement_spec_mgr.class.php: *	20091202 - franciscom - create(), update() 
lib/functions/requirement_spec_mgr.class.php: *                          added contribution by asimon83/mx-julian that creates
lib/functions/requirement_spec_mgr.class.php: *  20091122 - franciscom - new methods getByDocID(), check_main_data()
lib/functions/requirement_spec_mgr.class.php: *	20091119 - franciscom - added doc_id management
lib/functions/requirement_spec_mgr.class.php: *  20090525 - franciscom - avoid getDisplayName() crash due to deleted user 
lib/functions/requirement_spec_mgr.class.php: *  20090514 - franciscom - BUGID 2491
lib/functions/requirement_spec_mgr.class.php: *  20090427 - amitkhullar- BUGID : 2439 Modified query to handle lower case status codes.
lib/functions/requirement_spec_mgr.class.php: *  20090322 - franciscom - create() - added node_order.
lib/functions/requirement_spec_mgr.class.php: *                          check_title() - improvements now manages test project id and parent id.
lib/functions/requirement_spec_mgr.class.php: *                          get_by_title() - improvements now manages test project id and parent id.
lib/functions/requirement_spec_mgr.class.php: *  20090322 - franciscom - xmlToMapReqSpec()
lib/functions/requirement_spec_mgr.class.php: *  20090321 - franciscom - added customFieldValuesAsXML() to improve exportReqSpecToXML()
lib/functions/requirement_spec_mgr.class.php: *  20090315 - franciscom - added delete_deep();
lib/functions/requirement_spec_mgr.class.php: *  20090222 - franciscom - added getReqTree(), get_by_id() added node_order in result
lib/functions/requirement_spec_mgr.class.php: *  20090111 - franciscom - BUGID 1967 - html_table_of_custom_field_inputs()
lib/functions/requirement_spec_mgr.class.php:		$this->db = &$db;
lib/functions/requirement_spec_mgr.class.php:		$this->cfield_mgr = new cfield_mgr($this->db);
lib/functions/requirement_spec_mgr.class.php:		$this->tree_mgr =  new tree($this->db);
lib/functions/requirement_spec_mgr.class.php:		$this->node_types_descr_id = $this->tree_mgr->get_available_node_types();
lib/functions/requirement_spec_mgr.class.php:		$this->node_types_id_descr = array_flip($this->node_types_descr_id);
lib/functions/requirement_spec_mgr.class.php:		$this->my_node_type = $this->node_types_descr_id['requirement_spec'];
lib/functions/requirement_spec_mgr.class.php:        $this->attachmentTableName = 'req_specs';
lib/functions/requirement_spec_mgr.class.php:		tlObjectWithAttachments::__construct($this->db,$this->attachmentTableName);
lib/functions/requirement_spec_mgr.class.php:	    $this->object_table=$this->tables['req_specs'];
lib/functions/requirement_spec_mgr.class.php:	  args: -
lib/functions/requirement_spec_mgr.class.php:    	return $this->export_file_types;
lib/functions/requirement_spec_mgr.class.php:	  args: -
lib/functions/requirement_spec_mgr.class.php:     	return $this->import_file_types;
lib/functions/requirement_spec_mgr.class.php:             status_ok -> 1/0
lib/functions/requirement_spec_mgr.class.php:             msg -> some simple message, useful when status_ok ==0
lib/functions/requirement_spec_mgr.class.php:             id -> id of requirement specification
lib/functions/requirement_spec_mgr.class.php:    	20091202 - franciscom -  added contribution by asimon83/mx-julian 
lib/functions/requirement_spec_mgr.class.php:    	20080830 - franciscom -  added new argument parent_id
lib/functions/requirement_spec_mgr.class.php:        20080318 - franciscom - removed code to get last inserted id
lib/functions/requirement_spec_mgr.class.php:	$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/requirement_spec_mgr.class.php:    $chk=$this->check_main_data($title,$doc_id,$tproject_id,$parent_id);
lib/functions/requirement_spec_mgr.class.php:    	/* contribution by asimon83/mx-julian */
lib/functions/requirement_spec_mgr.class.php:		if( config_get('internal_links')->enable ) 
lib/functions/requirement_spec_mgr.class.php:			$scope = req_link_replace($this->db, $scope, $tproject_id);
lib/functions/requirement_spec_mgr.class.php:		/* end contribution by asimon83/mx-julian */
lib/functions/requirement_spec_mgr.class.php:        $req_spec_id = $this->tree_mgr->new_node($parent_id,$this->my_node_type,$title,$node_order);
lib/functions/requirement_spec_mgr.class.php:        $sql = "/* $debugMsg */ INSERT INTO {$this->object_table} " .
lib/functions/requirement_spec_mgr.class.php:               $this->db->prepare_string($doc_id) . "','" .
lib/functions/requirement_spec_mgr.class.php:               $this->db->prepare_string($scope) .  "','" . $this->db->prepare_string($type) . "','" .
lib/functions/requirement_spec_mgr.class.php:               $this->db->prepare_string($countReq) . "'," . $user_id . ", " . $this->db->db_now() . ")";
lib/functions/requirement_spec_mgr.class.php:        if (!$this->db->exec_query($sql))
lib/functions/requirement_spec_mgr.class.php:	$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/requirement_spec_mgr.class.php:    	   " FROM {$this->object_table} RSPEC,  {$this->tables['nodes_hierarchy']} NH" .
lib/functions/requirement_spec_mgr.class.php:	$recordset = $this->db->get_recordset($sql);
lib/functions/requirement_spec_mgr.class.php:            $user = tlUser::getByID($this->db,$rs['author_id']);
lib/functions/requirement_spec_mgr.class.php:                $rs['author'] = $user->getDisplayName();
lib/functions/requirement_spec_mgr.class.php:            $user = tlUser::getByID($this->db,$rs['modifier_id']);
lib/functions/requirement_spec_mgr.class.php:                $rs['modifier'] = $user->getDisplayName();
lib/functions/requirement_spec_mgr.class.php:	$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/requirement_spec_mgr.class.php:    $req_mgr = new requirement_mgr($this->db);
lib/functions/requirement_spec_mgr.class.php:	$validReq = $this->get_requirements($id,'all',null,$getOptions,$getFilters);
lib/functions/requirement_spec_mgr.class.php:	// get not-testable requirements
lib/functions/requirement_spec_mgr.class.php:    $output['nottestable'] = $this->get_requirements($id,'all',null,$getOptions,$getFilters);   
lib/functions/requirement_spec_mgr.class.php:			$arrCoverage = $req_mgr->get_coverage($req['id']);
lib/functions/requirement_spec_mgr.class.php:	$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/requirement_spec_mgr.class.php:    $output['notTestable'] = $this->get_requirements_count($id,'all',null,$getFilters);
lib/functions/requirement_spec_mgr.class.php:	$sql = "/* $debugMsg */ SELECT count(0) AS cnt FROM {$this->tables['requirements']} WHERE srs_id={$id}";
lib/functions/requirement_spec_mgr.class.php:	$output['total'] = $this->db->fetchFirstRowSingleColumn($sql,'cnt');
lib/functions/requirement_spec_mgr.class.php:	$sql = "/* $debugMsg */ SELECT total_req FROM {$this->object_table} WHERE id={$id}";
lib/functions/requirement_spec_mgr.class.php:	$output['expectedTotal'] = $this->db->fetchFirstRowSingleColumn($sql,'total_req');
lib/functions/requirement_spec_mgr.class.php:	       " FROM {$this->tables['requirements']} REQ " .
lib/functions/requirement_spec_mgr.class.php:	       " JOIN {$this->tables['req_coverage']} REQ_COV ON REQ.id=REQ_COV.req_id" .
lib/functions/requirement_spec_mgr.class.php:	$rs = $this->db->get_recordset($sql);
lib/functions/requirement_spec_mgr.class.php:	$output['uncovered'] = $output['expectedTotal'] - $output['total'];
lib/functions/requirement_spec_mgr.class.php:   	$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/requirement_spec_mgr.class.php:	       " FROM {$this->object_table} RSPEC, {$this->tables['nodes_hierarchy']} NH " .
lib/functions/requirement_spec_mgr.class.php:	return $this->db->get_recordset($sql);
lib/functions/requirement_spec_mgr.class.php:             status_ok -> 1/0
lib/functions/requirement_spec_mgr.class.php:             msg -> some simple message, useful when status_ok ==0
lib/functions/requirement_spec_mgr.class.php:    	$path=$this->tree_mgr->get_path($id); 
lib/functions/requirement_spec_mgr.class.php:    	$last_idx=count($path)-1;
lib/functions/requirement_spec_mgr.class.php:    	$chk=$this->check_main_data($title,$doc_id,$path[0]['parent_id'],$parent_id,$id);
lib/functions/requirement_spec_mgr.class.php:    		/* contribution by asimon83/mx-julian */
lib/functions/requirement_spec_mgr.class.php:			if( config_get('internal_links')->enable  ) 
lib/functions/requirement_spec_mgr.class.php:				$scope = req_link_replace($this->db, $scope, $tproject_id);
lib/functions/requirement_spec_mgr.class.php:			/* end contribution by asimon83/mx-julian */
lib/functions/requirement_spec_mgr.class.php:		    $db_now = $this->db->db_now();
lib/functions/requirement_spec_mgr.class.php:    	    $sql = " UPDATE {$this->object_table} " .
lib/functions/requirement_spec_mgr.class.php:    	           " SET scope='" . $this->db->prepare_string($scope) . "', " .
lib/functions/requirement_spec_mgr.class.php:			       " doc_id='" . $this->db->prepare_string($doc_id) . "', " .
lib/functions/requirement_spec_mgr.class.php:			       " type='" . $this->db->prepare_string($type) . "', " .
lib/functions/requirement_spec_mgr.class.php:			       " total_req ='" . $this->db->prepare_string($countReq) . "', " .
lib/functions/requirement_spec_mgr.class.php:    	    if (!$this->db->exec_query($sql))
lib/functions/requirement_spec_mgr.class.php:    	        $sql = " UPDATE {$this->tables['nodes_hierarchy']} " .
lib/functions/requirement_spec_mgr.class.php:  		    	       " SET name='" . $this->db->prepare_string($title) . "'";
lib/functions/requirement_spec_mgr.class.php:  		    	if (!$this->db->exec_query($sql))
lib/functions/requirement_spec_mgr.class.php:    $req_mgr = new requirement_mgr($this->db);
lib/functions/requirement_spec_mgr.class.php:	$this->cfield_mgr->remove_all_design_values_from_node($id);
lib/functions/requirement_spec_mgr.class.php:	$result = $this->attachmentRepository->deleteAttachmentsFor($id,"req_specs");
lib/functions/requirement_spec_mgr.class.php:	$requirements_info = $this->get_requirements($id);
lib/functions/requirement_spec_mgr.class.php:		$req_mgr->delete($items);
lib/functions/requirement_spec_mgr.class.php:	$sql = "DELETE FROM {$this->object_table} WHERE id = {$id}";
lib/functions/requirement_spec_mgr.class.php:	$result = $this->db->exec_query($sql);
lib/functions/requirement_spec_mgr.class.php:	$sql = "DELETE FROM {$this->tables['nodes_hierarchy']} WHERE id = {$id}";
lib/functions/requirement_spec_mgr.class.php:	$result = $this->db->exec_query($sql);
lib/functions/requirement_spec_mgr.class.php:	// BUGID 3147 - Delete test project with requirements defined crashed with memory exhausted
lib/functions/requirement_spec_mgr.class.php:    $this->tree_mgr->delete_subtree_objects($id,$id,'',array('requirement' => 'exclude_my_children'));
lib/functions/requirement_spec_mgr.class.php:    $this->delete($id);
lib/functions/requirement_spec_mgr.class.php:    rev: 20080830 - franciscom - changed to get node_order from nodes hierarchy table
lib/functions/requirement_spec_mgr.class.php:	$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/requirement_spec_mgr.class.php:    $req_mgr = new requirement_mgr($this->db);
lib/functions/requirement_spec_mgr.class.php:    // First Step - get only req info
lib/functions/requirement_spec_mgr.class.php:	$sql = "/* $debugMsg */ SELECT NH_REQ.id FROM {$this->tables['nodes_hierarchy']} NH_REQ ";
lib/functions/requirement_spec_mgr.class.php:			$sql .= " JOIN {$this->tables['req_coverage']} REQ_COV ON REQ_COV.req_id=NH_REQ.id ";
lib/functions/requirement_spec_mgr.class.php:	        " AND NH_REQ.node_type_id = {$this->node_types_descr_id['requirement']} {$tcase_filter}";
lib/functions/requirement_spec_mgr.class.php:	$itemSet = $this->db->fetchRowsIntoMap($sql,'id');
lib/functions/requirement_spec_mgr.class.php:		       " FROM {$this->tables['nodes_hierarchy']} NH_REQV " .
lib/functions/requirement_spec_mgr.class.php:		$latestVersionSet = $this->db->fetchRowsIntoMap($sql,'version_id');
lib/functions/requirement_spec_mgr.class.php:		$rs = $req_mgr->get_by_id($reqSet,$reqVersionSet,null,$getOptions,$my['filters']);	    	
lib/functions/requirement_spec_mgr.class.php:                            default 0 -> case sensivite search
lib/functions/requirement_spec_mgr.class.php:   	$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/requirement_spec_mgr.class.php:    $the_title=$this->db->prepare_string($title);
lib/functions/requirement_spec_mgr.class.php:  	       " FROM {$this->object_table} RSPEC, {$this->tables['nodes_hierarchy']} NH";
lib/functions/requirement_spec_mgr.class.php:    $output = $this->db->fetchRowsIntoMap($sql,'id');
lib/functions/requirement_spec_mgr.class.php:           [parent_id]: default null -> do check for tile uniqueness system wide.
lib/functions/requirement_spec_mgr.class.php:                            default 0 -> case sensivite search
lib/functions/requirement_spec_mgr.class.php:      	$rs = $this->get_by_title($title,$tproject_id,$parent_id,$case_analysis);
lib/functions/requirement_spec_mgr.class.php:  	          $tlCfg->req_cfg->child_requirements_mgmt has effects on check on already
lib/functions/requirement_spec_mgr.class.php:              $tlCfg->req_cfg->child_requirements_mgmt == ENABLED  => N level tree
lib/functions/requirement_spec_mgr.class.php:           [parent_id]: default null -> do check for tile uniqueness system wide.
lib/functions/requirement_spec_mgr.class.php:                            default 0 -> case sensivite search
lib/functions/requirement_spec_mgr.class.php:  	// 20091223 - this has to be removed if we remove unique index
lib/functions/requirement_spec_mgr.class.php:  	// $my_parent_id = $cfg->child_requirements_mgmt == ENABLED ? null : $parent_id;
lib/functions/requirement_spec_mgr.class.php:  	// 20091223 - franciscom -
lib/functions/requirement_spec_mgr.class.php:    //   	$rs = $this->get_by_title($title,$tproject_id,$my_parent_id,$case_analysis);
lib/functions/requirement_spec_mgr.class.php:      	$rs = $this->getByDocID($doc_id,$tproject_id);
lib/functions/requirement_spec_mgr.class.php:    $this->tree_mgr->change_order_bulk($map_id_order);
lib/functions/requirement_spec_mgr.class.php:	$count = $this->get_requirements($id,$range,$testcase_id,$options,$filters);
lib/functions/requirement_spec_mgr.class.php: *                    [name] => SUB-R
lib/functions/requirement_spec_mgr.class.php: *                    [name] => SUB-R2
lib/functions/requirement_spec_mgr.class.php:    $map = $this->tree_mgr->get_subtree($id,$filters,$options);
lib/functions/requirement_spec_mgr.class.php: *  - basic data (title, scope)
lib/functions/requirement_spec_mgr.class.php: *  - custom fields values
lib/functions/requirement_spec_mgr.class.php: *  - children: can be other req spec  or requirements (tree leaves)
lib/functions/requirement_spec_mgr.class.php: * 20100320 - franciscom - added TYPE
lib/functions/requirement_spec_mgr.class.php: * 20091122 - franciscom - added doc id management  
lib/functions/requirement_spec_mgr.class.php:	  	$cfXML = $this->customFieldValuesAsXML($id,$tproject_id);
lib/functions/requirement_spec_mgr.class.php:		$containerData = $this->get_by_id($id);
lib/functions/requirement_spec_mgr.class.php:	$req_spec = $this->getReqTree($id);
lib/functions/requirement_spec_mgr.class.php:	    		$xmlData .= $this->exportReqSpecToXML($cNode['id'],$tproject_id,$optionsForExport);
lib/functions/requirement_spec_mgr.class.php:	    	      $req_mgr = new requirement_mgr($this->db);
lib/functions/requirement_spec_mgr.class.php:	    		$reqXMLData = $req_mgr->exportReqToXML($cNode['id'],$tproject_id);
lib/functions/requirement_spec_mgr.class.php:	    		$xmlData .= $req_mgr->exportReqToXML($cNode['id'],$tproject_id);
lib/functions/requirement_spec_mgr.class.php: *               $source->type: possible values 'string', 'file'
lib/functions/requirement_spec_mgr.class.php: *               $source->value: depends of $source->type 
lib/functions/requirement_spec_mgr.class.php:    switch( $source->type )
lib/functions/requirement_spec_mgr.class.php:            $xml_string = $source->value;
lib/functions/requirement_spec_mgr.class.php:            $xml_file = $source->value;
lib/functions/requirement_spec_mgr.class.php:    $dummy['node_order'] = (int)$xml_item->node_order;
lib/functions/requirement_spec_mgr.class.php:    $dummy['scope'] = (string)$xml_item->scope;
lib/functions/requirement_spec_mgr.class.php:    $dummy['type'] = (int)$xml_item->type;
lib/functions/requirement_spec_mgr.class.php:    $dummy['total_req'] = (int)$xml_item->total_req;
lib/functions/requirement_spec_mgr.class.php:    foreach($xml_item->attributes() as $key => $value)
lib/functions/requirement_spec_mgr.class.php:          foreach($xml_item->custom_fields->children() as $key)
lib/functions/requirement_spec_mgr.class.php:             $dummy['custom_fields'][(string)$key->name]= (string)$key->value;
lib/functions/requirement_spec_mgr.class.php:            $req_mgr = new requirement_mgr($this->db);
lib/functions/requirement_spec_mgr.class.php:        $loop2do=count($xml_item->requirement);
lib/functions/requirement_spec_mgr.class.php:            $xml_req=$req_mgr->xmlToMapRequirement($xml_item->requirement[$idx]);
lib/functions/requirement_spec_mgr.class.php:                $fdx=count($mapped)-1;
lib/functions/requirement_spec_mgr.class.php:        $loop2do=count($xml_item->req_spec);
lib/functions/requirement_spec_mgr.class.php:            $this->xmlToMapReqSpec($xml_item->req_spec[$idx],$depth);
lib/functions/requirement_spec_mgr.class.php:// ---------------------------------------------------------------------------------------
lib/functions/requirement_spec_mgr.class.php:// ---------------------------------------------------------------------------------------
lib/functions/requirement_spec_mgr.class.php:                       null -> use requirement spec id as starting point.
lib/functions/requirement_spec_mgr.class.php:                       !is_null -> use this value as starting point.
lib/functions/requirement_spec_mgr.class.php:       20070302 - check for $id not null, is not enough, need to check is > 0
lib/functions/requirement_spec_mgr.class.php:		$req_spec_info = $this->get_by_id($id);
lib/functions/requirement_spec_mgr.class.php:	$cf_map = $this->cfield_mgr->get_linked_cfields_at_design($tproject_id,$enabled,null,
lib/functions/requirement_spec_mgr.class.php:        [parent_id]: Need to e rethinked, may be remove (20090111 - franciscom)
lib/functions/requirement_spec_mgr.class.php:    $cf_map = $this->get_linked_cfields($id,$tproject_id);
lib/functions/requirement_spec_mgr.class.php:				          $this->cfield_mgr->string_custom_field_input($cf_info,$name_suffix) .
lib/functions/requirement_spec_mgr.class.php:  	$cf_map = $this->get_linked_cfields($id,$tproject_id);
lib/functions/requirement_spec_mgr.class.php:								$this->cfield_mgr->string_custom_field_value($cf_info,$id) .
lib/functions/requirement_spec_mgr.class.php:               Example custom_field_0_67 -> 0=> string field
lib/functions/requirement_spec_mgr.class.php:          [cf_map]:  hash -> all the custom fields linked and enabled
lib/functions/requirement_spec_mgr.class.php:    $this->cfield_mgr->design_values_to_db($hash,$node_id,$cf_map,$hash_type);
lib/functions/requirement_spec_mgr.class.php:    $cfMap=$this->get_linked_cfields($id,$tproject_id);
lib/functions/requirement_spec_mgr.class.php:        $xml = $this->cfield_mgr->exportValueAsXML($cfMap);
lib/functions/requirement_spec_mgr.class.php:	$items = $this->xmlToMapReqSpec($xml);
lib/functions/requirement_spec_mgr.class.php:    $req_mgr = new requirement_mgr($this->db);
lib/functions/requirement_spec_mgr.class.php:	$skip_level = -1;
lib/functions/requirement_spec_mgr.class.php:		// 20100320 - 
lib/functions/requirement_spec_mgr.class.php: 		$check_in_container = $this->getByDocID($rspec['doc_id'],$tproject_id,$container_id[$depth],$getOptions);
lib/functions/requirement_spec_mgr.class.php:			$check_in_tproject = $this->getByDocID($rspec['doc_id'],$tproject_id,null,$getOptions);
lib/functions/requirement_spec_mgr.class.php:        		$result = $this->create($tproject_id,$container_id[$depth],$rspec['doc_id'],$rspec['title'],
lib/functions/requirement_spec_mgr.class.php:			$result = $this->update($reqSpecID,$rspec['doc_id'],$rspec['title'],$rspec['scope'],
lib/functions/requirement_spec_mgr.class.php:        	$skip_level = -1;
lib/functions/requirement_spec_mgr.class.php:					// 	If there is a hit -> we can not create
lib/functions/requirement_spec_mgr.class.php:                    // 20100321 - we do not manage yet user option
lib/functions/requirement_spec_mgr.class.php:					$check_in_reqspec = $req_mgr->getByDocID($req['docid'],$tproject_id,$reqSpecID,$getOptions);
lib/functions/requirement_spec_mgr.class.php:						$check_in_tproject = $req_mgr->getByDocID($req['docid'],$tproject_id,null,$getOptions);
lib/functions/requirement_spec_mgr.class.php:                    		$req_mgr->create($result['id'],$req['docid'],$req['title'],$req['description'],
lib/functions/requirement_spec_mgr.class.php:						// What to do if is Frozen ??? -> now ignore and update anyway
lib/functions/requirement_spec_mgr.class.php:						$last_version = $req_mgr->get_last_version_info($reqID);
lib/functions/requirement_spec_mgr.class.php:						$result = $req_mgr->update($reqID,$last_version['id'],$req['docid'],$req['title'],$req['description'],
lib/functions/requirement_spec_mgr.class.php:                             default 0 -> case sensivite search
lib/functions/requirement_spec_mgr.class.php:	$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/requirement_spec_mgr.class.php:    $the_doc_id=$this->db->prepare_string(trim($doc_id));
lib/functions/requirement_spec_mgr.class.php:	$sql .= " FROM {$this->object_table} RSPEC, {$this->tables['nodes_hierarchy']} NH " .
lib/functions/requirement_spec_mgr.class.php:	$output = $this->db->fetchRowsIntoMap($sql,$my['options']['access_key']);
lib/functions/requirement_spec_mgr.class.php:	           id: new created if everything OK, -1 if problems.
lib/functions/requirement_spec_mgr.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/requirement_spec_mgr.class.php:		$op = array('status_ok' => 1, 'msg' => 'ok', 'id' => -1 , 'mappings' => null);
lib/functions/requirement_spec_mgr.class.php:		$item_info = $this->get_by_id($id);
lib/functions/requirement_spec_mgr.class.php:        $target_doc = $this->generateDocID($id,$tproject_id);		
lib/functions/requirement_spec_mgr.class.php:		$new_item = $this->create($tproject_id,$parent_id,$target_doc,$item_info['title'],
lib/functions/requirement_spec_mgr.class.php:			$this->copy_cfields($id,$new_item['id']);
lib/functions/requirement_spec_mgr.class.php:			$subtree = $this->tree_mgr->get_subtree($id,$my['filters']);
lib/functions/requirement_spec_mgr.class.php:				$this->reqMgr =  new requirement_mgr($this->db);
lib/functions/requirement_spec_mgr.class.php:					// 20100311 - franciscom
lib/functions/requirement_spec_mgr.class.php:						case $this->node_types_descr_id['requirement']:
lib/functions/requirement_spec_mgr.class.php:							$ret = $this->reqMgr->copy_to($elem['id'],$the_parent_id,$user_id,
lib/functions/requirement_spec_mgr.class.php:						case $this->node_types_descr_id['requirement_spec']:
lib/functions/requirement_spec_mgr.class.php:							$item_info = $this->get_by_id($elem['id']);
lib/functions/requirement_spec_mgr.class.php:        	                $target_doc = $this->generateDocID($elem['id'],$tproject_id);		
lib/functions/requirement_spec_mgr.class.php:							$ret = $this->create($tproject_id,$the_parent_id,$target_doc,$item_info['title'],
lib/functions/requirement_spec_mgr.class.php:				      			$this->copy_cfields($elem['id'],$ret['id']);
lib/functions/requirement_spec_mgr.class.php:	  returns: -
lib/functions/requirement_spec_mgr.class.php:  		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/requirement_spec_mgr.class.php:	  	$cfmap_from=$this->get_linked_cfields($from_id);
lib/functions/requirement_spec_mgr.class.php:	  	$this->cfield_mgr->design_values_to_db($cfield,$to_id,null,'tcase_copy_cfields');
lib/functions/requirement_spec_mgr.class.php:		$item_info = $this->get_by_id($id);
lib/functions/requirement_spec_mgr.class.php:		$itemSet = $this->getByDocID($item_info['doc_id'],$tproject_id,null,$getOptions);
lib/functions/requirement_spec_mgr.class.php:	        $prefix = trim_and_limit($item_info['doc_id'],$field_size->docid-6);
lib/functions/requirement_spec_mgr.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/requirement_spec_mgr.class.php:	  	$sql = "/* $debugMsg */ SELECT * from {$this->tables['nodes_hierarchy']} " .
lib/functions/requirement_spec_mgr.class.php:	  	       " AND node_type_id = {$this->node_types_descr_id['requirement_spec']} " .
lib/functions/requirement_spec_mgr.class.php:		$rs = $this->db->fetchRowsIntoMap($sql,'id');
lib/functions/testPlanUrgency.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/testPlanUrgency.class.php: * @copyright 	2007-2009, TestLink community 
lib/functions/testPlanUrgency.class.php: *	20100204 - eloff - fixed typo error $break => break
lib/functions/testPlanUrgency.class.php: *	20091017 - franciscom - moved method getPriority() from result.class.php
lib/functions/testPlanUrgency.class.php: *	20081212 - BUGID 1922 - franciscom 
lib/functions/testPlanUrgency.class.php: *	20080901 - franciscom - getSuiteUrgency() - changes in return data 
lib/functions/testPlanUrgency.class.php: * - modify and list Test Urgency
lib/functions/testPlanUrgency.class.php: * @since 	1.8 - 17.7.2008
lib/functions/testPlanUrgency.class.php:		$sql = "UPDATE {$this->tables['testplan_tcversions']} SET urgency={$urgency} " .
lib/functions/testPlanUrgency.class.php:		$result = $this->db->exec_query($sql);
lib/functions/testPlanUrgency.class.php:	 * 20081212 - franciscom - Postgres do not like SQL syntax with JOIN
lib/functions/testPlanUrgency.class.php:		$sql = " UPDATE {$this->tables['testplan_tcversions']} " . 
lib/functions/testPlanUrgency.class.php:			   " FROM {$this->tables['nodes_hierarchy']}  NHA, " .
lib/functions/testPlanUrgency.class.php:			   " {$this->tables['nodes_hierarchy']} NHB, {$this->tables['node_types']} NT " .
lib/functions/testPlanUrgency.class.php:		$result = $this->db->exec_query($sql);
lib/functions/testPlanUrgency.class.php:	 *  20090616 - Eloff - added tcversion id in return data
lib/functions/testPlanUrgency.class.php:	 * 	20081210 - franciscom - added testproject_id argument to avoid
lib/functions/testPlanUrgency.class.php:	 *	20080901 - franciscom - added tcprefix, tc_external_id  in return data
lib/functions/testPlanUrgency.class.php:		$sql = " SELECT testprojects.prefix  FROM {$this->tables['testprojects']} testprojects " .
lib/functions/testPlanUrgency.class.php:			$sql .= "( SELECT parent_id AS testproject_id FROM {$this->tables['nodes_hierarchy']} " .
lib/functions/testPlanUrgency.class.php:		$tcprefix = $this->db->fetchOneValue($sql) . $testcase_cfg->glue_character;
lib/functions/testPlanUrgency.class.php:		$tcprefix = $this->db->prepare_string($tcprefix);
lib/functions/testPlanUrgency.class.php:			   " FROM {$this->tables['nodes_hierarchy']} NHA " .
lib/functions/testPlanUrgency.class.php:			   " JOIN {$this->tables['nodes_hierarchy']} NHB ON NHA.parent_id = NHB.id " .
lib/functions/testPlanUrgency.class.php:			   " JOIN {$this->tables['testplan_tcversions']} testplan_tcversions " .
lib/functions/testPlanUrgency.class.php:			   " JOIN {$this->tables['tcversions']}  TCV ON TCV.id = testplan_tcversions.tcversion_id " .
lib/functions/testPlanUrgency.class.php:		return $this->db->get_recordset($sql);
lib/functions/testPlanUrgency.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testPlanUrgency.class.php:		        " FROM {$this->tables['testplan_tcversions']} TPTCV " .
lib/functions/testPlanUrgency.class.php:			    " JOIN {$this->tables['tcversions']} TCV ON TPTCV.tcversion_id = TCV.id " .
lib/functions/testPlanUrgency.class.php:				$rs = $this->db->fetchRowsIntoMap($sql,'tcversion_id');
lib/functions/testPlanUrgency.class.php: 				$rs = $this->db->fetchMapRowsIntoMap($sql,'tcversion_id','platform_id');
lib/functions/testplan.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/testplan.class.php: * @copyright 	2007-2009, TestLink community 
lib/functions/testplan.class.php: * @version    	CVS: $Id: testplan.class.php,v 1.209 2010/08/31 19:40:15 mx-julian Exp $
lib/functions/testplan.class.php: *	20100830 - franciscom - get_linked_tcversions() - missing cast to array	$my['filters']['exec_status']
lib/functions/testplan.class.php: *							urgencyImportanceToPriorityLevel() - refactored
lib/functions/testplan.class.php: *	20100827 - franciscom - new method wrapper - hasLinkedPlatforms()
lib/functions/testplan.class.php: *  20100727 - asimon - BUGID 3629: modified statement in get_linked_tcversions()
lib/functions/testplan.class.php: *  20100725 - asimon - BUGID 3497 and hopefully also 3530 fixed in unlink_tcversions()
lib/functions/testplan.class.php: *  20100723 - asimon - commented out some old debug message in copy_linked_tcversions()
lib/functions/testplan.class.php: *  20100722 - asimon - added missing $debugMsg to get_linked_items()
lib/functions/testplan.class.php: *  20100721 - asimon - BUGID 3406: added user_assignments_per_build option to get_linked_tcversions()
lib/functions/testplan.class.php: *	20100711 - franciscom - BUGID 3564 -> getPlatforms()
lib/functions/testplan.class.php: *	20100614 - eloff - refactor getStatusTotalsByPriority() to same style as the other getStatusTotals...()
lib/functions/testplan.class.php: *	20100610 - eloff - BUGID 3515 - getStatusTotals() now takes platforms into account
lib/functions/testplan.class.php: *	20100602 - franciscom - copy_as() - force Platforms Link copy when user choose Test Case Copy
lib/functions/testplan.class.php: *  20100527 - Julian - BUGID 3492 - Added execution notes to sql statement of get_linked_tcversions
lib/functions/testplan.class.php: *  20100525 - Julian - changed default for steps_info option on get_linked_tcversions() to false
lib/functions/testplan.class.php: *  					-> performance improvement because not all steps are loaded per default
lib/functions/testplan.class.php: *	20100520 - franciscom - getTestCaseSiblings() join bug
lib/functions/testplan.class.php: *	20100518 - franciscom - BUGID 3473
lib/functions/testplan.class.php: *	20100516 - franciscom - BUGID 3465: Delete Test Project - User Execution Assignment is not deleted
lib/functions/testplan.class.php: *	20100506 - franciscom - new method - get_linked_items_id(), that has perfomance advantages
lib/functions/testplan.class.php: *	20100505 - franciscom - BUGID 3434 - get_keywords_map() - refactoring trying to improve performance
lib/functions/testplan.class.php: *	20100505 - franciscom - BUGID 3430 - copy_milestones() - need to check if start date is NOT NULL
lib/functions/testplan.class.php: *	20100425 - franciscom - BUGID 2463 - changes in getStatusTotalsByAssignedTesterPlatform()
lib/functions/testplan.class.php: * 	20100417 - franciscom - get_linked_tcversions() added importance on output data
lib/functions/testplan.class.php: *  20100217 - asimon - added parameters open and active to getNumberOfBuilds()
lib/functions/testplan.class.php: *  20100214 - franciscom - BUGID 2455, BUGID 3026 - Contribution by julian,asimon
lib/functions/testplan.class.php: *  20100206 - eloff - BUGID 3060 - Adding getStatusTotalsByPriority()
lib/functions/testplan.class.php: *  20100206 - eloff - BUGID 3060 - Adding urgencyImportanceToPriorityLevel() method
lib/functions/testplan.class.php: *  20100201 - franciscom - BUGID 3121 - Adding Platform to test plan after the execution completed,
lib/functions/testplan.class.php: *  20100112 - franciscom - getPlatforms() - interface changes
lib/functions/testplan.class.php: *	20100106 - franciscom - Multiple Test Case Steps Feature
lib/functions/testplan.class.php: *	20091111 - franciscom - BUGID 2938 - getTestCaseSiblings(), getTestCaseNextSibling()
lib/functions/testplan.class.php: *  20091031 - franciscom - tallyResultsForReport()
lib/functions/testplan.class.php: *  20091027 - franciscom - BUGID 2500 - get_linked_tcversions()
lib/functions/testplan.class.php: *  20091025 - franciscom - new method - getStatusTotalsByPlatform()
lib/functions/testplan.class.php: *	20091010 - franciscom - getNotExecutedLinkedTCVersionsDetailed() new options
lib/functions/testplan.class.php: *  20091004 - franciscom - get_linked_tcversions() - fixed query when requesting exec status filtering.
lib/functions/testplan.class.php: *                                                  - added more columns to output record set
lib/functions/testplan.class.php: *  20090923 - franciscom - link_tcversions() - will return data
lib/functions/testplan.class.php: *  20090920 - franciscom - getStatusTotals(), will replace some result.class method
lib/functions/testplan.class.php: *  20090919 - franciscom - copy_as(), copy_linked_tcversions() added contribution (refactored)
lib/functions/testplan.class.php: * 	20090822 - franciscom - changeLinkedTCVersionsPlatform() - new method
lib/functions/testplan.class.php: *                          countLinkedTCVersionsByPlatform() - new method
lib/functions/testplan.class.php: *  20090814 - franciscom - link_tcversions() - interface changes - due to platform feature
lib/functions/testplan.class.php: *  20090516 - franciscom - BUGID - is_public
lib/functions/testplan.class.php: *  20090509 - franciscom - BUGID - build class manage release_date
lib/functions/testplan.class.php: *  20090411 - franciscom - BUGID 2369 - link_tcversions() - interface changes
lib/functions/testplan.class.php: *  20090214 - franciscom - BUGID 2099 - get_linked_tcversions() - added new columns in output recordset
lib/functions/testplan.class.php: *  20090208 - franciscom - testplan class - new method get_build_by_id()
lib/functions/testplan.class.php: *  20090201 - franciscom - copy_milestones() - wrong SQL sentece 
lib/functions/testplan.class.php: *  20081227 - franciscom - BUGID 1913 - filter by same results on ALL previous builds
lib/functions/testplan.class.php: *  20081214 - franciscom - Thanks to postgres found missing CAST() on SUM() 
lib/functions/testplan.class.php: *  20081206 - franciscom - BUGID 1910 - get_estimated_execution_time() - added new filter
lib/functions/testplan.class.php: *                                       get_linked_tcversions() - added test suites filter 
lib/functions/testplan.class.php: *  20080820 - franciscom - added get_estimated_execution_time() as result of contributed idea.
lib/functions/testplan.class.php: *  20080811 - franciscom - BUGID 1650 (REQ)
lib/functions/testplan.class.php: *  20080614 - franciscom - get_linked_and_newest_tcversions() - fixed bug  (thanks to PostGres)
lib/functions/testplan.class.php: *  20080428 - franciscom - supporting multiple keywords in get_linked_tcversions()
lib/functions/testplan.class.php: *  20080310 - sbouffard - contribution added NHB.name to recordset (useful for API methods).  
lib/functions/testplan.class.php: *  20071010 - franciscom - BUGID     MSSQL reserved word problem - open
lib/functions/testplan.class.php: *  20070927 - franciscom - BUGID 1069
lib/functions/testplan.class.php: *  20070310 - franciscom - BUGID 731
lib/functions/testplan.class.php: *  20070306 - franciscom - BUGID 705 - changes in get_linked_tcversions()
lib/functions/testplan.class.php: * @TODO franciscom - absolutely disagree with suggested approach, see no value - 20090611
lib/functions/testplan.class.php:	    $this->db = &$db;
lib/functions/testplan.class.php:	    $this->tree_manager = New tree($this->db);
lib/functions/testplan.class.php:		$this->node_types_descr_id=$this->tree_manager->get_available_node_types();
lib/functions/testplan.class.php:		$this->node_types_id_descr=array_flip($this->node_types_descr_id);
lib/functions/testplan.class.php:	    $this->assignment_mgr = new assignment_mgr($this->db);
lib/functions/testplan.class.php:	    $this->assignment_types = $this->assignment_mgr->get_available_types();
lib/functions/testplan.class.php:	    $this->assignment_status = $this->assignment_mgr->get_available_status();
lib/functions/testplan.class.php:    	$this->cfield_mgr = new cfield_mgr($this->db);
lib/functions/testplan.class.php:    	$this->tcase_mgr = New testcase($this->db);
lib/functions/testplan.class.php:		$this->platform_mgr = new tlPlatform($this->db);
lib/functions/testplan.class.php:	    tlObjectWithAttachments::__construct($this->db,'testplans');
lib/functions/testplan.class.php:	 * 		if everything ok -> id of new testplan (node id).
lib/functions/testplan.class.php:	 * 		if problems -> 0.
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:		$node_types=$this->tree_manager->get_available_node_types();
lib/functions/testplan.class.php:		$tplan_id = $this->tree_manager->new_node($testproject_id,$node_types['testplan'],$name);
lib/functions/testplan.class.php:		       " INSERT INTO {$this->tables['testplans']} (id,notes,testproject_id,active,is_public) " .
lib/functions/testplan.class.php:			   " VALUES ( {$tplan_id} " . ", '" . $this->db->prepare_string($notes) . "'," . 
lib/functions/testplan.class.php:		$result = $this->db->exec_query($sql);
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:		$rsa = $this->get_by_id($id);
lib/functions/testplan.class.php:			$rs = $this->get_by_name($name,$rsa['parent_id']);
lib/functions/testplan.class.php:			$sql .= "UPDATE {$this->tables['nodes_hierarchy']} " .
lib/functions/testplan.class.php:				    "SET name='" . $this->db->prepare_string($name) . "'" .
lib/functions/testplan.class.php:			$result = $this->db->exec_query($sql);
lib/functions/testplan.class.php:				$sql = " UPDATE {$this->tables['testplans']} " .
lib/functions/testplan.class.php:					" SET notes='" . $this->db->prepare_string($notes). "' " .
lib/functions/testplan.class.php:				$result = $this->db->exec_query($sql);
lib/functions/testplan.class.php:	 [tproject_id]: default:0 -> system wide search i.e. inside all testprojects
lib/functions/testplan.class.php:	 returns: if nothing found -> null
lib/functions/testplan.class.php:	 if found -> array where every element is a map with following keys:
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:			    " FROM {$this->tables['testplans']} testplans, " .
lib/functions/testplan.class.php:			    " {$this->tables['nodes_hierarchy']} NH" .
lib/functions/testplan.class.php:			    " AND NH.name = '" . $this->db->prepare_string($name) . "'";
lib/functions/testplan.class.php:		$recordset = $this->db->get_recordset($sql);
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:			   " FROM {$this->tables['testplans']} testplans, " .
lib/functions/testplan.class.php:			   " {$this->tables['nodes_hierarchy']} NH " .
lib/functions/testplan.class.php:		$recordset = $this->db->get_recordset($sql);
lib/functions/testplan.class.php:  		args : -
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:			   " FROM {$this->tables['testplans']} testplans, " .
lib/functions/testplan.class.php:			   " {$this->tables['nodes_hierarchy']} NH " .
lib/functions/testplan.class.php:		$recordset = $this->db->get_recordset($sql);
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:		       " FROM {$this->tables['testplan_tcversions']} " .
lib/functions/testplan.class.php:		$recordset = $this->db->get_recordset($sql);
lib/functions/testplan.class.php:	  returns: -
lib/functions/testplan.class.php:	  rev: 20080629 - franciscom - audit message improvements
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:		list($ret['tcasePrefix'],$tproject_id) = $this->tcase_mgr->getPrefix($dummy);
lib/functions/testplan.class.php:		$ret['tcasePrefix'] .= $tcase_cfg->glue_character;
lib/functions/testplan.class.php:			   " FROM {$this->tables['tcversions']} TCV,{$this->tables['nodes_hierarchy']} NHA, " .
lib/functions/testplan.class.php:			   " {$this->tables['nodes_hierarchy']} NHB " .
lib/functions/testplan.class.php:		$ret['info']=$this->db->fetchRowsIntoMap($sql,'id');  
lib/functions/testplan.class.php:		$ret['tplanInfo']=$this->get_by_id($tplan_id);                                                          
lib/functions/testplan.class.php:	  returns: -
lib/functions/testplan.class.php:	  rev: 20080629 - franciscom - audit message improvements
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:		$auditInfo=$this->tcversionInfoForAudit($id,$items_to_link['tcversion']);
lib/functions/testplan.class.php:		$platformInfo = $this->platform_mgr->getLinkedToTestplanAsMap($id);
lib/functions/testplan.class.php:		       "INSERT INTO {$this->tables['testplan_tcversions']} " .
lib/functions/testplan.class.php:			   " VALUES ({$id},{$userId},{$this->db->db_now()},";
lib/functions/testplan.class.php:				$result = $this->db->exec_query($sql . "{$tcversion}, {$platform_id})");
lib/functions/testplan.class.php:                    $features[$platform_id][$tcversion]=$this->db->insert_id($this->tables['testplan_tcversions']);					
lib/functions/testplan.class.php:						$addInfo = ' - ' . $platformLabel . ':' . $platformInfo[$platform_id];
lib/functions/testplan.class.php:  	returns: -
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:			$sql="/* $debugMsg */ UPDATE {$this->tables['testplan_tcversions']} " .
lib/functions/testplan.class.php:			$result = $this->db->exec_query($sql);
lib/functions/testplan.class.php:	 *   20100722 - asimon - added missing $debugMsg
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:			   " SELECT DISTINCT parent_id FROM {$this->tables['nodes_hierarchy']} NHTC " .
lib/functions/testplan.class.php:			   " JOIN {$this->tables['testplan_tcversions']} TPTCV ON TPTCV.tcversion_id = NHTC.id " .
lib/functions/testplan.class.php:		$linked_items = $this->db->fetchRowsIntoMap($sql,'parent_id');			     
lib/functions/testplan.class.php:		 	[urgencyImportance] : filter only Tc's with certain (urgency*importance)-value 
lib/functions/testplan.class.php:		 	[exec_type] default null -> all types. 
lib/functions/testplan.class.php:         	          default: map -> map indexed by test case id (original return type)
lib/functions/testplan.class.php:         	                   mapOfArray -> indexed by test case id but with an array
lib/functions/testplan.class.php:         	                  array -> indexed sequentially. 
lib/functions/testplan.class.php:                           - NULL if the tc version has not been executed in THIS test plan.
lib/functions/testplan.class.php:                           - tcversion_id if has executions.
lib/functions/testplan.class.php:		 20100727 - asimon - BUGID 3629: modified statement
lib/functions/testplan.class.php:		 20100721 - asimon - BUGID 3406: added user_assignments_per_build option
lib/functions/testplan.class.php:		 20100520 - franciscom - added option steps_info, to try to solve perfomance problems
lib/functions/testplan.class.php:		 20100417 - franciscom - added importance on output data
lib/functions/testplan.class.php:         20090814 - franciscom - interface changes due to platform feature
lib/functions/testplan.class.php:		$debugMsg = 'Class: ' . __CLASS__ . ' - Method:' . __FUNCTION__;
lib/functions/testplan.class.php:		// 20100830 - franciscom - bug found by Julian
lib/functions/testplan.class.php:        // @TODO - 20091004 - franciscom
lib/functions/testplan.class.php:		// 	 		             "               FROM  {$this->tables['executions']} executions " .
lib/functions/testplan.class.php:			 		          "               FROM  {$this->tables['executions']} executions " .
lib/functions/testplan.class.php:			// 20100417 - franciscom - BUGID 3356
lib/functions/testplan.class.php:		// 20100417- Why to use a list ? - must be checked if is on
lib/functions/testplan.class.php:			// 0 -> no keyword, remove 
lib/functions/testplan.class.php:			$keywords['join'] = " JOIN {$this->tables['testcase_keywords']} TK ON NHA.parent_id = TK.testcase_id ";
lib/functions/testplan.class.php:		// --------------------------------------------------------------
lib/functions/testplan.class.php:				// 20100417 - franciscom - BUGID 3356
lib/functions/testplan.class.php:				// 20100417 - franciscom - BUGID 3356
lib/functions/testplan.class.php:		// --------------------------------------------------------------
lib/functions/testplan.class.php:		$executions['join'] .= " JOIN {$this->tables['executions']} E ON " .
lib/functions/testplan.class.php:		// --------------------------------------------------------------
lib/functions/testplan.class.php:			$join_for_parent .= " JOIN {$this->tables['nodes_hierarchy']} NHC ON NHB.parent_id = NHC.id ";
lib/functions/testplan.class.php:			$builds['join']=" LEFT OUTER JOIN {$this->tables['builds']} B ON B.id=E.build_id ";
lib/functions/testplan.class.php:	    // BUGID 3406 - assignments per build
lib/functions/testplan.class.php:	    // BUGID 3492 - Added execution notes to sql statement of get_linked_tcversions
lib/functions/testplan.class.php:			   " FROM {$this->tables['nodes_hierarchy']} NHA " .
lib/functions/testplan.class.php:			   " JOIN {$this->tables['nodes_hierarchy']} NHB ON NHA.parent_id = NHB.id " .
lib/functions/testplan.class.php:			   " JOIN {$this->tables['testplan_tcversions']} T ON NHA.id = T.tcversion_id " .
lib/functions/testplan.class.php:			   " JOIN  {$this->tables['tcversions']} TCV ON NHA.id = TCV.id {$tcversion_exec_type['filter']} " .
lib/functions/testplan.class.php:			   " LEFT OUTER JOIN {$this->tables['platforms']} PLAT ON PLAT.id = T.platform_id " .
lib/functions/testplan.class.php:			   " LEFT OUTER JOIN {$this->tables['user_assignments']} UA ON UA.feature_id = T.id " .
lib/functions/testplan.class.php:			   " AND (UA.type={$this->assignment_types['testcase_execution']['id']} OR UA.type IS NULL) " . 
lib/functions/testplan.class.php:		// 20081220 - franciscom
lib/functions/testplan.class.php:            // new user filter "somebody" --> all asigned testcases
lib/functions/testplan.class.php:				$sql .= " AND (urgency * importance) >= " . $urgencyImportanceCfg->threshold['high'];
lib/functions/testplan.class.php:				$sql .= " AND (urgency * importance) < " . $urgencyImportanceCfg->threshold['low'];
lib/functions/testplan.class.php:				$sql .= " AND ( ((urgency * importance) >= " . $urgencyImportanceCfg->threshold['low'] . 
lib/functions/testplan.class.php:					    " AND  ((urgency * importance) < " . $urgencyImportanceCfg->threshold['high']."))) ";
lib/functions/testplan.class.php:			$recordset = $this->db->get_recordset($sql);
lib/functions/testplan.class.php:			$recordset = $this->db->fetchRowsIntoMap($sql,'tc_id',database::CUMULATIVE);
lib/functions/testplan.class.php:			$recordset = $this->db->fetchMapRowsIntoMap($sql,'tc_id','platform_id');
lib/functions/testplan.class.php:			$recordset = $this->db->fetchMapRowsIntoMap($sql,'exec_id','platform_id');
lib/functions/testplan.class.php:			$recordset = $this->db->fetchRowsIntoMap($sql,'tc_id');
lib/functions/testplan.class.php:			// 20070913 - jbarchibald
lib/functions/testplan.class.php:				$recordset = $this->filter_cf_selection($recordset, $my['filters']['cf_hash']);
lib/functions/testplan.class.php:	  						$step_set = $this->tcase_mgr->get_steps($target[$accessKey]['tcversion_id']);
lib/functions/testplan.class.php:	  					$step_set = $this->tcase_mgr->get_steps($recordset[$accessKey]['tcversion_id']);
lib/functions/testplan.class.php:      20080614 - franciscom - fixed bug on SQL generated while
lib/functions/testplan.class.php:      20080126 - franciscom - added tc_external_id on results
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:		// 20080614 - franciscom
lib/functions/testplan.class.php:			   " FROM {$this->tables['nodes_hierarchy']} NHA " .
lib/functions/testplan.class.php:			// NHA - will contain ONLY nodes of type testcase_version that are LINKED to test plan
lib/functions/testplan.class.php:			" JOIN {$this->tables['testplan_tcversions']} T ON NHA.id = T.tcversion_id " . 
lib/functions/testplan.class.php:			" JOIN {$this->tables['tcversions']} TCVA ON TCVA.id = T.tcversion_id" .
lib/functions/testplan.class.php:			// Work on Sibblings - Start
lib/functions/testplan.class.php:			// NHB - Needed to get ALL testcase_version sibblings nodes
lib/functions/testplan.class.php:			" JOIN {$this->tables['nodes_hierarchy']} NHB ON NHB.parent_id = NHA.parent_id " .
lib/functions/testplan.class.php:			" JOIN {$this->tables['tcversions']} TCVB ON TCVB.id = NHB.id AND TCVB.active=1 " . 
lib/functions/testplan.class.php:			// Work on Sibblings - STOP 
lib/functions/testplan.class.php:			// NHC will contain - nodes of type TESTCASE (parent of testcase versions we are working on)
lib/functions/testplan.class.php:			" JOIN {$this->tables['nodes_hierarchy']} NHC ON NHC.id = NHA.parent_id " .
lib/functions/testplan.class.php:			    " FROM {$this->tables['tcversions']} TCV, ( $sql ) AS SUBQ " .
lib/functions/testplan.class.php:		return $this->db->fetchRowsIntoMap($sql2,'tc_id');
lib/functions/testplan.class.php:	 *    20100725 - asimon - BUGID 3497 and hopefully also 3530
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:		$auditInfo=$this->tcversionInfoForAudit($id,$items['tcversion']);
lib/functions/testplan.class.php:		$platformInfo = $this->platform_mgr->getLinkedToTestplanAsMap($id);
lib/functions/testplan.class.php:		 * asimon - BUGID 3497 and hopefully also 3530
lib/functions/testplan.class.php:			 " FROM {$this->tables['executions']} " .
lib/functions/testplan.class.php:		$exec_ids = $this->db->fetchRowsIntoMap($sql,'execution_id');
lib/functions/testplan.class.php:			$sql=" DELETE FROM {$this->tables['execution_bugs']} {$exec_id_where} ";
lib/functions/testplan.class.php:			$result = $this->db->exec_query($sql);
lib/functions/testplan.class.php:			$sql=" DELETE FROM {$this->tables['executions']} " .
lib/functions/testplan.class.php:			$result = $this->db->exec_query($sql);
lib/functions/testplan.class.php:		// ----------------------------------------------------------------
lib/functions/testplan.class.php:		$sql=" SELECT id AS link_id FROM {$this->tables['testplan_tcversions']} " .
lib/functions/testplan.class.php:		$link_ids = $this->db->fetchRowsIntoMap($sql,'link_id');
lib/functions/testplan.class.php:		$this->assignment_mgr->delete_by_feature_id($features);
lib/functions/testplan.class.php:		// ----------------------------------------------------------------
lib/functions/testplan.class.php:		$sql=" DELETE FROM {$this->tables['testplan_tcversions']} " .
lib/functions/testplan.class.php:		$result = $this->db->exec_query($sql);
lib/functions/testplan.class.php:					$addInfo = ' - ' . $platformLabel . ':' . $platformInfo[$platform_id];
lib/functions/testplan.class.php:	 * 20100505 - franciscom - BUGID 3434
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:		// 20100505 - according to user report (BUGID 3434) seems that 
lib/functions/testplan.class.php:		// $linked_items = $this->get_linked_tcversions($id);
lib/functions/testplan.class.php:			   " SELECT DISTINCT parent_id FROM {$this->tables['nodes_hierarchy']} NHTC " .
lib/functions/testplan.class.php:			   " JOIN {$this->tables['testplan_tcversions']} TPTCV ON TPTCV.tcversion_id = NHTC.id " .
lib/functions/testplan.class.php:		$linked_items = $this->db->fetchRowsIntoMap($sql,'parent_id');			     
lib/functions/testplan.class.php:				   " FROM {$this->tables['testcase_keywords']} TCKW, " .
lib/functions/testplan.class.php:				   " {$this->tables['keywords']} KW " .
lib/functions/testplan.class.php:			$map_keywords = $this->db->fetchColumnsIntoMap($sql,'keyword_id','keyword');
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:		$linked_items = $this->get_linked_items_id($id);
lib/functions/testplan.class.php:			// 20081116 - franciscom -
lib/functions/testplan.class.php:				FROM {$this->tables['testcase_keywords']} testcase_keywords,
lib/functions/testplan.class.php:				{$this->tables['keywords']} keywords
lib/functions/testplan.class.php:			// 20081116 - franciscom
lib/functions/testplan.class.php:			$map_keywords = $this->db->fetchRowsIntoMap($sql,'testcase_id',$CUMULATIVE);
lib/functions/testplan.class.php:				                  null/'current' -> use same version present on source testplan
lib/functions/testplan.class.php:                                  'lastest' -> for every testcase linked to source testplan
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:		$rs_source=$this->get_by_id($id);
lib/functions/testplan.class.php:			$sql="/* $debugMsg */ UPDATE {$this->tables['nodes_hierarchy']} " .
lib/functions/testplan.class.php:				 "SET name='" . $this->db->prepare_string(trim($tplan_name)) . "' " .
lib/functions/testplan.class.php:			$this->db->exec_query($sql);
lib/functions/testplan.class.php:			$sql="/* $debugMsg */ UPDATE {$this->tables['testplans']} SET testproject_id={$tproject_id} " .
lib/functions/testplan.class.php:			$this->db->exec_query($sql);
lib/functions/testplan.class.php:			$this->copy_linked_tcversions($id,$new_tplan_id,$user_id,$my['options'],$mappings);
lib/functions/testplan.class.php:						$this->$copy_method($id,$new_tplan_id,$mappings[$mapping_methods[$key]]);
lib/functions/testplan.class.php:						$this->$copy_method($id,$new_tplan_id);
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:		$rs=$this->get_builds($id);
lib/functions/testplan.class.php:				$sql="INSERT INTO {$this->tables['builds']} (name,notes,testplan_id) " .
lib/functions/testplan.class.php:					"VALUES ('" . $this->db->prepare_string($build['name']) ."'," .
lib/functions/testplan.class.php:					"'" . $this->db->prepare_string($build['notes']) ."',{$new_tplan_id})";
lib/functions/testplan.class.php:				$this->db->exec_query($sql);
lib/functions/testplan.class.php:        	[tcversion_type]: default null -> use same version present on source testplan
lib/functions/testplan.class.php:                              'lastest' -> for every testcase linked to source testplan
lib/functions/testplan.class.php:        	[copy_assigned_to]: 1 -> copy execution assignments without role control                              
lib/functions/testplan.class.php:	private function copy_linked_tcversions($id,$new_tplan_id,$user_id=-1, $options=null,$mappings=null)
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:        $now_ts = $this->db->db_now();
lib/functions/testplan.class.php:			$sql .= " SELECT TPTCV.*, COALESCE(UA.user_id,-1) AS tester " .
lib/functions/testplan.class.php:			        " FROM {$this->tables['testplan_tcversions']} TPTCV " .
lib/functions/testplan.class.php:			        " LEFT OUTER JOIN {$this->tables['user_assignments']} UA ON " .
lib/functions/testplan.class.php:			$sql .= " SELECT TPTCV.* FROM {$this->tables['testplan_tcversions']} TPTCV" .
lib/functions/testplan.class.php:		$rs=$this->db->get_recordset($sql);
lib/functions/testplan.class.php:			$tcase_mgr = new testcase($this->db);
lib/functions/testplan.class.php:				// Seems useless - 20100204
lib/functions/testplan.class.php:					$sql="/* $debugMsg */ SELECT * FROM {$this->tables['nodes_hierarchy']} WHERE id={$tcversion_id} ";
lib/functions/testplan.class.php:					$rs2=$this->db->get_recordset($sql);
lib/functions/testplan.class.php:					$last_version_info = $tcase_mgr->get_last_version_info($rs2[0]['parent_id']);
lib/functions/testplan.class.php:				       " INSERT INTO {$this->tables['testplan_tcversions']} " .
lib/functions/testplan.class.php: 				 //echo "<br>debug - <b><i>" . __FUNCTION__ . "</i></b><br><b>" . $sql . "</b><br>";
lib/functions/testplan.class.php:				$this->db->exec_query($sql);
lib/functions/testplan.class.php:				$new_feature_id = $this->db->insert_id($this->tables['testplan_tcversions']);
lib/functions/testplan.class.php:					$features_map[$feature_id]['type'] = $this->assignment_types['testcase_execution']['id'];
lib/functions/testplan.class.php:					$features_map[$feature_id]['status']  = $this->assignment_status['open']['id'];
lib/functions/testplan.class.php:					$this->assignment_mgr->assign($features_map);
lib/functions/testplan.class.php:        20090910 - franciscom - added start_date
lib/functions/testplan.class.php:        20070519 - franciscom
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:		$rs=$this->get_milestones($tplan_id);
lib/functions/testplan.class.php:				// BUGID 3430 - need to check if start date is NOT NULL
lib/functions/testplan.class.php:				$sql = "INSERT INTO {$this->tables['milestones']} (name,a,b,c,target_date,{$add2fields} testplan_id)";				
lib/functions/testplan.class.php:                $sql .= " VALUES ('" . $this->db->prepare_string($mstone['name']) ."'," .
lib/functions/testplan.class.php:				$this->db->exec_query($sql);
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:		     "FROM {$this->tables['milestones']} " .
lib/functions/testplan.class.php:		return $this->db->get_recordset($sql);
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:		$sql = "/* $debugMsg */ SELECT user_id,role_id FROM {$this->tables['user_testplan_roles']} " .
lib/functions/testplan.class.php:		$rs = $this->db->get_recordset($sql);
lib/functions/testplan.class.php:	      		$sql="INSERT INTO {$this->tables['user_testplan_roles']}  " .
lib/functions/testplan.class.php:	      		$this->db->exec_query($sql);
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:		$sql = "SELECT user_id,role_id FROM {$this->tables['user_testplan_roles']} " .
lib/functions/testplan.class.php:		$roles = $this->db->fetchRowsIntoMap($sql,'user_id');
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:		$sql = "INSERT INTO {$this->tables['user_testplan_roles']} (user_id,testplan_id,role_id) VALUES " .
lib/functions/testplan.class.php:		if ($this->db->exec_query($sql))
lib/functions/testplan.class.php:			$testPlan = $this->get_by_id($id);
lib/functions/testplan.class.php:			$role = tlRole::getByID($this->db,$roleID,tlRole::TLOBJ_O_GET_DETAIL_MINIMUM);
lib/functions/testplan.class.php:			$user = tlUser::getByID($this->db,$userID,tlUser::TLOBJ_O_GET_DETAIL_MINIMUM);
lib/functions/testplan.class.php:				logAuditEvent(TLS("audit_users_roles_added_testplan",$user->getDisplayName(),
lib/functions/testplan.class.php:				              $testPlan['name'],$role->name),"ASSIGN",$id,"testplans");
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:		$sql = "DELETE FROM {$this->tables['user_testplan_roles']} " .
lib/functions/testplan.class.php:		if ($this->db->exec_query($sql))
lib/functions/testplan.class.php:			$testPlan = $this->get_by_id($id);
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:		$this->deleteUserRoles($id);
lib/functions/testplan.class.php:		$getFeaturesSQL = " SELECT id FROM {$this->tables['testplan_tcversions']} WHERE testplan_id={$id} "; 
lib/functions/testplan.class.php:		$the_sql[]="DELETE FROM {$this->tables['milestones']} WHERE testplan_id={$id}";
lib/functions/testplan.class.php:		$the_sql[]="DELETE FROM {$this->tables['cfield_testplan_design_values']} WHERE link_id ".
lib/functions/testplan.class.php:		// BUGID 3465: Delete Test Project - User Execution Assignment is not deleted
lib/functions/testplan.class.php:		$the_sql[]="DELETE FROM {$this->tables['user_assignments']} WHERE feature_id ".
lib/functions/testplan.class.php:		$the_sql[]="DELETE FROM {$this->tables['risk_assignments']} WHERE testplan_id={$id}";
lib/functions/testplan.class.php:		$the_sql[]="DELETE FROM {$this->tables['testplan_platforms']} WHERE testplan_id={$id}";
lib/functions/testplan.class.php:		$the_sql[]="DELETE FROM {$this->tables['testplan_tcversions']} WHERE testplan_id={$id}";
lib/functions/testplan.class.php:		$the_sql[]="DELETE FROM {$this->tables['builds']} WHERE testplan_id={$id}";
lib/functions/testplan.class.php:		$the_sql[]="DELETE FROM {$this->tables['cfield_execution_values']} WHERE testplan_id={$id}";
lib/functions/testplan.class.php:		$the_sql[]="DELETE FROM {$this->tables['user_testplan_roles']} WHERE testplan_id={$id}";
lib/functions/testplan.class.php:		$the_sql[]="DELETE FROM {$this->tables['execution_bugs']} WHERE execution_id ".
lib/functions/testplan.class.php:				   "IN (SELECT id FROM {$this->tables['executions']} WHERE testplan_id={$id})";
lib/functions/testplan.class.php:		$the_sql[]="DELETE FROM {$this->tables['executions']} WHERE testplan_id={$id}";
lib/functions/testplan.class.php:			$this->db->exec_query($sql);
lib/functions/testplan.class.php:		$this->deleteAttachments($id);
lib/functions/testplan.class.php:		$this->cfield_mgr->remove_all_design_values_from_node($id);
lib/functions/testplan.class.php:		// ------------------------------------------------------------------------
lib/functions/testplan.class.php:		$main_sql[]="DELETE FROM {$this->tables['testplans']} WHERE id={$id}";
lib/functions/testplan.class.php:		$main_sql[]="DELETE FROM {$this->tables['nodes_hierarchy']} WHERE id={$id}";
lib/functions/testplan.class.php:			$this->db->exec_query($sql);
lib/functions/testplan.class.php:	// --------------------------------------------------------------------------------------
lib/functions/testplan.class.php:	// --------------------------------------------------------------------------------------
lib/functions/testplan.class.php:	        [active]: default:null -> all, 1 -> active, 0 -> inactive BUILDS
lib/functions/testplan.class.php:	        [open]  : default:null -> all, 1 -> open  , 0 -> closed/completed BUILDS
lib/functions/testplan.class.php:	        20070129 - franciscom - order to ASC
lib/functions/testplan.class.php:	        20070120 - franciscom
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:			" FROM {$this->tables['builds']} WHERE testplan_id = {$id} ";
lib/functions/testplan.class.php:		// 20070120 - franciscom
lib/functions/testplan.class.php:		$recordset=$this->db->fetchColumnsIntoMap($sql,'id','name');
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:			" FROM {$this->tables['builds']} " .
lib/functions/testplan.class.php:		$recordset = $this->db->get_recordset($sql);
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:			   " FROM {$this->tables['testplan_tcversions']}  TPTCV, {$this->tables['nodes_hierarchy']}  NHTCV, " .
lib/functions/testplan.class.php:			   " {$this->tables['nodes_hierarchy']} NHTCASE, {$this->tables['nodes_hierarchy']} NHTSUITE " . 
lib/functions/testplan.class.php:		$recordset = $this->db->get_recordset($sql);
lib/functions/testplan.class.php:			$superset = array_merge($superset, $this->get_parenttestsuites($value['id']));
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:		       "FROM {$this->tables['nodes_hierarchy']}  NH " .
lib/functions/testplan.class.php:		       "WHERE NH.node_type_id <> {$this->node_types_descr_id['testproject']} " .
lib/functions/testplan.class.php:	    $recordset = $this->db->get_recordset($sql);
lib/functions/testplan.class.php:		    // 20100611 - franciscom
lib/functions/testplan.class.php:		    $myarray = array_merge($myarray, $this->get_parenttestsuites($recordset[0]['parent_id'])); 
lib/functions/testplan.class.php:	        [active]: default:null -> all, 1 -> active, 0 -> inactive BUILDS
lib/functions/testplan.class.php:	        [open]: default:null -> all, 1 -> open  , 0 -> closed/completed BUILDS
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:			" FROM {$this->tables['builds']} WHERE testplan_id = {$id} " ;
lib/functions/testplan.class.php:		$recordset = $this->db->fetchRowsIntoMap($sql,'id');
lib/functions/testplan.class.php:			$recordset = $this->_natsort_builds($recordset);
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:		$safe_build_name=$this->db->prepare_string(trim($build_name));
lib/functions/testplan.class.php:			" FROM {$this->tables['builds']} " .
lib/functions/testplan.class.php:		$recordset = $this->db->get_recordset($sql);
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:			" FROM {$this->tables['builds']} BUILDS " .
lib/functions/testplan.class.php:		$recordset = $this->db->get_recordset($sql);
lib/functions/testplan.class.php:	 * 20100217 - asimon - added parameters active and open to get only number of active/open builds
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:		$sql = "/* $debugMsg */ SELECT count(id) AS num_builds FROM {$this->tables['builds']} builds " .
lib/functions/testplan.class.php:	 	return $this->db->fetchOneValue($sql);
lib/functions/testplan.class.php:		// BUGID - sort in natural order (see natsort in PHP manual)
lib/functions/testplan.class.php:	  rev: 20080217 - franciscom - added build_id argument
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:			" FROM {$this->tables['builds']} " .
lib/functions/testplan.class.php:		$sql .= "'" . $this->db->prepare_string($build_name) . "'";
lib/functions/testplan.class.php:			$sql .= " AND id <> " . $this->db->prepare_int($build_id);
lib/functions/testplan.class.php:		$result = $this->db->exec_query($sql);
lib/functions/testplan.class.php:		$status= $this->db->num_rows($result) ? 1 : 0;
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:			" FROM {$this->tables['builds']} builds " .
lib/functions/testplan.class.php:		$sql .= "'" . $this->db->prepare_string($build_name) . "'";    
lib/functions/testplan.class.php:		//$result = $this->db->exec_query($sql);
lib/functions/testplan.class.php:		$recordset = $this->db->get_recordset($sql);
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:		$sql = " INSERT INTO {$this->tables['builds']} (testplan_id,name,notes,active,is_open) " .
lib/functions/testplan.class.php:			$this->db->prepare_string($name) . "','" .
lib/functions/testplan.class.php:			$this->db->prepare_string($notes) . "'," .
lib/functions/testplan.class.php:		$result = $this->db->exec_query($sql);
lib/functions/testplan.class.php:			$new_build_id = $this->db->insert_id($this->tables['builds']);
lib/functions/testplan.class.php:	// --------------------------------------------------------------------------------------
lib/functions/testplan.class.php:	// --------------------------------------------------------------------------------------
lib/functions/testplan.class.php:	                              1 -> filter on field show_on_execution=1
lib/functions/testplan.class.php:	                              0 or null -> don't filter
lib/functions/testplan.class.php:	        20061231 - franciscom - added $parent_id
lib/functions/testplan.class.php:			// 20081122 - franciscom - need to check when we can call this with ID=NULL
lib/functions/testplan.class.php:			$the_path = $this->tree_manager->get_path(!is_null($id) ? $id : $parent_id);
lib/functions/testplan.class.php:		$tproject_id = ($path_len > 0)? $the_path[$path_len-1]['parent_id'] : $parent_id; 
lib/functions/testplan.class.php:		$cf_map = $this->cfield_mgr->get_linked_cfields_at_design($tproject_id,self::ENABLED,
lib/functions/testplan.class.php:	                              1 -> filter on field show_on_execution=1
lib/functions/testplan.class.php:	                              0 or null -> don't filter
lib/functions/testplan.class.php:	        20061231 - franciscom - added $parent_id
lib/functions/testplan.class.php:			// 20081122 - franciscom - need to check when we can call this with ID=NULL
lib/functions/testplan.class.php:			$the_path = $this->tree_manager->get_path(!is_null($id) ? $id : $parent_id);
lib/functions/testplan.class.php:		$tproject_id = ($path_len > 0)? $the_path[$path_len-1]['parent_id'] : $parent_id; 
lib/functions/testplan.class.php:		// 20081122 - franciscom - humm!! need to look better IMHO this call is done to wrong function
lib/functions/testplan.class.php:		$cf_map=$this->cfield_mgr->get_linked_cfields_at_execution($tproject_id,self::ENABLED,
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:			FROM {$this->tables['cfield_testprojects']} cfield_testprojects, 
lib/functions/testplan.class.php:			{$this->tables['custom_fields']} custom_fields
lib/functions/testplan.class.php:		$field_map = $this->db->fetchColumnsIntoMap($sql,'field_id','label');
lib/functions/testplan.class.php:			$cf_map = $this->get_linked_cfields_at_design($id,$parent_id);
lib/functions/testplan.class.php:			$cf_map=$this->get_linked_cfields_at_execution($id,$parent_id);
lib/functions/testplan.class.php:					$this->cfield_mgr->string_custom_field_input($cf_info) . "</td></tr>\n";
lib/functions/testplan.class.php:	                                                1 -> filter on field show_on_execution=1
lib/functions/testplan.class.php:	                                                0 or null -> don't filter
lib/functions/testplan.class.php:	       20080811 - franciscom - BUGID 1650 (REQ)
lib/functions/testplan.class.php:	       20070701 - franciscom - fixed return string when there are no custom fields.
lib/functions/testplan.class.php:			$cf_map=$this->get_linked_cfields_at_design($id,$parent_id,$filters);
lib/functions/testplan.class.php:			$cf_map=$this->get_linked_cfields_at_execution($id);
lib/functions/testplan.class.php:						$this->cfield_mgr->string_custom_field_value($cf_info,$id) . "</td></tr>\n";
lib/functions/testplan.class.php:	        $tp_tcs - this comes from get_linked_tcversion
lib/functions/testplan.class.php:				$sql = "SELECT value FROM {$this->tables['cfield_design_values']} " .
lib/functions/testplan.class.php:				$result = $this->db->exec_query($sql);
lib/functions/testplan.class.php:				$myrow = $this->db->fetch_array($result);
lib/functions/testplan.class.php:	  rev: 20080820 - franciscom
lib/functions/testplan.class.php:		$cf_info = $this->cfield_mgr->get_by_name('CF_ESTIMATED_EXEC_TIME');
lib/functions/testplan.class.php:				// $linked_testcases=$this->get_linked_tcversions($id);  
lib/functions/testplan.class.php:				$linked_testcases=$this->get_linked_items_id($id);  
lib/functions/testplan.class.php:			$sql .= " AS SUM_VALUE FROM {$this->tables['cfield_design_values']} CFDV " .
lib/functions/testplan.class.php:			$estimated=$this->db->fetchOneValue($sql);
lib/functions/testplan.class.php:	  rev: 20081207 - franciscom
lib/functions/testplan.class.php:		$cf_info = $this->cfield_mgr->get_by_name('CF_EXEC_TIME');
lib/functions/testplan.class.php:				// $linked_executed=$this->get_linked_tcversions($id,null,0,'just_executed'); 
lib/functions/testplan.class.php:				$linked_executed=$this->get_linked_tcversions($id,null,$options); 
lib/functions/testplan.class.php:			$sql .= " AS SUM_VALUE FROM {$this->tables['cfield_execution_values']} CFEV " .
lib/functions/testplan.class.php:			$total_time=$this->db->fetchOneValue($sql);
lib/functions/testplan.class.php:	        [active]: default null  -> do not filter on active status
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:			" FROM {$this->tables['builds']} " . 
lib/functions/testplan.class.php:		$recordset = $this->db->fetchRowsIntoMap($sql,'id');
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:		$node_types=$this->tree_manager->get_available_node_types();
lib/functions/testplan.class.php:				" FROM {$this->tables['testplan_tcversions']}  T " .
lib/functions/testplan.class.php:				" JOIN {$this->tables['nodes_hierarchy']}  NH ON T.tcversion_id=NH.id " .
lib/functions/testplan.class.php:				" LEFT OUTER JOIN {$this->tables['executions']} E ON T.tcversion_id = E.tcversion_id " .
lib/functions/testplan.class.php:				" FROM {$this->tables['executions']} EE, {$this->tables['nodes_hierarchy']} NH," .
lib/functions/testplan.class.php:				" FROM {$this->tables['executions']} E " .
lib/functions/testplan.class.php:		$recordset = $this->db->fetchRowsIntoMap($sql,'tcase_id');
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:		$node_types=$this->tree_manager->get_available_node_types();
lib/functions/testplan.class.php:				   " FROM {$this->tables['testplan_tcversions']}  T " .
lib/functions/testplan.class.php:				   " JOIN {$this->tables['nodes_hierarchy']}  NH ON T.tcversion_id=NH.id " .
lib/functions/testplan.class.php:				   " LEFT OUTER JOIN {$this->tables['executions']} E ON T.tcversion_id = E.tcversion_id " .
lib/functions/testplan.class.php:				   " FROM {$this->tables['executions']} EE, {$this->tables['nodes_hierarchy']} NH," .
lib/functions/testplan.class.php:				   "  FROM {$this->tables['executions']} E " .
lib/functions/testplan.class.php:		$recordset = $this->db->fetchRowsIntoMap($sql,'tcase_id');
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:		$node_types=$this->tree_manager->get_available_node_types();
lib/functions/testplan.class.php:				   " FROM {$this->tables['testplan_tcversions']} T " .
lib/functions/testplan.class.php:				   " JOIN {$this->tables['nodes_hierarchy']} NH ON T.tcversion_id=NH.id  AND NH.node_type_id=4 " .
lib/functions/testplan.class.php:				   " LEFT OUTER JOIN {$this->tables['executions']} E ON T.tcversion_id = E.tcversion_id " .
lib/functions/testplan.class.php:			$results[] = $this->db->fetchRowsIntoMap($sql,'tcase_id');
lib/functions/testplan.class.php:    	$sourceLinks = $this->platform_mgr->getLinkedToTestplanAsMap($source_id);
lib/functions/testplan.class.php:    		$this->platform_mgr->linkToTestplan($sourceLinks,$target_id);
lib/functions/testplan.class.php:	 * 20100711 - franciscom - BUGID 3564
lib/functions/testplan.class.php:        		$platforms = $this->platform_mgr->getLinkedToTestplanAsMap($id);
lib/functions/testplan.class.php:        		$platforms = $this->platform_mgr->getLinkedToTestplan($id,$opt);
lib/functions/testplan.class.php:    	return $this->platform_mgr->platformsActiveForTestplan($id);
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:		            " UPDATE {$this->tables['testplan_tcversions']} " .
lib/functions/testplan.class.php:		            " UPDATE {$this->tables['executions']} " .
lib/functions/testplan.class.php:			$this->db->exec_query($sql);		
lib/functions/testplan.class.php:		       " FROM {$this->tables['testplan_tcversions']} " .
lib/functions/testplan.class.php:		$rs = $this->db->fetchRowsIntoMap($sql,'platform_id');
lib/functions/testplan.class.php:	 *                 group_by_platform_tcversion: true -> in this way we will get one record
lib/functions/testplan.class.php:		$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/functions/testplan.class.php:            $build_join = " JOIN {$this->tables['builds']} B ON  B.testplan_id=TPTCV.testplan_id " ;
lib/functions/testplan.class.php:				" FROM {$this->tables['testplan_tcversions']} TPTCV " .
lib/functions/testplan.class.php:				" JOIN {$this->tables['tcversions']} TCV ON TCV.id=TPTCV.tcversion_id " .
lib/functions/testplan.class.php:				" JOIN {$this->tables['nodes_hierarchy']} NODE_TCV ON NODE_TCV.id=TPTCV.tcversion_id " .
lib/functions/testplan.class.php:				" JOIN {$this->tables['nodes_hierarchy']} NODE_TCASE ON NODE_TCASE.id=NODE_TCV.parent_id " .
lib/functions/testplan.class.php:				" LEFT OUTER JOIN {$this->tables['platforms']} PLAT ON " .
lib/functions/testplan.class.php:				" LEFT OUTER JOIN {$this->tables['user_assignments']} UA ON UA.feature_id = TPTCV.id " .
lib/functions/testplan.class.php:				" LEFT OUTER JOIN {$this->tables['executions']} E ON " .
lib/functions/testplan.class.php:        $result = $this->db->get_recordset($sql);
lib/functions/testplan.class.php:	 * 20100610 - eloff - BUGID 3515 - take platforms into account
lib/functions/testplan.class.php:		$code_verbose = $this->getStatusForReports();
lib/functions/testplan.class.php:		$execResults = $this->get_linked_tcversions($tplan_id,$filters,$options);
lib/functions/testplan.class.php:	 * 20100610 - eloff - BUGID 3515 - rewrite inspired by getStatusTotals()
lib/functions/testplan.class.php:	 * 20100201 - franciscom - BUGID 3121
lib/functions/testplan.class.php:		$code_verbose = $this->getStatusForReports();
lib/functions/testplan.class.php:		$execResults = $this->get_linked_tcversions($tplan_id,$filters,$options);
lib/functions/testplan.class.php:		$code_verbose = $this->getStatusForReports();
lib/functions/testplan.class.php:		$platformSet = $this->getPlatforms($tplan_id, array('outputFormat' => 'map'));
lib/functions/testplan.class.php:	 * 20100614 - eloff - refactor to same style as the other getStatusTotals...()
lib/functions/testplan.class.php:	 * 20100206 - eloff - BUGID 3060
lib/functions/testplan.class.php:		$code_verbose = $this->getStatusForReports();
lib/functions/testplan.class.php:		$execResults = $this->get_linked_tcversions($tplan_id,$filters,$options);
lib/functions/testplan.class.php:				$prio_level = $this->urgencyImportanceToPriorityLevel($testcase['priority']);
lib/functions/testplan.class.php:		$code_verbose = $this->getStatusForReports();
lib/functions/testplan.class.php:		$execResults = $this->get_linked_tcversions($tplan_id,$filters,$options);
lib/functions/testplan.class.php:			$kw=$this->tcase_mgr->getKeywords($tcaseSet,null,'keyword_id',' ORDER BY keyword ASC ');
lib/functions/testplan.class.php:		$code_verbose = $this->getStatusForReports();
lib/functions/testplan.class.php:    	$execResults = $this->get_linked_tcversions($id,$filters,$options);
lib/functions/testplan.class.php:            		// 20100425 - francisco.mancardi@gruppotesi.com
lib/functions/testplan.class.php:		$data_set = $this->getStatusTotalsByAssignedTesterPlatform($id);
lib/functions/testplan.class.php:			$code_verbose = $this->getStatusForReports();
lib/functions/testplan.class.php:            $userCol=tlUser::getByIDs($this->db,$userSet,tlUser::TLOBJ_O_GET_DETAIL_MINIMUM);
lib/functions/testplan.class.php:            		$user_platform[$assignedTo]['name'] = $userCol[$assignedTo]->getDisplayName();;
lib/functions/testplan.class.php:    	$execResults = $this->get_linked_tcversions($id,$filters,$options);
lib/functions/testplan.class.php:						number_format((($totalCases - $target['not_run']['qty']) / $totalCases) * 100,2);
lib/functions/testplan.class.php:				// 20100722 - asimon: if $target[$status_verbose]['percentage'] is not set,
lib/functions/testplan.class.php:	 * 20100520 - franciscom - missed platform_id piece on join
lib/functions/testplan.class.php:				" from {$this->tables['testplan_tcversions']} TPTCVMAIN " .
lib/functions/testplan.class.php:				" JOIN {$this->tables['nodes_hierarchy']} NHTCV ON NHTCV.id = TPTCVMAIN.tcversion_id " . 
lib/functions/testplan.class.php:				" JOIN {$this->tables['nodes_hierarchy']} NHTC ON NHTC.id = NHTCV.parent_id " . 
lib/functions/testplan.class.php:				" JOIN {$this->tables['nodes_hierarchy']} NHTSET ON NHTSET.parent_id = NHTC.parent_id " .
lib/functions/testplan.class.php:				" JOIN {$this->tables['nodes_hierarchy']} NHTCVSET ON NHTCVSET.parent_id = NHTSET.id " .
lib/functions/testplan.class.php:				" JOIN {$this->tables['testplan_tcversions']} TPTCVX " . 
lib/functions/testplan.class.php:		$siblings = $this->db->fetchRowsIntoMap($sql,'tcversion_id');
lib/functions/testplan.class.php:    	$brothers_and_sisters = $this->getTestCaseSiblings($id,$tcversion_id,$platform_id);
lib/functions/testplan.class.php:     * threshold values in $tlCfg->priority_levels.
lib/functions/testplan.class.php:	// -------------------
lib/functions/testplan.class.php:		$code_verbose = $this->getStatusForReports();
lib/functions/testplan.class.php:    	$execResults = $this->get_linked_tcversions($id,$filters,$options);
lib/functions/testplan.class.php:		$data_set = $this->getStatusTotalsByAssignedTesterPlatform($id);
lib/functions/testplan.class.php:			$code_verbose = $this->getStatusForReports();
lib/functions/testplan.class.php:            $userCol=tlUser::getByIDs($this->db,$userSet,tlUser::TLOBJ_O_GET_DETAIL_MINIMUM);
lib/functions/testplan.class.php:            		$user_platform[$testedBy]['name'] = $userCol[$testedBy]->getDisplayName();;
lib/functions/testplan.class.php:		$this->db = &$db;
lib/functions/testplan.class.php:          [release_date]: YYYY-MM-DD
lib/functions/testplan.class.php:		$sql = " INSERT INTO {$this->tables['builds']} " .
lib/functions/testplan.class.php:			$this->db->prepare_string($name) . "','" .
lib/functions/testplan.class.php:			$this->db->prepare_string($notes) . "',";
lib/functions/testplan.class.php:			$sql .= "'" . $this->db->prepare_string($targetDate) . "',";
lib/functions/testplan.class.php:		$sql .= "{$active},{$open},{$this->db->db_now()})"; 	                     
lib/functions/testplan.class.php:		$result = $this->db->exec_query($sql);
lib/functions/testplan.class.php:			$new_build_id = $this->db->insert_id($this->tables['builds']);
lib/functions/testplan.class.php:          [$release_date]=''    FORMAT YYYY-MM-DD
lib/functions/testplan.class.php:          [$closed_on_date]=''  FORMAT YYYY-MM-DD
lib/functions/testplan.class.php:		$sql = " UPDATE {$this->tables['builds']} " .
lib/functions/testplan.class.php:			" SET name='" . $this->db->prepare_string($name) . "'," .
lib/functions/testplan.class.php:			"     notes='" . $this->db->prepare_string($notes) . "'";
lib/functions/testplan.class.php:			$sql .= ",release_date='" . $this->db->prepare_string($targetDate) . "'";
lib/functions/testplan.class.php:			$sql .= ",closed_on_date='" . $this->db->prepare_string($closure_date) . "'";
lib/functions/testplan.class.php:		$result = $this->db->exec_query($sql);
lib/functions/testplan.class.php:	 *  20100716 - asimon - BUGID 3406: delete user assignments with build
lib/functions/testplan.class.php:		// 20090611 - franciscom
lib/functions/testplan.class.php:		$sql = " DELETE FROM {$this->tables['executions']}  " .
lib/functions/testplan.class.php:		$result=$this->db->exec_query($sql);
lib/functions/testplan.class.php:		// 3406 - delete user assignments with build
lib/functions/testplan.class.php:		$sql = " DELETE FROM {$this->tables['user_assignments']}  " .
lib/functions/testplan.class.php:		$result=$this->db->exec_query($sql);
lib/functions/testplan.class.php:		$sql = " DELETE FROM {$this->tables['builds']} " .
lib/functions/testplan.class.php:		$result=$this->db->exec_query($sql);
lib/functions/testplan.class.php:		$sql = "SELECT * FROM {$this->tables['builds']} WHERE id = {$id}";
lib/functions/testplan.class.php:		$result = $this->db->exec_query($sql);
lib/functions/testplan.class.php:		$myrow = $this->db->fetch_array($result);
lib/functions/testplan.class.php:	 * @param string $targetDate, format YYYY-MM-DD. can be null
lib/functions/testplan.class.php:		$sql = " UPDATE {$this->tables['builds']} ";
lib/functions/testplan.class.php:			$sql .= " SET closed_on_date='" . $this->db->prepare_string($targetDate) . "'";  	    
lib/functions/testplan.class.php:		$result = $this->db->exec_query($sql);
lib/functions/testplan.class.php:		$this->db = &$db;
lib/functions/testplan.class.php:				if (($time = strtotime($value)) == -1 || $time === false) 
lib/functions/testplan.class.php:                   die (__FUNCTION__ . ' Abort - Invalid date');
lib/functions/testplan.class.php:		        $dateValues[]=" '{$this->db->prepare_string($value)}' ";
lib/functions/testplan.class.php:		$sql = "INSERT INTO {$this->tables['milestones']} " .
lib/functions/testplan.class.php:			   " VALUES (" . $tplan_id . ",'{$this->db->prepare_string($name)}'," .
lib/functions/testplan.class.php:		$result = $this->db->exec_query($sql);
lib/functions/testplan.class.php:			$new_milestone_id = $this->db->insert_id($this->tables['milestones']);
lib/functions/testplan.class.php:		$sql = "UPDATE {$this->tables['milestones']} " . 
lib/functions/testplan.class.php:		       " SET name='{$this->db->prepare_string($name)}', " .
lib/functions/testplan.class.php:			   " target_date='{$this->db->prepare_string($target_date)}', " .
lib/functions/testplan.class.php:			   " start_date='{$this->db->prepare_string($start_date)}', " .
lib/functions/testplan.class.php:		$result = $this->db->exec_query($sql);
lib/functions/testplan.class.php:		$sql = "DELETE FROM {$this->tables['milestones']} WHERE id={$id}";
lib/functions/testplan.class.php:		$result=$this->db->exec_query($sql);
lib/functions/testplan.class.php:    rev: 20090103 - franciscom - get test plan name.
lib/functions/testplan.class.php:			 " FROM {$this->tables['milestones']} M, {$this->tables['nodes_hierarchy']} NH " .
lib/functions/testplan.class.php:		$myrow = $this->db->fetchRowsIntoMap($sql,'id');
lib/functions/testplan.class.php:		$sql = " SELECT id, name FROM {$this->tables['milestones']} " .
lib/functions/testplan.class.php:		$sql .= "'{$this->db->prepare_string($milestone_name)}'";
lib/functions/testplan.class.php:			$sql .= " AND id <> " . $this->db->prepare_int($milestone_id);
lib/functions/testplan.class.php:		$result = $this->db->exec_query($sql);
lib/functions/testplan.class.php:		$status= $this->db->num_rows($result) ? 1 : 0;
lib/functions/testplan.class.php:			 " FROM {$this->tables['milestones']} M, {$this->tables['nodes_hierarchy']} NH " .
lib/functions/testplan.class.php:		$rs=$this->db->get_recordset($sql);
lib/functions/opt_transfer.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/opt_transfer.php:	$opt_cfg->js_events->all_right_click="window.setTimeout('$js_ot_name.transferAllRight()',20);";
lib/functions/opt_transfer.php:	$opt_cfg->js_events->left2right_click="window.setTimeout('$js_ot_name.transferRight()',20);";
lib/functions/opt_transfer.php:	$opt_cfg->js_events->right2left_click="window.setTimeout('$js_ot_name.transferLeft()',20);";
lib/functions/opt_transfer.php:	$opt_cfg->js_events->all_left_click="window.setTimeout('$js_ot_name.transferAllLeft()',20);";
lib/functions/opt_transfer.php:		if(!is_null($opt_cfg->to->map))
lib/functions/opt_transfer.php:			$a_right = $opt_cfg->to->map;
lib/functions/opt_transfer.php:			$a_right[$code] = $opt_cfg->from->map[$code];
lib/functions/opt_transfer.php:	if(!is_null($opt_cfg->from->map))
lib/functions/opt_transfer.php:		$a_left = array_diff_assoc($opt_cfg->from->map,$a_right);
lib/functions/opt_transfer.php:	$opt_cfg->from->map = $a_left;
lib/functions/opt_transfer.php:	$opt_cfg->to->map = $a_right;
lib/functions/opt_transfer.php:	$opt_cfg->size = 8;
lib/functions/opt_transfer.php:	$opt_cfg->style = "width: 98%;";
lib/functions/opt_transfer.php:	$opt_cfg->js_events->all_right_click = "";
lib/functions/opt_transfer.php:	$opt_cfg->js_events->left2right_click = "";
lib/functions/opt_transfer.php:	$opt_cfg->js_events->right2left_click = "";
lib/functions/opt_transfer.php:	$opt_cfg->js_events->all_left_click = "";
lib/functions/opt_transfer.php:	$opt_cfg->from->name = "from_select_box";
lib/functions/opt_transfer.php:	$opt_cfg->from->id_field = 'id';
lib/functions/opt_transfer.php:	$opt_cfg->from->desc_field = 'keyword';
lib/functions/opt_transfer.php:	$opt_cfg->from->desc_glue = " ";
lib/functions/opt_transfer.php:	$opt_cfg->from->desc_html_content = true;
lib/functions/opt_transfer.php:	$opt_cfg->from->required = false;
lib/functions/opt_transfer.php:	$opt_cfg->from->show_id_in_desc = true;
lib/functions/opt_transfer.php:	$opt_cfg->from->js_events->ondblclick = "";
lib/functions/opt_transfer.php:	$opt_cfg->to->name = "to_select_box";
lib/functions/opt_transfer.php:	$opt_cfg->to->show_id_in_desc = true;
lib/functions/opt_transfer.php:	$opt_cfg->to->id_field = 'id';
lib/functions/opt_transfer.php:	$opt_cfg->to->desc_field = 'keyword';
lib/functions/opt_transfer.php:	$opt_cfg->to->desc_glue = " ";
lib/functions/opt_transfer.php:	$opt_cfg->to->desc_html_content = true;
lib/functions/opt_transfer.php:	$opt_cfg->to->required = false;
lib/functions/opt_transfer.php:	$opt_cfg->to->show_id_in_desc = true;
lib/functions/opt_transfer.php:	$opt_cfg->to->js_events->ondblclick = "";
lib/functions/opt_transfer.php:	opt_transf_cfg($opt_cfg, $right_list,$opt_cfg->js_ot_name);  
lib/functions/opt_transfer.php:	$opt_cfg->js_ot_name = "";
lib/functions/opt_transfer.php:	$opt_cfg->size = 8;
lib/functions/opt_transfer.php:	$opt_cfg->style = "width: 300px;";
lib/functions/opt_transfer.php:	$opt_cfg->js_events = new stdClass();
lib/functions/opt_transfer.php:	$opt_cfg->js_events->all_right_click = "";
lib/functions/opt_transfer.php:	$opt_cfg->js_events->left2right_click = "";
lib/functions/opt_transfer.php:	$opt_cfg->js_events->right2left_click = "";
lib/functions/opt_transfer.php:	$opt_cfg->js_events->all_left_click = "";
lib/functions/opt_transfer.php:	$opt_cfg->global_lbl = 'Option Transfer';
lib/functions/opt_transfer.php:	$opt_cfg->from = new stdClass();
lib/functions/opt_transfer.php:	$opt_cfg->from->lbl = 'from';
lib/functions/opt_transfer.php:	$opt_cfg->from->name = "from_select_box";
lib/functions/opt_transfer.php:	$opt_cfg->from->map = array();
lib/functions/opt_transfer.php:	$opt_cfg->from->id_field = '';
lib/functions/opt_transfer.php:	$opt_cfg->from->desc_field = '';
lib/functions/opt_transfer.php:	$opt_cfg->from->desc_glue = " ";
lib/functions/opt_transfer.php:	$opt_cfg->from->desc_html_content = true;
lib/functions/opt_transfer.php:	$opt_cfg->from->required = false;
lib/functions/opt_transfer.php:	$opt_cfg->from->show_id_in_desc = true;
lib/functions/opt_transfer.php:	$opt_cfg->from->js_events = new stdClass;
lib/functions/opt_transfer.php:	$opt_cfg->from->js_events->ondblclick = "";
lib/functions/opt_transfer.php:	$opt_cfg->to = new stdClass();
lib/functions/opt_transfer.php:	$opt_cfg->to->lbl = 'to';
lib/functions/opt_transfer.php:	$opt_cfg->to->name = "to_select_box";
lib/functions/opt_transfer.php:	$opt_cfg->to->map = array();
lib/functions/opt_transfer.php:	$opt_cfg->to->show_id_in_desc = true;
lib/functions/opt_transfer.php:	$opt_cfg->to->id_field = '';
lib/functions/opt_transfer.php:	$opt_cfg->to->desc_field = '';
lib/functions/opt_transfer.php:	$opt_cfg->to->desc_glue = " ";
lib/functions/opt_transfer.php:	$opt_cfg->to->desc_html_content = true;
lib/functions/opt_transfer.php:	$opt_cfg->to->required = false;
lib/functions/opt_transfer.php:	$opt_cfg->to->show_id_in_desc = true;
lib/functions/opt_transfer.php:	$opt_cfg->to->js_events = new stdClass();
lib/functions/opt_transfer.php:	$opt_cfg->to->js_events->ondblclick = "";
lib/functions/opt_transfer.php:	$opt_cfg->size = 8;
lib/functions/opt_transfer.php:	$opt_cfg->style = "width: 98%;";
lib/functions/opt_transfer.php:	$opt_cfg->js_events->all_right_click = "";
lib/functions/opt_transfer.php:	$opt_cfg->js_events->left2right_click = "";
lib/functions/opt_transfer.php:	$opt_cfg->js_events->right2left_click = "";
lib/functions/opt_transfer.php:	$opt_cfg->js_events->all_left_click = "";
lib/functions/opt_transfer.php:	$opt_cfg->from->name = "from_select_box";
lib/functions/opt_transfer.php:	$opt_cfg->from->id_field = 'id';
lib/functions/opt_transfer.php:	// $opt_cfg->from->desc_field = 'keyword';
lib/functions/opt_transfer.php:	$opt_cfg->from->desc_glue = " ";
lib/functions/opt_transfer.php:	$opt_cfg->from->desc_html_content = true;
lib/functions/opt_transfer.php:	$opt_cfg->from->required = false;
lib/functions/opt_transfer.php:	$opt_cfg->from->show_id_in_desc = true;
lib/functions/opt_transfer.php:	$opt_cfg->from->js_events->ondblclick = "";
lib/functions/opt_transfer.php:	$opt_cfg->to->name = "to_select_box";
lib/functions/opt_transfer.php:	$opt_cfg->to->show_id_in_desc = true;
lib/functions/opt_transfer.php:	$opt_cfg->to->id_field = 'id';
lib/functions/opt_transfer.php:	//$opt_cfg->to->desc_field = 'keyword';
lib/functions/opt_transfer.php:	$opt_cfg->to->desc_glue = " ";
lib/functions/opt_transfer.php:	$opt_cfg->to->desc_html_content = true;
lib/functions/opt_transfer.php:	$opt_cfg->to->required = false;
lib/functions/opt_transfer.php:	$opt_cfg->to->show_id_in_desc = true;
lib/functions/opt_transfer.php:	$opt_cfg->to->js_events->ondblclick = "";
lib/functions/opt_transfer.php:	opt_transf_cfg($opt_cfg, $right_list,$opt_cfg->js_ot_name);  
lib/functions/doAuthorize.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/functions/doAuthorize.php: * @copyright 	2003-2009, TestLink community 
lib/functions/doAuthorize.php: * 20100212 - eloff - BUGID 3103 - remove js-timeout alert in favor of BUGID 3088
lib/functions/doAuthorize.php: * 20100202 - franciscom - refactoring of doAuthorize (BUGID 0003129: After login failure blank page is displayed)
lib/functions/doAuthorize.php:		$user->login = $login;
lib/functions/doAuthorize.php:		$login_exists = ($user->readFromDB($db,tlUser::USER_O_SEARCH_BYLOGIN) >= tl::OK); 
lib/functions/doAuthorize.php:			if ($password_check->status_ok && $user->isActive)
lib/functions/doAuthorize.php:					$g_tlLogger->endTransaction();
lib/functions/doAuthorize.php:					$g_tlLogger->startTransaction();
lib/functions/doAuthorize.php:					setUserSession($db,$user->login, $user->dbID,$user->globalRoleID,$user->emailAddress, $user->locale,null);
lib/functions/doAuthorize.php:				logAuditEvent(TLS("audit_login_failed",$login,$_SERVER['REMOTE_ADDR']),"LOGIN_FAILED",$user->dbID,"users");
lib/functions/doAuthorize.php: *         obj->status_ok = true/false
lib/functions/doAuthorize.php: *         obj->msg = message to explain what has happened to a human being.
lib/functions/doAuthorize.php:// 20060507 - franciscom - based on mantis function
lib/functions/doAuthorize.php:	$ret->status_ok = true;
lib/functions/doAuthorize.php:	$ret->msg = 'ok';
lib/functions/doAuthorize.php:		$xx = ldap_authenticate($user->login, $cleartext_password);
lib/functions/doAuthorize.php:		$ret->status_ok = $xx->status_ok;
lib/functions/doAuthorize.php:		$ret->msg = $msg[$xx->status_code];	
lib/functions/doAuthorize.php:		if ($user->comparePassword($cleartext_password) != tl::OK)
lib/functions/doAuthorize.php:			$ret->status_ok = false;
lib/functions/inputparameter.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/inputparameter.class.php:	/** the supported parameter type: non-negative integer */
lib/functions/inputparameter.class.php:		$this->validationInfo = $validationInfo;
lib/functions/inputparameter.class.php:		$this->parameterInfo = $parameterInfo;
lib/functions/inputparameter.class.php:		$this->fetchParameter();
lib/functions/inputparameter.class.php:		$this->normalize();
lib/functions/inputparameter.class.php:		$this->validate();
lib/functions/inputparameter.class.php:		return $this->bFetched;
lib/functions/inputparameter.class.php:		return $this->isValid;
lib/functions/inputparameter.class.php:		$this->taintValue = null;
lib/functions/inputparameter.class.php:		$this->normalizedValue = null;
lib/functions/inputparameter.class.php:		$this->parameterInfo = null;
lib/functions/inputparameter.class.php:		$this->bFetched = false;
lib/functions/inputparameter.class.php:		$this->validationInfo = null;
lib/functions/inputparameter.class.php:		$this->isValid = false;
lib/functions/inputparameter.class.php:		$parameterSource = $this->parameterInfo->source;
lib/functions/inputparameter.class.php:		$parameterName = $this->parameterInfo->name;
lib/functions/inputparameter.class.php:		$this->bFetched = $fetched;
lib/functions/inputparameter.class.php:		$this->taintValue = $value;
lib/functions/inputparameter.class.php:		if ($this->isFetched())
lib/functions/inputparameter.class.php:			if ($this->validationInfo)
lib/functions/inputparameter.class.php:				$this->normalizedValue = $this->validationInfo->normalize($this->taintValue);
lib/functions/inputparameter.class.php:				$this->normalizedValue = $this->taintValue;
lib/functions/inputparameter.class.php:		if (!$this->isFetched())
lib/functions/inputparameter.class.php:		if ($this->validationInfo)
lib/functions/inputparameter.class.php:			$this->validationInfo->validate($this->normalizedValue);
lib/functions/inputparameter.class.php:		$this->isValid = true;
lib/functions/inputparameter.class.php:		if ($this->isFetched() && $this->isValid())
lib/functions/inputparameter.class.php:			return $this->normalizedValue;
lib/functions/inputparameter.class.php:	    $this->source = $source;
lib/functions/inputparameter.class.php:	    $this->name = $name;    
lib/functions/inputparameter.class.php:	 * @return string returns the normalized string-typed value
lib/functions/inputparameter.class.php:		$pfnNormalization = $this->pfnNormalization;
lib/functions/inputparameter.class.php:			$value = $this->trim($value);
lib/functions/inputparameter.class.php:			if ($this->doStripSlashes)	
lib/functions/inputparameter.class.php:				$value = $this->stripslashes($value);
lib/functions/inputparameter.class.php:		switch($this->trim)
lib/functions/inputparameter.class.php:		if ($this->maxLen)	
lib/functions/inputparameter.class.php:			$value = tlSubStr($value,0,$this->maxLen);
lib/functions/inputparameter.class.php:		$minLen = $this->minLen;
lib/functions/inputparameter.class.php:		$regExp = $this->regExp; 
lib/functions/inputparameter.class.php:		$pfnValidation = $this->pfnValidation;
lib/functions/inputparameter.class.php:						" - $pfnValidation]";
lib/functions/inputparameter.class.php:	public $minVal = -2147483648;
lib/functions/inputparameter.class.php:	 * @return int return the normalized integer-typed value
lib/functions/inputparameter.class.php:		$minVal = $this->minVal;
lib/functions/inputparameter.class.php:		$maxVal = $this->maxVal;
lib/functions/inputparameter.class.php:		$pfnValidation = $this->pfnValidation;
lib/functions/inputparameter.class.php:	 * @return array returns the normalized array-typed value
lib/functions/inputparameter.class.php:			$valueArray[$key] = $this->validationInfo->normalize($value);
lib/functions/inputparameter.class.php:			$this->validationInfo->validate($value);
lib/functions/inputparameter.class.php:	 * @return array returns the normalized bool-typed value, true if value == "on", false else
lib/functions/tlTestPlanMetrics.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/functions/tlTestPlanMetrics.class.php: * @copyright 	2004-2009, TestLink community 
lib/functions/tlTestPlanMetrics.class.php:	private $testPlanID = -1;
lib/functions/tlTestPlanMetrics.class.php:	private	$tprojectID = -1;
lib/functions/tlTestPlanMetrics.class.php:    	$this->priorityLevelsCfg = config_get('priority_levels');
lib/functions/tlTestPlanMetrics.class.php:		$this->resultsCfg = config_get('results');
lib/functions/tlTestPlanMetrics.class.php:		$this->testCaseCfg = config_get('testcase_cfg');
lib/functions/tlTestPlanMetrics.class.php:  	$this->db = $db;
lib/functions/tlTestPlanMetrics.class.php:  	$this->map_tc_status = $this->resultsCfg['status_code'];
lib/functions/tlTestPlanMetrics.class.php:    foreach( $this->resultsCfg['status_label_for_exec_ui'] as $tc_status_verbose => $label)
lib/functions/tlTestPlanMetrics.class.php:      	$this->tc_status_for_statistics[$tc_status_verbose] = $this->map_tc_status[$tc_status_verbose];
lib/functions/tlTestPlanMetrics.class.php:    if( !isset($this->resultsCfg['status_label_for_exec_ui']['not_run']) )
lib/functions/tlTestPlanMetrics.class.php:      	$this->tc_status_for_statistics['not_run'] = $this->map_tc_status['not_run'];  
lib/functions/tlTestPlanMetrics.class.php:	 * @param timestamp $milestoneDate - (optional) milestone deadline
lib/functions/tlTestPlanMetrics.class.php:					" FROM {$this->tables['testplan_tcversions']} TPTCV " .
lib/functions/tlTestPlanMetrics.class.php:					" JOIN {$this->tables['executions']} E ON " .
lib/functions/tlTestPlanMetrics.class.php:					" JOIN {$this->tables['tcversions']} TCV ON " .
lib/functions/tlTestPlanMetrics.class.php:					" WHERE TPTCV.testplan_id = {$this->testPlanID} " .
lib/functions/tlTestPlanMetrics.class.php:					" AND NOT E.status = '{$this->map_tc_status['not_run']}' " . 
lib/functions/tlTestPlanMetrics.class.php:				$tmpResult = $this->db->fetchOneValue($sql);
lib/functions/tlTestPlanMetrics.class.php:				if (($urgency*$importance) >= $this->priorityLevelsCfg[HIGH])
lib/functions/tlTestPlanMetrics.class.php:					tLog("getPrioritizedResults> Result-priority HIGH: $urgency, $importance = " . $output[HIGH]);
lib/functions/tlTestPlanMetrics.class.php:				elseif (($urgency*$importance) >= $this->priorityLevelsCfg[MEDIUM])
lib/functions/tlTestPlanMetrics.class.php:					tLog("getPrioritizedResults> Result-priority MEDIUM: $urgency, $importance = " . $output[MEDIUM]);
lib/functions/tlTestPlanMetrics.class.php:					tLog("getPrioritizedResults> Result-priority LOW: $urgency, $importance = " . $output[LOW]);
lib/functions/tlTestPlanMetrics.class.php:		/** @TODO - REFACTOR IS OUT OF STANDARD MAGIC NUMBERS */
lib/functions/tlTestPlanMetrics.class.php:				$sql = "SELECT COUNT( TPTCV.id ) FROM {$this->tables['testplan_tcversions']} TPTCV " .
lib/functions/tlTestPlanMetrics.class.php:						" JOIN {$this->tables['tcversions']} TCV ON TPTCV.tcversion_id = TCV.id " .
lib/functions/tlTestPlanMetrics.class.php:				$tmpResult = $this->db->fetchOneValue($sql);
lib/functions/tlTestPlanMetrics.class.php:				if (($urgency*$importance) >= $this->priorityLevelsCfg[HIGH])
lib/functions/tlTestPlanMetrics.class.php:					tLog("getPrioritizedTestCases> Result-priority HIGH: $urgency, $importance = " . $output[HIGH]);
lib/functions/tlTestPlanMetrics.class.php:				elseif (($urgency*$importance) >= $this->priorityLevelsCfg[MEDIUM])
lib/functions/tlTestPlanMetrics.class.php:					tLog("getPrioritizedTestCases> Result-priority MEDIUM: $urgency, $importance = " . $output[MEDIUM]);
lib/functions/tlTestPlanMetrics.class.php:					tLog("getPrioritizedTestCases> Result-priority LOW: $urgency, $importance = " . $output[LOW]);
lib/functions/tlTestPlanMetrics.class.php:        $planMetrics = $this->getStatusTotals($tplanID);
lib/functions/tlTestPlanMetrics.class.php:		$milestones =  is_null($milestoneSet) ? $this->get_milestones($tplanID) : $milestoneSet;			
lib/functions/tlTestPlanMetrics.class.php:		$priorityCounters = $this->getPrioritizedTestCaseCounters($tplanID);
lib/functions/tlTestPlanMetrics.class.php:		    $item['results'] = $this->getPrioritizedResults($item['target_date']);
lib/events/eventviewer.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/events/eventviewer.php: *		20100508 - franciscom - BUGID 3445: Ability to delete events from selected class from event logs 
lib/events/eventviewer.php: *		20091005 - amitkhullar - improved function getEventsFor() - BUG 2862
lib/events/eventviewer.php: *      20081029 - franciscom - added 'clear' action to delete all events and transactions
lib/events/eventviewer.php:switch($args->doAction)
lib/events/eventviewer.php:	    $g_tlLogger->deleteEventsFor($args->logLevel);
lib/events/eventviewer.php:	    if( is_null($args->logLevel) )
lib/events/eventviewer.php:	    	logAuditEvent(TLS("audit_all_events_deleted",$args->currentUser->login),"DELETE",null,"events");
lib/events/eventviewer.php:			foreach( $args->logLevel as $code )
lib/events/eventviewer.php:				$logLevelVerbose[] = $gui->logLevels[$code];  
lib/events/eventviewer.php:	    	logAuditEvent(TLS("audit_events_with_level_deleted",$args->currentUser->login,$logLevelVerbose),"DELETE",null,"events");
lib/events/eventviewer.php:$gui->events = $g_tlLogger->getEventsFor($args->logLevel,$args->object_id ? $args->object_id : null,
lib/events/eventviewer.php:										 $args->object_type ? $args->object_type : null,null,500,$filters->startTime,
lib/events/eventviewer.php:										 $filters->endTime,$filters->users);
lib/events/eventviewer.php:$smarty->assign('gui',$gui);
lib/events/eventviewer.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/events/eventviewer.php:	$args->currentUser = $_SESSION['currentUser'];
lib/events/eventviewer.php:	$checkStatus = $user->hasRight($db,"mgt_view_events");
lib/events/eventviewer.php:			$checkStatus = $user->hasRight($db,'events_mgt');
lib/events/eventviewer.php:	$gui->logLevels = array(tlLogger::AUDIT => lang_get("log_level_AUDIT"),
lib/events/eventviewer.php:	$gui->allusers = tlUser::getAll($dbHandler);   // THIS IS AN OVERKILL because get ALL USER OBJECTS
lib/events/eventviewer.php:	$gui->testers = getUsersForHtmlOptions($dbHandler,null,null,true,$gui->allusers);
lib/events/eventviewer.php:	$gui->users = getUsersForHtmlOptions($dbHandler);
lib/events/eventviewer.php:    $gui->users[0] = false;
lib/events/eventviewer.php:    $gui->startDate=$argsObj->startDate;
lib/events/eventviewer.php:    $gui->endDate=$argsObj->endDate;
lib/events/eventviewer.php:	$gui->object_id=$argsObj->object_id;
lib/events/eventviewer.php:    $gui->object_type=$argsObj->object_type;
lib/events/eventviewer.php:    $gui->selectedLogLevels = ($argsObj->logLevel ? array_values($argsObj->logLevel) : array());
lib/events/eventviewer.php:    $gui->selectedTesters = ($argsObj->testers ? array_values($argsObj->testers) : array());
lib/events/eventviewer.php:    // $gui->canDelete = has_rights($db,"events_mgt") ? 1 : 0;
lib/events/eventviewer.php:    $gui->canDelete = $argsObj->currentUser->hasRight($dbHandler,"events_mgt");
lib/events/eventviewer.php:	$filters->startTime = null;
lib/events/eventviewer.php:    $filters->endTime = null;
lib/events/eventviewer.php:    $filters->users = null;
lib/events/eventviewer.php:		if ($argsObj->startDate != "")
lib/events/eventviewer.php:			$filters->startTime = strToTime($argsObj->startDate);
lib/events/eventviewer.php:			if (!$filters->startTime)
lib/events/eventviewer.php:				$filters->startTime = null;
lib/events/eventviewer.php:		if ($argsObj->endDate != "")
lib/events/eventviewer.php:			$filters->endTime = strToTime($argsObj->endDate) + (24*60*60-1);
lib/events/eventviewer.php:			if (!$filters->endTime)
lib/events/eventviewer.php:				$filters->endTime = null;
lib/events/eventviewer.php:		if (!is_null($argsObj->testers))
lib/events/eventviewer.php:		    $filters->users = implode(",",$argsObj->testers);
lib/events/eventviewer.php:		    if (!$filters->users)
lib/events/eventviewer.php:				$filters->users = null;
lib/events/eventinfo.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/events/eventinfo.php:if ($args->id)
lib/events/eventinfo.php:	$event = new tlEvent($args->id);
lib/events/eventinfo.php:	if ($event->readFromDB($db,tlEvent::TLOBJ_O_GET_DETAIL_TRANSACTION) >= tl::OK)
lib/events/eventinfo.php:		$user = new tlUser($event->userID);
lib/events/eventinfo.php:		if ($user->readFromDB($db) < tl::OK)
lib/events/eventinfo.php:$smarty->assign("event",$event);
lib/events/eventinfo.php:$smarty->assign("user",$user);
lib/events/eventinfo.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/events/eventinfo.php:	return ($user->hasRight($db,"mgt_view_events")) ? true : false;
lib/platforms/platformsEdit.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/platforms/platformsEdit.php: * 20091201 - franciscom - minor code layout and standard coding changes 
lib/platforms/platformsEdit.php:$default_template = $templateCfg->default_template;
lib/platforms/platformsEdit.php:$op->status = 0;
lib/platforms/platformsEdit.php:$platform_mgr = new tlPlatform($db, $args->testproject_id);
lib/platforms/platformsEdit.php:$action = $args->doAction;
lib/platforms/platformsEdit.php:		if (!$gui->canManage)
lib/platforms/platformsEdit.php:if($op->status == 1)
lib/platforms/platformsEdit.php:	$default_template = $op->template;
lib/platforms/platformsEdit.php:	if ($op->user_feedback)
lib/platforms/platformsEdit.php:		$gui->user_feedback['message'] = $op->user_feedback;
lib/platforms/platformsEdit.php:	$gui->user_feedback['message'] = getErrorMessage($op->status, $args->name);
lib/platforms/platformsEdit.php:	$gui->user_feedback['type'] = ERROR;
lib/platforms/platformsEdit.php:$gui->platforms = $platform_mgr->getAll(array('include_linked_count' => true));
lib/platforms/platformsEdit.php:$smarty->assign('gui',$gui);
lib/platforms/platformsEdit.php:$smarty->display($templateCfg->template_dir . $default_template);
lib/platforms/platformsEdit.php:	$args->doAction = $pParams["doAction"];
lib/platforms/platformsEdit.php:	$args->platform_id = $pParams["id"];
lib/platforms/platformsEdit.php:	$args->name = $pParams["name"];
lib/platforms/platformsEdit.php:	$args->notes = $pParams["notes"];
lib/platforms/platformsEdit.php:	if ($args->doAction == "edit")
lib/platforms/platformsEdit.php:		$_SESSION['platform_id'] = $args->platform_id;
lib/platforms/platformsEdit.php:	else if($args->doAction == "do_update")
lib/platforms/platformsEdit.php:		$args->platform_id = $_SESSION['platform_id'];
lib/platforms/platformsEdit.php:	$args->testproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/platforms/platformsEdit.php:	$args->testproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : 0;
lib/platforms/platformsEdit.php:	$args->currentUser = $_SESSION['currentUser'];
lib/platforms/platformsEdit.php:  returns: - 
lib/platforms/platformsEdit.php:	$ret->template = 'platformsEdit.tpl';
lib/platforms/platformsEdit.php:	$ret->status = 1;
lib/platforms/platformsEdit.php:	$gui->submit_button_label = lang_get('btn_save');
lib/platforms/platformsEdit.php:	$gui->submit_button_action = 'do_create';
lib/platforms/platformsEdit.php:	$gui->action_descr = lang_get('create_platform');
lib/platforms/platformsEdit.php:  returns: - 
lib/platforms/platformsEdit.php:	$ret->template = 'platformsEdit.tpl';
lib/platforms/platformsEdit.php:	$ret->status = 1;
lib/platforms/platformsEdit.php:	$gui->action_descr = lang_get('edit_platform');
lib/platforms/platformsEdit.php:	$platform = $platform_mgr->getById($args->platform_id);
lib/platforms/platformsEdit.php:		$args->name = $platform['name'];
lib/platforms/platformsEdit.php:		$args->notes = $platform['notes'];
lib/platforms/platformsEdit.php:		$gui->name = $args->name;
lib/platforms/platformsEdit.php:		$gui->notes = $args->notes;
lib/platforms/platformsEdit.php:		$gui->action_descr .= TITLE_SEP . $platform['name'];
lib/platforms/platformsEdit.php:	$gui->submit_button_label = lang_get('btn_save');
lib/platforms/platformsEdit.php:	$gui->submit_button_action = 'do_update';
lib/platforms/platformsEdit.php:	$gui->main_descr = lang_get('platform_management');
lib/platforms/platformsEdit.php:	$gui->main_descr = lang_get('platform_management');
lib/platforms/platformsEdit.php:	$gui->action_descr = lang_get('create_platform');
lib/platforms/platformsEdit.php:	$gui->submit_button_label = lang_get('btn_save');
lib/platforms/platformsEdit.php:	$gui->submit_button_action = 'do_create';
lib/platforms/platformsEdit.php:	$ret->template = 'platformsView.tpl';
lib/platforms/platformsEdit.php:	$op = $platform_mgr->create($args->name,$args->notes);
lib/platforms/platformsEdit.php:	$ret->status = $op['status']; 
lib/platforms/platformsEdit.php:	$ret->user_feedback = sprintf(lang_get('platform_created'), $args->name);
lib/platforms/platformsEdit.php:	$platform = $platform_mgr->getPlatform($args->platform_id);
lib/platforms/platformsEdit.php:	$gui->submit_button_label = lang_get('btn_save');
lib/platforms/platformsEdit.php:	$gui->submit_button_action = 'do_update';
lib/platforms/platformsEdit.php:	$gui->main_descr = lang_get('platform_management');
lib/platforms/platformsEdit.php:	$gui->action_descr = $action_descr;
lib/platforms/platformsEdit.php:	$ret->template = 'platformsView.tpl';
lib/platforms/platformsEdit.php:	$ret->status = $platform_mgr->update($args->platform_id,$args->name,$args->notes);
lib/platforms/platformsEdit.php:	$ret->user_feedback = sprintf(lang_get('platform_updated'), $args->name);
lib/platforms/platformsEdit.php:	$gui->main_descr = lang_get('testproject') . TITLE_SEP . $args->testproject_name;
lib/platforms/platformsEdit.php:	$gui->submit_button_label = lang_get('btn_save');
lib/platforms/platformsEdit.php:	$gui->submit_button_action = 'do_update';
lib/platforms/platformsEdit.php:	$gui->action_descr = lang_get('edit_platform');
lib/platforms/platformsEdit.php:	$ret->template = 'platformsView.tpl';
lib/platforms/platformsEdit.php:	$ret->status = $platform_mgr->delete($args->platform_id,true);
lib/platforms/platformsEdit.php:	$ret->user_feedback = sprintf(lang_get('platform_deleted'), $args->name);
lib/platforms/platformsEdit.php:	$gui->canManage = $args->currentUser->hasRight($db,"platform_management");
lib/platforms/platformsEdit.php:    $gui->mgt_view_events = $args->currentUser->hasRight($db,"mgt_view_events");
lib/platforms/platformsEdit.php:	$gui->user_feedback = array('type' => INFO, 'message' => '');
lib/platforms/platformsEdit.php:    $gui->name = $args->name;
lib/platforms/platformsEdit.php:    $gui->notes = $args->notes;
lib/platforms/platformsEdit.php:    $gui->platformID = $args->platform_id;
lib/platforms/platformsEdit.php:	return $user->hasRight($db,'platform_management');
lib/platforms/platformsImport.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/platforms/platformsImport.php: * @copyright 	2005-2009, TestLink community 
lib/platforms/platformsImport.php:$gui->page_title = lang_get('import_platforms');
lib/platforms/platformsImport.php:$gui->goback_url = is_null($args->goback_url) ? '' : $args->goback_url; 
lib/platforms/platformsImport.php:$gui->file_check = array('show_results' => 0, 'status_ok' => 1, 
lib/platforms/platformsImport.php:switch($args->doAction)
lib/platforms/platformsImport.php:        $gui->file_check = doImport($db,$args->testproject_id);
lib/platforms/platformsImport.php:$gui->importTypes = array('XML' => 'XML');
lib/platforms/platformsImport.php:$gui->importLimitBytes = config_get('import_file_max_size_bytes');
lib/platforms/platformsImport.php:$gui->max_size_import_file_msg = sprintf(lang_get('max_size_file_msg'), $gui->importLimitBytes/1024);
lib/platforms/platformsImport.php:$smarty->assign('gui',$gui);  
lib/platforms/platformsImport.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/platforms/platformsImport.php:	$args->userID = $_SESSION['userID'];
lib/platforms/platformsImport.php:  	$args->testproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/platforms/platformsImport.php:	$args->testproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : '';
lib/platforms/platformsImport.php:	$dest = TL_TEMP_PATH . session_id(). "-import_platforms.tmp";
lib/platforms/platformsImport.php:            $platformsOnSystem = $platform_mgr->getAllAsMap('name','rows');
lib/platforms/platformsImport.php:            	$name = trim($platform->name);
lib/platforms/platformsImport.php:            		$import_msg['ok'][] = sprintf(lang_get('platform_updated'),$platform->name);
lib/platforms/platformsImport.php:                    $platform_mgr->update($platformsOnSystem[$name]['id'],$name,$platform->notes);
lib/platforms/platformsImport.php:            		$import_msg['ok'][] = sprintf(lang_get('platform_imported'),$platform->name);
lib/platforms/platformsImport.php:                    $platform_mgr->create($name,$platform->notes);
lib/platforms/platformsImport.php:	return $user->hasRight($db,"platform_management");
lib/platforms/platformsExport.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/platforms/platformsExport.php: * @copyright 	2005-2009, TestLink community 
lib/platforms/platformsExport.php: * 20100227 - franciscom - BUGID 0003229
lib/platforms/platformsExport.php:$gui->page_title = lang_get('export_platforms');
lib/platforms/platformsExport.php:$gui->do_it = 1;
lib/platforms/platformsExport.php:$gui->nothing_todo_msg = '';
lib/platforms/platformsExport.php:$gui->goback_url = is_null($args->goback_url) ? '' : $args->goback_url; 
lib/platforms/platformsExport.php:$gui->export_filename = trim($args->export_filename);
lib/platforms/platformsExport.php:$gui->exportTypes = array('XML' => 'XML');
lib/platforms/platformsExport.php:switch($args->doAction)
lib/platforms/platformsExport.php:	    doExport($db,$gui->export_filename,$args->testproject_id);
lib/platforms/platformsExport.php:$smarty->assign('gui',$gui);
lib/platforms/platformsExport.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/platforms/platformsExport.php:	$args->testproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/platforms/platformsExport.php:	$args->testproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : '';
lib/platforms/platformsExport.php:	if(is_null($args->export_filename))
lib/platforms/platformsExport.php:		$args->export_filename = $args->testproject_name . "-platforms.xml";
lib/platforms/platformsExport.php:    $args->export_filename = trim(str_ireplace(" ", "",$args->export_filename));
lib/platforms/platformsExport.php:  returns: -
lib/platforms/platformsExport.php:	$debugMsg = 'Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__;
lib/platforms/platformsExport.php:    $adodbXML = new ADODB_XML("1.0", "UTF-8");
lib/platforms/platformsExport.php:    $adodbXML->setRootTagName('platforms');
lib/platforms/platformsExport.php:    $adodbXML->setRowTagName('platform');
lib/platforms/platformsExport.php:    $content = $adodbXML->ConvertToXMLString($db->db, $sql);
lib/platforms/platformsExport.php:	return $user->hasRight($db,"platform_view");
lib/platforms/platformsAssign.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/platforms/platformsAssign.php: * @copyright 	2005-2009, TestLink community 
lib/platforms/platformsAssign.php: *  20091201 - Eloff - added function init_option_panels
lib/platforms/platformsAssign.php: *	20090822 - franciscom - added logic to give warning to user when adding platforms
lib/platforms/platformsAssign.php:$opt_cfg->js_ot_name = 'ot';
lib/platforms/platformsAssign.php:if ($args->edit == 'testproject')
lib/platforms/platformsAssign.php:$platform_mgr = new tlPlatform($db, $args->testproject_id);
lib/platforms/platformsAssign.php:$gui->platform_assignment_subtitle = null;
lib/platforms/platformsAssign.php:$gui->tplan_id = $args->tplan_id;
lib/platforms/platformsAssign.php:$gui->can_do = isset($args->tplan_id);
lib/platforms/platformsAssign.php:$gui->mainTitle = lang_get('add_remove_platforms');
lib/platforms/platformsAssign.php:$gui->warning = '';
lib/platforms/platformsAssign.php:if (isset($args->tplan_id))
lib/platforms/platformsAssign.php:	$qtyByPlatform = $tplan_mgr->countLinkedTCVersionsByPlatform($args->tplan_id);
lib/platforms/platformsAssign.php:		$gui->warning = lang_get('unknown_platform');
lib/platforms/platformsAssign.php:    $opt_cfg->global_lbl = '';
lib/platforms/platformsAssign.php:    $opt_cfg->additional_global_lbl = null;
lib/platforms/platformsAssign.php:    $opt_cfg->from->lbl = lang_get('available_platforms');
lib/platforms/platformsAssign.php:    $opt_cfg->to->lbl = lang_get('assigned_platforms');
lib/platforms/platformsAssign.php:    $gui->platform_count_js = init_option_panels($tplan_mgr, $platform_mgr, $opt_cfg, $args);
lib/platforms/platformsAssign.php:    $tplanData = $tplan_mgr->get_by_id($args->tplan_id);
lib/platforms/platformsAssign.php:        $gui->mainTitle = sprintf($gui->mainTitle,$tplanData['name']);
lib/platforms/platformsAssign.php:    if($args->doAction == 'doAssignPlatforms')
lib/platforms/platformsAssign.php:    	$platform_mgr->linkToTestplan($args->platformsToAdd,$args->tplan_id);
lib/platforms/platformsAssign.php:    	$platform_mgr->unlinkFromTestplan($args->platformsToRemove,$args->tplan_id);
lib/platforms/platformsAssign.php:        if( $fix_needed && count($args->platformsToAdd) == 1)
lib/platforms/platformsAssign.php:    	    reset($args->platformsToAdd);
lib/platforms/platformsAssign.php:        	$tplan_mgr->changeLinkedTCVersionsPlatform($args->tplan_id,0,current($args->platformsToAdd));
lib/platforms/platformsAssign.php:        $gui->platform_count_js = init_option_panels($tplan_mgr, $platform_mgr, $opt_cfg, $args);
lib/platforms/platformsAssign.php:$opt_cfg->from->desc_field = 'platform';
lib/platforms/platformsAssign.php:$opt_cfg->to->desc_field = 'platform';
lib/platforms/platformsAssign.php:$smarty->assign('gui', $gui);
lib/platforms/platformsAssign.php:$smarty->assign('opt_cfg', $opt_cfg);
lib/platforms/platformsAssign.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/platforms/platformsAssign.php:    $opt_cfg->from->map = $platform_mgr->getAllAsMap();
lib/platforms/platformsAssign.php:    $map = $platform_mgr->getLinkedToTestplanAsMap($args->tplan_id);
lib/platforms/platformsAssign.php:    	    $count = $tplan_mgr->count_testcases($args->tplan_id,$platform_id);
lib/platforms/platformsAssign.php:    	    unset($opt_cfg->from->map[$platform_id]);
lib/platforms/platformsAssign.php:    $opt_cfg->to->map = $map;
lib/platforms/platformsAssign.php:    $added = $opt_cfg->js_ot_name . "_addedRight";
lib/platforms/platformsAssign.php:    $removed = $opt_cfg->js_ot_name . "_removedRight";
lib/platforms/platformsAssign.php:	$args->tplan_id = $pParams["tplan_id"];
lib/platforms/platformsAssign.php:    $args->platformsToAdd = null;
lib/platforms/platformsAssign.php:    $args->platformsToRemove = null;
lib/platforms/platformsAssign.php:        $args->platformsToAdd = explode(",", $pParams[$added]);
lib/platforms/platformsAssign.php:        $args->platformsToRemove = explode(",", $pParams[$removed]);
lib/platforms/platformsAssign.php:	$args->edit = $pParams["edit"];
lib/platforms/platformsAssign.php:	$args->doAction = $pParams["doAction"];
lib/platforms/platformsAssign.php:	$args->testproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/platforms/platformsAssign.php:	return ($user->hasRight($db,'platform_management') && 
lib/platforms/platformsAssign.php:	        $user->hasRight($db,'platform_view'));
lib/platforms/platformsView.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/platforms/platformsView.php:$platform_mgr = new tlPlatform($db, $args->testproject_id);
lib/platforms/platformsView.php:$gui->platforms = $platform_mgr->getAll(array('include_linked_count' => true));
lib/platforms/platformsView.php:$gui->canManage = $args->currentUser->hasRight($db,"platform_management");
lib/platforms/platformsView.php:$gui->user_feedback = null;
lib/platforms/platformsView.php:$smarty->assign('gui',$gui);
lib/platforms/platformsView.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/platforms/platformsView.php:	$args->testproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/platforms/platformsView.php:	$args->currentUser = $_SESSION['currentUser']; 
lib/platforms/platformsView.php:	return ($user->hasRight($db,'platform_management') || $user->hasRight($db,'platform_view'));
lib/requirements/reqSpecSearchForm.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/requirements/reqSpecSearchForm.php: * @copyright 	2005-2009, TestLink community 
lib/requirements/reqSpecSearchForm.php: * 20100806 - asimon - type displayed wrong selection: req types instead of req spec types
lib/requirements/reqSpecSearchForm.php:$gui->tcasePrefix = '';
lib/requirements/reqSpecSearchForm.php:$gui->mainCaption = lang_get('testproject') . " " . $args->tprojectName;
lib/requirements/reqSpecSearchForm.php:$gui->design_cf = $tproject_mgr->cfield_mgr->get_linked_cfields_at_design($args->tprojectID,$enabled,
lib/requirements/reqSpecSearchForm.php:$reqSpecSet = $tproject_mgr->getOptionReqSpec($args->tprojectID,testproject::GET_NOT_EMPTY_REQSPEC);
lib/requirements/reqSpecSearchForm.php:$gui->filter_by['design_scope_custom_fields'] = !is_null($gui->design_cf);
lib/requirements/reqSpecSearchForm.php:$gui->filter_by['requirement_doc_id'] = !is_null($reqSpecSet);
lib/requirements/reqSpecSearchForm.php:// 20100806 - asimon - type displayed wrong selection: req types instead of req spec types
lib/requirements/reqSpecSearchForm.php:$gui->types = init_labels($reqSpecCfg->type_labels);
lib/requirements/reqSpecSearchForm.php:$smarty->assign('gui',$gui);
lib/requirements/reqSpecSearchForm.php:$smarty->display($templateCfg->template_dir . 'reqSpecSearchForm.tpl');
lib/requirements/reqSpecSearchForm.php:    $args->tprojectID = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/requirements/reqSpecSearchForm.php:    $args->tprojectName = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : 0;
lib/requirements/reqSpecView.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/requirements/reqSpecView.php: * rev: 20100810 - asimon - BUGID 3317: disabled total count of requirements by default
lib/requirements/reqSpecView.php: *      20080924 - franciscom - use requirements count to enable/disable features
lib/requirements/reqSpecView.php: *      20070415 - franciscom - custom field manager
lib/requirements/reqSpecView.php: *      20070415 - franciscom - added reorder feature
lib/requirements/reqSpecView.php:$smarty->assign('gui',$gui);
lib/requirements/reqSpecView.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/requirements/reqSpecView.php:    $args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/requirements/reqSpecView.php:    $args->tproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : null;
lib/requirements/reqSpecView.php:    $gui = $commandMgr->initGuiBean();
lib/requirements/reqSpecView.php:	$gui->req_spec_cfg = config_get('req_spec_cfg');
lib/requirements/reqSpecView.php:	$gui->req_cfg = config_get('req_cfg');
lib/requirements/reqSpecView.php:	// 20100810 - asimon - BUGID 3317: disabled total count of requirements by default
lib/requirements/reqSpecView.php:	$gui->external_req_management = ($gui->req_cfg->external_req_management == ENABLED) ? 1 : 0;
lib/requirements/reqSpecView.php:	$gui->grants = new stdClass();
lib/requirements/reqSpecView.php:	$gui->grants->req_mgmt = has_rights($db,"mgt_modify_req");
lib/requirements/reqSpecView.php:	$gui->req_spec = $req_spec_mgr->get_by_id($argsObj->req_spec_id);
lib/requirements/reqSpecView.php:	$gui->req_spec_id = $argsObj->req_spec_id;
lib/requirements/reqSpecView.php:	$gui->tproject_name = $argsObj->tproject_name;
lib/requirements/reqSpecView.php:	$gui->name = $gui->req_spec['title'];
lib/requirements/reqSpecView.php:	$gui->main_descr = lang_get('req_spec_short') . config_get('gui_title_separator_1') . 
lib/requirements/reqSpecView.php:	                   "[{$gui->req_spec['doc_id']}] :: " .$gui->req_spec['title'];
lib/requirements/reqSpecView.php:	$gui->refresh_tree = 'no';
lib/requirements/reqSpecView.php:	$gui->cfields = $req_spec_mgr->html_table_of_custom_field_values($argsObj->req_spec_id,$argsObj->tproject_id);
lib/requirements/reqSpecView.php:	$gui->attachments = getAttachmentInfosFrom($req_spec_mgr,$argsObj->req_spec_id);
lib/requirements/reqSpecView.php:	$gui->requirements_count = $req_spec_mgr->get_requirements_count($argsObj->req_spec_id);
lib/requirements/reqSpecView.php:	$gui->reqSpecTypeDomain = init_labels($gui->req_spec_cfg->type_labels);
lib/requirements/reqSpecView.php:	$prefix = $tproject_mgr->getTestCasePrefix($argsObj->tproject_id);
lib/requirements/reqSpecView.php:	$gui->direct_link = $_SESSION['basehref'] . 'linkto.php?tprojectPrefix=' . urlencode($prefix) . 
lib/requirements/reqSpecView.php:	                    '&item=reqspec&id=' . urlencode($gui->req_spec['doc_id']);
lib/requirements/reqSpecView.php:	return $user->hasRight($db,'mgt_view_req');
lib/requirements/reqImport.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/requirements/reqImport.php: * 20100321 - franciscom - work on import child requirements XML format - not finished
lib/requirements/reqImport.php: * 20081103 - sisajr - DocBook XML extension
lib/requirements/reqImport.php: * 20080504 - franciscom - removed tmp file after import
lib/requirements/reqImport.php: * 20061014 - franciscom - added check on file mime type
lib/requirements/reqImport.php:switch($args->doAction)
lib/requirements/reqImport.php:        $dummy = doUploadFile($db,$gui->fileName,$gui->scope,$args,$req_spec_mgr);
lib/requirements/reqImport.php:        $gui->items = $dummy->items;
lib/requirements/reqImport.php:        $gui->items_qty = is_null($gui->items) ? 0 : count($gui->items);
lib/requirements/reqImport.php:        $gui->has_items = $gui->items_qty > 0;
lib/requirements/reqImport.php:        $gui->support_array = $gui->has_items ? array_keys($gui->items): array();  // do know is if really needed
lib/requirements/reqImport.php:        $gui->file_check = $dummy->file_check;
lib/requirements/reqImport.php:        if($gui->file_check['status_ok'] == 0)
lib/requirements/reqImport.php:            $gui->doAction = 'askFileName';
lib/requirements/reqImport.php:        $dummy = doExecuteImport($db,$gui->fileName,$args,$req_spec_mgr);
lib/requirements/reqImport.php:		$gui->items = $dummy->items;        
lib/requirements/reqImport.php:        $gui->importResult = lang_get('import_done');
lib/requirements/reqImport.php:switch($args->scope)
lib/requirements/reqImport.php:		$req_spec = $req_spec_mgr->get_by_id($args->req_spec_id);
lib/requirements/reqImport.php:$smarty->assign('gui',$gui);
lib/requirements/reqImport.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/requirements/reqImport.php:    $retval->items = null;
lib/requirements/reqImport.php:    $retval->msg = '';
lib/requirements/reqImport.php:	if($argsObj->importType == 'XML')
lib/requirements/reqImport.php:	    $filter['requirements'] = $argsObj->achecked_req;
lib/requirements/reqImport.php:	    $retval->items = array();
lib/requirements/reqImport.php:        	foreach($xml->req_spec as $xkm)
lib/requirements/reqImport.php:    			$dummy = $reqSpecMgr->createFromXML($xkm,$argsObj->tproject_id,$argsObj->req_spec_id,$argsObj->user_id);
lib/requirements/reqImport.php:    			$retval->items = array_merge($retval->items,$dummy);
lib/requirements/reqImport.php:    		$selectedKeys = array_keys($argsObj->achecked_req[0]);
lib/requirements/reqImport.php:    			$retval->items = null;
lib/requirements/reqImport.php:        			$retval->items[] = $reqMgr->createFromXML($xml->requirement[$kdx],$argsObj->tproject_id,
lib/requirements/reqImport.php:        			                                          $argsObj->req_spec_id,$argsObj->user_id);
lib/requirements/reqImport.php:	    $retval->items = doReqImport($dbHandler,$argsObj->tproject_id,$argsObj->user_id,$argsObj->req_spec_id,$fileName,
lib/requirements/reqImport.php: 	    				             $argsObj->importType,$argsObj->emptyScope,$argsObj->conflictSolution,true);
lib/requirements/reqImport.php:	$retval->msg = lang_get('req_import_finished');
lib/requirements/reqImport.php:    $args->req_spec_id = isset($request['req_spec_id']) ? $request['req_spec_id'] : null;
lib/requirements/reqImport.php:    $args->importType = isset($request['importType']) ? $request['importType'] : null;
lib/requirements/reqImport.php:    $args->emptyScope = isset($request['noEmpty']) ? $request['noEmpty'] : null;
lib/requirements/reqImport.php:    $args->conflictSolution = isset($request['conflicts']) ? $request['conflicts'] : null;
lib/requirements/reqImport.php:    $args->bUpload = isset($request['uploadFile']) ? 1 : 0;
lib/requirements/reqImport.php:    $args->useRecursion = isset($request['useRecursion']) ? 1 : 0;
lib/requirements/reqImport.php:    $args->doAction='askFileName';
lib/requirements/reqImport.php:            $args->doAction=$action;
lib/requirements/reqImport.php:    $args->achecked_req=isset($request['achecked_req']) ? $request['achecked_req'] : null;
lib/requirements/reqImport.php:    $args->tproject_id = $_SESSION['testprojectID'];
lib/requirements/reqImport.php:    $args->tproject_name = $_SESSION['testprojectName'];
lib/requirements/reqImport.php:    $args->user_id = isset($_SESSION['userID']) ? $_SESSION['userID'] : 0;
lib/requirements/reqImport.php:   	$args->scope = isset($_REQUEST['scope']) ? $_REQUEST['scope'] : 'items';
lib/requirements/reqImport.php:	$mime_types['check_ext'] = array('application/octet-stream' => 'csv');                        
lib/requirements/reqImport.php:	$mime_import_types['application/octet-stream'] = array('CSV' => 'CSV');
lib/requirements/reqImport.php:    $gui->file_check = array('status_ok' => 1, 'msg' => 'ok');
lib/requirements/reqImport.php:    $gui->items=null;
lib/requirements/reqImport.php:	$gui->try_upload = $argsObj->bUpload;
lib/requirements/reqImport.php:	$gui->importResult = null;
lib/requirements/reqImport.php:    $gui->doAction=$argsObj->doAction;
lib/requirements/reqImport.php:	$gui->scope = $argsObj->scope;
lib/requirements/reqImport.php:	$gui->req_spec = null;
lib/requirements/reqImport.php:	$gui->req_spec_id = $argsObj->req_spec_id;
lib/requirements/reqImport.php:    switch($gui->scope)
lib/requirements/reqImport.php:    		$gui->main_descr = sprintf(lang_get('tproject_import_req_spec'),$argsObj->tproject_name);
lib/requirements/reqImport.php:   			$gui->importTypes = $reqSpecMgr->get_import_file_types();
lib/requirements/reqImport.php:			$gui->req_spec = $reqSpecMgr->get_by_id($argsObj->req_spec_id);
lib/requirements/reqImport.php:    		$gui->main_descr = sprintf(lang_get('reqspec_import_req_spec'),$gui->req_spec['title']);
lib/requirements/reqImport.php:    		$gui->importTypes = $reqSpecMgr->get_import_file_types();
lib/requirements/reqImport.php:			$gui->req_spec = $reqSpecMgr->get_by_id($argsObj->req_spec_id);
lib/requirements/reqImport.php:    		$gui->main_descr = sprintf(lang_get('reqspec_import_requirements'),$gui->req_spec['title']);
lib/requirements/reqImport.php:    		$gui->importTypes = $reqMgr->get_import_file_types();
lib/requirements/reqImport.php:    $gui->importType = $argsObj->importType;
lib/requirements/reqImport.php:    $gui->fileName = TL_TEMP_PATH . "importReq-" . session_id() . ".tmp";
lib/requirements/reqImport.php:    $gui->importFileGui = new stdClass();
lib/requirements/reqImport.php:    $gui->importFileGui->importTypes = $gui->importTypes;
lib/requirements/reqImport.php:    $gui->importFileGui->importType = $argsObj->importType;
lib/requirements/reqImport.php:    $gui->importFileGui->maxFileSize=round(strval($file_size_limit)/1024);
lib/requirements/reqImport.php:    $gui->importFileGui->fileSizeLimitMsg=sprintf(lang_get('max_file_size_is'), $gui->importFileGui->maxFileSize  . ' KB ');
lib/requirements/reqImport.php:    $gui->importFileGui->return_to_url=$session['basehref'];
lib/requirements/reqImport.php:    if( is_null($argsObj->req_spec_id) )
lib/requirements/reqImport.php:        $gui->importFileGui->return_to_url .= "lib/project/project_req_spec_mgmt.php?id=$argsObj->tproject_id";
lib/requirements/reqImport.php:        $gui->importFileGui->return_to_url .= "lib/requirements/reqSpecView.php?req_spec_id=$argsObj->req_spec_id";
lib/requirements/reqImport.php:	return ($user->hasRight($db,'mgt_view_req') && $user->hasRight($db,'mgt_modify_req'));
lib/requirements/reqImport.php:    $retval->items=null;
lib/requirements/reqImport.php:    $retval->file_check=array('status_ok' => 1, 'msg' => 'ok');
lib/requirements/reqImport.php:		if($retval->file_check['status_ok'])
lib/requirements/reqImport.php:			    // Must be recoded - $file_check = check_syntax($gui->fileName,$args->importType);
lib/requirements/reqImport.php:			    if($retval->file_check['status_ok'])
lib/requirements/reqImport.php:			        if( strcasecmp($argsObj->importType,'XML') == 0 )
lib/requirements/reqImport.php:    	                $retval->file_check['status_ok']=!(($xml=simplexml_load_file($fileName)) === FALSE);
lib/requirements/reqImport.php:    	                if($retval->file_check['status_ok'])
lib/requirements/reqImport.php:    	                	$retval->items = array();
lib/requirements/reqImport.php:    	                		foreach($xml->req_spec as $xkm)
lib/requirements/reqImport.php:    	                			$retval->items = array_merge($retval->items,$reqSpecMgr->xmlToMapReqSpec($xkm));
lib/requirements/reqImport.php:    	                		$loop2do = count($xml->requirement);
lib/requirements/reqImport.php:        						    $xml_req=$reqMgr->xmlToMapRequirement($xml->requirement[$zdx]);
lib/requirements/reqImport.php:        						    // this keys must be same that returned by $reqSpecMgr->xmlToMapReqSpec
lib/requirements/reqImport.php:     						        $retval->items[]=array('requirements' => $items, 'req_spec' => null, 'level' => 0);
lib/requirements/reqImport.php:	                        $retval->file_check['msg']=lang_get('xml_load_file_failed');
lib/requirements/reqImport.php:					    $retval->items = doReqImport($dbHandler,$argsObj->tproject_id,$argsObj->user_id,$argsObj->req_spec_id,
lib/requirements/reqImport.php:					    							 $fileName,$argsObj->importType,$argsObj->emptyScope,
lib/requirements/reqImport.php: 					   				                 $argsObj->conflictSolution,false);
lib/requirements/reqImport.php:		$retval->file_check=array('status_ok' => 0, 'msg' => lang_get('please_choose_req_file'));
lib/requirements/reqCompareVersions.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/requirements/reqCompareVersions.php: * @copyright 	2005-2009, TestLink community 
lib/requirements/reqCompareVersions.php: * @version    	CVS: $Id: reqCompareVersions.php,v 1.5 2010/08/31 09:31:51 mx-julian Exp $
lib/requirements/reqCompareVersions.php: * 20100831 - Julian - added requirement title to page heading
lib/requirements/reqCompareVersions.php:$reqSet = $reqMgr->get_by_id($args->req_id);
lib/requirements/reqCompareVersions.php:$gui->req_versions = $reqSet;
lib/requirements/reqCompareVersions.php:$gui->req_id = $args->req_id;
lib/requirements/reqCompareVersions.php:$gui->compare_selected_versions = $args->compare_selected_versions;
lib/requirements/reqCompareVersions.php:$gui->context = $args->context;
lib/requirements/reqCompareVersions.php:$gui->version_short = lang_get('version_short');
lib/requirements/reqCompareVersions.php:if ($args->compare_selected_versions) {
lib/requirements/reqCompareVersions.php:		if ($req['version'] == $args->version_left) {
lib/requirements/reqCompareVersions.php:		if ($req['version'] == $args->version_right) {
lib/requirements/reqCompareVersions.php:		$diff_array[$key]["diff"] = $differ->inline($diff_array[$key]["left"], $gui->version_short . $args->version_left, 
lib/requirements/reqCompareVersions.php:		                                            $diff_array[$key]["right"], $gui->version_short . $args->version_right, $args->context);
lib/requirements/reqCompareVersions.php:		$diff_array[$key]["count"] = count($differ->changes);
lib/requirements/reqCompareVersions.php:	$gui->diff_array = $diff_array;
lib/requirements/reqCompareVersions.php:	$gui->subtitle = sprintf(lang_get('diff_subtitle_req'), $args->version_left, $args->version_left, 
lib/requirements/reqCompareVersions.php:	                         $args->version_right, $args->version_right, 
lib/requirements/reqCompareVersions.php:$smarty->assign('gui', $gui);
lib/requirements/reqCompareVersions.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/requirements/reqCompareVersions.php:	$args->req_id = isset($_REQUEST['requirement_id']) ? $_REQUEST['requirement_id'] : 0;
lib/requirements/reqCompareVersions.php:	$args->compare_selected_versions = isset($_REQUEST['compare_selected_versions']);
lib/requirements/reqCompareVersions.php:	$args->version_left = $_REQUEST['version_left'];
lib/requirements/reqCompareVersions.php:	$args->version_right = $_REQUEST['version_right'];
lib/requirements/reqCompareVersions.php:		$args->context = null;
lib/requirements/reqCompareVersions.php:		$args->context = (isset($_REQUEST['context']) && is_numeric($_REQUEST['context'])) ? $_REQUEST['context'] : $diffEngineCfg->context;
lib/requirements/reqEdit.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/requirements/reqEdit.php: *  20100811 - asimon - fixed two warnings because of undefined variables in template
lib/requirements/reqEdit.php: *  20100808 - aismon - added logic to refresh filtered tree on action
lib/requirements/reqEdit.php: *  20100319 - asimon - BUGID 3307 - set coverage to 0 if null, to avoid database errors with null value
lib/requirements/reqEdit.php: *  20100303 - asimon - bugfix, changed max length of req_doc_id in init_args() to 64 from 32
lib/requirements/reqEdit.php: *  					--> TODO why aren't the constants used here instead of magic numbers?
lib/requirements/reqEdit.php: *  20100205 - asimon - added requirement freezing
lib/requirements/reqEdit.php: *	20091217 - franciscom - added type management 
lib/requirements/reqEdit.php: *	20091202 - franciscom - fixed bug on webeditor value init.
lib/requirements/reqEdit.php: *	20080827 - franciscom - BUGID 1692
lib/requirements/reqEdit.php: *	20080411 - franciscom - BUGID 1476
lib/requirements/reqEdit.php:$pFn = $args->doAction;
lib/requirements/reqEdit.php:	$op = $commandMgr->$pFn($args,$_REQUEST);
lib/requirements/reqEdit.php:	$args->req_id = $args->requirement_id;
lib/requirements/reqEdit.php:	$args->title = $args->req_title;
lib/requirements/reqEdit.php:	$args->arrReqIds = $args->req_id_cbox;
lib/requirements/reqEdit.php:	$args->basehref = $_SESSION['basehref'];
lib/requirements/reqEdit.php:	$args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/requirements/reqEdit.php:	$args->tproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : "";
lib/requirements/reqEdit.php:	$args->user_id = isset($_SESSION['userID']) ? $_SESSION['userID'] : 0;
lib/requirements/reqEdit.php:	// BUGID 3307 - set to 0 if null, to avoid database errors with null value
lib/requirements/reqEdit.php:	if (!is_numeric($args->expected_coverage)) {
lib/requirements/reqEdit.php:		$args->expected_coverage = 0;
lib/requirements/reqEdit.php:	// asimon - 20100808 - added logic to refresh filtered tree on action
lib/requirements/reqEdit.php:	$args->refreshTree = isset($_SESSION['setting_refresh_tree_on_action'])
lib/requirements/reqEdit.php:    $owebEditor = web_editor('scope',$argsObj->basehref,$editorCfg) ;
lib/requirements/reqEdit.php:	switch($argsObj->doAction)
lib/requirements/reqEdit.php:        $owebEditor->Value = $argsObj->scope;
lib/requirements/reqEdit.php:    	$owebEditor->Value = getItemTemplateContents('requirement_template',$owebEditor->InstanceName, 
lib/requirements/reqEdit.php:    	                                             $argsObj->scope);
lib/requirements/reqEdit.php:	$guiObj->scope = $owebEditor->CreateHTML();
lib/requirements/reqEdit.php:    $guiObj->editorType = $editorCfg['type'];
lib/requirements/reqEdit.php:    // 20100808 - aismon - added logic to refresh filtered tree on action
lib/requirements/reqEdit.php:    switch($argsObj->doAction) {
lib/requirements/reqEdit.php:       		$guiObj->refreshTree = $argsObj->refreshTree;
lib/requirements/reqEdit.php:    switch($argsObj->doAction)
lib/requirements/reqEdit.php:                $guiObj->$key = $value;
lib/requirements/reqEdit.php:            $guiObj->operation = $actionOperation[$argsObj->doAction];
lib/requirements/reqEdit.php:            $tplDir = (!isset($opObj->template_dir)  || is_null($opObj->template_dir)) ? $templateCfg->template_dir : $opObj->template_dir;
lib/requirements/reqEdit.php:            $tpl = is_null($opObj->template) ? $templateCfg->default_template : $opObj->template;
lib/requirements/reqEdit.php:        	$smartyObj->assign('gui',$guiObj);
lib/requirements/reqEdit.php:		    $smartyObj->display($tpl);
lib/requirements/reqEdit.php:    $gui = $commandMgr->initGuiBean();
lib/requirements/reqEdit.php:    $gui->req_cfg = config_get('req_cfg');
lib/requirements/reqEdit.php:  	$gui->req_spec_id = $argsObj->req_spec_id;
lib/requirements/reqEdit.php:	if ($argsObj->req_spec_id)
lib/requirements/reqEdit.php:		$gui->requirements_count = $req_spec_mgr->get_requirements_count($gui->req_spec_id);
lib/requirements/reqEdit.php:		$gui->req_spec = $req_spec_mgr->get_by_id($gui->req_spec_id);
lib/requirements/reqEdit.php:    $gui->user_feedback = null;
lib/requirements/reqEdit.php:    $gui->main_descr = lang_get('req_spec_short');
lib/requirements/reqEdit.php:    if (isset($gui->req_spec))
lib/requirements/reqEdit.php:     	$gui->main_descr .= config_get('gui_title_separator_1') . $gui->req_spec['title'];
lib/requirements/reqEdit.php:    $gui->action_descr = null;
lib/requirements/reqEdit.php:    $gui->grants = new stdClass();
lib/requirements/reqEdit.php:    $gui->grants->req_mgmt = has_rights($dbHandler,"mgt_modify_req");
lib/requirements/reqEdit.php:	$gui->grants->mgt_view_events = has_rights($dbHandler,"mgt_view_events");
lib/requirements/reqEdit.php:	// 20100811 - asimon - fixed two warnings because of undefined variables in template
lib/requirements/reqEdit.php:	$gui->req_version_id = $argsObj->req_version_id;
lib/requirements/reqEdit.php:	$gui->preSelectedType = TL_REQ_TYPE_USE_CASE;
lib/requirements/reqEdit.php:	return ($user->hasRight($db,'mgt_view_req') && $user->hasRight($db,'mgt_modify_req'));
lib/requirements/reqOverview.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/requirements/reqOverview.php: * @version CVS: $Id: reqOverview.php,v 1.29 2010/08/26 07:27:48 mx-julian Exp $
lib/requirements/reqOverview.php: * 20100823 - Julian - table now uses a unique table id per test project
lib/requirements/reqOverview.php: * 20100822 - asimon - removal of magic numbers for default table sorting
lib/requirements/reqOverview.php: * 20100821 - asimon - replaced "show all versions" button by checkbox as requested per e-mail
lib/requirements/reqOverview.php: * 20100816 - Julian - added default sorting and grouping
lib/requirements/reqOverview.php: * 20100730 - asimon - added table ID (0) to constructor of ext table
lib/requirements/reqOverview.php: * 20100629 - asimon - added display of is_open/frozen attribute,
lib/requirements/reqOverview.php: *                     solved problem with broken ext js table by linebreaks in textarea-cfields
lib/requirements/reqOverview.php: * 20100508 - franciscom - use of $req_cfg->status_labels
lib/requirements/reqOverview.php: * 20100325 - asimon - added html comments with padded numbers/strings for easier and
lib/requirements/reqOverview.php: * 20100323 - asimon - show columns for relations and coverage only if these features are enabled.
lib/requirements/reqOverview.php: * 20100312 - asimon - replaced "100%"-value (in case where req has no coverage) by N/A-string
lib/requirements/reqOverview.php: * 20100311 - asimon - fixed a little bug (only notice) when no cfields are defined
lib/requirements/reqOverview.php: * 20100310 - asimon - refactoring as requested
lib/requirements/reqOverview.php: * 20100309 - asimon - initial commit
lib/requirements/reqOverview.php:$coverage_enabled = $req_cfg->expected_coverage_management;
lib/requirements/reqOverview.php:$relations_enabled = $req_cfg->relations->enable;
lib/requirements/reqOverview.php:$gui->reqIDs = $tproject_mgr->get_all_requirement_ids($args->tproject_id);
lib/requirements/reqOverview.php:if(count($gui->reqIDs) > 0) {
lib/requirements/reqOverview.php:	$type_labels = init_labels($req_cfg->type_labels);
lib/requirements/reqOverview.php:	$status_labels = init_labels($req_cfg->status_labels);
lib/requirements/reqOverview.php:	$gui->cfields4req = (array)$cfield_mgr->get_linked_cfields_at_design($args->tproject_id, 1, null, 'requirement', null, 'name');
lib/requirements/reqOverview.php:	$version_option = ($args->all_versions) ? requirement_mgr::ALL_VERSIONS : requirement_mgr::LATEST_VERSION; 
lib/requirements/reqOverview.php:	foreach($gui->reqIDs as $id) {
lib/requirements/reqOverview.php:		$req = $req_mgr->get_by_id($id, $version_option);
lib/requirements/reqOverview.php:		$tc_coverage = count($req_mgr->get_coverage($id));
lib/requirements/reqOverview.php:		$linked_cfields = (array)$req_mgr->get_linked_cfields($id);
lib/requirements/reqOverview.php:			$relations = $req_mgr->count_relations($id);
lib/requirements/reqOverview.php:			$relations = "<!-- " . sprintf("%010d", $relations) . " -->" . $relations;
lib/requirements/reqOverview.php:		$linked_title = '<!-- ' . $title . ' -->' . '<a href="javascript:openLinkedReqWindow(' . $id . ')">' . 
lib/requirements/reqOverview.php:		// reqspec-"path" to requirement
lib/requirements/reqOverview.php:		$path = $req_mgr->tree_mgr->get_path($req[0]['srs_id']);
lib/requirements/reqOverview.php:	    	$result[] = "<!-- $padded_data -->{$version['version']}";
lib/requirements/reqOverview.php:		    	$coverage_string = "<!-- -1 -->" . $labels['not_aplicable'] . " ($tc_coverage/0)";
lib/requirements/reqOverview.php:					$coverage_string = "<!-- $padded_data --> {$percentage}% ({$tc_coverage}/{$expected})";
lib/requirements/reqOverview.php:    if(($gui->row_qty = count($rows)) > 0 ) {
lib/requirements/reqOverview.php:    	$version_string = ($args->all_versions) ? $labels['number_of_versions'] : $labels['number_of_reqs'];
lib/requirements/reqOverview.php:        $gui->pageTitle .= " - " . $version_string . ": " . $gui->row_qty;
lib/requirements/reqOverview.php:	    foreach($gui->cfields4req as $cf) {
lib/requirements/reqOverview.php:	    $table_id = 'tl_'.$args->tproject_id.'_table_req_overview';
lib/requirements/reqOverview.php:        $matrix->title = $labels['requirements'];
lib/requirements/reqOverview.php:        // 20100822 - asimon - removal of magic numbers
lib/requirements/reqOverview.php:        $matrix->setGroupByColumnName($labels['req_spec_short']);
lib/requirements/reqOverview.php:        $matrix->setSortByColumnName($sort_name);
lib/requirements/reqOverview.php:        $matrix->sortDirection = 'DESC';
lib/requirements/reqOverview.php:        $matrix->showToolbar = true;
lib/requirements/reqOverview.php:        $matrix->toolbarExpandCollapseGroupsButton = true;
lib/requirements/reqOverview.php:        $matrix->toolbarShowAllColumnsButton = true;
lib/requirements/reqOverview.php:        $matrix->toolbarRefreshButton = true;
lib/requirements/reqOverview.php:        $matrix->showGroupItemsCount = true;
lib/requirements/reqOverview.php:        $matrix->addCustomBehaviour('text', array('render' => 'columnWrap'));
lib/requirements/reqOverview.php:        $gui->tableSet= array($matrix);
lib/requirements/reqOverview.php:    $gui->warning_msg = lang_get('no_linked_req');
lib/requirements/reqOverview.php:$smarty->assign('gui',$gui);
lib/requirements/reqOverview.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/requirements/reqOverview.php:	$args->all_versions = $_SESSION['all_versions'] = $selection;
lib/requirements/reqOverview.php:	$args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/requirements/reqOverview.php:	$args->tproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : '';
lib/requirements/reqOverview.php:	if($args->tproject_id > 0) {
lib/requirements/reqOverview.php:		$tproject_info = $tproject_mgr->get_by_id($args->tproject_id);
lib/requirements/reqOverview.php:		$args->tproject_name = $tproject_info['name'];
lib/requirements/reqOverview.php:		$args->tproject_description = $tproject_info['notes'];
lib/requirements/reqOverview.php:	$gui->pageTitle = lang_get('caption_req_overview');
lib/requirements/reqOverview.php:	$gui->warning_msg = '';
lib/requirements/reqOverview.php:	$gui->tproject_name = $argsObj->tproject_name;
lib/requirements/reqOverview.php:	$gui->all_versions = $argsObj->all_versions;
lib/requirements/reqOverview.php:	return $user->hasRight($db,'mgt_view_req');
lib/requirements/reqTcAssign.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/requirements/reqTcAssign.php: * 20100602 - franciscom - BUGID 3495 - Requirements Bulk Assignment crash. (typo error)
lib/requirements/reqTcAssign.php: * 20100408 - franciscom - BUGID 3361 - FatalError after trying to assign requirements to an empty test suite
lib/requirements/reqTcAssign.php: * 20081130 - franciscom - BUGID 1852 - Bulk Assignment Feature
lib/requirements/reqTcAssign.php:$gui->showCloseButton = $args->showCloseButton;
lib/requirements/reqTcAssign.php:$gui->user_feedback = '';
lib/requirements/reqTcAssign.php:$gui->tcTitle = null;
lib/requirements/reqTcAssign.php:$gui->arrAssignedReq = null;
lib/requirements/reqTcAssign.php:$gui->arrUnassignedReq = null;
lib/requirements/reqTcAssign.php:$gui->arrReqSpec = null;
lib/requirements/reqTcAssign.php:$gui->selectedReqSpec = $args->idReqSpec;
lib/requirements/reqTcAssign.php:switch($args->doAction)
lib/requirements/reqTcAssign.php:    	// BUGID 3361 - need to check if we have test cases to work on
lib/requirements/reqTcAssign.php:       	// BUGID 3495 - Requirements Bulk Assignment crash. (typo error) (dbHandler -> db)
lib/requirements/reqTcAssign.php:        $tcase_set = $tsuite_mgr->get_testcases_deep($args->id,'only_id');
lib/requirements/reqTcAssign.php:      	$args->edit = 'testsuite';
lib/requirements/reqTcAssign.php:      	$args->edit = 'testsuite';
lib/requirements/reqTcAssign.php:switch($args->edit)
lib/requirements/reqTcAssign.php:         $templateCfg->default_template = 'reqTcBulkAssignment.tpl';
lib/requirements/reqTcAssign.php:             $gui->user_feedback = sprintf(lang_get('bulk_assigment_done'),$bulkCounter); 
lib/requirements/reqTcAssign.php:$smarty->assign('gui', $gui);
lib/requirements/reqTcAssign.php:$smarty->assign('modify_req_rights', has_rights($db,"mgt_modify_req")); 
lib/requirements/reqTcAssign.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/requirements/reqTcAssign.php:	$args->idReqSpec = null;
lib/requirements/reqTcAssign.php:    $args->idReq = $args->req;
lib/requirements/reqTcAssign.php:    $args->reqIdSet = $args->req_id;
lib/requirements/reqTcAssign.php:    if(is_null($args->doAction))
lib/requirements/reqTcAssign.php:    	$args->doAction = ($args->unassign != "") ? "unassign" : null;
lib/requirements/reqTcAssign.php:    if(is_null($args->doAction))
lib/requirements/reqTcAssign.php:        $args->doAction = ($args->assign != "") ? "assign" : null;
lib/requirements/reqTcAssign.php:	// 20081103 - sisajr - hold choosen SRS (saved for a session)
lib/requirements/reqTcAssign.php:	if ($args->idSRS)
lib/requirements/reqTcAssign.php:	  	$args->idReqSpec = $args->idSRS;
lib/requirements/reqTcAssign.php:	  	$_SESSION['currentSrsId'] = $args->idReqSpec;
lib/requirements/reqTcAssign.php:		$args->idReqSpec = intval($_SESSION['currentSrsId']);
lib/requirements/reqTcAssign.php:    $args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/requirements/reqTcAssign.php:    $guiObj->bulkassign_warning_msg = '';
lib/requirements/reqTcAssign.php:    $guiObj->tsuite_id = $argsObj->id;
lib/requirements/reqTcAssign.php:    $tsuite_info = $tproject_mgr->tree_manager->get_node_hierarchy_info($guiObj->tsuite_id);
lib/requirements/reqTcAssign.php:    $guiObj->pageTitle = lang_get('test_suite') . config_get('gui_title_separator_1') . $tsuite_info['name'];
lib/requirements/reqTcAssign.php:	$guiObj->req_specs = $tproject_mgr->getOptionReqSpec($argsObj->tproject_id,testproject::GET_NOT_EMPTY_REQSPEC);
lib/requirements/reqTcAssign.php:    $guiObj->selectedReqSpec = $argsObj->idReqSpec;
lib/requirements/reqTcAssign.php:    $guiObj->tcase_number = 0;
lib/requirements/reqTcAssign.php:    $guiObj->has_req_spec = false;
lib/requirements/reqTcAssign.php:    $guiObj->tsuite_id = $argsObj->id;
lib/requirements/reqTcAssign.php:    if(!is_null($guiObj->req_specs) && count($guiObj->req_specs))
lib/requirements/reqTcAssign.php:		$guiObj->has_req_spec = true;
lib/requirements/reqTcAssign.php:       	if(is_null($argsObj->idReqSpec))
lib/requirements/reqTcAssign.php:			$guiObj->selectedReqSpec = key($guiObj->req_specs);
lib/requirements/reqTcAssign.php:       	$guiObj->requirements =$req_spec_mgr->get_requirements($guiObj->selectedReqSpec);
lib/requirements/reqTcAssign.php:       	$tcase_set = $tsuite_mgr->get_testcases_deep($argsObj->id,'only_id');
lib/requirements/reqTcAssign.php:       	$guiObj->tcase_number = count($tcase_set);    
lib/requirements/reqTcAssign.php:       	if( $guiObj->tcase_number > 0 )
lib/requirements/reqTcAssign.php:			$guiObj->bulkassign_warning_msg = sprintf(lang_get('bulk_req_assign_msg'),$guiObj->tcase_number);
lib/requirements/reqTcAssign.php:			$guiObj->bulkassign_warning_msg = lang_get('bulk_req_assign_no_test_cases');
lib/requirements/reqTcAssign.php:	$requirements = array_keys($argsObj->reqIdSet);
lib/requirements/reqTcAssign.php:        	$tcase_set = $tsuite_mgr->get_testcases_deep($argsObj->id,'only_id');
lib/requirements/reqTcAssign.php:        	$assignmentCounter = $req_mgr->bulk_assignment($requirements,$tcase_set);
lib/requirements/reqTcAssign.php:	$req_ids = array_keys($argsObj->reqIdSet);
lib/requirements/reqTcAssign.php:			$result = $req_mgr->$pfn($idOneReq,$argsObj->id);
lib/requirements/reqTcAssign.php:			$guiObj->user_feedback = lang_get('req_msg_notupdated_coverage') . $msg;
lib/requirements/reqTcAssign.php:		$guiObj->user_feedback = lang_get('req_msg_noselect');
lib/requirements/reqTcAssign.php:	// $guiObj->arrReqSpec = $tproject_mgr->getOptionReqSpec($argsObj->tproject_id,testproject::GET_NOT_EMPTY_REQSPEC);
lib/requirements/reqTcAssign.php:    $guiObj->arrReqSpec = $tproject_mgr->genComboReqSpec($argsObj->tproject_id);
lib/requirements/reqTcAssign.php:	$SRS_qty = count($guiObj->arrReqSpec);
lib/requirements/reqTcAssign.php:	   	$arrTc = $tc_mgr->get_by_id($argsObj->id);
lib/requirements/reqTcAssign.php:	   		$guiObj->tcTitle = $arrTc[0]['name'];
lib/requirements/reqTcAssign.php:	   		if(is_null($argsObj->idReqSpec))
lib/requirements/reqTcAssign.php:	   			reset($guiObj->arrReqSpec);
lib/requirements/reqTcAssign.php:	   			$argsObj->idReqSpec = key($guiObj->arrReqSpec);
lib/requirements/reqTcAssign.php:	   		if($argsObj->idReqSpec)
lib/requirements/reqTcAssign.php:	   			$guiObj->arrAssignedReq = $req_spec_mgr->get_requirements($argsObj->idReqSpec, 'assigned', $argsObj->id);
lib/requirements/reqTcAssign.php:	   			$guiObj->arrAllReq = $req_spec_mgr->get_requirements($argsObj->idReqSpec);
lib/requirements/reqTcAssign.php:	   			$guiObj->arrUnassignedReq = array_diff_byId($guiObj->arrAllReq, $guiObj->arrAssignedReq);
lib/requirements/reqTcAssign.php:	return ($user->hasRight($db,'mgt_view_req') && $user->hasRight($db,'mgt_modify_req'));
lib/requirements/reqSpecListTree.php:* 	TestLink Open Source Project - http://testlink.sourceforge.net/
lib/requirements/reqSpecListTree.php:*    20100808 - asimon - heavy refactoring for requirement filtering
lib/requirements/reqSpecListTree.php:*    20080824 - franciscom - added code to manage EXTJS tree component
lib/requirements/reqSpecListTree.php:$control->build_tree_menu($gui);
lib/requirements/reqSpecListTree.php:$smarty->assign('gui', $gui);
lib/requirements/reqSpecListTree.php:$smarty->assign('control', $control);
lib/requirements/reqSpecListTree.php://$smarty->assign('tree', null);
lib/requirements/reqSpecListTree.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/requirements/reqSpecListTree.php:    $args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/requirements/reqSpecListTree.php:    $args->tproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : 'undefned';
lib/requirements/reqSpecListTree.php:    $args->basehref = $_SESSION['basehref'];
lib/requirements/reqSpecListTree.php:    $gui->tree_title = lang_get('title_navigator'). ' - ' . lang_get('title_req_spec');
lib/requirements/reqSpecListTree.php:    $gui->req_spec_manager_url = "lib/requirements/reqSpecView.php";
lib/requirements/reqSpecListTree.php:    $gui->req_manager_url = "lib/requirements/reqView.php";
lib/requirements/reqSpecListTree.php:    $gui->basehref = $argsObj->basehref;
lib/requirements/reqSpecListTree.php:	return $user->hasRight($db,'mgt_view_req');
lib/requirements/reqExport.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/requirements/reqExport.php: * 20100321 - franciscom - manage export of :
lib/requirements/reqExport.php:switch($args->doAction)
lib/requirements/reqExport.php:        $smarty->assign('gui', $gui);
lib/requirements/reqExport.php:        $smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/requirements/reqExport.php:	return $user->hasRight($db,'mgt_view_req');
lib/requirements/reqExport.php:	$args->doAction = isset($_REQUEST['doAction']) ? $_REQUEST['doAction'] : 'export';
lib/requirements/reqExport.php:	$args->exportType = isset($_REQUEST['exportType']) ? $_REQUEST['exportType'] : null;
lib/requirements/reqExport.php:	$args->req_spec_id = isset($_REQUEST['req_spec_id']) ? $_REQUEST['req_spec_id'] : null;
lib/requirements/reqExport.php:	$args->export_filename = isset($_REQUEST['export_filename']) ? $_REQUEST['export_filename'] : "";
lib/requirements/reqExport.php:	$args->tproject_id = isset($_REQUEST['tproject_id']) ? $_REQUEST['tproject_id'] : 0;
lib/requirements/reqExport.php:    if( $args->tproject_id == 0 )
lib/requirements/reqExport.php:		$args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/requirements/reqExport.php:	$args->scope = isset($_REQUEST['scope']) ? $_REQUEST['scope'] : 'items';
lib/requirements/reqExport.php:	$gui->exportTypes = $req_spec_mgr->get_export_file_types();
lib/requirements/reqExport.php:	$gui->exportType = $argsObj->exportType; 
lib/requirements/reqExport.php:	$gui->scope = $argsObj->scope;
lib/requirements/reqExport.php:	$gui->tproject_id = $argsObj->tproject_id;
lib/requirements/reqExport.php:	switch($argsObj->scope)
lib/requirements/reqExport.php:			 $gui->req_spec['title'] = lang_get('all_reqspecs_in_tproject');
lib/requirements/reqExport.php:			 $gui->req_spec_id = 0;
lib/requirements/reqExport.php:  			 $exportFileName = 'all-req.xml';
lib/requirements/reqExport.php:			 $gui->req_spec = $req_spec_mgr->get_by_id($argsObj->req_spec_id);
lib/requirements/reqExport.php:			 $gui->req_spec_id = $argsObj->req_spec_id;
lib/requirements/reqExport.php:			 $exportFileName = $gui->req_spec['title'] . '-req-spec.xml';
lib/requirements/reqExport.php:			 $gui->req_spec = $req_spec_mgr->get_by_id($argsObj->req_spec_id);
lib/requirements/reqExport.php:			 $gui->req_spec_id = $argsObj->req_spec_id;
lib/requirements/reqExport.php:			 $exportFileName = $gui->req_spec['title'] . '-child_req.xml';
lib/requirements/reqExport.php:	$gui->export_filename = trim($argsObj->export_filename);
lib/requirements/reqExport.php:	if($gui->export_filename == "")
lib/requirements/reqExport.php:	    $gui->export_filename = $exportFileName;
lib/requirements/reqExport.php:	switch($argsObj->exportType)
lib/requirements/reqExport.php:	    	$requirements_map = $req_spec_mgr->get_requirements($argsObj->req_spec_id);
lib/requirements/reqExport.php:			$optionsForExport['RECURSIVE'] = $argsObj->scope == 'items' ? false : true;
lib/requirements/reqExport.php: 			$openTag = $argsObj->scope == 'items' ? "requirements>" : 'requirement-specification>';
lib/requirements/reqExport.php:  			switch($argsObj->scope)
lib/requirements/reqExport.php:  					$reqSpecSet = $req_spec_mgr->getFirstLevelInTestProject($argsObj->tproject_id);
lib/requirements/reqExport.php:  					$reqSpecSet = array($argsObj->req_spec_id);
lib/requirements/reqExport.php:					$content .= $req_spec_mgr->$pfn($reqSpecID,$argsObj->tproject_id,$optionsForExport);
lib/requirements/reqExport.php:		$fileName = is_null($argsObj->export_filename) ? $fileName : $argsObj->export_filename;
lib/requirements/reqCommands.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/requirements/reqCommands.class.php: *	20100719 - franciscom - BUGID 3327 - manage duplicated DOC ID when creating, without loosing filled-in data
lib/requirements/reqCommands.class.php: * 	20100323 - asimon - BUGID 3312 - fixed audit log message when freezing a req version
lib/requirements/reqCommands.class.php: *  20100319 - asimon - BUGID 3307 - set coverage to 0 if null, to avoid database errors with null value
lib/requirements/reqCommands.class.php: *                      BUGID 1748 - added doAddRelation() and doDeleteRelation() for req relations
lib/requirements/reqCommands.class.php: *  20100205 - asimon - added doFreezeVersion()
lib/requirements/reqCommands.class.php: *	20091217 - franciscom - added reqTypeDomain
lib/requirements/reqCommands.class.php: *	20091216 - franciscom - create_tc_from_requirement() interface changes 
lib/requirements/reqCommands.class.php: *	20081213 - franciscom - fixed minor bug on doCreate()
lib/requirements/reqCommands.class.php:	    $this->db=$db;
lib/requirements/reqCommands.class.php:	    $this->reqSpecMgr = new requirement_spec_mgr($db);
lib/requirements/reqCommands.class.php:	    $this->reqMgr = new requirement_mgr($db);
lib/requirements/reqCommands.class.php:	    $this->reqStatusDomain = init_labels($reqCfg->status_labels);
lib/requirements/reqCommands.class.php:	    $this->reqTypeDomain = init_labels($reqCfg->type_labels);
lib/requirements/reqCommands.class.php:	    $this->reqRelationTypeDescr = init_labels($reqCfg->rel_type_description);
lib/requirements/reqCommands.class.php:	    $type_ec = $reqCfg->type_expected_coverage;
lib/requirements/reqCommands.class.php:	    $this->attrCfg = array();
lib/requirements/reqCommands.class.php:	    $this->attrCfg['expected_coverage'] = array();
lib/requirements/reqCommands.class.php:	    foreach($this->reqTypeDomain as $type_code => $dummy)
lib/requirements/reqCommands.class.php:	    	// TRUE -> 1, FALSE -> 0, because I've had problems using true/false
lib/requirements/reqCommands.class.php:	    	$this->attrCfg['expected_coverage'][$type_code] = $value; 	
lib/requirements/reqCommands.class.php:		$obj->pageTitle = '';
lib/requirements/reqCommands.class.php:		$obj->bodyOnLoad = '';
lib/requirements/reqCommands.class.php:		$obj->bodyOnUnload = '';
lib/requirements/reqCommands.class.php:		$obj->hilite_item_name = false;
lib/requirements/reqCommands.class.php:		$obj->display_path = false;
lib/requirements/reqCommands.class.php:		$obj->show_match_count = false;
lib/requirements/reqCommands.class.php:		$obj->main_descr = '';
lib/requirements/reqCommands.class.php:		$obj->action_descr = '';
lib/requirements/reqCommands.class.php:		$obj->cfields = null;
lib/requirements/reqCommands.class.php:      	$obj->template = '';
lib/requirements/reqCommands.class.php:		$obj->submit_button_label = '';
lib/requirements/reqCommands.class.php:		$obj->reqStatusDomain = $this->reqStatusDomain;
lib/requirements/reqCommands.class.php:		$obj->reqTypeDomain = $this->reqTypeDomain;
lib/requirements/reqCommands.class.php:		$obj->attrCfg = $this->attrCfg;
lib/requirements/reqCommands.class.php:		$obj->req_spec_id = null;
lib/requirements/reqCommands.class.php:		$obj->req_id = null;
lib/requirements/reqCommands.class.php:		$obj->req = null;
lib/requirements/reqCommands.class.php:		// BUGID 3307 - set default to 0 instead of null to avoid DB errors
lib/requirements/reqCommands.class.php:		$obj->expected_coverage = 0;
lib/requirements/reqCommands.class.php:		$obj = $this->initGuiBean();
lib/requirements/reqCommands.class.php:		$req_spec = $this->reqSpecMgr->get_by_id($argsObj->req_spec_id);
lib/requirements/reqCommands.class.php:		$obj->main_descr = lang_get('req_spec_short') . TITLE_SEP . $req_spec['title'];
lib/requirements/reqCommands.class.php:		$obj->action_descr = lang_get('create_req');
lib/requirements/reqCommands.class.php:		$obj->cfields = $this->reqMgr->html_table_of_custom_field_inputs(null,$argsObj->tproject_id);
lib/requirements/reqCommands.class.php:      	$obj->template = 'reqEdit.tpl';
lib/requirements/reqCommands.class.php:		$obj->submit_button_label = lang_get('btn_save');
lib/requirements/reqCommands.class.php:		$obj->reqStatusDomain = $this->reqStatusDomain;
lib/requirements/reqCommands.class.php:		$obj->reqTypeDomain = $this->reqTypeDomain;
lib/requirements/reqCommands.class.php:		$obj->req_spec_id = $argsObj->req_spec_id;
lib/requirements/reqCommands.class.php:		$obj->req_id = null;
lib/requirements/reqCommands.class.php:		$obj->req = null;
lib/requirements/reqCommands.class.php:		// BUGID 3307 - set default to number instead of null to avoid database error
lib/requirements/reqCommands.class.php:		$obj->expected_coverage = 1;
lib/requirements/reqCommands.class.php:		$obj->preSelectedType = 0;
lib/requirements/reqCommands.class.php:		if (defined('TL_REQ_TYPE_USE_CASE') && isset($obj->reqTypeDomain[TL_REQ_TYPE_USE_CASE])) {
lib/requirements/reqCommands.class.php:			$obj->preSelectedType = TL_REQ_TYPE_USE_CASE;
lib/requirements/reqCommands.class.php:		$obj->display_path = false;
lib/requirements/reqCommands.class.php:		$obj = $this->initGuiBean();
lib/requirements/reqCommands.class.php:		$obj->display_path = false;
lib/requirements/reqCommands.class.php:		$obj->req = $this->reqMgr->get_by_id($argsObj->req_id,$argsObj->req_version_id);
lib/requirements/reqCommands.class.php:		$obj->req = $obj->req[0];
lib/requirements/reqCommands.class.php:		$argsObj->scope = $obj->req['scope'];
lib/requirements/reqCommands.class.php:		$obj->main_descr = lang_get('req_short') . TITLE_SEP . $obj->req['req_doc_id'] . 
lib/requirements/reqCommands.class.php:		                   " (" . lang_get('version') . ' ' . $obj->req['version'] . ")" . TITLE_SEP . 
lib/requirements/reqCommands.class.php:		                   TITLE_SEP .  $obj->req['title'];
lib/requirements/reqCommands.class.php:		$obj->action_descr = lang_get('edit_req');
lib/requirements/reqCommands.class.php:		$obj->cfields = $this->reqMgr->html_table_of_custom_field_inputs($argsObj->req_id,$argsObj->tproject_id);
lib/requirements/reqCommands.class.php:		$obj->template = 'reqEdit.tpl';
lib/requirements/reqCommands.class.php:		$obj->submit_button_label = lang_get('btn_save');
lib/requirements/reqCommands.class.php:	  	$obj->reqStatusDomain = $this->reqStatusDomain;
lib/requirements/reqCommands.class.php:		$obj->reqTypeDomain = $this->reqTypeDomain;
lib/requirements/reqCommands.class.php:		$obj->req_spec_id = $argsObj->req_spec_id;
lib/requirements/reqCommands.class.php:		$obj->req_id = $argsObj->req_id;
lib/requirements/reqCommands.class.php:		$obj->req_version_id = $argsObj->req_version_id;
lib/requirements/reqCommands.class.php:		$obj->expected_coverage = $argsObj->expected_coverage;
lib/requirements/reqCommands.class.php:		$req_spec = $this->reqSpecMgr->get_by_id($argsObj->req_spec_id);
lib/requirements/reqCommands.class.php:		$obj = $this->initGuiBean();
lib/requirements/reqCommands.class.php:		$obj->display_path = false;
lib/requirements/reqCommands.class.php:      	$obj->req = null;
lib/requirements/reqCommands.class.php:		$obj->main_descr = lang_get('req_spec_short') . TITLE_SEP . $req_spec['title'];
lib/requirements/reqCommands.class.php:		$obj->action_descr = lang_get('create_req');
lib/requirements/reqCommands.class.php:		$obj->cfields = $this->reqMgr->html_table_of_custom_field_inputs(null,$argsObj->tproject_id);
lib/requirements/reqCommands.class.php:		$obj->submit_button_label=lang_get('btn_save');
lib/requirements/reqCommands.class.php:		$obj->template = null;
lib/requirements/reqCommands.class.php:      	$obj->reqStatusDomain=$this->reqStatusDomain;
lib/requirements/reqCommands.class.php:		$obj->reqTypeDomain = $this->reqTypeDomain;
lib/requirements/reqCommands.class.php: 		$obj->req_spec_id = $argsObj->req_spec_id;
lib/requirements/reqCommands.class.php:	    $obj->expected_coverage = $argsObj->expected_coverage;
lib/requirements/reqCommands.class.php:    	$siblings = $this->reqMgr->tree_mgr->get_children($argsObj->req_spec_id,$nt2exclude);
lib/requirements/reqCommands.class.php:		$ret = $this->reqMgr->create($argsObj->req_spec_id,$argsObj->reqDocId,$argsObj->title,
lib/requirements/reqCommands.class.php:		                             $argsObj->scope,$argsObj->user_id,$argsObj->reqStatus,
lib/requirements/reqCommands.class.php:		                             $argsObj->reqType,$argsObj->expected_coverage,$order);
lib/requirements/reqCommands.class.php:		$obj->user_feedback = $ret['msg'];
lib/requirements/reqCommands.class.php:			logAuditEvent(TLS("audit_requirement_created",$argsObj->reqDocId),"CREATE",$ret['id'],"requirements");
lib/requirements/reqCommands.class.php:			$obj->user_feedback = sprintf(lang_get('req_created'),$argsObj->reqDocId,$argsObj->title);
lib/requirements/reqCommands.class.php:			$cf_map = $this->reqMgr->get_linked_cfields(null,$argsObj->tproject_id) ;
lib/requirements/reqCommands.class.php:			$this->reqMgr->values_to_db($request,$ret['id'],$cf_map);
lib/requirements/reqCommands.class.php:  			$obj->template = 'reqEdit.tpl';
lib/requirements/reqCommands.class.php:  			$obj->req_id = $ret['id'];
lib/requirements/reqCommands.class.php:			$argsObj->scope = '';
lib/requirements/reqCommands.class.php:		    $obj->req_spec_id = $argsObj->req_spec_id;
lib/requirements/reqCommands.class.php:		    $obj->req_version_id = $argsObj->req_version_id;
lib/requirements/reqCommands.class.php:		    $obj->req = array();
lib/requirements/reqCommands.class.php:	    	$obj->req['expected_coverage'] = $argsObj->expected_coverage;
lib/requirements/reqCommands.class.php:		    $obj->req['title'] = $argsObj->title;
lib/requirements/reqCommands.class.php:		    $obj->req['status'] = $argsObj->reqStatus;
lib/requirements/reqCommands.class.php:		    $obj->req['type'] = $argsObj->reqType;
lib/requirements/reqCommands.class.php:		    $obj->req['req_doc_id'] = $argsObj->reqDocId;
lib/requirements/reqCommands.class.php:		$obj = $this->initGuiBean();
lib/requirements/reqCommands.class.php:		$ret = $this->reqMgr->update($argsObj->req_id,$argsObj->req_version_id,
lib/requirements/reqCommands.class.php:		                             trim($argsObj->reqDocId),$argsObj->title,
lib/requirements/reqCommands.class.php:	  				                 $argsObj->scope,$argsObj->user_id,$argsObj->reqStatus,
lib/requirements/reqCommands.class.php:	  				                 $argsObj->reqType,$argsObj->expected_coverage);
lib/requirements/reqCommands.class.php:      	$obj = $this->edit($argsObj);
lib/requirements/reqCommands.class.php:      	$obj->user_feedback = $ret['msg'];
lib/requirements/reqCommands.class.php:		$obj->template = null;
lib/requirements/reqCommands.class.php:        	$obj->main_descr = '';
lib/requirements/reqCommands.class.php:		    $obj->action_descr = '';
lib/requirements/reqCommands.class.php:          	$obj->template = "reqView.php?requirement_id={$argsObj->req_id}";
lib/requirements/reqCommands.class.php:		  	$cf_map = $this->reqMgr->get_linked_cfields(null,$argsObj->tproject_id);
lib/requirements/reqCommands.class.php:		  	$this->reqMgr->values_to_db($request,$argsObj->req_id,$cf_map);
lib/requirements/reqCommands.class.php:		  	logAuditEvent(TLS("audit_requirement_saved",$argsObj->reqDocId),"SAVE",$argsObj->req_id,"requirements");
lib/requirements/reqCommands.class.php:	        $old = $this->reqMgr->get_by_id($argsObj->req_id,$argsObj->req_version_id);
lib/requirements/reqCommands.class.php:	        $obj->main_descr = $descr_prefix . $old['title'];
lib/requirements/reqCommands.class.php:          	$obj->cfields = $this->reqMgr->html_table_of_custom_field_values($argsObj->req_id,$argsObj->tproject_id);
lib/requirements/reqCommands.class.php:		$obj = $this->initGuiBean();
lib/requirements/reqCommands.class.php:		$obj->display_path = false;
lib/requirements/reqCommands.class.php:		$reqVersionSet = $this->reqMgr->get_by_id($argsObj->req_id);
lib/requirements/reqCommands.class.php:		$this->reqMgr->delete($argsObj->req_id);
lib/requirements/reqCommands.class.php:		logAuditEvent(TLS("audit_requirement_deleted",$req['req_doc_id']),"DELETE",$argsObj->req_id,"requirements");
lib/requirements/reqCommands.class.php:		$obj->template = 'show_message.tpl';
lib/requirements/reqCommands.class.php:		$obj->template_dir = '';
lib/requirements/reqCommands.class.php:		$obj->user_feedback = sprintf(lang_get('req_deleted'),$req['req_doc_id'],$req['title']);
lib/requirements/reqCommands.class.php:		$obj->main_descr=lang_get('requirement') . TITLE_SEP . $req['title'];
lib/requirements/reqCommands.class.php:		$obj->title=lang_get('delete_req');
lib/requirements/reqCommands.class.php:		$obj->refresh_tree = 'yes';
lib/requirements/reqCommands.class.php:		$obj->result = 'ok';  // needed to enable refresh_tree logic
lib/requirements/reqCommands.class.php:		$obj = $this->initGuiBean();
lib/requirements/reqCommands.class.php:		$node = $this->reqMgr->tree_mgr->get_node_hierarchy_info($argsObj->req_version_id);
lib/requirements/reqCommands.class.php:		$req_version = $this->reqMgr->get_by_id($node['parent_id'],$argsObj->req_version_id);
lib/requirements/reqCommands.class.php:		$this->reqMgr->updateOpen($req_version['version_id'], false);
lib/requirements/reqCommands.class.php:		              "FREEZE",$argsObj->req_version_id,"req_version");
lib/requirements/reqCommands.class.php:		$obj->template = 'show_message.tpl';
lib/requirements/reqCommands.class.php:		$obj->template_dir = '';
lib/requirements/reqCommands.class.php:		$obj->user_feedback = sprintf(lang_get('req_version_frozen'),$req_version['req_doc_id'],
lib/requirements/reqCommands.class.php:		$obj->main_descr=lang_get('requirement') . TITLE_SEP . $req_version['title'];
lib/requirements/reqCommands.class.php:		$obj->title=lang_get('freeze_req');
lib/requirements/reqCommands.class.php:		$obj->refresh_tree = 'no';
lib/requirements/reqCommands.class.php:		$obj->result = 'ok';  // needed to enable refresh_tree logic
lib/requirements/reqCommands.class.php:		$obj = $this->initGuiBean();
lib/requirements/reqCommands.class.php:		$req_spec = $this->reqSpecMgr->get_by_id($argsObj->req_spec_id);
lib/requirements/reqCommands.class.php:		$all_reqs = $this->reqSpecMgr->get_requirements($argsObj->req_spec_id);
lib/requirements/reqCommands.class.php:  		$obj->template = 'reqReorder.tpl';
lib/requirements/reqCommands.class.php:  		$obj->req_spec_id = $argsObj->req_spec_id;
lib/requirements/reqCommands.class.php:  		$obj->req_spec_name = $req_spec['title'];
lib/requirements/reqCommands.class.php:  		$obj->all_reqs = $all_reqs;		  
lib/requirements/reqCommands.class.php:		$obj->main_descr = lang_get('req') . TITLE_SEP . $obj->req_spec_name;
lib/requirements/reqCommands.class.php:		$obj = $this->initGuiBean();
lib/requirements/reqCommands.class.php:  		$obj->template = 'reqSpecView.tpl';
lib/requirements/reqCommands.class.php:		$nodes_in_order = transform_nodes_order($argsObj->nodes_order);
lib/requirements/reqCommands.class.php:		$this->reqMgr->set_order($nodes_in_order);
lib/requirements/reqCommands.class.php:		$obj->req_spec = $this->reqSpecMgr->get_by_id($req_spec_id);
lib/requirements/reqCommands.class.php:      	$obj->refresh_tree = 'yes';
lib/requirements/reqCommands.class.php:		$guiObj = $this->initGuiBean();
lib/requirements/reqCommands.class.php:		$guiObj->template = 'reqCreateTestCases.tpl';
lib/requirements/reqCommands.class.php:		$req_spec = $this->reqSpecMgr->get_by_id($argsObj->req_spec_id);
lib/requirements/reqCommands.class.php:		$guiObj->main_descr = lang_get('req_spec_short') . TITLE_SEP . $req_spec['title'];
lib/requirements/reqCommands.class.php:		$guiObj->action_descr = lang_get('create_testcase_from_req');
lib/requirements/reqCommands.class.php:		$guiObj->req_spec_id = $argsObj->req_spec_id;
lib/requirements/reqCommands.class.php:		$guiObj->req_spec_name = $req_spec['title'];
lib/requirements/reqCommands.class.php:		$guiObj->array_of_msg = '';
lib/requirements/reqCommands.class.php:		$guiObj->all_reqs = $this->reqSpecMgr->get_requirements($argsObj->req_spec_id);
lib/requirements/reqCommands.class.php:		foreach($guiObj->all_reqs as $key => $req) 
lib/requirements/reqCommands.class.php:			$count = count($this->reqMgr->get_coverage($req['id']));
lib/requirements/reqCommands.class.php:			$guiObj->all_reqs[$key]['coverage_percent'] =
lib/requirements/reqCommands.class.php:				round(100 / $guiObj->all_reqs[$key]['expected_coverage'] * $count, 2);
lib/requirements/reqCommands.class.php:			$guiObj->all_reqs[$key]['coverage'] = $count;
lib/requirements/reqCommands.class.php:		$guiObj = $this->initGuiBean();
lib/requirements/reqCommands.class.php:		$guiObj = $this->createTestCases($argsObj);
lib/requirements/reqCommands.class.php:	    $msg = $this->reqMgr->create_tc_from_requirement($argsObj->arrReqIds,$argsObj->req_spec_id,
lib/requirements/reqCommands.class.php:	                                                     $argsObj->user_id,$argsObj->tproject_id,
lib/requirements/reqCommands.class.php:	                                                     $argsObj->testcase_count);
lib/requirements/reqCommands.class.php:		$guiObj = $this->createTestCases($argsObj);
lib/requirements/reqCommands.class.php:		$guiObj->array_of_msg = $msg;
lib/requirements/reqCommands.class.php:		$obj = $this->initGuiBean();
lib/requirements/reqCommands.class.php:		$reqVersionSet = $this->reqMgr->get_by_id($argsObj->req_id);
lib/requirements/reqCommands.class.php:		$obj->items = array($req);
lib/requirements/reqCommands.class.php:		$obj->main_descr = lang_get('req') . TITLE_SEP . $req['title'];
lib/requirements/reqCommands.class.php:		$obj->action_descr = lang_get('copy_one_req');
lib/requirements/reqCommands.class.php:        $obj->template = 'reqCopy.tpl';
lib/requirements/reqCommands.class.php:		$obj->containers = null;
lib/requirements/reqCommands.class.php:		$obj->page2call = 'lib/requirements/reqEdit.php';
lib/requirements/reqCommands.class.php:		$obj->array_of_msg = '';
lib/requirements/reqCommands.class.php:		$obj->doActionButton = 'doCopy';
lib/requirements/reqCommands.class.php:  		$obj->req_spec_id = $argsObj->req_spec_id;
lib/requirements/reqCommands.class.php:	  	$subtree = $this->reqMgr->tree_mgr->get_subtree($argsObj->tproject_id,$my['filters']);
lib/requirements/reqCommands.class.php:		  $obj->containers = $this->reqMgr->tree_mgr->createHierarchyMap($subtree);
lib/requirements/reqCommands.class.php:		$obj = $this->initGuiBean();
lib/requirements/reqCommands.class.php:		$target_req_spec = $this->reqSpecMgr->get_by_id($argsObj->containerID);
lib/requirements/reqCommands.class.php:		$itemID = current($argsObj->itemSet);
lib/requirements/reqCommands.class.php:		$argsObj->req_id = $itemID;
lib/requirements/reqCommands.class.php:		$obj = $this->copy($argsObj);
lib/requirements/reqCommands.class.php:      	$obj->req = null;
lib/requirements/reqCommands.class.php:  		$obj->req_spec_id = $argsObj->req_spec_id;
lib/requirements/reqCommands.class.php:      	                     array('testcase_assignment' => $argsObj->copy_testcase_assignment));
lib/requirements/reqCommands.class.php:		$ret = $this->reqMgr->copy_to($itemID,$argsObj->containerID,$argsObj->user_id,$argsObj->tproject_id,
lib/requirements/reqCommands.class.php:		$obj->user_feedback = $ret['msg'];
lib/requirements/reqCommands.class.php:	    $obj->array_of_msg = '';
lib/requirements/reqCommands.class.php:			$new_req_version_set = $this->reqMgr->get_by_id($ret['id']);
lib/requirements/reqCommands.class.php:		    $source_req_version_set = $this->reqMgr->get_by_id($itemID);
lib/requirements/reqCommands.class.php:			$obj->user_feedback = sprintf(lang_get('req_created'), $new_req['req_doc_id']);
lib/requirements/reqCommands.class.php:  			$obj->template = 'reqCopy.tpl';
lib/requirements/reqCommands.class.php:  			$obj->req_id = $ret['id'];
lib/requirements/reqCommands.class.php:  		    $obj->array_of_msg = array($logMsg);	
lib/requirements/reqCommands.class.php:		$ret = $this->reqMgr->create_new_version($argsObj->req_id,$argsObj->user_id);
lib/requirements/reqCommands.class.php:		$obj = $this->initGuiBean();
lib/requirements/reqCommands.class.php:		$obj->user_feedback = $ret['msg'];
lib/requirements/reqCommands.class.php:       	$obj->template = "reqView.php?requirement_id={$argsObj->req_id}";
lib/requirements/reqCommands.class.php:      	$obj->req = null;
lib/requirements/reqCommands.class.php:		$obj->req_id = $argsObj->req_id;
lib/requirements/reqCommands.class.php:		$obj = $this->initGuiBean();
lib/requirements/reqCommands.class.php:		$node = $this->reqMgr->tree_mgr->get_node_hierarchy_info($argsObj->req_version_id);
lib/requirements/reqCommands.class.php:		$req_version = $this->reqMgr->get_by_id($node['parent_id'],$argsObj->req_version_id);
lib/requirements/reqCommands.class.php:		$this->reqMgr->delete($node['parent_id'],$argsObj->req_version_id);
lib/requirements/reqCommands.class.php:		              "DELETE",$argsObj->req_version_id,"req_version");
lib/requirements/reqCommands.class.php:		$obj->template = 'show_message.tpl';
lib/requirements/reqCommands.class.php:		$obj->template_dir = '';
lib/requirements/reqCommands.class.php:		$obj->user_feedback = sprintf(lang_get('req_version_deleted'),$req_version['req_doc_id'],
lib/requirements/reqCommands.class.php:		$obj->main_descr=lang_get('requirement') . TITLE_SEP . $req_version['title'];
lib/requirements/reqCommands.class.php:		$obj->title=lang_get('delete_req');
lib/requirements/reqCommands.class.php:		$obj->refresh_tree = 'no';
lib/requirements/reqCommands.class.php:		$obj->result = 'ok';  // needed to enable refresh_tree logic
lib/requirements/reqCommands.class.php:		$debugMsg = '/* Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__ . ' */';
lib/requirements/reqCommands.class.php:		$own_id = $argsObj->relation_source_req_id;
lib/requirements/reqCommands.class.php:		$authorID = $argsObj->user_id;
lib/requirements/reqCommands.class.php:		$tproject_id = $argsObj->tproject_id;
lib/requirements/reqCommands.class.php:		if (isset($argsObj->relation_destination_testproject_id)) {
lib/requirements/reqCommands.class.php:			$tproject_id = $argsObj->relation_destination_testproject_id;
lib/requirements/reqCommands.class.php:		$other_req = $this->reqMgr->getByDocID($argsObj->relation_destination_req_doc_id, $tproject_id);
lib/requirements/reqCommands.class.php:			$relTypeID = (int)current((explode('_',$argsObj->relation_type)));
lib/requirements/reqCommands.class.php:			if( strpos($argsObj->relation_type, "_destination") ) 
lib/requirements/reqCommands.class.php:			$exists = $this->reqMgr->check_if_relation_exists($source_id, $destination_id, $relTypeID);
lib/requirements/reqCommands.class.php:				$op['msg'] = sprintf(lang_get('rel_add_error_exists_already'),$this->reqRelationTypeDescr[$relTypeID]);
lib/requirements/reqCommands.class.php:			$this->reqMgr->add_relation($source_id, $destination_id, $relTypeID, $authorID);
lib/requirements/reqCommands.class.php:		$obj = $this->initGuiBean();		
lib/requirements/reqCommands.class.php:		$obj->template = "reqView.php?requirement_id={$own_id}&relation_add_result_msg=" . $op['msg'];
lib/requirements/reqCommands.class.php:		$debugMsg = '/* Class:' . __CLASS__ . ' - Method: ' . __FUNCTION__ . ' */';
lib/requirements/reqCommands.class.php:		$relation_id = $argsObj->relation_id;
lib/requirements/reqCommands.class.php:		$requirement_id = $argsObj->requirement_id;
lib/requirements/reqCommands.class.php:			$this->reqMgr->delete_relation($relation_id);
lib/requirements/reqCommands.class.php:		$obj = $this->initGuiBean();		
lib/requirements/reqCommands.class.php:		$obj->template = "reqView.php?requirement_id=$requirement_id&relation_add_result_msg=" . $op['msg'];
lib/requirements/reqView.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/requirements/reqView.php: *  20100324 - asimon - BUGID 1748 - Moved init_relation_type_select to requirement_mgr
lib/requirements/reqView.php: *	20100319 - franciscom - refactoring of BUGID 1748 
lib/requirements/reqView.php: *  20100319 - asimon - BUGID 1748 - implemented display of req relations
lib/requirements/reqView.php: *	20091217 - franciscom - display type and expected coverage
lib/requirements/reqView.php:$prefix = $tproject_mgr->getTestCasePrefix($args->tproject_id);
lib/requirements/reqView.php:$gui->direct_link = $_SESSION['basehref'] . 'linkto.php?tprojectPrefix=' . 
lib/requirements/reqView.php:                    urlencode($prefix) . '&item=req&id=' . urlencode($gui->req['req_doc_id']);
lib/requirements/reqView.php:$smarty->assign('gui',$gui);
lib/requirements/reqView.php:$smarty->display($templateCfg->template_dir . 'reqViewVersions.tpl');
lib/requirements/reqView.php:    $args->req_id = $args->requirement_id;
lib/requirements/reqView.php:    $args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/requirements/reqView.php:    $args->tproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : null;
lib/requirements/reqView.php:	$args->userID = $user->dbID;
lib/requirements/reqView.php:    $gui = $commandMgr->initGuiBean();
lib/requirements/reqView.php:    $gui->req_cfg = config_get('req_cfg');
lib/requirements/reqView.php:    $gui->tproject_name = $argsObj->tproject_name;
lib/requirements/reqView.php:    $gui->grants = new stdClass();
lib/requirements/reqView.php:    $gui->grants->req_mgmt = has_rights($db,"mgt_modify_req");
lib/requirements/reqView.php:    $gui->tcasePrefix = $tproject_mgr->getTestCasePrefix($argsObj->tproject_id);
lib/requirements/reqView.php:    $gui->glueChar = config_get('testcase_cfg')->glue_character;
lib/requirements/reqView.php:    $gui->pieceSep = config_get('gui_title_separator_1');
lib/requirements/reqView.php:    $gui->req_id = $argsObj->req_id;
lib/requirements/reqView.php:    $gui->req_versions = $req_mgr->get_by_id($gui->req_id);
lib/requirements/reqView.php:    $gui->req = current($gui->req_versions);
lib/requirements/reqView.php:    $gui->req_coverage = $req_mgr->get_coverage($gui->req_id);
lib/requirements/reqView.php:    $gui->current_version[] = array($gui->req);
lib/requirements/reqView.php: 	$gui->other_versions[] = count($gui->req_versions) > 1 ? array_slice($gui->req_versions,1) : null;
lib/requirements/reqView.php:    $gui->show_title = false;
lib/requirements/reqView.php:    $gui->main_descr = lang_get('req') . $gui->pieceSep .  $gui->req['title'];
lib/requirements/reqView.php:    $gui->showReqSpecTitle = $argsObj->showReqSpecTitle;
lib/requirements/reqView.php:    if($gui->showReqSpecTitle)
lib/requirements/reqView.php:        $gui->parent_descr = lang_get('req_spec_short') . $gui->pieceSep . $gui->req['req_spec_title'];
lib/requirements/reqView.php:    $gui->cfields = array();
lib/requirements/reqView.php:    $gui->cfields[] = $req_mgr->html_table_of_custom_field_values($gui->req_id,$argsObj->tproject_id);
lib/requirements/reqView.php:   	$gui->attachments[$gui->req_id] = getAttachmentInfosFrom($req_mgr,$gui->req_id);
lib/requirements/reqView.php:    $gui->attachmentTableName = $req_mgr->getAttachmentTableName();
lib/requirements/reqView.php:    $gui->reqStatus = init_labels($gui->req_cfg->status_labels);
lib/requirements/reqView.php:    $gui->reqTypeDomain = init_labels($gui->req_cfg->type_labels);
lib/requirements/reqView.php:    $gui->req_relations = FALSE;
lib/requirements/reqView.php:    $gui->req_relation_select = FALSE;
lib/requirements/reqView.php:    $gui->testproject_select = FALSE;
lib/requirements/reqView.php:    $gui->req_add_result_msg = isset($argsObj->relation_add_result_msg) ? 
lib/requirements/reqView.php:    							     $argsObj->relation_add_result_msg : "";
lib/requirements/reqView.php:    if ($gui->req_cfg->relations->enable) {
lib/requirements/reqView.php:    	$gui->req_relations = $req_mgr->get_relations($gui->req_id);
lib/requirements/reqView.php:    	$gui->req_relation_select = $req_mgr->init_relation_type_select();
lib/requirements/reqView.php:    	if ($gui->req_cfg->relations->interproject_linking) {
lib/requirements/reqView.php:    		$gui->testproject_select = initTestprojectSelect($db, $argsObj, $tproject_mgr);
lib/requirements/reqView.php:	return $user->hasRight($db,'mgt_view_req');
lib/requirements/reqView.php:	$testprojects = $tprojectMgr->get_accessible_for_user($args->userID, 'map', 
lib/requirements/reqView.php:	                                                      config_get('gui')->tprojects_combo_order_by);	
lib/requirements/reqView.php:	$htmlSelect = array('items' => $testprojects, 'selected' => $args->tproject_id);
lib/requirements/reqSearchForm.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/requirements/reqSearchForm.php: * @copyright 	2005-2009, TestLink community 
lib/requirements/reqSearchForm.php: * 20100323 - asimon - added searching for req relation types (BUGID 1748)
lib/requirements/reqSearchForm.php:$gui->tcasePrefix = $tproject_mgr->getTestCasePrefix($args->tprojectID);
lib/requirements/reqSearchForm.php:$gui->tcasePrefix .= $tcase_cfg->glue_character;
lib/requirements/reqSearchForm.php:$gui->mainCaption = lang_get('testproject') . " " . $args->tprojectName;
lib/requirements/reqSearchForm.php:$gui->design_cf = $tproject_mgr->cfield_mgr->get_linked_cfields_at_design($args->tprojectID,$enabled,
lib/requirements/reqSearchForm.php:$gui->keywords = $tproject_mgr->getKeywords($args->tprojectID);
lib/requirements/reqSearchForm.php:$reqSpecSet = $tproject_mgr->getOptionReqSpec($args->tprojectID,testproject::GET_NOT_EMPTY_REQSPEC);
lib/requirements/reqSearchForm.php:$gui->filter_by['design_scope_custom_fields'] = !is_null($gui->design_cf);
lib/requirements/reqSearchForm.php:$gui->filter_by['keyword'] = !is_null($gui->keywords);
lib/requirements/reqSearchForm.php:$gui->filter_by['requirement_doc_id'] = !is_null($reqSpecSet);
lib/requirements/reqSearchForm.php:$gui->types = init_labels($reqCfg->type_labels);
lib/requirements/reqSearchForm.php:$coverageManagement = $reqCfg->expected_coverage_management;
lib/requirements/reqSearchForm.php:$gui->filter_by['expected_coverage'] = !is_null($coverageManagement);
lib/requirements/reqSearchForm.php:$gui->reqStatus = init_labels($reqCfg->status_labels);
lib/requirements/reqSearchForm.php:$gui->filter_by['relation_type'] = $reqCfg->relations->enable;
lib/requirements/reqSearchForm.php:$gui->req_relation_select = $req_mgr->init_relation_type_select();
lib/requirements/reqSearchForm.php:foreach ($gui->req_relation_select['equal_relations'] as $key => $oldkey) {
lib/requirements/reqSearchForm.php:	$gui->req_relation_select['items'][$new_key] = $gui->req_relation_select['items'][$oldkey];
lib/requirements/reqSearchForm.php:	unset($gui->req_relation_select['items'][$oldkey]);
lib/requirements/reqSearchForm.php:$smarty->assign('gui',$gui);
lib/requirements/reqSearchForm.php:$smarty->display($templateCfg->template_dir . 'reqSearchForm.tpl');
lib/requirements/reqSearchForm.php:    $args->tprojectID = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/requirements/reqSearchForm.php:    $args->tprojectName = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : 0;
lib/requirements/reqSpecCommands.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/requirements/reqSpecCommands.class.php: *	20091223 - franciscom - new feature copy requirements
lib/requirements/reqSpecCommands.class.php: *	20091207 - franciscom - logic to get order when creating new item 
lib/requirements/reqSpecCommands.class.php: *	20090324 - franciscom - added logic to avoid losing user work if title already exists.
lib/requirements/reqSpecCommands.class.php: *                            - fixed minor errors due to missing variables
lib/requirements/reqSpecCommands.class.php:	    $this->db=$db;
lib/requirements/reqSpecCommands.class.php:	    $this->reqSpecMgr = new requirement_spec_mgr($db);
lib/requirements/reqSpecCommands.class.php:	    $this->reqMgr = new requirement_mgr($db);
lib/requirements/reqSpecCommands.class.php:        $this->reqSpecTypeDomain = init_labels($req_spec_cfg->type_labels);
lib/requirements/reqSpecCommands.class.php:		$this->submit_button_label=lang_get('btn_save');
lib/requirements/reqSpecCommands.class.php:		$this->getRequirementsOptions = array('order_by' => " ORDER BY NH_REQ.node_order ");
lib/requirements/reqSpecCommands.class.php:	    $this->auditContext=$auditContext;
lib/requirements/reqSpecCommands.class.php:		$obj->pageTitle = '';
lib/requirements/reqSpecCommands.class.php:		$obj->bodyOnLoad = '';
lib/requirements/reqSpecCommands.class.php:		$obj->bodyOnUnload = '';
lib/requirements/reqSpecCommands.class.php:		$obj->hilite_item_name = false;
lib/requirements/reqSpecCommands.class.php:		$obj->display_path = false;
lib/requirements/reqSpecCommands.class.php:		$obj->show_match_count = false;
lib/requirements/reqSpecCommands.class.php:		$obj->main_descr = '';
lib/requirements/reqSpecCommands.class.php:		$obj->action_descr = '';
lib/requirements/reqSpecCommands.class.php:		$obj->cfields = null;
lib/requirements/reqSpecCommands.class.php:      	$obj->template = '';
lib/requirements/reqSpecCommands.class.php:		$obj->submit_button_label = '';
lib/requirements/reqSpecCommands.class.php:		$obj->req_spec_id = null;
lib/requirements/reqSpecCommands.class.php:		$obj->req_spec = null;
lib/requirements/reqSpecCommands.class.php:		$obj->expected_coverage = null;
lib/requirements/reqSpecCommands.class.php:		$obj->total_req_counter=null;
lib/requirements/reqSpecCommands.class.php:		$obj->reqSpecTypeDomain = $this->reqSpecTypeDomain;
lib/requirements/reqSpecCommands.class.php:      	$guiObj = $this->initGuiBean(); 
lib/requirements/reqSpecCommands.class.php:      	$guiObj->main_descr = lang_get('testproject') . TITLE_SEP . $argsObj->tproject_name;
lib/requirements/reqSpecCommands.class.php:      	$guiObj->action_descr = lang_get('create_req_spec');
lib/requirements/reqSpecCommands.class.php:		$guiObj->cfields = $this->reqSpecMgr->html_table_of_custom_field_inputs(null,$argsObj->tproject_id);
lib/requirements/reqSpecCommands.class.php:      	$guiObj->template = $this->defaultTemplate;
lib/requirements/reqSpecCommands.class.php:		$guiObj->submit_button_label=$this->submit_button_label;
lib/requirements/reqSpecCommands.class.php: 	    $guiObj->req_spec_id=null;
lib/requirements/reqSpecCommands.class.php:		$guiObj->req_spec_title=null;
lib/requirements/reqSpecCommands.class.php:		$guiObj->req_spec_doc_id=null;
lib/requirements/reqSpecCommands.class.php:		$guiObj->total_req_counter=null;
lib/requirements/reqSpecCommands.class.php:      	$guiObj = $this->initGuiBean(); 
lib/requirements/reqSpecCommands.class.php:		$guiObj->req_spec = $this->reqSpecMgr->get_by_id($argsObj->req_spec_id);
lib/requirements/reqSpecCommands.class.php:		$guiObj->main_descr = lang_get('req_spec_short') . TITLE_SEP . $guiObj->req_spec['title'];
lib/requirements/reqSpecCommands.class.php:		$guiObj->action_descr = lang_get('edit_req_spec');
lib/requirements/reqSpecCommands.class.php:      	$guiObj->template = $this->defaultTemplate;
lib/requirements/reqSpecCommands.class.php:		$guiObj->submit_button_label=$this->submit_button_label;
lib/requirements/reqSpecCommands.class.php:		$guiObj->req_spec_id=$argsObj->req_spec_id;
lib/requirements/reqSpecCommands.class.php:		$guiObj->req_spec_doc_id=$guiObj->req_spec['doc_id'];
lib/requirements/reqSpecCommands.class.php:		$guiObj->req_spec_title=$guiObj->req_spec['title'];
lib/requirements/reqSpecCommands.class.php:		$guiObj->total_req_counter=$guiObj->req_spec['total_req'];
lib/requirements/reqSpecCommands.class.php:		$guiObj->cfields = $this->reqSpecMgr->html_table_of_custom_field_inputs($argsObj->req_spec_id,$argsObj->tproject_id);
lib/requirements/reqSpecCommands.class.php:		$argsObj->scope = $guiObj->req_spec['scope'];
lib/requirements/reqSpecCommands.class.php:      	$guiObj = $this->initGuiBean(); 
lib/requirements/reqSpecCommands.class.php:		$guiObj->main_descr = lang_get('testproject') . TITLE_SEP . $argsObj->tproject_name;
lib/requirements/reqSpecCommands.class.php:		$guiObj->action_descr = lang_get('create_req_spec');
lib/requirements/reqSpecCommands.class.php:		$guiObj->submit_button_label=$this->submit_button_label;
lib/requirements/reqSpecCommands.class.php:      	$guiObj->template = $this->defaultTemplate;
lib/requirements/reqSpecCommands.class.php:      	$guiObj->req_spec_id=null;
lib/requirements/reqSpecCommands.class.php:      	$guiObj->req_spec_doc_id=null;
lib/requirements/reqSpecCommands.class.php:		$guiObj->req_spec_title=null;
lib/requirements/reqSpecCommands.class.php:		$guiObj->total_req_counter=null;
lib/requirements/reqSpecCommands.class.php:		$guiObj->cfields = $this->reqSpecMgr->html_table_of_custom_field_inputs(null,$argsObj->tproject_id);
lib/requirements/reqSpecCommands.class.php:    	$siblings = $this->reqSpecMgr->tree_mgr->get_children($argsObj->reqParentID,$nt2exclude);
lib/requirements/reqSpecCommands.class.php:		$ret = $this->reqSpecMgr->create($argsObj->tproject_id,$argsObj->reqParentID,
lib/requirements/reqSpecCommands.class.php:		                                 $argsObj->doc_id,$argsObj->title,$argsObj->scope,
lib/requirements/reqSpecCommands.class.php:		                                 $argsObj->countReq,$argsObj->user_id,$argsObj->reqSpecType,$order);
lib/requirements/reqSpecCommands.class.php:		$guiObj->user_feedback = $ret['msg'];
lib/requirements/reqSpecCommands.class.php:		  	$argsObj->scope = "";
lib/requirements/reqSpecCommands.class.php:			$guiObj->user_feedback = sprintf(lang_get('req_spec_created'),$argsObj->title);
lib/requirements/reqSpecCommands.class.php:			$cf_map = $this->reqSpecMgr->get_linked_cfields(null,$argsObj->tproject_id) ;
lib/requirements/reqSpecCommands.class.php:			$this->reqSpecMgr->values_to_db($request,$ret['id'],$cf_map);
lib/requirements/reqSpecCommands.class.php:			logAuditEvent(TLS("audit_req_spec_created",$this->auditContext->tproject,$argsObj->title),
lib/requirements/reqSpecCommands.class.php:		      $guiObj->req_spec_doc_id=$argsObj->doc_id;
lib/requirements/reqSpecCommands.class.php:		      $guiObj->req_spec_title=$argsObj->title;
lib/requirements/reqSpecCommands.class.php:		      $guiObj->total_req_counter=$argsObj->countReq;
lib/requirements/reqSpecCommands.class.php:      	$guiObj = $this->initGuiBean(); 
lib/requirements/reqSpecCommands.class.php: 		$guiObj->submit_button_label=$this->submit_button_label;
lib/requirements/reqSpecCommands.class.php:	    $guiObj->template = null;
lib/requirements/reqSpecCommands.class.php:		$guiObj->req_spec_id = $argsObj->req_spec_id;
lib/requirements/reqSpecCommands.class.php:		$guiObj->req_spec = $this->reqSpecMgr->get_by_id($argsObj->req_spec_id);
lib/requirements/reqSpecCommands.class.php:		$ret = $this->reqSpecMgr->update($argsObj->req_spec_id,$argsObj->doc_id,$argsObj->title,
lib/requirements/reqSpecCommands.class.php:		                                 $argsObj->scope,$argsObj->countReq,$argsObj->user_id,
lib/requirements/reqSpecCommands.class.php:		                                 $argsObj->reqSpecType);
lib/requirements/reqSpecCommands.class.php:		$guiObj->user_feedback = $ret['msg'];
lib/requirements/reqSpecCommands.class.php:			$guiObj->main_descr = '';
lib/requirements/reqSpecCommands.class.php:			$guiObj->action_descr='';
lib/requirements/reqSpecCommands.class.php:			$guiObj->template = "reqSpecView.php?req_spec_id={$guiObj->req_spec_id}";
lib/requirements/reqSpecCommands.class.php:			$cf_map = $this->reqSpecMgr->get_linked_cfields($argsObj->req_spec_id);
lib/requirements/reqSpecCommands.class.php:			$this->reqSpecMgr->values_to_db($request,$argsObj->req_spec_id,$cf_map);
lib/requirements/reqSpecCommands.class.php:			if( $argsObj->title == $guiObj->req_spec['title'] )
lib/requirements/reqSpecCommands.class.php:			    $audit_msg= TLS("audit_req_spec_saved",$this->auditContext->tproject,$argsObj->title);
lib/requirements/reqSpecCommands.class.php:			    $audit_msg= TLS("audit_req_spec_renamed",$this->auditContext->tproject,
lib/requirements/reqSpecCommands.class.php:			                                             $guiObj->req_spec['title'],$argsObj->title);
lib/requirements/reqSpecCommands.class.php:			logAuditEvent($audit_msg,"SAVE",$argsObj->req_spec_id,"req_specs");
lib/requirements/reqSpecCommands.class.php:		   $guiObj->main_descr = $descr_prefix . $guiObj->req_spec['title'];
lib/requirements/reqSpecCommands.class.php:		   $guiObj->action_descr = lang_get('edit_req_spec');
lib/requirements/reqSpecCommands.class.php:		   $guiObj->cfields = $this->reqSpecMgr->html_table_of_custom_field_values($argsObj->req_spec_id,$argsObj->tproject_id);
lib/requirements/reqSpecCommands.class.php:		   $guiObj->req_spec_doc_id=$argsObj->doc_id;
lib/requirements/reqSpecCommands.class.php:		   $guiObj->req_spec_title=$argsObj->title;
lib/requirements/reqSpecCommands.class.php:		   $guiObj->total_req_counter=$argsObj->countReq;
lib/requirements/reqSpecCommands.class.php:      	$guiObj = $this->initGuiBean(); 
lib/requirements/reqSpecCommands.class.php:		$req_spec = $this->reqSpecMgr->get_by_id($argsObj->req_spec_id);
lib/requirements/reqSpecCommands.class.php:		$this->reqSpecMgr->delete_deep($argsObj->req_spec_id);
lib/requirements/reqSpecCommands.class.php:		logAuditEvent(TLS("audit_req_spec_deleted",$this->auditContext->tproject,$req_spec['title']),
lib/requirements/reqSpecCommands.class.php:		               "DELETE",$argsObj->req_spec_id,"req_specs");
lib/requirements/reqSpecCommands.class.php:		$guiObj->template = 'show_message.tpl';
lib/requirements/reqSpecCommands.class.php:		$guiObj->template_dir = '';
lib/requirements/reqSpecCommands.class.php:      	$guiObj->main_descr = lang_get('testproject') . TITLE_SEP . $argsObj->tproject_name;
lib/requirements/reqSpecCommands.class.php:		$guiObj->title=lang_get('delete_req_spec');
lib/requirements/reqSpecCommands.class.php:		$guiObj->user_feedback = sprintf(lang_get('req_spec_deleted'),$req_spec['title']);
lib/requirements/reqSpecCommands.class.php:		$guiObj->refresh_tree = 'yes'; // needed to enable refresh_tree logic
lib/requirements/reqSpecCommands.class.php:		$guiObj->result = 'ok';  
lib/requirements/reqSpecCommands.class.php:      	$guiObj = $this->initGuiBean(); 
lib/requirements/reqSpecCommands.class.php:  		$guiObj->template = 'reqSpecReorder.tpl';
lib/requirements/reqSpecCommands.class.php:		$guiObj->main_descr = lang_get('testproject') . TITLE_SEP . $argsObj->tproject_name;
lib/requirements/reqSpecCommands.class.php:		$guiObj->action_descr = lang_get('title_change_req_spec_order');
lib/requirements/reqSpecCommands.class.php:		$guiObj->all_req_spec = $this->reqSpecMgr->get_all_in_testproject($argsObj->tproject_id,$order_by);
lib/requirements/reqSpecCommands.class.php:      	$guiObj->tproject_name=$argsObj->tproject_name;
lib/requirements/reqSpecCommands.class.php:      	$guiObj->tproject_id=$argsObj->tproject_id;
lib/requirements/reqSpecCommands.class.php:      	$guiObj = $this->initGuiBean(); 
lib/requirements/reqSpecCommands.class.php:      	$guiObj->tproject_name=$argsObj->tproject_name;
lib/requirements/reqSpecCommands.class.php:      	$guiObj->tproject_id=$argsObj->tproject_id;
lib/requirements/reqSpecCommands.class.php:  		$guiObj->template = 'project_req_spec_mgmt.tpl';
lib/requirements/reqSpecCommands.class.php:  		$guiObj->main_descr = lang_get('testproject') . TITLE_SEP . $argsObj->tproject_name;
lib/requirements/reqSpecCommands.class.php:		$nodes_in_order = transform_nodes_order($argsObj->nodes_order);
lib/requirements/reqSpecCommands.class.php:		$this->reqSpecMgr->set_order($nodes_in_order);
lib/requirements/reqSpecCommands.class.php:      	$guiObj->refresh_tree='yes';
lib/requirements/reqSpecCommands.class.php:		$reqParent=$this->reqSpecMgr->get_by_id($argsObj->reqParentID);
lib/requirements/reqSpecCommands.class.php:      	$guiObj = $this->initGuiBean(); 
lib/requirements/reqSpecCommands.class.php:		$guiObj->main_descr = lang_get('req_spec_short') . TITLE_SEP . $reqParent['title'];
lib/requirements/reqSpecCommands.class.php:		$guiObj->action_descr = lang_get('create_child_req_spec');
lib/requirements/reqSpecCommands.class.php:		$guiObj->cfields = $this->reqSpecMgr->html_table_of_custom_field_inputs(null,$argsObj->tproject_id);
lib/requirements/reqSpecCommands.class.php:      	$guiObj->template = $this->defaultTemplate;
lib/requirements/reqSpecCommands.class.php:		$guiObj->submit_button_label=$this->submit_button_label;
lib/requirements/reqSpecCommands.class.php:		$guiObj->req_spec_id=null;
lib/requirements/reqSpecCommands.class.php:		$guiObj->req_spec_doc_id=null;
lib/requirements/reqSpecCommands.class.php:		$guiObj->req_spec_title=null;
lib/requirements/reqSpecCommands.class.php:		$guiObj->total_req_counter=null;
lib/requirements/reqSpecCommands.class.php:      	$obj = $this->initGuiBean(); 
lib/requirements/reqSpecCommands.class.php:		$req_spec = $this->reqSpecMgr->get_by_id($argsObj->req_spec_id);
lib/requirements/reqSpecCommands.class.php:	    	$obj->items = $this->reqSpecMgr->get_requirements($argsObj->req_spec_id,'all',null,
lib/requirements/reqSpecCommands.class.php:	    	                                                  $this->getRequirementsOptions);
lib/requirements/reqSpecCommands.class.php:		$obj->main_descr = lang_get('req_spec') . TITLE_SEP . $req_spec['title'];
lib/requirements/reqSpecCommands.class.php:		$obj->action_descr = lang_get('copy_several_reqs');
lib/requirements/reqSpecCommands.class.php:        $obj->template = 'reqCopy.tpl';
lib/requirements/reqSpecCommands.class.php:		$obj->containers = null;
lib/requirements/reqSpecCommands.class.php:		$obj->page2call = 'lib/requirements/reqSpecEdit.php';
lib/requirements/reqSpecCommands.class.php:		$obj->array_of_msg = '';
lib/requirements/reqSpecCommands.class.php:  		$obj->doActionButton = 'doCopyRequirements';
lib/requirements/reqSpecCommands.class.php:  		$obj->req_spec_id = $argsObj->req_spec_id;
lib/requirements/reqSpecCommands.class.php:	  	$subtree = $this->reqMgr->tree_mgr->get_subtree($argsObj->tproject_id,$my['filters']);
lib/requirements/reqSpecCommands.class.php:		  $obj->containers = $this->reqMgr->tree_mgr->createHierarchyMap($subtree);
lib/requirements/reqSpecCommands.class.php:      	$obj = $this->initGuiBean(); 
lib/requirements/reqSpecCommands.class.php: 		$obj = $this->copyRequirements($argsObj, array( 'get_items' => false));
lib/requirements/reqSpecCommands.class.php:      	$obj->req = null;
lib/requirements/reqSpecCommands.class.php:   		$obj->req_spec_id = $argsObj->req_spec_id;
lib/requirements/reqSpecCommands.class.php:      	                     array('testcase_assignment' => $argsObj->copy_testcase_assignment));
lib/requirements/reqSpecCommands.class.php:    	$obj->array_of_msg = '';
lib/requirements/reqSpecCommands.class.php:      	foreach($argsObj->itemSet as $itemID)
lib/requirements/reqSpecCommands.class.php:			$ret = $this->reqMgr->copy_to($itemID,$argsObj->containerID,$argsObj->user_id,
lib/requirements/reqSpecCommands.class.php:			                              $argsObj->tproject_id,$copyOptions);
lib/requirements/reqSpecCommands.class.php:			$obj->user_feedback = $ret['msg'];
lib/requirements/reqSpecCommands.class.php:				$new_req = $this->reqMgr->get_by_id($ret['id'],requirement_mgr::LATEST_VERSION);
lib/requirements/reqSpecCommands.class.php:			    $source_req = $this->reqMgr->get_by_id($itemID,requirement_mgr::LATEST_VERSION);
lib/requirements/reqSpecCommands.class.php:				$obj->user_feedback = $logMsg; // sprintf(lang_get('req_created'), $new_req['req_doc_id']);
lib/requirements/reqSpecCommands.class.php:  				$obj->template = 'reqCopy.tpl';
lib/requirements/reqSpecCommands.class.php:  				$obj->req_id = $ret['id'];
lib/requirements/reqSpecCommands.class.php:  			    $obj->array_of_msg[] = $logMsg;	
lib/requirements/reqSpecCommands.class.php:		$obj->items = $this->reqSpecMgr->get_requirements($obj->req_spec_id,
lib/requirements/reqSpecCommands.class.php:     	                                                  'all',null,$this->getRequirementsOptions);
lib/requirements/reqSpecCommands.class.php:   		$obj = $this->initGuiBean(); 
lib/requirements/reqSpecCommands.class.php:		$req_spec = $this->reqSpecMgr->get_by_id($argsObj->req_spec_id);
lib/requirements/reqSpecCommands.class.php:		$obj->main_descr = lang_get('req_spec') . TITLE_SEP . $req_spec['title'];
lib/requirements/reqSpecCommands.class.php:		$obj->action_descr = lang_get('copy_req_spec');
lib/requirements/reqSpecCommands.class.php:        $obj->template = 'reqSpecCopy.tpl';
lib/requirements/reqSpecCommands.class.php:		$obj->containers = null;
lib/requirements/reqSpecCommands.class.php:		$obj->page2call = 'lib/requirements/reqSpecEdit.php';
lib/requirements/reqSpecCommands.class.php:		$obj->array_of_msg = '';
lib/requirements/reqSpecCommands.class.php:  		$obj->doActionButton = 'doCopy';
lib/requirements/reqSpecCommands.class.php:  		$obj->req_spec_id = $argsObj->req_spec_id;
lib/requirements/reqSpecCommands.class.php:  		$obj->top_checked = ' checked = "checked" ';
lib/requirements/reqSpecCommands.class.php:  		$obj->bottom_checked = ' ';
lib/requirements/reqSpecCommands.class.php:	  	$root = $this->reqMgr->tree_mgr->get_node_hierarchy_info($argsObj->tproject_id);
lib/requirements/reqSpecCommands.class.php:	  	$subtree = array_merge(array($root),$this->reqMgr->tree_mgr->get_subtree($argsObj->tproject_id,$my['filters']));
lib/requirements/reqSpecCommands.class.php:		  $obj->containers = $this->reqMgr->tree_mgr->createHierarchyMap($subtree);
lib/requirements/reqSpecCommands.class.php:		$obj = $this->initGuiBean(); 
lib/requirements/reqSpecCommands.class.php: 		$obj = $this->copy($argsObj);
lib/requirements/reqSpecCommands.class.php:      	$obj->req = null;
lib/requirements/reqSpecCommands.class.php:   		$obj->req_spec_id = $argsObj->req_spec_id;
lib/requirements/reqSpecCommands.class.php:  	    $req_spec = $this->reqSpecMgr->get_by_id($argsObj->req_spec_id);
lib/requirements/reqSpecCommands.class.php:		$obj->main_descr = lang_get('req_spec') . TITLE_SEP . $req_spec['title'];
lib/requirements/reqSpecCommands.class.php:		$obj->action_descr = lang_get('copy_req_spec');
lib/requirements/reqSpecCommands.class.php:        $obj->template = 'reqSpecCopy.tpl';
lib/requirements/reqSpecCommands.class.php:		$obj->containers = null;
lib/requirements/reqSpecCommands.class.php:		$obj->page2call = 'lib/requirements/reqSpecEdit.php';
lib/requirements/reqSpecCommands.class.php:		$obj->array_of_msg = '';
lib/requirements/reqSpecCommands.class.php:  		$obj->doActionButton = 'doCopy';
lib/requirements/reqSpecCommands.class.php:  		$obj->req_spec_id = $argsObj->req_spec_id;
lib/requirements/reqSpecCommands.class.php:  		$obj->top_checked = ' checked = "checked" ';
lib/requirements/reqSpecCommands.class.php:  		$obj->bottom_checked = ' ';
lib/requirements/reqSpecCommands.class.php:  	    $op = $this->reqSpecMgr->copy_to($argsObj->req_spec_id,$argsObj->containerID, 
lib/requirements/reqSpecCommands.class.php:  	                                     $argsObj->tproject_id, $argsObj->user_id);
lib/requirements/reqSpecCommands.class.php:        	$new_req_spec = $this->reqSpecMgr->get_by_id($op['id']);
lib/requirements/reqSpecCommands.class.php:			$obj->array_of_msg[] = sprintf(lang_get('req_spec_copy_done'),$req_spec['doc_id'],
lib/requirements/reqSpecCommands.class.php:	  	$root = $this->reqSpecMgr->tree_mgr->get_node_hierarchy_info($argsObj->tproject_id);
lib/requirements/reqSpecCommands.class.php:	  	$subtree = array_merge(array($root),$this->reqMgr->tree_mgr->get_subtree($argsObj->tproject_id,$my['filters']));
lib/requirements/reqSpecCommands.class.php:		  $obj->containers = $this->reqMgr->tree_mgr->createHierarchyMap($subtree);
lib/requirements/reqSpecAnalyse.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/requirements/reqSpecAnalyse.php:$tcprefix = $tproject_mgr->getTestCasePrefix($args->tprojectID) . $tcasecfg->glue_character;
lib/requirements/reqSpecAnalyse.php:// $ns->reqSpec = $tproject_mgr->getOptionReqSpec($args->tprojectID);
lib/requirements/reqSpecAnalyse.php:$ns->reqSpec = $tproject_mgr->genComboReqSpec($args->tprojectID);
lib/requirements/reqSpecAnalyse.php:if($args->reqSpecID == 0 && count($ns->reqSpec))
lib/requirements/reqSpecAnalyse.php: 	reset($ns->reqSpec);
lib/requirements/reqSpecAnalyse.php:	$args->reqSpecID = key($ns->reqSpec);
lib/requirements/reqSpecAnalyse.php:$ns->coverage = $req_spec_mgr->get_coverage($args->reqSpecID);
lib/requirements/reqSpecAnalyse.php:$ns->metrics = $req_spec_mgr->get_metrics($args->reqSpecID);
lib/requirements/reqSpecAnalyse.php:    $smarty->assign($key, $value);
lib/requirements/reqSpecAnalyse.php:$smarty->assign('tcprefix', $tcprefix);
lib/requirements/reqSpecAnalyse.php:$smarty->assign('selectedReqSpec', $args->reqSpecID);
lib/requirements/reqSpecAnalyse.php:$smarty->assign('modify_req_rights', has_rights($db,"mgt_modify_req")); 
lib/requirements/reqSpecAnalyse.php:$smarty->display($template_dir . $default_template);
lib/requirements/reqSpecAnalyse.php:    $args->reqSpecID = isset($_REQUEST['req_spec_id']) ? $_REQUEST['req_spec_id'] : 0;
lib/requirements/reqSpecAnalyse.php:    $args->tprojectID = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/requirements/reqSpecAnalyse.php:	return $user->hasRight($db,'mgt_view_req');
lib/requirements/reqSpecSearch.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/requirements/reqSpecSearch.php: * @copyright 	2005-2009, TestLink community 
lib/requirements/reqSpecSearch.php:$gui->main_descr = lang_get('caption_search_form_req_spec');
lib/requirements/reqSpecSearch.php:$gui->warning_msg = '';
lib/requirements/reqSpecSearch.php:$gui->path_info = null;
lib/requirements/reqSpecSearch.php:$gui->resultSet = null;
lib/requirements/reqSpecSearch.php:if ($args->tprojectID)
lib/requirements/reqSpecSearch.php:	if ($args->requirement_document_id) {
lib/requirements/reqSpecSearch.php:		$id=$db->prepare_string($args->requirement_document_id);
lib/requirements/reqSpecSearch.php:	if ($args->name) {
lib/requirements/reqSpecSearch.php:		$title=$db->prepare_string($args->name);
lib/requirements/reqSpecSearch.php:	if ($args->reqSpecType != "notype") {
lib/requirements/reqSpecSearch.php:		$type=$db->prepare_string($args->reqSpecType);
lib/requirements/reqSpecSearch.php:	if ($args->scope) {
lib/requirements/reqSpecSearch.php:		$scope=$db->prepare_string($args->scope);
lib/requirements/reqSpecSearch.php:	if($args->custom_field_id > 0) {
lib/requirements/reqSpecSearch.php:        $args->custom_field_id = $db->prepare_int($args->custom_field_id);
lib/requirements/reqSpecSearch.php:        $args->custom_field_value = $db->prepare_string($args->custom_field_value);
lib/requirements/reqSpecSearch.php:        $filter['by_custom_field'] = " AND CFD.field_id={$args->custom_field_id} " .
lib/requirements/reqSpecSearch.php:                                     " AND CFD.value like '%{$args->custom_field_value}%' ";
lib/requirements/reqSpecSearch.php:    	   " AND RS.testproject_id = {$args->tprojectID} ";
lib/requirements/reqSpecSearch.php:	$map = $db->fetchRowsIntoMap($sql,'id');
lib/requirements/reqSpecSearch.php:$gui->row_qty=count($map);
lib/requirements/reqSpecSearch.php:if($gui->row_qty)
lib/requirements/reqSpecSearch.php:	$gui->pageTitle = $gui->main_descr . " - " . lang_get('match_count') . ": " . $gui->row_qty;
lib/requirements/reqSpecSearch.php:	$gui->resultSet=$map;
lib/requirements/reqSpecSearch.php:	if($gui->row_qty <= $req_cfg->search->max_qty_for_display)
lib/requirements/reqSpecSearch.php:		$gui->path_info=$tproject_mgr->tree_manager->get_full_path_verbose($req_set);
lib/requirements/reqSpecSearch.php:		$gui->warning_msg=lang_get('too_wide_search_criteria');
lib/requirements/reqSpecSearch.php:	$gui->pageTitle = $gui->main_descr;
lib/requirements/reqSpecSearch.php:	$gui->type = "rec_spec";
lib/requirements/reqSpecSearch.php:$smarty->assign('gui',$gui);
lib/requirements/reqSpecSearch.php:$smarty->display($templateCfg->template_dir . $tpl);
lib/requirements/reqSpecSearch.php:		$args->$keyvar = isset($_REQUEST[$keyvar]) ? trim($_REQUEST[$keyvar]) : null;
lib/requirements/reqSpecSearch.php:		$args->$keyvar = !is_null($args->$keyvar) && strlen($args->$keyvar) > 0 ? trim($args->$keyvar) : null;
lib/requirements/reqSpecSearch.php:		$args->$keyvar = isset($_REQUEST[$keyvar]) ? intval($_REQUEST[$keyvar]) : 0;
lib/requirements/reqSpecSearch.php:	$args->userID = isset($_SESSION['userID']) ? $_SESSION['userID'] : 0;
lib/requirements/reqSpecSearch.php:	$args->tprojectID = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/requirements/reqSpecEdit.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/requirements/reqSpecEdit.php: *  20100810 - asimon - BUGID 3317: disabled total count of requirements by default
lib/requirements/reqSpecEdit.php: *  20100808 - aismon - added logic to refresh filtered tree on action
lib/requirements/reqSpecEdit.php: *	20091202 - franciscom - fixed bug on webeditor value init.
lib/requirements/reqSpecEdit.php: *	20091119 - franciscom - doc_id
lib/requirements/reqSpecEdit.php: *	20080830 - franciscom - added code to manage unlimited depth tree
lib/requirements/reqSpecEdit.php: *  20080827 - franciscom - BUGID 1692 
lib/requirements/reqSpecEdit.php:$auditContext->tproject = $args->tproject_name;
lib/requirements/reqSpecEdit.php:$commandMgr->setAuditContext($auditContext);
lib/requirements/reqSpecEdit.php:$pFn = $args->doAction;
lib/requirements/reqSpecEdit.php:	$op = $commandMgr->$pFn($args,$_REQUEST);
lib/requirements/reqSpecEdit.php:	$args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/requirements/reqSpecEdit.php:	$args->tproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : "";
lib/requirements/reqSpecEdit.php:	$args->user_id = isset($_SESSION['userID']) ? $_SESSION['userID'] : 0;
lib/requirements/reqSpecEdit.php:	$args->basehref = $_SESSION['basehref'];
lib/requirements/reqSpecEdit.php:	$args->reqParentID = is_null($args->reqParentID) ? $args->tproject_id : $args->reqParentID;
lib/requirements/reqSpecEdit.php:	// asimon - 20100808 - added logic to refresh filtered tree on action
lib/requirements/reqSpecEdit.php:	$args->refreshTree = isset($_SESSION['setting_refresh_tree_on_action'])
lib/requirements/reqSpecEdit.php:	if (is_null($args->countReq)) {
lib/requirements/reqSpecEdit.php:		$args->countReq = 0;
lib/requirements/reqSpecEdit.php:    $owebEditor = web_editor('scope',$argsObj->basehref,$editorCfg) ;
lib/requirements/reqSpecEdit.php:	switch($argsObj->doAction)
lib/requirements/reqSpecEdit.php:        $owebEditor->Value = $argsObj->scope;
lib/requirements/reqSpecEdit.php:        $owebEditor->Value = getItemTemplateContents('req_spec_template',$owebEditor->InstanceName, $argsObj->scope);
lib/requirements/reqSpecEdit.php:	$guiObj->scope = $owebEditor->CreateHTML();
lib/requirements/reqSpecEdit.php:    $guiObj->editorType = $editorCfg['type'];  
lib/requirements/reqSpecEdit.php:    // 20100808 - aismon - added logic to refresh filtered tree on action
lib/requirements/reqSpecEdit.php:	switch($argsObj->doAction)
lib/requirements/reqSpecEdit.php:    		$guiObj->refreshTree = $argsObj->refreshTree;
lib/requirements/reqSpecEdit.php:    switch($argsObj->doAction)
lib/requirements/reqSpecEdit.php:                $guiObj->$key = $value;
lib/requirements/reqSpecEdit.php:            $guiObj->operation = $actionOperation[$argsObj->doAction];
lib/requirements/reqSpecEdit.php:            $tpl = is_null($opObj->template) ? $templateCfg->default_template : $opObj->template;
lib/requirements/reqSpecEdit.php:            $tpd = isset($key2loop['template_dir']) ? $opObj->template_dir : $templateCfg->template_dir;
lib/requirements/reqSpecEdit.php:	switch($argsObj->doAction)
lib/requirements/reqSpecEdit.php:            	$tpl = $templateCfg->template_dir . $tpl;      
lib/requirements/reqSpecEdit.php:			$smartyObj->assign('mgt_view_events',has_rights($db,"mgt_view_events"));
lib/requirements/reqSpecEdit.php: 		    $smartyObj->assign('gui',$guiObj);
lib/requirements/reqSpecEdit.php:		    $smartyObj->display($tpl);
lib/requirements/reqSpecEdit.php:    $gui = $commandMgr->initGuiBean();
lib/requirements/reqSpecEdit.php:    $gui->user_feedback = null;
lib/requirements/reqSpecEdit.php:    $gui->main_descr = null;
lib/requirements/reqSpecEdit.php:    $gui->action_descr = null;
lib/requirements/reqSpecEdit.php:    $gui->refresh_tree = 'no';
lib/requirements/reqSpecEdit.php:    // 20100810 - asimon - BUGID 3317: disabled total count of requirements by default
lib/requirements/reqSpecEdit.php:	$gui->external_req_management = ($req_cfg->external_req_management == ENABLED) ? 1 : 0;
lib/requirements/reqSpecEdit.php:    $gui->grants = new stdClass();
lib/requirements/reqSpecEdit.php:    $gui->grants->req_mgmt = has_rights($dbHandler,"mgt_modify_req");
lib/requirements/reqSpecEdit.php:	return ($user->hasRight($db,'mgt_view_req') && $user->hasRight($db,'mgt_modify_req'));
lib/requirements/reqSearch.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/requirements/reqSearch.php: * @copyright 	2005-2010, TestLink community 
lib/requirements/reqSearch.php: * 20100324 - asimon - added searching for requirement relation type (BUGID 1748)
lib/requirements/reqSearch.php:$gui->main_descr = lang_get('caption_search_form_req');
lib/requirements/reqSearch.php:$gui->warning_msg = '';
lib/requirements/reqSearch.php:$gui->path_info = null;
lib/requirements/reqSearch.php:$gui->resultSet = null;
lib/requirements/reqSearch.php:$gui->tcasePrefix = $tproject_mgr->getTestCasePrefix($args->tprojectID);
lib/requirements/reqSearch.php:$gui->tcasePrefix .= $tcase_cfg->glue_character;
lib/requirements/reqSearch.php:if ($args->tprojectID)
lib/requirements/reqSearch.php:	if ($args->requirement_document_id) {
lib/requirements/reqSearch.php:		$id=$db->prepare_string($args->requirement_document_id);
lib/requirements/reqSearch.php:	if ($args->name) {
lib/requirements/reqSearch.php:		$title=$db->prepare_string($args->name);
lib/requirements/reqSearch.php:	if ($args->version) {
lib/requirements/reqSearch.php:		$version = $db->prepare_int($args->version);
lib/requirements/reqSearch.php:	if ($args->reqType != "notype") {
lib/requirements/reqSearch.php:		$type=$db->prepare_string($args->reqType);
lib/requirements/reqSearch.php:	if ($args->scope) {
lib/requirements/reqSearch.php:		$scope=$db->prepare_string($args->scope);
lib/requirements/reqSearch.php:	if ($args->coverage) {
lib/requirements/reqSearch.php:		$coverage=$db->prepare_int($args->coverage);
lib/requirements/reqSearch.php:	if ($args->relation_type != "notype") {
lib/requirements/reqSearch.php:		// $args->relation_type is a string in following form
lib/requirements/reqSearch.php:		$relation_type = (int)current((explode('_',$args->relation_type)));
lib/requirements/reqSearch.php:		if (strpos($args->relation_type, "_destination")) {
lib/requirements/reqSearch.php:		} else if (strpos($args->relation_type, "_source")) {
lib/requirements/reqSearch.php:	if($args->custom_field_id > 0) {
lib/requirements/reqSearch.php:        $args->custom_field_id = $db->prepare_string($args->custom_field_id);
lib/requirements/reqSearch.php:        $args->custom_field_value = $db->prepare_string($args->custom_field_value);
lib/requirements/reqSearch.php:        $filter['by_custom_field'] = " AND CFD.field_id={$args->custom_field_id} " .
lib/requirements/reqSearch.php:                                     " AND CFD.value like '%{$args->custom_field_value}%' ";
lib/requirements/reqSearch.php:    if ($args->tcid != "" && strcmp($args->tcid, $gui->tcasePrefix) != 0) {
lib/requirements/reqSearch.php:    	$tcid = $db->prepare_string($args->tcid);
lib/requirements/reqSearch.php:    	$tcid = str_replace($gui->tcasePrefix, "", $tcid);
lib/requirements/reqSearch.php:	if ($args->reqStatus != "nostatus") {
lib/requirements/reqSearch.php:		$status=$db->prepare_string($args->reqStatus);
lib/requirements/reqSearch.php:	$map = $db->fetchRowsIntoMap($sql,'id');
lib/requirements/reqSearch.php:			$pid = $tproject_mgr->tree_manager->getTreeRoot($id);
lib/requirements/reqSearch.php:			if ($pid != $args->tprojectID) {
lib/requirements/reqSearch.php:$gui->row_qty=count($map);
lib/requirements/reqSearch.php:if($gui->row_qty)
lib/requirements/reqSearch.php:	$gui->pageTitle = $gui->main_descr . " - " . lang_get('match_count') . ": " . $gui->row_qty;
lib/requirements/reqSearch.php:	$gui->resultSet=$map;
lib/requirements/reqSearch.php:	if($gui->row_qty <= $req_cfg->search->max_qty_for_display)
lib/requirements/reqSearch.php:		$gui->path_info=$tproject_mgr->tree_manager->get_full_path_verbose($req_set);
lib/requirements/reqSearch.php:		$gui->warning_msg=lang_get('too_wide_search_criteria');
lib/requirements/reqSearch.php:$smarty->assign('gui',$gui);
lib/requirements/reqSearch.php:$smarty->display($templateCfg->template_dir . $tpl);
lib/requirements/reqSearch.php:		$args->$keyvar = isset($_REQUEST[$keyvar]) ? trim($_REQUEST[$keyvar]) : null;
lib/requirements/reqSearch.php:		$args->$keyvar = !is_null($args->$keyvar) && strlen($args->$keyvar) > 0 ? trim($args->$keyvar) : null;
lib/requirements/reqSearch.php:		$args->$keyvar = isset($_REQUEST[$keyvar]) ? intval($_REQUEST[$keyvar]) : 0;
lib/requirements/reqSearch.php:	$args->userID = isset($_SESSION['userID']) ? $_SESSION['userID'] : 0;
lib/requirements/reqSearch.php:	$args->tprojectID = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/results/testCasesWithCF.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/results/testCasesWithCF.php: * @author Amit Khullar - amkhullar@gmail.com
lib/results/testCasesWithCF.php: *	20100830 - franciscom - fixed warnings on eventviewer
lib/results/testCasesWithCF.php: *	20100828 - eloff - adapt to rendering of status column
lib/results/testCasesWithCF.php: *	20100827 - franciscom - refactoring - removed unused variables
lib/results/testCasesWithCF.php: *  20100827 - Julian - only show test case if at least one custom field has a value
lib/results/testCasesWithCF.php: *	20100825 - eloff - add platform_name in table
lib/results/testCasesWithCF.php: *	20100823 - Julian - table now uses a unique table id per test project
lib/results/testCasesWithCF.php: *	20100816 - Julian - added default column width
lib/results/testCasesWithCF.php: *                    - added default sorting and grouping
lib/results/testCasesWithCF.php: *	20100719 - eloff - Use tlExtTable
lib/results/testCasesWithCF.php: *	20090504 - amitkhullar - BUGID 2465
lib/results/testCasesWithCF.php:if( $args->doIt )
lib/results/testCasesWithCF.php:   	buildResultSet($db,$gui,$args->tproject_id,$args->tplan_id);
lib/results/testCasesWithCF.php:	$columns = getColumnsDefinition($args->showPlatforms,$gui->cfields);
lib/results/testCasesWithCF.php:	foreach ($gui->resultSet as $item)
lib/results/testCasesWithCF.php:		$dummy = $tcase_mgr->getPathLayered(array($item['tcase_id']));
lib/results/testCasesWithCF.php:					 buildExternalIdString($gui->tcasePrefix, $item['tc_external_id']) .
lib/results/testCasesWithCF.php:		if ($args->showPlatforms)
lib/results/testCasesWithCF.php:		$rowData[] = "<!--{$item['execution_ts']}--><a href=\"lib/execute/execSetResults.php?" .
lib/results/testCasesWithCF.php:					 "&version_id={$item['tcversion_id']}&tplan_id={$gui->tplan_id}\">" .
lib/results/testCasesWithCF.php:			'text' => $gui->status_code_labels[$item['exec_status']],
lib/results/testCasesWithCF.php:			'cssClass' => $gui->code_status[$item['exec_status']] . '_text',
lib/results/testCasesWithCF.php:	$table_id = 'tl_'.$args->tplan_id.'_table_tc_with_cf';
lib/results/testCasesWithCF.php:	$table->addCustomBehaviour('status', array('render' => 'statusRenderer'));
lib/results/testCasesWithCF.php:	$table->addCustomBehaviour('text', array('render' => 'columnWrap'));
lib/results/testCasesWithCF.php:	$table->setGroupByColumnName(lang_get('build'));
lib/results/testCasesWithCF.php:	$table->setSortByColumnName(lang_get('date'));
lib/results/testCasesWithCF.php:	$table->sortDirection = 'DESC';
lib/results/testCasesWithCF.php:	$table->showToolbar = true;
lib/results/testCasesWithCF.php:	$table->toolbarExpandCollapseGroupsButton = true;
lib/results/testCasesWithCF.php:	$table->toolbarShowAllColumnsButton = true;
lib/results/testCasesWithCF.php:	$gui->tableSet = array($table);
lib/results/testCasesWithCF.php:$smarty->assign('gui',$gui);
lib/results/testCasesWithCF.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/results/testCasesWithCF.php:	$argsObj->doIt = false;
lib/results/testCasesWithCF.php:    $argsObj->showPlatforms = false;
lib/results/testCasesWithCF.php:    $argsObj->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/results/testCasesWithCF.php:    $argsObj->tproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : '';
lib/results/testCasesWithCF.php:    $argsObj->tplan_name = '';
lib/results/testCasesWithCF.php:    $argsObj->tplan_id = isset($_REQUEST['tplan_id']) ? $_REQUEST['tplan_id'] : 0;
lib/results/testCasesWithCF.php:    if($argsObj->tplan_id == 0)
lib/results/testCasesWithCF.php:        $argsObj->tplan_id = isset($_SESSION['testplanID']) ? $_SESSION['testplanID'] : 0;
lib/results/testCasesWithCF.php:    if($argsObj->tplan_id > 0)
lib/results/testCasesWithCF.php:        $tplan_info = $tplan_mgr->get_by_id($argsObj->tplan_id);
lib/results/testCasesWithCF.php:        $argsObj->tplan_name = $tplan_info['name'];
lib/results/testCasesWithCF.php:		$argsObj->doIt = $tplan_mgr->count_testcases($argsObj->tplan_id) > 0;
lib/results/testCasesWithCF.php:		$argsObj->showPlatforms = $tplan_mgr->hasLinkedPlatforms($argsObj->tplan_id);
lib/results/testCasesWithCF.php:	$guiObj->pageTitle = lang_get('caption_testCasesWithCF');
lib/results/testCasesWithCF.php:	$guiObj->warning_msg = '';
lib/results/testCasesWithCF.php:	$guiObj->tcasePrefix = '';
lib/results/testCasesWithCF.php:	$guiObj->path_info = null;
lib/results/testCasesWithCF.php:	$guiObj->resultSet = null;
lib/results/testCasesWithCF.php:	$guiObj->tproject_name = $argsObj->tproject_name;
lib/results/testCasesWithCF.php:	$guiObj->tplan_name = $argsObj->tplan_name;
lib/results/testCasesWithCF.php:	$guiObj->tplan_id = $argsObj->tplan_id;
lib/results/testCasesWithCF.php:    $guiObj->tcasePrefix = $tproject_mgr->getTestCasePrefix($argsObj->tproject_id);
lib/results/testCasesWithCF.php:    $guiObj->code_status = $resultsCfg['code_status'];
lib/results/testCasesWithCF.php:    foreach($guiObj->code_status as $code => $verbose)
lib/results/testCasesWithCF.php:            $guiObj->status_code_labels[$code] = lang_get($resultsCfg['status_label'][$verbose]);
lib/results/testCasesWithCF.php:    $guiObj->cfields = $cfieldMgr->get_linked_cfields_at_execution($tproject_id,1,'testcase',
lib/results/testCasesWithCF.php:    $guiObj->cfields = (array)$guiObj->cfields;  
lib/results/testCasesWithCF.php:    if( count($guiObj->cfields) > 0 )
lib/results/testCasesWithCF.php:    	foreach($guiObj->cfields as $key => $values)
lib/results/testCasesWithCF.php:    $cf_map = $cfieldMgr->get_linked_cfields_at_execution($tproject_id,1,'testcase',
lib/results/testCasesWithCF.php:    $guiObj->resultSet = array();
lib/results/testCasesWithCF.php:            $guiObj->resultSet[$exec_id] = $exec_info[0];
lib/results/testCasesWithCF.php:            unset($guiObj->resultSet[$exec_id]['name']);
lib/results/testCasesWithCF.php:            unset($guiObj->resultSet[$exec_id]['label']);
lib/results/testCasesWithCF.php:            unset($guiObj->resultSet[$exec_id]['display_order']);
lib/results/testCasesWithCF.php:            unset($guiObj->resultSet[$exec_id]['id']);
lib/results/testCasesWithCF.php:            unset($guiObj->resultSet[$exec_id]['value']);
lib/results/testCasesWithCF.php:            $guiObj->resultSet[$exec_id] += $cf_place_holder;
lib/results/testCasesWithCF.php:                $guiObj->resultSet[$exec_id]['cfields'][$cfield_data['name']]=$cfield_data['value'];
lib/results/testCasesWithCF.php:    if(($guiObj->row_qty=count($cf_map)) > 0 )
lib/results/testCasesWithCF.php:        $guiObj->pageTitle .= " - " . lang_get('match_count') . ":" . $guiObj->row_qty;
lib/results/testCasesWithCF.php:	return $user->hasRight($db,'testplan_metrics');
lib/results/printDocOptions.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/results/printDocOptions.php: * 	- Structure of a document 
lib/results/printDocOptions.php: *	- It builds the javascript tree that allow the user select a required part 
lib/results/printDocOptions.php: *		20100723 - BUGID 3451 and related
lib/results/printDocOptions.php: *  	20100326 - asimon - refactored to include requirement documents
lib/results/printDocOptions.php: *		20090322 - amkhullar - added new option custom fields while printing Test plan/report
lib/results/printDocOptions.php: * 		20090222 - havlatm - added new options 
lib/results/printDocOptions.php:switch($args->doc_type)
lib/results/printDocOptions.php:$getArguments = "&type=" . $args->doc_type; 
lib/results/printDocOptions.php:	$getArguments .= '&docTestPlanId=' . $args->tplan_id;
lib/results/printDocOptions.php:switch($args->doc_type) 
lib/results/printDocOptions.php:		$tplan_info = $tplan_mgr->get_by_id($args->tplan_id);
lib/results/printDocOptions.php:		$latestBuild = $tplan_mgr->get_max_build_id($args->tplan_id);
lib/results/printDocOptions.php:  	  	// ----- BUGID 3451 and related ---------------------------------------
lib/results/printDocOptions.php://		$filters->keyword_id = null;
lib/results/printDocOptions.php://		$filters->keywordsFilterType = null;
lib/results/printDocOptions.php://		$filters->tc_id = null;
lib/results/printDocOptions.php://		$filters->assignedTo = null;
lib/results/printDocOptions.php://		$filters->status = null;
lib/results/printDocOptions.php://		$filters->cf_hash = null;
lib/results/printDocOptions.php://		$filters->platform_id = null;
lib/results/printDocOptions.php://		$filters->build_id = $latestBuild;
lib/results/printDocOptions.php://		$filters->hide_testcases = HIDE_TESTCASES;
lib/results/printDocOptions.php://		$filters->include_unassigned = 1;
lib/results/printDocOptions.php://		$filters->show_testsuite_contents = 1;
lib/results/printDocOptions.php://		$filters->statusAllPrevBuilds = null;
lib/results/printDocOptions.php:  	  	$filters->filter_keywords = null;
lib/results/printDocOptions.php:  	  	$filters->filter_keywords_filter_type = null;
lib/results/printDocOptions.php:  	  	$filters->filter_tc_id = null;
lib/results/printDocOptions.php:  	  	$filters->filter_assigned_user = null;
lib/results/printDocOptions.php:  	  	$filters->filter_result_result = null;
lib/results/printDocOptions.php:  	  	$filters->filter_custom_fields = null;
lib/results/printDocOptions.php:  	  	$filters->setting_platform = null;
lib/results/printDocOptions.php:  	  	$filters->filter_result_build = $latestBuild;
lib/results/printDocOptions.php:  	  	$filters->hide_testcases = HIDE_TESTCASES;
lib/results/printDocOptions.php:  	  	$filters->filter_assigned_user_include_unassigned = true;
lib/results/printDocOptions.php:  	  	$filters->show_testsuite_contents = true;
lib/results/printDocOptions.php:		// ----- BUGID 3451 and related ---------------------------------------
lib/results/printDocOptions.php:  	  	$additionalInfo->useCounters = CREATE_TC_STATUS_COUNTERS_OFF;
lib/results/printDocOptions.php:  	  	$additionalInfo->useColours = COLOR_BY_TC_STATUS_OFF;
lib/results/printDocOptions.php:        list($treeContents, $additionalArgs) = generateExecTree($db,$workPath,$args->tproject_id,$args->tproject_name,
lib/results/printDocOptions.php:				                                                $args->tplan_id,$testplan_name,$filters,$additionalInfo);
lib/results/printDocOptions.php:      	$tree = $treeContents->menustring;
lib/results/printDocOptions.php:      	$gui->ajaxTree = new stdClass();
lib/results/printDocOptions.php:      	$gui->ajaxTree->root_node = $treeContents->rootnode;
lib/results/printDocOptions.php:        $gui->ajaxTree->children = $treeContents->menustring;
lib/results/printDocOptions.php:        $gui->ajaxTree->loadFromChildren = true;
lib/results/printDocOptions.php:        $gui->ajaxTree->cookiePrefix .= $gui->ajaxTree->root_node->id . "_" ;
lib/results/printDocOptions.php:$smarty->assign('gui', $gui);
lib/results/printDocOptions.php:$smarty->assign('arrCheckboxes', $arrCheckboxes);
lib/results/printDocOptions.php:$smarty->assign('selFormat', $args->format);
lib/results/printDocOptions.php:$smarty->assign('docType', $args->doc_type);
lib/results/printDocOptions.php:$smarty->assign('docTestPlanId', $args->tplan_id);
lib/results/printDocOptions.php:$smarty->assign('tree', $tree);
lib/results/printDocOptions.php:$smarty->assign('menuUrl', $workPath);
lib/results/printDocOptions.php:$smarty->assign('args', $getArguments);
lib/results/printDocOptions.php:$smarty->assign('additionalArgs',$additionalArgs);
lib/results/printDocOptions.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/results/printDocOptions.php:	$args->doc_type = $args->type;
lib/results/printDocOptions.php:    $args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/results/printDocOptions.php:    $args->tproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : '';
lib/results/printDocOptions.php:    $args->basehref = $_SESSION['basehref'];
lib/results/printDocOptions.php:    $args->testprojectOptReqs = $_SESSION['testprojectOptions']->requirementsEnabled;
lib/results/printDocOptions.php://  rev: 20080817 - franciscom - added code to get total number of testcases 
lib/results/printDocOptions.php:    $gui->mainTitle = '';
lib/results/printDocOptions.php:    $tcasePrefix = $tprojectMgr->getTestCasePrefix($args->tproject_id);
lib/results/printDocOptions.php:    $gui->tree_title = '';
lib/results/printDocOptions.php:    $gui->ajaxTree = new stdClass();
lib/results/printDocOptions.php:    $gui->ajaxTree->root_node = new stdClass();
lib/results/printDocOptions.php:    $gui->ajaxTree->dragDrop = new stdClass();
lib/results/printDocOptions.php:    $gui->ajaxTree->dragDrop->enabled = false;
lib/results/printDocOptions.php:    $gui->ajaxTree->dragDrop->BackEndUrl = null;
lib/results/printDocOptions.php:    $gui->ajaxTree->children = '';
lib/results/printDocOptions.php:    $gui->ajaxTree->cookiePrefix = 'print' . str_replace(' ', '_', $args->doc_type) . '_';
lib/results/printDocOptions.php:    $gui->doc_type = $args->doc_type;
lib/results/printDocOptions.php:    switch($args->doc_type)
lib/results/printDocOptions.php:    		$gui->tree_title = lang_get('title_req_print_navigator');
lib/results/printDocOptions.php:           	$gui->ajaxTree->loader =  $args->basehref . 'lib/ajax/getrequirementnodes.php?' .
lib/results/printDocOptions.php:                                   "root_node={$args->tproject_id}&" .
lib/results/printDocOptions.php:	       	$gui->ajaxTree->loadFromChildren = 0;
lib/results/printDocOptions.php:	       	$gui->ajaxTree->root_node->href = "javascript:TPROJECT_PTP_RS({$args->tproject_id})";
lib/results/printDocOptions.php:           	$gui->ajaxTree->root_node->id = $args->tproject_id;
lib/results/printDocOptions.php:            $req_qty = $tprojectMgr->count_all_requirements($args->tproject_id);
lib/results/printDocOptions.php:            $gui->ajaxTree->root_node->name = htmlspecialchars($args->tproject_name) . " ($req_qty)";
lib/results/printDocOptions.php:            $gui->ajaxTree->cookiePrefix .= $gui->ajaxTree->root_node->id . "_" ;
lib/results/printDocOptions.php:	        $gui->mainTitle = lang_get('requirement_specification_report');
lib/results/printDocOptions.php:			$gui->tree_title = lang_get('title_tc_print_navigator');
lib/results/printDocOptions.php:           	$gui->ajaxTree->loader =  $args->basehref . 'lib/ajax/gettprojectnodes.php?' .
lib/results/printDocOptions.php:                                   "root_node={$args->tproject_id}&" .
lib/results/printDocOptions.php:                                   "tcprefix=". urlencode($tcasePrefix.$tcaseCfg->glue_character) ."}";
lib/results/printDocOptions.php:	       	$gui->ajaxTree->loadFromChildren = 0;
lib/results/printDocOptions.php:	       	$gui->ajaxTree->root_node->href = "javascript:TPROJECT_PTP({$args->tproject_id})";
lib/results/printDocOptions.php:           	$gui->ajaxTree->root_node->id = $args->tproject_id;
lib/results/printDocOptions.php:            $tcase_qty = $tprojectMgr->count_testcases($args->tproject_id);
lib/results/printDocOptions.php:            $gui->ajaxTree->root_node->name = htmlspecialchars($args->tproject_name) . " ($tcase_qty)";
lib/results/printDocOptions.php:            $gui->ajaxTree->cookiePrefix .= $gui->ajaxTree->root_node->id . "_" ;
lib/results/printDocOptions.php:	        $gui->mainTitle = lang_get('testspecification_report');
lib/results/printDocOptions.php:	        $gui->mainTitle = lang_get('test_report');
lib/results/printDocOptions.php:	          $gui->tree_title = lang_get('title_tp_print_navigator');
lib/results/printDocOptions.php:	          $gui->ajaxTree->loadFromChildren = 1;
lib/results/printDocOptions.php:	          $gui->ajaxTree->loader = '';
lib/results/printDocOptions.php:	          $gui->mainTitle = lang_get('test_plan');
lib/results/printDocOptions.php:    $gui->mainTitle .=  ' - ' . lang_get('doc_opt_title');
lib/results/printDocOptions.php:    $gui->outputFormat = array(FORMAT_HTML => lang_get('format_html'), 
lib/results/printDocOptions.php:	// these are the options which are always needed, type-specific ones follow below in switch
lib/results/printDocOptions.php:	switch($args->doc_type) {
lib/results/printDocOptions.php:			if($args->testprojectOptReqs) {
lib/results/printDocOptions.php:			if($args->doc_type == 'testplan') {
lib/results/printDocOptions.php:			} else if ($args->doc_type == 'testreport')	{
lib/results/resultsByStatus.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/results/resultsByStatus.php: * @copyright 	2007-2010, TestLink community 
lib/results/resultsByStatus.php: * @version    	CVS: $Id: resultsByStatus.php,v 1.93 2010/08/31 19:40:15 mx-julian Exp $
lib/results/resultsByStatus.php: *  20100831 - Julian - BUGID 3722 - fixed not run report
lib/results/resultsByStatus.php: *                    - BUGID 3721 - added without_bugs_counter again
lib/results/resultsByStatus.php: *                    - BUGID 3731 - fixed failed blocked test cases report
lib/results/resultsByStatus.php: *  20100823 - Julian - changed default grouping and sorting
lib/results/resultsByStatus.php: *  20100823 - Julian - table now uses a unique table id per test project and report type
lib/results/resultsByStatus.php: *	20100816 - Julian - changed default width for table columns
lib/results/resultsByStatus.php: *	                  - added default sorting
lib/results/resultsByStatus.php: *	20100719 - Eloff - Implement extTable for this report
lib/results/resultsByStatus.php: *	20100617 - eloff - BUGID 3255 - fix bug links if available
lib/results/resultsByStatus.php: *	201005 - Julian - BUGID 3492 - show only test case summary for not run test cases
lib/results/resultsByStatus.php: *	20100425 - franciscom - BUGID 3356
lib/results/resultsByStatus.php: *	20100124 - eloff - use buildExternalIdString()
lib/results/resultsByStatus.php: *	20091016 - franciscom - work still is needed to display LINK to BUG
lib/results/resultsByStatus.php: *	20091011 - franciscom - refactoring to do not use result.class
lib/results/resultsByStatus.php: *	20090517 - franciscom - fixed management of deleted testers
lib/results/resultsByStatus.php: *	20090414 - amikhullar - BUGID: 2374 - Show Assigned User in the Not Run Test Cases Report 
lib/results/resultsByStatus.php: *	20090325 - amkhullar  - BUGID 2249
lib/results/resultsByStatus.php: *	20090325 - amkhullar  - BUGID 2267
lib/results/resultsByStatus.php: *	20080602 - franciscom - changes due to BUGID 1504
lib/results/resultsByStatus.php: *	20070623 - franciscom - BUGID 911
lib/results/resultsByStatus.php:$tplan_info = $tplan_mgr->get_by_id($args->tplan_id);
lib/results/resultsByStatus.php:$tproject_info = $tproject_mgr->get_by_id($args->tproject_id);
lib/results/resultsByStatus.php:$gui->platformSet = $tplan_mgr->getPlatforms($args->tplan_id,$getOpt);
lib/results/resultsByStatus.php:$show_platforms = !is_null($gui->platformSet);
lib/results/resultsByStatus.php:if( is_null($gui->platformSet) )
lib/results/resultsByStatus.php:	$gui->platformSet = array('');
lib/results/resultsByStatus.php:$gui->bugInterfaceOn = config_get('bugInterfaceOn');
lib/results/resultsByStatus.php:if ($gui->bugInterfaceOn) {
lib/results/resultsByStatus.php:$gui->tplan_name = $tplan_info['name'];
lib/results/resultsByStatus.php:$gui->tproject_name = $tproject_info['name'];
lib/results/resultsByStatus.php:$fl=$tproject_mgr->tree_manager->get_children($args->tproject_id,
lib/results/resultsByStatus.php:if( $args->type == $statusCode['not_run'] )
lib/results/resultsByStatus.php:	$myRBB = $tplan_mgr->get_linked_tcversions($args->tplan_id,$filters, $options);
lib/results/resultsByStatus.php:	//structure as on failed/blocked report: output-array vs output-mapOfMap
lib/results/resultsByStatus.php:	$filters = array('exec_status' => array($args->type));
lib/results/resultsByStatus.php:	$myRBB = $tplan_mgr->get_linked_tcversions($args->tplan_id,$filters,$options);
lib/results/resultsByStatus.php:				$dummy=$tcase_mgr->getPathLayered(array($testcase['tc_id']));	
lib/results/resultsByStatus.php:			if( $args->type == $statusCode['not_run'] )
lib/results/resultsByStatus.php:					$build_info = $build_mgr->get_by_id($testcase['assigned_build_id']);
lib/results/resultsByStatus.php:				if ($gui->bugInterfaceOn) {
lib/results/resultsByStatus.php:						$gui->without_bugs_counter += 1;
lib/results/resultsByStatus.php:				$gui->dataSet[] = $item;
lib/results/resultsByStatus.php:	if($args->type == $statusCode['not_run']) {
lib/results/resultsByStatus.php:		$gui->warning_msg = lang_get('no_notrun');
lib/results/resultsByStatus.php:	if($args->type == $statusCode['failed']) {
lib/results/resultsByStatus.php:		$gui->warning_msg = lang_get('no_failed');
lib/results/resultsByStatus.php:	if($args->type == $statusCode['blocked']) {
lib/results/resultsByStatus.php:		$gui->warning_msg = lang_get('no_blocked');
lib/results/resultsByStatus.php:new dBug($gui->dataSet);
lib/results/resultsByStatus.php:$gui->tableSet[] = buildMatrix($gui->dataSet, $args, array(
lib/results/resultsByStatus.php:		'status_not_run' => ($args->type == $statusCode['not_run']),
lib/results/resultsByStatus.php:		'bugInterfaceOn' => $gui->bugInterfaceOn,
lib/results/resultsByStatus.php:		'format' => $args->format,
lib/results/resultsByStatus.php:$smarty->assign('gui', $gui );
lib/results/resultsByStatus.php:displayReport($templateCfg->template_dir . $templateCfg->default_template, $smarty, $args->format,$mailCfg);
lib/results/resultsByStatus.php:	//Added tplan_id as a parameter - amitkhullar -BUGID 2267
lib/results/resultsByStatus.php:	$args->tproject_id = isset($_SESSION['testprojectID']) ? intval($_SESSION['testprojectID']) : 0;
lib/results/resultsByStatus.php:	$args->user = $_SESSION['currentUser'];
lib/results/resultsByStatus.php:    $guiObj->without_bugs_counter = 0; 
lib/results/resultsByStatus.php:    $guiObj->dataSet = null;
lib/results/resultsByStatus.php:    $guiObj->title = null;
lib/results/resultsByStatus.php:    $guiObj->type = $argsObj->type;
lib/results/resultsByStatus.php:    $guiObj->warning_msg = '';
lib/results/resultsByStatus.php:        if($argsObj->type == $statusCode[$verbose_status])
lib/results/resultsByStatus.php:            $guiObj->title = lang_get('list_of_' . $verbose_status);
lib/results/resultsByStatus.php:    if(is_null($guiObj->title))
lib/results/resultsByStatus.php:	return $user->hasRight($db,'testplan_metrics');
lib/results/resultsByStatus.php:	$cfg->cc = ''; 
lib/results/resultsByStatus.php:	$cfg->subject = $guiObj->title . ' : ' . $labels['testproject'] . ' : ' . $guiObj->tproject_name . 
lib/results/resultsByStatus.php:	                ' : ' . $labels['testplan'] . ' : ' . $guiObj->tplan_name;
lib/results/resultsByStatus.php: * Builds ext-js rich table to display matrix results
lib/results/resultsByStatus.php:		$table_id = 'tl_'.$args->tproject_id.'_table_results_by_';
lib/results/resultsByStatus.php:		$matrix->setSortByColumnName($sort_name);
lib/results/resultsByStatus.php:		$matrix->setGroupByColumnName(lang_get('th_build'));
lib/results/resultsByStatus.php:		$matrix->addCustomBehaviour('text', array('render' => 'columnWrap'));
lib/results/resultsByStatus.php:		$matrix->showToolbar = true;
lib/results/resultsByStatus.php:		$matrix->toolbarExpandCollapseGroupsButton = true;
lib/results/resultsByStatus.php:		$matrix->toolbarShowAllColumnsButton = true;
lib/results/resultsReqs.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/results/resultsReqs.php: * @modified $Date: 2010/08/26 07:27:47 $ by $Author: mx-julian $
lib/results/resultsReqs.php: * 20100823 - Julian - table now uses a unique table id per test project
lib/results/resultsReqs.php: * 20100820 - asimon - BUGID 3439: little refactorizations
lib/results/resultsReqs.php: * 20100819 - asimon - BUGIDs 3261, 3439, 3488, 3569, 3299, 3259, 3687: 
lib/results/resultsReqs.php: * 20090506 - franciscom - requirements refactoring
lib/results/resultsReqs.php: * 20090402 - amitkhullar - added TC version while displaying the Req -> TC Mapping 
lib/results/resultsReqs.php: * 20090111 - franciscom - BUGID 1967 + improvements
lib/results/resultsReqs.php: * 20060104 - fm - BUGID 0000311: Requirements based Report shows errors
lib/results/resultsReqs.php:$coverage_algorithm = $req_cfg->coverageStatusAlgorithm;
lib/results/resultsReqs.php:$coverage_enabled = $req_cfg->expected_coverage_management;
lib/results/resultsReqs.php:$external_req_mgmt = $req_cfg->external_req_management;
lib/results/resultsReqs.php:$req_type_labels = init_labels($req_cfg->type_labels);
lib/results/resultsReqs.php:$req_spec_type_labels = init_labels($req_spec_cfg->type_labels);
lib/results/resultsReqs.php:$status_labels = init_labels($req_cfg->status_labels);
lib/results/resultsReqs.php:$req_ids = $tproject_mgr->get_all_requirement_ids($args->tproject_id);
lib/results/resultsReqs.php:		$req = $req_mgr->get_by_id($id, requirement_mgr::LATEST_VERSION);
lib/results/resultsReqs.php:		if (!$args->show_only_finished || $req_info['status'] == TL_REQ_STATUS_FINISH) {
lib/results/resultsReqs.php:			$linked_tcs = (array) $req_mgr->get_coverage($id);
lib/results/resultsReqs.php:				$spec_info = $req_spec_mgr->get_by_id($spec_id);
lib/results/resultsReqs.php:		$gui->warning_msg = lang_get($no_finished_reqs_msg_key);
lib/results/resultsReqs.php:	$gui->warning_msg = lang_get($no_srs_msg_key);
lib/results/resultsReqs.php:		$testcases = $tplan_mgr->get_linked_tcversions($args->tplan_id, $filters, $options);
lib/results/resultsReqs.php:	if (!$args->show_only_finished) {
lib/results/resultsReqs.php:			$path = $req_mgr->tree_mgr->get_path($req_info['srs_id']);
lib/results/resultsReqs.php:			$linked_title = '<!-- ' . $title . ' -->' . 
lib/results/resultsReqs.php:	    	$version_str = "<!-- $padded_version_num -->$version_num";
lib/results/resultsReqs.php:					$coverage_string = "<!-- -1 -->" . lang_get('not_aplicable') . " ($current/0)";
lib/results/resultsReqs.php:			if (!$args->show_only_finished) {
lib/results/resultsReqs.php:	$table_id = 'tl_'.$args->tproject_id.'_table_results_reqs';
lib/results/resultsReqs.php:	$matrix->title = $gui->pageTitle;
lib/results/resultsReqs.php:	$matrix->setGroupByColumnName(lang_get('req_spec_short'));
lib/results/resultsReqs.php:	$matrix->setSortByColumnName(lang_get('progress'));
lib/results/resultsReqs.php:	$matrix->sortDirection = 'DESC';
lib/results/resultsReqs.php:	$matrix->addCustomBehaviour('text', array('render' => 'columnWrap'));
lib/results/resultsReqs.php:	$matrix->toolbarShowAllColumnsButton = true;
lib/results/resultsReqs.php:	$matrix->showGroupItemsCount = false;
lib/results/resultsReqs.php:	$gui->tableSet = array($matrix);
lib/results/resultsReqs.php:$smarty->assign('gui',$gui);
lib/results/resultsReqs.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/results/resultsReqs.php:	$string = "<!-- {$padded_percentage} --> {$percentage}% ";
lib/results/resultsReqs.php:	$args->show_all = isset($_REQUEST['show_all']) ? 1 : 0;
lib/results/resultsReqs.php:	$args->show_only_finished = $_SESSION['show_only_finished'] = $selection;
lib/results/resultsReqs.php:	$args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/results/resultsReqs.php:	$args->tproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : null;
lib/results/resultsReqs.php:	$args->tplan_id = intval($_SESSION['resultsNavigator_testplanID']);
lib/results/resultsReqs.php:	$args->format = $_SESSION['resultsNavigator_format'];
lib/results/resultsReqs.php:	$gui->pageTitle = lang_get('title_result_req_testplan');
lib/results/resultsReqs.php:	$gui->warning_msg = '';
lib/results/resultsReqs.php:	$gui->tproject_name = $argsObj->tproject_name;
lib/results/resultsReqs.php:	$gui->show_only_finished = $argsObj->show_only_finished;
lib/results/resultsReqs.php:	$gui->tableSet = null;
lib/results/resultsReqs.php:	return $user->hasRight($db,'testplan_metrics');
lib/results/resultsReqs.php://$gui->tproject_name = $args->tproject_name;
lib/results/resultsReqs.php://$gui->allow_edit_tc = (has_rights($db,"mgt_modify_tc") == 'yes') ? 1 : 0;
lib/results/resultsReqs.php://$gui->coverage = null;
lib/results/resultsReqs.php://$gui->metrics =  null;
lib/results/resultsReqs.php://$gui->coverageKeys = config_get('req_cfg')->coverageStatusAlgorithm['displayOrder'];
lib/results/resultsReqs.php://$tcasePrefix = $tproject_mgr->getTestCasePrefix($args->tproject_id);
lib/results/resultsReqs.php://$gui->prefixStr = $tcasePrefix . config_get('testcase_cfg')->glue_character;
lib/results/resultsReqs.php://$gui->pieceSep = config_get('gui_title_separator_1');
lib/results/resultsReqs.php://// $gui->reqSpecSet = $tproject_mgr->getOptionReqSpec($args->tproject_id);
lib/results/resultsReqs.php://$gui->reqSpecSet = $tproject_mgr->genComboReqSpec($args->tproject_id);
lib/results/resultsReqs.php://$gui->reqSpecSet = ($reqSpecQty = count($gui->reqSpecSet)) > 0 ? $gui->reqSpecSet : null;
lib/results/resultsReqs.php://if($reqSpecQty > 0 && !$args->req_spec_id)
lib/results/resultsReqs.php://	reset($gui->reqSpecSet);
lib/results/resultsReqs.php://	$args->req_spec_id = key($gui->reqSpecSet);
lib/results/resultsReqs.php://	tLog('Set a first available SRS ID: ' . $args->req_spec_id);
lib/results/resultsReqs.php://$tplanInfo = $tplan_mgr->get_by_id($args->tplan_id);
lib/results/resultsReqs.php://$gui->tplan_name = $tplanInfo["name"];
lib/results/resultsReqs.php://$gui->withoutTestCase = '';
lib/results/resultsReqs.php://$gui->req_spec_id = null;
lib/results/resultsReqs.php://$gui->reqSpecName = '';
lib/results/resultsReqs.php://if(!is_null($args->req_spec_id))
lib/results/resultsReqs.php://	$gui->req_spec_id = $args->req_spec_id;
lib/results/resultsReqs.php://	$gui->reqSpecName = $gui->reqSpecSet[$gui->req_spec_id];
lib/results/resultsReqs.php://    // 20100309 - What about platforms ? franciscom 
lib/results/resultsReqs.php://	$tcs = $tplan_mgr->get_linked_tcversions($args->tplan_id,$opt);
lib/results/resultsReqs.php://	$execMap = getLastExecutions($db,$tcs,$args->tplan_id);
lib/results/resultsReqs.php://    // 20090506 - franciscom - Requirements Refactoring
lib/results/resultsReqs.php://	       " WHERE REQV.status = '" . TL_REQ_STATUS_VALID . "' AND srs_id = {$args->req_spec_id}" .
lib/results/resultsReqs.php://	$reqs = $db->fetchRowsIntoMap($sql,'req_id',database::CUMULATIVE);
lib/results/resultsReqs.php://	$gui->metrics = $req_spec_mgr->get_metrics($args->req_spec_id);
lib/results/resultsReqs.php://	$gui->coverage = $coverage['byStatus'];
lib/results/resultsReqs.php://	$gui->withoutTestCase = $coverage['withoutTestCase'];
lib/results/resultsReqs.php://	$gui->metrics['coveredByTestPlan'] = sizeof($coverage['withTestCase']);
lib/results/resultsReqs.php://	$gui->metrics['uncoveredByTestPlan'] = $gui->metrics['expectedTotal'] - $gui->metrics['coveredByTestPlan'] - 
lib/results/resultsReqs.php://	                                       $gui->metrics['notTestable'];
lib/results/resultsReqs.php://$smarty->assign('gui',$gui);
lib/results/resultsReqs.php://$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/results/resultsReqs.php://	$args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/results/resultsReqs.php://    $args->tproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : null;
lib/results/resultsReqs.php://	$args->tplan_id = intval($_SESSION['resultsNavigator_testplanID']);
lib/results/resultsReqs.php://	$args->format = $_SESSION['resultsNavigator_format'];
lib/results/resultsReqs.php://	return $user->hasRight($db,'testplan_metrics');
lib/results/testCasesWithoutTester.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/results/testCasesWithoutTester.php: * @modified $Date: 2010/08/31 09:46:45 $ by $Author: mx-julian $
lib/results/testCasesWithoutTester.php: * @author Francisco Mancardi - francisco.mancardi@gmail.com
lib/results/testCasesWithoutTester.php: * 20100830 - Julian - Added test case summary column
lib/results/testCasesWithoutTester.php: * 20100830 - franciscom - refactoring
lib/results/testCasesWithoutTester.php: * 20100830 - Julian - BUGID 3723 - filter shown test cases by not run status
lib/results/testCasesWithoutTester.php: * 20100825 - eloff - BUGID 3712 - show only platform if available
lib/results/testCasesWithoutTester.php: * 20100823 - Julian - added unique table id, default sorting and grouping
lib/results/testCasesWithoutTester.php: * 20100823 - eloff - Improve report with ext table and information on platforms and prio
lib/results/testCasesWithoutTester.php:$gui->pageTitle = lang_get('caption_testCasesWithoutTester');
lib/results/testCasesWithoutTester.php:$gui->warning_msg = '';
lib/results/testCasesWithoutTester.php:$gui->tproject_name = $args->tproject_name;
lib/results/testCasesWithoutTester.php:$gui->tplan_name = $args->tplan_name;
lib/results/testCasesWithoutTester.php:if($tplan_mgr->count_testcases($args->tplan_id) > 0)
lib/results/testCasesWithoutTester.php:	// BUGID 3723 - filter test cases by exec_status => not run
lib/results/testCasesWithoutTester.php:	$testCaseSet = $tplan_mgr->get_linked_tcversions($args->tplan_id,$filters, $options);
lib/results/testCasesWithoutTester.php:	if(($gui->row_qty = count($testCaseSet)) > 0)
lib/results/testCasesWithoutTester.php:		$gui->pageTitle .= " - " . lang_get('match_count') . ":" . $gui->row_qty;
lib/results/testCasesWithoutTester.php:		$prefix = $tproject_mgr->getTestCasePrefix($args->tproject_id);
lib/results/testCasesWithoutTester.php:		$path_info = $tree_mgr->get_full_path_verbose($tcase_set);
lib/results/testCasesWithoutTester.php:			if ($args->show_platforms)
lib/results/testCasesWithoutTester.php:			if($_SESSION['testprojectOptions']->testPriorityEnabled)
lib/results/testCasesWithoutTester.php:				$row[] = $tplan_mgr->urgencyImportanceToPriorityLevel($item['priority']);
lib/results/testCasesWithoutTester.php:		$gui->tableSet[] = buildTable($data, $args->tproject_id, $args->show_platforms,
lib/results/testCasesWithoutTester.php:									  $_SESSION['testprojectOptions']->testPriorityEnabled);
lib/results/testCasesWithoutTester.php:$gui->warning_msg = lang_get($msg_key);
lib/results/testCasesWithoutTester.php:$smarty->assign('gui',$gui);
lib/results/testCasesWithoutTester.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/results/testCasesWithoutTester.php:	$matrix->setGroupByColumnName($labels['testsuite']);
lib/results/testCasesWithoutTester.php:	$matrix->setSortByColumnName($labels['testcase']);
lib/results/testCasesWithoutTester.php:	$matrix->addCustomBehaviour('text', array('render' => 'columnWrap'));
lib/results/testCasesWithoutTester.php:		$matrix->addCustomBehaviour('priority', array('render' => 'priorityRenderer'));
lib/results/testCasesWithoutTester.php:		$matrix->setSortByColumnName($labels['priority']);
lib/results/testCasesWithoutTester.php:    $args->show_platforms = false;
lib/results/testCasesWithoutTester.php:    $args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/results/testCasesWithoutTester.php:    $args->tproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : '';
lib/results/testCasesWithoutTester.php:    $args->tplan_name = '';
lib/results/testCasesWithoutTester.php:    if(!$args->tplan_id)
lib/results/testCasesWithoutTester.php:        $args->tplan_id = isset($_SESSION['testplanID']) ? $_SESSION['testplanID'] : 0;
lib/results/testCasesWithoutTester.php:    if($args->tplan_id > 0)
lib/results/testCasesWithoutTester.php:		$tplan_info = $tplan_mgr->get_by_id($args->tplan_id);
lib/results/testCasesWithoutTester.php:		$args->tplan_name = $tplan_info['name'];  
lib/results/testCasesWithoutTester.php:		$args->show_platforms = $tplan_mgr->hasLinkedPlatforms($args->tplan_id);
lib/results/testCasesWithoutTester.php:	return $user->hasRight($db,'testplan_metrics');
lib/results/resultsNavigator.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/results/resultsNavigator.php: *  20100616 - eloff - BUGID 3255 - Fix bug interface check
lib/results/resultsNavigator.php: *  20100410 - franciscom - BUGID 3370
lib/results/resultsNavigator.php: *  20071109,11 - havlatm - move data to config + refactorization;
lib/results/resultsNavigator.php: *  20070930 - franciscom -
lib/results/resultsNavigator.php: *  20070916 - franciscom - added logic to choose test plan
lib/results/resultsNavigator.php: *  20070826 - franciscom - disable resultsImport
lib/results/resultsNavigator.php:$gui->workframe = $_SESSION['basehref'] . "lib/general/staticPage.php?key=showMetrics";
lib/results/resultsNavigator.php:$gui->do_report = array('status_ok' => 1, 'msg' => '');
lib/results/resultsNavigator.php:$gui->tplan_id = $args->tplan_id;
lib/results/resultsNavigator.php:$gui->checked_show_inactive_tplans = $args->checked_show_inactive_tplans;
lib/results/resultsNavigator.php:$reports_mgr = new tlReports($db, $gui->tplan_id);
lib/results/resultsNavigator.php:// -----------------------------------------------------------------------------
lib/results/resultsNavigator.php:$tc4tp_count = $reports_mgr->get_count_testcase4testplan();
lib/results/resultsNavigator.php:   $gui->do_report['status_ok'] = 0;
lib/results/resultsNavigator.php:   $gui->do_report['msg'] = lang_get('report_tplan_has_no_tcases');       
lib/results/resultsNavigator.php:$build_count = $reports_mgr->get_count_builds();
lib/results/resultsNavigator.php:   $gui->do_report['status_ok'] = 0;
lib/results/resultsNavigator.php:   $gui->do_report['msg'] = lang_get('report_tplan_has_no_build');       
lib/results/resultsNavigator.php:// -----------------------------------------------------------------------------
lib/results/resultsNavigator.php:$gui->menuItems = array();
lib/results/resultsNavigator.php:$gui->tplans = array();
lib/results/resultsNavigator.php:if($gui->do_report['status_ok'])
lib/results/resultsNavigator.php:	$gui->menuItems = $reports_mgr->get_list_reports($btsEnabled,$args->optReqs, 
lib/results/resultsNavigator.php:	                                                 $tlCfg->reports_formats[$args->format]);
lib/results/resultsNavigator.php:$filters = array('plan_status' => $args->show_only_active_tplans ? 1 : null);
lib/results/resultsNavigator.php:$gui->tplans = $tproject_mgr->get_all_testplans($args->tproject_id,$filters,$options);
lib/results/resultsNavigator.php:$smarty->assign('gui', $gui);
lib/results/resultsNavigator.php:$smarty->assign('arrReportTypes', localize_array($tlCfg->reports_formats));
lib/results/resultsNavigator.php:$smarty->assign('selectedReportType', $args->format);
lib/results/resultsNavigator.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/results/resultsNavigator.php:	if (is_null($args->format))
lib/results/resultsNavigator.php:		$args->format = sizeof($reports_formats) ? key($reports_formats) : null;
lib/results/resultsNavigator.php:	if (is_null($args->tplan_id))
lib/results/resultsNavigator.php:		$args->tplan_id = $_SESSION['testplanID'];
lib/results/resultsNavigator.php:	$_SESSION['resultsNavigator_testplanID'] = $args->tplan_id;
lib/results/resultsNavigator.php:	$_SESSION['resultsNavigator_format'] = $args->format;
lib/results/resultsNavigator.php:	$args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/results/resultsNavigator.php:   	$args->userID = $_SESSION['userID'];
lib/results/resultsNavigator.php:    $args->optReqs = $_SESSION['testprojectOptions']->requirementsEnabled;
lib/results/resultsNavigator.php:    $args->checked_show_inactive_tplans = $args->show_inactive_tplans ? 'checked="checked"' : 0;
lib/results/resultsNavigator.php:    $args->show_only_active_tplans = !$args->show_inactive_tplans;
lib/results/resultsNavigator.php:	return $user->hasRight($db,'testplan_metrics');
lib/results/keywordBarChart.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/results/keywordBarChart.php: * - PHP autoload feature is used to load classes on demand
lib/results/keywordBarChart.php: * rev: 20081116 - franciscom - refactored to display X axis ordered (alphabetical).
lib/results/keywordBarChart.php: *      20081113 - franciscom - BUGID 1848
lib/results/keywordBarChart.php:$cfg->chartTitle = lang_get('results_by_keyword'); 
lib/results/keywordBarChart.php:$cfg->XSize = 650;
lib/results/keywordBarChart.php:$cfg->YSize = 250;
lib/results/keywordBarChart.php:$cfg->scale = new stdClass();
lib/results/keywordBarChart.php:$cfg->scale->legendXAngle = 25;
lib/results/keywordBarChart.php:	$obj->canDraw = !is_null($dataSet);
lib/results/keywordBarChart.php:	if($obj->canDraw)
lib/results/keywordBarChart.php:	$obj->xAxis = new stdClass();
lib/results/keywordBarChart.php:	$obj->xAxis->values = $items;
lib/results/keywordBarChart.php:	$obj->xAxis->serieName = 'Serie8';
lib/results/keywordBarChart.php:	$obj->series_color = null;
lib/results/keywordBarChart.php:	$obj->scale = new stdClass();
lib/results/keywordBarChart.php:	$obj->scale->maxY = 0;
lib/results/keywordBarChart.php:	$obj->scale->minY = 0;
lib/results/keywordBarChart.php:	$obj->scale->divisions = 0;
lib/results/keywordBarChart.php:	    $minPos = count($dataSet)-1;
lib/results/keywordBarChart.php:	    $obj->scale->maxY = 0;
lib/results/keywordBarChart.php:	    $obj->scale->minY = 0;
lib/results/keywordBarChart.php:	        $obj->chart_data[] = $values;
lib/results/keywordBarChart.php:	        $obj->series_label[] = lang_get($resultsCfg['status_label'][$status]);
lib/results/keywordBarChart.php:	        $obj->series_color[] = $resultsCfg['charts']['status_colour'][$status];
lib/results/keywordBarChart.php:	return $user->hasRight($db,'testplan_metrics');
lib/results/resultsMoreBuildsGUI.php:* TestLink Open Source Project - http://testlink.sourceforge.net/
lib/results/resultsMoreBuildsGUI.php:*	20090912 - franciscom - BUGID 2796 - configuration start_time
lib/results/resultsMoreBuildsGUI.php:*	20090122 - franciscom - BUGID 2012 
lib/results/resultsMoreBuildsGUI.php:$smarty->assign('gui', $gui);
lib/results/resultsMoreBuildsGUI.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/results/resultsMoreBuildsGUI.php:  returns: map key -> status code, value -> localized status description
lib/results/resultsMoreBuildsGUI.php:	foreach($reports_cfg->exec_status as $verbose_status => $status_label)
lib/results/resultsMoreBuildsGUI.php:    $gui->str_option_any = $gui_open . lang_get('any') . $gui_close;
lib/results/resultsMoreBuildsGUI.php:    $gui->str_option_none = $gui_open . lang_get('nobody') . $gui_close;
lib/results/resultsMoreBuildsGUI.php:    $gui->tplan_id = $args->tplan_id;
lib/results/resultsMoreBuildsGUI.php:    $gui->tproject_id = $args->tproject_id;
lib/results/resultsMoreBuildsGUI.php:    $tplan_info = $tplan_mgr->get_by_id($gui->tplan_id);
lib/results/resultsMoreBuildsGUI.php:    $gui->tplan_name = $tplan_info['name'];
lib/results/resultsMoreBuildsGUI.php:    $tproject_info = $tproject_mgr->get_by_id($gui->tproject_id);
lib/results/resultsMoreBuildsGUI.php:    $gui->tproject_name = $tproject_info['name'];
lib/results/resultsMoreBuildsGUI.php:    $gui->assigned_users = new stdClass();
lib/results/resultsMoreBuildsGUI.php:    $gui->keywords = new stdClass();
lib/results/resultsMoreBuildsGUI.php:    $gui->builds = new stdClass();
lib/results/resultsMoreBuildsGUI.php:    $gui->testsuites = new stdClass();
lib/results/resultsMoreBuildsGUI.php:    // 20090107 - franciscom
lib/results/resultsMoreBuildsGUI.php:    // $gui->assigned_users->items = getUsersForHtmlOptions($dbHandler, ALL_USERS_FILTER, ADD_BLANK_OPTION);
lib/results/resultsMoreBuildsGUI.php:    // $gui->assigned_users->items = getUsersForHtmlOptions($dbHandler, ALL_USERS_FILTER,
lib/results/resultsMoreBuildsGUI.php:    // 	                                                   array(TL_USER_ANYBODY => $gui->str_option_any,
lib/results/resultsMoreBuildsGUI.php:	  //                                                            TL_USER_NOBODY => $gui->str_option_none) );
lib/results/resultsMoreBuildsGUI.php:    $gui->assigned_users->items = getUsersForHtmlOptions($dbHandler, ALL_USERS_FILTER,
lib/results/resultsMoreBuildsGUI.php:    	                                                   array(TL_USER_ANYBODY => $gui->str_option_any) );
lib/results/resultsMoreBuildsGUI.php:    $gui->assigned_users->qty = count($gui->assigned_users->items);
lib/results/resultsMoreBuildsGUI.php:    // BUGID 2012 - franciscom
lib/results/resultsMoreBuildsGUI.php:    $gui->keywords->items[0]=$gui->str_option_any;
lib/results/resultsMoreBuildsGUI.php:    if(!is_null($tplan_keywords_map=$tplan_mgr->get_keywords_map($gui->tplan_id)) ) 
lib/results/resultsMoreBuildsGUI.php:        $gui->keywords->items += $tplan_keywords_map;
lib/results/resultsMoreBuildsGUI.php:    $gui->builds->items = $tplan_mgr->get_builds($gui->tplan_id,testplan::ACTIVE_BUILDS);
lib/results/resultsMoreBuildsGUI.php:    $gui->testsuites->items = $re->getTopLevelSuites();
lib/results/resultsMoreBuildsGUI.php:    $gui->keywords->qty = count($gui->keywords->items);
lib/results/resultsMoreBuildsGUI.php:    $gui->builds->qty = count($gui->builds->items);
lib/results/resultsMoreBuildsGUI.php:    $gui->testsuites->qty = count($gui->testsuites->items);
lib/results/resultsMoreBuildsGUI.php:    $gui->status_code_label = get_status_for_reports_html_options();
lib/results/resultsMoreBuildsGUI.php:    $gui->report_type = $args->format;
lib/results/resultsMoreBuildsGUI.php:    $startDate = time() - ($reports_cfg->start_date_offset);
lib/results/resultsMoreBuildsGUI.php:    $gui->selected_start_date = $startDate;
lib/results/resultsMoreBuildsGUI.php:    $gui->selected_start_time = $reports_cfg->start_time;
lib/results/resultsMoreBuildsGUI.php:    $gui->selected_end_date = null;
lib/results/resultsMoreBuildsGUI.php:    $gui->selected_end_time = null;
lib/results/resultsMoreBuildsGUI.php:    $args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/results/resultsMoreBuildsGUI.php:    $args->tproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : null;
lib/results/resultsMoreBuildsGUI.php:	return $user->hasRight($db,'testplan_metrics');
lib/results/printDocument.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/results/printDocument.php: *  20100723 - asimon - BUGID 3459 - added platform ID to calls of 
lib/results/printDocument.php: *	20100520 - franciscom - BUGID 3451 - In the "Test reports and Metrics" 
lib/results/printDocument.php: *                                       -> "Test report" the "Last Result" is always "Not Run"
lib/results/printDocument.php: *  20100326 - asimon - BUGID 3067 - refactored to include requirement document printing
lib/results/printDocument.php: *	20090906 - franciscom - added platform contribution
lib/results/printDocument.php: *	20090922 - amkhullar - added a check box to enable/disable display of TC custom fields.
lib/results/printDocument.php: *  20090309 - franciscom - BUGID 2205 - use test case execution while printing test plan
lib/results/printDocument.php: * 	20090213 - havlatm - support for OpenOffice
lib/results/printDocument.php: *	20081207 - franciscom - BUGID 1910 - fixed estimated execution time computation.  
lib/results/printDocument.php:$doc_info->type = $args->doc_type;
lib/results/printDocument.php:$doc_info->content_range = $args->level;
lib/results/printDocument.php:$printingOptions['docType'] = $doc_info->type;
lib/results/printDocument.php:$tree_manager = &$tproject->tree_manager;
lib/results/printDocument.php:$hash_descr_id = $tree_manager->get_available_node_types();
lib/results/printDocument.php:$order_cfg = array("type" =>'spec_order'); // 20090309 - BUGID 2205
lib/results/printDocument.php:switch ($doc_info->type)
lib/results/printDocument.php:		$doc_info->type_name = lang_get('title_test_spec');
lib/results/printDocument.php:		$doc_info->type_name = lang_get('test_plan');
lib/results/printDocument.php:		$order_cfg = array("type" =>'exec_order',"tplan_id" => $args->tplan_id);
lib/results/printDocument.php:		$doc_info->type_name = lang_get('test_report');
lib/results/printDocument.php:		$order_cfg = array("type" =>'exec_order',"tplan_id" => $args->tplan_id);
lib/results/printDocument.php:		$doc_info->type_name = lang_get('req_spec');
lib/results/printDocument.php:switch ($doc_info->type)
lib/results/printDocument.php:$subtree = $tree_manager->get_subtree($args->itemID,$my['filters'],$my['options']);
lib/results/printDocument.php:$tproject_info = $tproject->get_by_id($args->tproject_id);
lib/results/printDocument.php:$doc_info->tproject_name = htmlspecialchars($tproject_info['name']);
lib/results/printDocument.php:$doc_info->tproject_scope = $tproject_info['notes'];
lib/results/printDocument.php:	$doc_info->author = htmlspecialchars($user->getDisplayName());
lib/results/printDocument.php:switch ($doc_info->type)
lib/results/printDocument.php:		switch($doc_info->content_range)
lib/results/printDocument.php:				$doc_info->title = $doc_info->tproject_name;
lib/results/printDocument.php:    	  	    $spec = $spec_mgr->get_by_id($args->itemID);
lib/results/printDocument.php:				$doc_info->title = htmlspecialchars($args->tproject_name . 
lib/results/printDocument.php:    	  	                                        $tlCfg->gui_title_separator_2 . $spec['title']);  	               
lib/results/printDocument.php:    	} // $doc_info->content_range
lib/results/printDocument.php:		switch($doc_info->content_range)
lib/results/printDocument.php:				$doc_info->title = $doc_info->tproject_name;
lib/results/printDocument.php:    	  	    $tInfo = $tsuite->get_by_id($args->itemID);
lib/results/printDocument.php:				$doc_info->title = htmlspecialchars(isset($tInfo['name']) ? $args->tproject_name .
lib/results/printDocument.php:    	  	      	               $tlCfg->gui_title_separator_2.$tInfo['name'] : $args->tproject_name);
lib/results/printDocument.php:    	} // $doc_info->content_range
lib/results/printDocument.php:		    $tplan_info = $tplan_mgr->get_by_id($args->tplan_id);
lib/results/printDocument.php:		    $doc_info->testplan_name = htmlspecialchars($tplan_info['name']);
lib/results/printDocument.php:		    $doc_info->testplan_scope = $tplan_info['notes'];
lib/results/printDocument.php:		    $doc_info->title = $doc_info->testplan_name;
lib/results/printDocument.php:            // 20100112 - franciscom
lib/results/printDocument.php:            $platforms = $tplan_mgr->getPlatforms($args->tplan_id,$getOpt);   
lib/results/printDocument.php:			switch($doc_info->content_range)
lib/results/printDocument.php:    	   	    	  $tp_tcs = $tplan_mgr->get_linked_tcversions($args->tplan_id,$filters);
lib/results/printDocument.php:						$tInfo = $tsuite->get_by_id($args->itemID);
lib/results/printDocument.php:						$children_tsuites = $tree_manager->get_subtree_list($args->itemID,$hash_descr_id['testsuite']);
lib/results/printDocument.php:						$branch_tsuites[]=$args->itemID;
lib/results/printDocument.php:	                	$tp_tcs = $tplan_mgr->get_linked_tcversions($args->tplan_id, $filters); 
lib/results/printDocument.php:						$doc_info->title = htmlspecialchars(isset($tInfo['name']) ? $tInfo['name'] : $doc_info->testplan_name);
lib/results/printDocument.php:			}  // switch($doc_info->content_range)
lib/results/printDocument.php:			$doc_data->statistics = null;                                            
lib/results/printDocument.php:				$timeEstimatedDuration = $tplan_mgr->get_estimated_execution_time($args->tplan_id,$tcase_filter);
lib/results/printDocument.php:		        	$doc_data->statistics['estimated_execution']['minutes'] = $timeEstimatedDuration; 
lib/results/printDocument.php:    		    	$doc_data->statistics['estimated_execution']['tcase_qty'] = count($tp_tcs);
lib/results/printDocument.php:					$doc_data->statistics['real_execution']['minutes'] = 
lib/results/printDocument.php:						$tplan_mgr->get_execution_time($args->tplan_id,$execid_filter);
lib/results/printDocument.php:             		$doc_data->statistics['real_execution']['tcase_qty'] = $executed_qty;
lib/results/printDocument.php:// ----- rendering logic -----
lib/results/printDocument.php:$topText = renderHTMLHeader($doc_info->type.' '.$doc_info->title,$_SESSION['basehref']);
lib/results/printDocument.php:			$tree['name'] = $args->tproject_name;
lib/results/printDocument.php:			$tree['id'] = $args->tproject_id;
lib/results/printDocument.php:			switch ($doc_info->type)
lib/results/printDocument.php:					                                $doc_info->tproject_scope);
lib/results/printDocument.php:					                                         null, 0, 1, $args->user_id,0,$args->tproject_id);
lib/results/printDocument.php:					$docText .= renderSimpleChapter(lang_get('scope'), $doc_info->tproject_scope);
lib/results/printDocument.php:					// 3459 - added platform ID
lib/results/printDocument.php:					$docText .= renderTestSpecTreeForPrinting($db, $tree, $doc_info->content_range,
lib/results/printDocument.php:					            $printingOptions, null, 0, 1, $args->user_id,0,null,$args->tproject_id,$platform_id);
lib/results/printDocument.php:						$docText .= renderSimpleChapter(lang_get('scope'), $doc_info->testplan_scope);
lib/results/printDocument.php:					// 3459 - added platform ID
lib/results/printDocument.php:					$docText .= renderTestPlanForPrinting($db, $tree, $doc_info->content_range, 
lib/results/printDocument.php:					                                      $printingOptions, $tocPrefix, 0, 1, $args->user_id,
lib/results/printDocument.php:					                                      $args->tplan_id, $args->tproject_id, $platform_id);
lib/results/printDocument.php:					if (($doc_info->type == DOC_TEST_REPORT) && ($printingOptions['metrics']))
lib/results/printDocument.php:						$docText .= buildTestPlanMetrics($doc_data->statistics);
lib/results/printDocument.php:if (($args->format == FORMAT_ODT) || ($args->format == FORMAT_MSWORD))
lib/results/printDocument.php:	flushHttpHeader($args->format, $doc_info->type);
lib/results/printDocument.php:	$args->doc_type = $_REQUEST['type'];
lib/results/printDocument.php:	$args->level = isset($_REQUEST['level']) ?  $_REQUEST['level'] : null;
lib/results/printDocument.php:	$args->format = isset($_REQUEST['format']) ? $_REQUEST['format'] : null;
lib/results/printDocument.php:	$args->itemID = isset($_REQUEST['id']) ? intval($_REQUEST['id']) : 0;
lib/results/printDocument.php:	$args->tplan_id = isset($_REQUEST['docTestPlanId']) ? $_REQUEST['docTestPlanId'] : 0;
lib/results/printDocument.php:	$args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/results/printDocument.php:	$args->tproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : 'xxx';
lib/results/printDocument.php:	$args->user_id = isset($_SESSION['userID']) ? intval($_SESSION['userID']) : null;
lib/results/displayMgr.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/results/displayMgr.php: * 	20090213 - havlatm - added flushHttpHeader function instead of particular headers
lib/results/displayMgr.php:	$op->status_ok = true;
lib/results/displayMgr.php:	$op->msg = 'ok';
lib/results/displayMgr.php:	$html_report = $smarty->fetch($template_file);
lib/results/displayMgr.php:		$mailCfg->from = $_SESSION['currentUser']->emailAddress;
lib/results/displayMgr.php:		$mailCfg->to = $mailCfg->from;
lib/results/displayMgr.php:	if($mailCfg->to == "")
lib/results/displayMgr.php:		$op->status_ok = false;
lib/results/displayMgr.php:  		$op->msg = lang_get("error_sendreport_no_email_credentials");
lib/results/displayMgr.php:		$op = email_send( $mailCfg->from, $mailCfg->to, $mailCfg->subject, $html_report, $mailCfg->cc, false,true);
lib/results/displayMgr.php:		if($op->status_ok)
lib/results/displayMgr.php:			$op->msg = sprintf(lang_get('mail_sent_to'), $mailCfg->to);
lib/results/displayMgr.php:		  	$message = $op->status_ok ? '' : lang_get('send_mail_ko');	
lib/results/displayMgr.php:			$smarty->assign('message', $message . ' ' . $op->msg);
lib/results/displayMgr.php:			$smarty->assign('title', $mailCfg->subject);
lib/results/displayMgr.php:	$smarty->display($template_file);
lib/results/displayMgr.php: * @param string $format identifier of document format; value must be in $tlCfg->reports_formats
lib/results/displayMgr.php:	$filename = $_SESSION['testprojectPrefix'] . $kind_acronym . '-' . date('Y-m-d') . '.' . $file_extensions[$format];
lib/results/displayMgr.php:    header("Content-Description: TestLink - Generated Document");
lib/results/displayMgr.php:		header("Content-Disposition: attachment; filename=$filename");
lib/results/displayMgr.php:   	header("Content-type: {$reports_applications[$format]}; name='Testlink_$format'");
lib/results/charts.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/results/charts.php: * @copyright 	2005-2009, TestLink community 
lib/results/charts.php: * 20100716 - eloff - BUGID 3562: include bug tracking if activated
lib/results/charts.php: * 20100221 - franciscom - fixed call to getPlatforms()	
lib/results/charts.php:$gui->tplan_id=$_REQUEST['tplan_id'];
lib/results/charts.php:$tplan_info = $tplan_mgr->get_by_id($gui->tplan_id);
lib/results/charts.php:$tproject_info = $tproject_mgr->get_by_id($tproject_id);
lib/results/charts.php:// $tplan_mgr->getStatusTotalsByPlatform($gui->tplan_id);
lib/results/charts.php:$gui->can_use_charts = checkLibGd();
lib/results/charts.php:$totals = $tplan_mgr->getStatusTotals($gui->tplan_id);
lib/results/charts.php:if($gui->can_use_charts == 'OK')  
lib/results/charts.php:    $gui->tplan_name = $tplan_info['name'];
lib/results/charts.php:    $gui->tproject_name = $tproject_info['name'];
lib/results/charts.php:    $_SESSION['statistics']['getTopLevelSuites'] = $re->getTopLevelSuites();
lib/results/charts.php:    $_SESSION['statistics']['getAggregateMap'] = $re->getAggregateMap();
lib/results/charts.php:    $_SESSION['statistics']['getAggregateOwnerResults'] = $re->getAggregateOwnerResults();
lib/results/charts.php:    $_SESSION['statistics']['getAggregateKeywordResults']= $re->getAggregateKeywordResults();
lib/results/charts.php:    $chartsUrl->overallPieChart = $pathToScripts . "overallPieChart.php?tplan_id={$gui->tplan_id}";
lib/results/charts.php:    $chartsUrl->keywordBarChart = $pathToScripts . "keywordBarChart.php";
lib/results/charts.php:    $chartsUrl->ownerBarChart = $pathToScripts . "ownerBarChart.php";
lib/results/charts.php:    $chartsUrl->topLevelSuitesBarChart = $pathToScripts . "topLevelSuitesBarChart.php";
lib/results/charts.php:    $platformSet = $tplan_mgr->getPlatforms($gui->tplan_id,array('outputFormat' => 'map'));
lib/results/charts.php:    $gui->charts = array(lang_get('overall_metrics') => $chartsUrl->overallPieChart);
lib/results/charts.php:    		$gui->charts[$description] = $pathToScripts . "platformPieChart.php?tplan_id={$gui->tplan_id}&platform_id={$platform_id}";
lib/results/charts.php:    $gui->charts = array_merge( $gui->charts,
lib/results/charts.php:                         array(lang_get('results_by_keyword') => $chartsUrl->keywordBarChart,
lib/results/charts.php:                         lang_get('results_by_tester') => $chartsUrl->ownerBarChart,
lib/results/charts.php:                         lang_get('results_top_level_suites') => $chartsUrl->topLevelSuitesBarChart) );
lib/results/charts.php:$smarty->assign("gui",$gui);
lib/results/charts.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/results/overallPieChart.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/results/overallPieChart.php: * @copyright 	2005-2009, TestLink community
lib/results/overallPieChart.php:$totals = $tplan_mgr->getStatusTotals($args->tplan_id);
lib/results/overallPieChart.php:$DataSet->AddPoint($values,"Serie1");   
lib/results/overallPieChart.php:$DataSet->AddPoint($labels,"Serie8");   
lib/results/overallPieChart.php:$DataSet->AddAllSeries();   
lib/results/overallPieChart.php:$DataSet->SetAbsciseLabelSerie("Serie8");   
lib/results/overallPieChart.php:$pChartCfg->XSize = 400;
lib/results/overallPieChart.php:$pChartCfg->YSize = 400;                    
lib/results/overallPieChart.php:$pChartCfg->centerX = intval($pChartCfg->XSize/2);                    
lib/results/overallPieChart.php:$pChartCfg->centerY = intval($pChartCfg->YSize/2);
lib/results/overallPieChart.php:$pChartCfg->radius = 150;
lib/results/overallPieChart.php:$pChartCfg->legendX = 10;                    
lib/results/overallPieChart.php:$pChartCfg->legendY = 15;
lib/results/overallPieChart.php:$graph->data = $DataSet->GetData();
lib/results/overallPieChart.php:$graph->description = $DataSet->GetDataDescription();
lib/results/overallPieChart.php:$Test = new pChart($pChartCfg->XSize,$pChartCfg->YSize);
lib/results/overallPieChart.php:    $Test->setColorPalette($key,hexdec($rgb[0]),hexdec($rgb[1]),hexdec($rgb[2]));  
lib/results/overallPieChart.php:$Test->setFontProperties(config_get('charts_font_path'),config_get('charts_font_size'));
lib/results/overallPieChart.php:$Test->AntialiasQuality = 0;
lib/results/overallPieChart.php:$Test->drawBasicPieGraph($graph->data,$graph->description,
lib/results/overallPieChart.php:                         $pChartCfg->centerX,$pChartCfg->centerY,$pChartCfg->radius,PIE_PERCENTAGE,255,255,218);   
lib/results/overallPieChart.php:$Test->drawPieLegend($pChartCfg->legendX,$pChartCfg->legendY,$graph->data,$graph->description,250,250,250);                                
lib/results/overallPieChart.php:$Test->Stroke();
lib/results/overallPieChart.php:	return $user->hasRight($db,'testplan_metrics');
lib/results/overallPieChart.php:    $args->tplan_id = $_REQUEST['tplan_id'];
lib/results/overallPieChart.php:    $args->tproject_id = $_SESSION['testprojectID'];
lib/results/resultsImport.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/results/resultsImport.php: * 20100823 - franciscom - BUGID 3543 - added execution_type
lib/results/resultsImport.php: * 20100821 - franciscom - BUGID 3470 - reopened
lib/results/resultsImport.php: * 20100328 - franciscom - BUGID 3470, BUGID 3475
lib/results/resultsImport.php: * 20100328 - franciscom - BUGID 3331 add bug id management
lib/results/resultsImport.php: * 20100214 - franciscom - xml managed using simpleXML
lib/results/resultsImport.php:// 20100821 - franciscom
lib/results/resultsImport.php:// changes on key names (from build_id -> setting_build, and others), broken the code.
lib/results/resultsImport.php:// 		$args->$memberKey=$url_array[$dummyIndex];
lib/results/resultsImport.php:$gui->import_title=lang_get('title_results_import_to');
lib/results/resultsImport.php:$gui->buildID=$args->buildID;
lib/results/resultsImport.php:$gui->platformID=$args->platformID;
lib/results/resultsImport.php:$gui->tplanID=$args->tplanID;
lib/results/resultsImport.php:$gui->file_check=array('status_ok' => 1, 'msg' => 'ok');
lib/results/resultsImport.php:$gui->importTypes=array("XML" => "XML");
lib/results/resultsImport.php:$gui->importLimit = config_get('import_file_max_size_bytes');
lib/results/resultsImport.php:$gui->doImport = ($args->importType != "");
lib/results/resultsImport.php:$gui->testprojectName=$args->testprojectName;
lib/results/resultsImport.php:$dest=TL_TEMP_PATH . session_id()."-results.import";
lib/results/resultsImport.php:if ($args->doUpload)
lib/results/resultsImport.php:		$gui->file_check['status_ok']=1;
lib/results/resultsImport.php:		if($gui->file_check['status_ok'])
lib/results/resultsImport.php:				switch($args->importType)
lib/results/resultsImport.php:					$gui->file_check=$pcheck_fn($dest);
lib/results/resultsImport.php:					if($gui->file_check['status_ok'])
lib/results/resultsImport.php:		$gui->file_check=array('status_ok' => 0, 'msg' => lang_get('please_choose_file_to_import'));
lib/results/resultsImport.php:		$args->importType=null;
lib/results/resultsImport.php:$gui->resultMap=$resultMap;
lib/results/resultsImport.php:$smarty->assign('gui',$gui);  
lib/results/resultsImport.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/results/resultsImport.php:	if($xml->getName() == 'results')
lib/results/resultsImport.php:			if( ($joker = $xml->$xmlkey) )
lib/results/resultsImport.php:				$executionContext->$execkey = (int) $joker['id'];
lib/results/resultsImport.php:		$xmlTCExec = $xml->xpath("//testcase");
lib/results/resultsImport.php: 		20100823 - franciscom - BUGID 3543 - added execution_type          		
lib/results/resultsImport.php:		20100328 - franciscom - BUGID 3331 manage bug id	
lib/results/resultsImport.php:	$adodbObj = $db->get_dbmgr_object();
lib/results/resultsImport.php:    $columnDef['execution_bugs'] = $adodbObj->MetaColumns($tables['execution_bugs']);
lib/results/resultsImport.php:	$user=new tlUser($context->userID);
lib/results/resultsImport.php:  	$user->readFromDB($db);
lib/results/resultsImport.php:	$dummy = $tproject_mgr->get_by_id($context->tprojectID);
lib/results/resultsImport.php:		$checks['msg'][] = sprintf($l19n['tproject_id_not_found'],$context->tprojectID);
lib/results/resultsImport.php:	// --------------------------------------------------------------------	
lib/results/resultsImport.php:			$filters = array('tcase_id' => $tcase_id, 'build_id' => $context->buildID,
lib/results/resultsImport.php:		    			 	 'platform_id' => $context->platformID);
lib/results/resultsImport.php:		    $linked_cases=$tplan_mgr->get_linked_tcversions($context->tplanID,$filters);
lib/results/resultsImport.php:          		$notes=$db->prepare_string(trim($notes));
lib/results/resultsImport.php:          		//       example '2008-09-04', while $tcase_exec["timestamp"] => 2008-09-04
lib/results/resultsImport.php:          		$execution_ts=($tcase_exec['timestamp'] != '') ? "'" . $tcase_exec["timestamp"] . "'": $db->db_now();
lib/results/resultsImport.php:              		$tester_name=$user->login;
lib/results/resultsImport.php:              		$tester_id=$context->userID;
lib/results/resultsImport.php:				// BUGID 3543 - added execution_type          		
lib/results/resultsImport.php:	          	       " VALUES ({$context->buildID}, {$tester_id},'{$result_code}',{$context->tplanID}, ".
lib/results/resultsImport.php:	          	       " {$context->platformID}, {$tcase_exec['execution_type']})";
lib/results/resultsImport.php:	          	$db->exec_query($sql); 
lib/results/resultsImport.php:					$execution_id = $db->insert_id($tables['executions']);
lib/results/resultsImport.php:						$rs = $db->get_recordset($sql); 
lib/results/resultsImport.php:	          				       " VALUES ('" . $db->prepare_string($bug_id) . "', {$execution_id} )";
lib/results/resultsImport.php:	          				$db->exec_query($sql); 
lib/results/resultsImport.php:	// Developer Note - 20100328 - franciscom: 
lib/results/resultsImport.php:  	$execInfo['tcase_name'] = (string) $xmlTCExec->name;
lib/results/resultsImport.php:	$execInfo['result'] = (string) trim($xmlTCExec->result);
lib/results/resultsImport.php:	$execInfo['notes'] = (string) trim($xmlTCExec->notes);
lib/results/resultsImport.php:  	$execInfo['timestamp'] = (string) trim($xmlTCExec->timestamp);
lib/results/resultsImport.php:  	$execInfo['tester'] = (string) trim($xmlTCExec->tester);
lib/results/resultsImport.php:  	$execInfo['execution_type'] = (int) trim($xmlTCExec->execution_type); //BUGID 3543
lib/results/resultsImport.php:	$bugQty = count($xmlTCExec->bug_id);
lib/results/resultsImport.php:	if( ($bugQty = count($xmlTCExec->bug_id)) > 0 )
lib/results/resultsImport.php:		foreach($xmlTCExec->bug_id as $bug)
lib/results/resultsImport.php:		$elementName = $xml->getName();
lib/results/resultsImport.php:  	$args->importType=isset($_REQUEST['importType']) ? $_REQUEST['importType'] : null;
lib/results/resultsImport.php:  	$args->buildID = isset($_REQUEST['buildID']) ? intval($_REQUEST['buildID']) : null;
lib/results/resultsImport.php:  	$args->platformID = isset($_REQUEST['platformID']) ? intval($_REQUEST['platformID']) : null;
lib/results/resultsImport.php:  	$args->tplanID = isset($_REQUEST['tplanID']) ? intval($_REQUEST['tplanID']) : null;
lib/results/resultsImport.php:  	$args->tplanID = !is_null($args->tplanID) ? $args->tplanID : $_SESSION['testplanID'];
lib/results/resultsImport.php:  	$args->tprojectID = isset($_REQUEST['tprojectID']) ? intval($_REQUEST['tprojectID']) : null;
lib/results/resultsImport.php:  	if( is_null($args->tprojectID))
lib/results/resultsImport.php:  		$args->tprojectID = $_SESSION['testprojectID'];
lib/results/resultsImport.php:		$args->testprojectName = $_SESSION['testprojectName'];
lib/results/resultsImport.php:  		$dummy = $tproject_mgr->get_by_id($args->tprojectID);
lib/results/resultsImport.php:  		$args->testprojectName = $dummy['name'];
lib/results/resultsImport.php:  	$args->doUpload=isset($_REQUEST['UploadFile']) ? 1 : 0;
lib/results/resultsImport.php:  	$args->userID=$_SESSION['userID'];
lib/results/resultsImport.php:           status_ok -> value=true / false
lib/results/resultsImport.php:           msg -> array with localized messages  
lib/results/resultsImport.php:        $checks['tcase_id']=$tcase_mgr->getInternalID($tcase_external_id,$tcaseCfg->glue_character);
lib/results/resultsImport.php:		       $db->prepare_string($execValues['tester']) . "'";
lib/results/resultsImport.php:		$userInfo=$db->get_recordset($sql);
lib/results/resultsImport.php:		if( ($field_len = strlen($execValues['bug_id'])) > $columnDef['bug_id']->max_length )
lib/results/resultsImport.php:		    $checks['msg'][]=sprintf(lang_get('bug_id_invalid_len'),$field_len,$columnDef['bug_id']->max_length); 
lib/results/resultsImport.php:		$execDomain = $tcase_mgr->get_execution_types();
lib/results/charts.inc.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/results/charts.inc.php: * @author	Francisco Mancardi - francisco.mancardi@gmail.com
lib/results/charts.inc.php: * rev: 20081113 - franciscom - BUGID 1848
lib/results/charts.inc.php:    $chartCfg->XSize=$info->canDraw ? $cfg->XSize : 600;
lib/results/charts.inc.php:    $chartCfg->YSize=$info->canDraw ? $cfg->YSize : 50;                    
lib/results/charts.inc.php:    $chartCfg->border = new stdClass();
lib/results/charts.inc.php:    $chartCfg->border->width = 1;
lib/results/charts.inc.php:    $chartCfg->border->color = array('R' => 0, 'G' => 0, 'B' => 0);
lib/results/charts.inc.php:    $chartCfg->graphArea = new stdClass();
lib/results/charts.inc.php:    $chartCfg->graphArea->color=array('R' => 213, 'G' => 217, 'B' => 221);
lib/results/charts.inc.php:    $chartCfg->graphArea->beginX = 40; 
lib/results/charts.inc.php:    $chartCfg->graphArea->beginY = 40;
lib/results/charts.inc.php:    $chartCfg->graphArea->endX = $chartCfg->XSize - $chartCfg->graphArea->beginX;
lib/results/charts.inc.php:    $chartCfg->graphArea->endY = $chartCfg->YSize - $chartCfg->graphArea->beginY;
lib/results/charts.inc.php:    $chartCfg->scale=new stdClass();
lib/results/charts.inc.php:    $chartCfg->scale->mode=SCALE_ADDALL;
lib/results/charts.inc.php:    $chartCfg->scale->color = array('R' => 0, 'G' => 0, 'B' => 0);
lib/results/charts.inc.php:    $chartCfg->scale->drawTicks = TRUE;
lib/results/charts.inc.php:    $chartCfg->scale->angle=$cfg->scale->legendXAngle;
lib/results/charts.inc.php:    $chartCfg->scale->decimals=1;
lib/results/charts.inc.php:    $chartCfg->scale->withMargin=TRUE;
lib/results/charts.inc.php:    $chartCfg->legend=new stdClass();
lib/results/charts.inc.php:    $chartCfg->legend->X=$chartCfg->XSize-80;                    
lib/results/charts.inc.php:    $chartCfg->legend->Y=15;
lib/results/charts.inc.php:    $chartCfg->legend->color=array('R' => 236, 'G' => 238, 'B' => 240);
lib/results/charts.inc.php:    $chartCfg->title=new stdClass();
lib/results/charts.inc.php:    $chartCfg->title->value=$cfg->chartTitle; 
lib/results/charts.inc.php:    $chartCfg->title->X=2*$chartCfg->graphArea->beginX;                    
lib/results/charts.inc.php:    $chartCfg->title->Y=$chartCfg->legend->Y;
lib/results/charts.inc.php:    $chartCfg->title->color=array('R' => 0, 'G' => 0, 'B' => 255);
lib/results/charts.inc.php:    $Test = new pChart($chartCfg->XSize,$chartCfg->YSize);
lib/results/charts.inc.php:    $Test->drawBackground($backgndColor['R'],$backgndColor['G'],$backgndColor['B']);
lib/results/charts.inc.php:    $Test->drawGraphArea($chartCfg->graphArea->color['R'],
lib/results/charts.inc.php:                         $chartCfg->graphArea->color['G'],$chartCfg->graphArea->color['B']);
lib/results/charts.inc.php:    $Test->setGraphArea($chartCfg->graphArea->beginX,$chartCfg->graphArea->beginY,
lib/results/charts.inc.php:                        $chartCfg->graphArea->endX,$chartCfg->graphArea->endY);
lib/results/charts.inc.php:    $Test->setFontProperties(config_get('charts_font_path'),config_get('charts_font_size'));
lib/results/charts.inc.php:    if($info->canDraw)
lib/results/charts.inc.php:        foreach($info->chart_data as $key => $values)
lib/results/charts.inc.php:            $DataSet->AddPoint($values,"Serie{$id}");  
lib/results/charts.inc.php:            $DataSet->SetSerieName($info->series_label[$key],"Serie{$id}");
lib/results/charts.inc.php:        $DataSet->AddPoint($info->xAxis->values,$info->xAxis->serieName);
lib/results/charts.inc.php:        $DataSet->AddAllSeries();
lib/results/charts.inc.php:        $DataSet->RemoveSerie($info->xAxis->serieName);
lib/results/charts.inc.php:        $DataSet->SetAbsciseLabelSerie($info->xAxis->serieName);
lib/results/charts.inc.php:        $chartData=$DataSet->GetData();
lib/results/charts.inc.php:        $chartLegend=$DataSet->GetDataDescription();
lib/results/charts.inc.php:        foreach( $info->series_color as $key => $hexrgb)
lib/results/charts.inc.php:            $Test->setColorPalette($key,hexdec($rgb[0]),hexdec($rgb[1]),hexdec($rgb[2]));  
lib/results/charts.inc.php:        // $Test->setFixedScale($info->scale->minY,$info->scale->maxY,$info->scale->divisions);
lib/results/charts.inc.php:        $Test->drawScale($chartData,$chartLegend,$chartCfg->scale->mode,
lib/results/charts.inc.php:                         $chartCfg->scale->color['R'],$chartCfg->scale->color['G'],$chartCfg->scale->color['B'],
lib/results/charts.inc.php:                         $chartCfg->scale->drawTicks,$chartCfg->scale->angle,$chartCfg->scale->decimals,
lib/results/charts.inc.php:                         $chartCfg->scale->withMargin);
lib/results/charts.inc.php:        $Test->drawStackedBarGraph($chartData,$chartLegend,70);
lib/results/charts.inc.php:        $Test->setFontProperties(config_get('charts_font_path'),config_get('charts_font_size'));
lib/results/charts.inc.php:        $Test->drawLegend($chartCfg->legend->X,$chartCfg->legend->Y,$chartLegend,
lib/results/charts.inc.php:                          $chartCfg->legend->color['R'],$chartCfg->legend->color['G'],
lib/results/charts.inc.php:                          $chartCfg->legend->color['B']);
lib/results/charts.inc.php:        $Test->addBorder($chartCfg->border->width,
lib/results/charts.inc.php:                         $chartCfg->border->color['R'],$chartCfg->border->color['G'],
lib/results/charts.inc.php:                         $chartCfg->border->color['B']);
lib/results/charts.inc.php:        $chartCfg->title->value .= '/' . lang_get('no_data_available'); 
lib/results/charts.inc.php:    $Test->drawTitle($chartCfg->title->X,$chartCfg->title->Y,$chartCfg->title->value,
lib/results/charts.inc.php:                     $chartCfg->title->color['R'],$chartCfg->title->color['G'],$chartCfg->title->color['B']);
lib/results/charts.inc.php:    $Test->Stroke();
lib/results/resultsMoreBuilds.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/results/resultsMoreBuilds.php: *	20091027 - franciscom - BUGID 2500
lib/results/resultsMoreBuilds.php: *	20090409 - amitkhullar- code refactor for results object
lib/results/resultsMoreBuilds.php: *	20090327 - amitkhullar- BUGID 2156 - added option to get latest/all results in Query metrics report.
lib/results/resultsMoreBuilds.php: *	20090122 - franciscom - BUGID 2012 
lib/results/resultsMoreBuilds.php: *	20080524 - franciscom - BUGID 1430
lib/results/resultsMoreBuilds.php: *	20070901 - franciscom - refactoring
lib/results/resultsMoreBuilds.php:$smarty->assign('gui', $gui);
lib/results/resultsMoreBuilds.php:$smarty->assign('report_type', $args->report_type);
lib/results/resultsMoreBuilds.php:displayReport($templateCfg->template_dir . $templateCfg->default_template, $smarty, $args->report_type,$mailCfg);
lib/results/resultsMoreBuilds.php:    $date_range->start = new stdClass();    
lib/results/resultsMoreBuilds.php:    $date_range->end = new stdClass();
lib/results/resultsMoreBuilds.php:    $date_range->start->day = isset($hash['start_Day']) ? $hash['start_Day'] : "01";
lib/results/resultsMoreBuilds.php:    $date_range->start->month = isset($hash['start_Month']) ? $hash['start_Month'] : "01";
lib/results/resultsMoreBuilds.php:    $date_range->start->year = isset($hash['start_Year']) ? $hash['start_Year'] : "2000";
lib/results/resultsMoreBuilds.php:    $date_range->start->hour = isset($hash['start_Hour']) ? $hash['start_Hour'] : "00";
lib/results/resultsMoreBuilds.php:    $mm=sprintf("%02d",$date_range->start->month);
lib/results/resultsMoreBuilds.php:    $dd=sprintf("%02d",$date_range->start->day);
lib/results/resultsMoreBuilds.php:    $date_range->start->date = $date_range->start->year . "-" . $mm . "-" . $dd;
lib/results/resultsMoreBuilds.php:    $date_range->start->time = $date_range->start->date . " " . $date_range->start->hour . ":00:00";
lib/results/resultsMoreBuilds.php:    $date_range->end->day = isset($hash['end_Day']) ? $hash['end_Day'] : "01";
lib/results/resultsMoreBuilds.php:    $date_range->end->month = isset($hash['end_Month']) ? $hash['end_Month'] : "01";
lib/results/resultsMoreBuilds.php:    $date_range->end->year = isset($hash['end_Year']) ? $hash['end_Year'] : "2050";
lib/results/resultsMoreBuilds.php:    $date_range->end->hour = isset($hash['end_Hour']) ? $hash['end_Hour'] : "00";
lib/results/resultsMoreBuilds.php:    $mm=sprintf("%02d",$date_range->end->month);
lib/results/resultsMoreBuilds.php:    $dd=sprintf("%02d",$date_range->end->day);
lib/results/resultsMoreBuilds.php:    $date_range->end->date = $date_range->end->year . "-" . $mm . "-" . $dd;
lib/results/resultsMoreBuilds.php:    $date_range->end->time = $date_range->end->date . " " . $date_range->end->hour . ":59:59";
lib/results/resultsMoreBuilds.php:    $gui->platformSet = $tplan_mgr->getPlatforms($argsObj->tplan_id,$getOpt);
lib/results/resultsMoreBuilds.php:    $gui->title = lang_get('query_metrics_report');
lib/results/resultsMoreBuilds.php:    $gui->showPlatforms=true;
lib/results/resultsMoreBuilds.php:	if( is_null($gui->platformSet) )
lib/results/resultsMoreBuilds.php:		$gui->platformSet = array('');
lib/results/resultsMoreBuilds.php:		$gui->showPlatforms=false;
lib/results/resultsMoreBuilds.php:    $gui->resultsCfg = config_get('results');
lib/results/resultsMoreBuilds.php:    $gui->startTime = $date_range->start->time;
lib/results/resultsMoreBuilds.php:    $gui->endTime = $date_range->end->time;
lib/results/resultsMoreBuilds.php:    $gui->str_option_any = $gui_open . lang_get('any') . $gui_close;
lib/results/resultsMoreBuilds.php:    $gui->str_option_none = $gui_open . lang_get('nobody') . $gui_close;
lib/results/resultsMoreBuilds.php:    $gui->search_notes_string = $argsObj->search_notes_string;
lib/results/resultsMoreBuilds.php:    $gui->tplan_id = $argsObj->tplan_id;
lib/results/resultsMoreBuilds.php:    $gui->tproject_id = $argsObj->tproject_id;
lib/results/resultsMoreBuilds.php:    $tplan_info = $tplan_mgr->get_by_id($gui->tplan_id);
lib/results/resultsMoreBuilds.php:    $tproject_info = $tproject_mgr->get_by_id($gui->tproject_id);
lib/results/resultsMoreBuilds.php:    $gui->tplan_name = $tplan_info['name'];
lib/results/resultsMoreBuilds.php:    $gui->tproject_name = $tproject_info['name'];
lib/results/resultsMoreBuilds.php:    $tsuites_qty = sizeOf($argsObj->testsuitesSelected);
lib/results/resultsMoreBuilds.php:    	list($suiteId, $suiteName) = preg_split("/\,/", $argsObj->testsuitesSelected[$id], 2);
lib/results/resultsMoreBuilds.php:    $buildsToQuery = -1;
lib/results/resultsMoreBuilds.php:    if (sizeof($argsObj->buildsSelected)) {
lib/results/resultsMoreBuilds.php:    	$buildsToQuery = implode(",", $argsObj->buildsSelected);
lib/results/resultsMoreBuilds.php:    // amitkhullar - added this parameter to get the latest results. 
lib/results/resultsMoreBuilds.php:	$latest_resultset = $argsObj->display->latest_results;
lib/results/resultsMoreBuilds.php:    // $assignee = $argsObj->ownerSelected ? TL_USER_ANYBODY : null;
lib/results/resultsMoreBuilds.php:    // $tester = $argsObj->executorSelected ? TL_USER_ANYBODY : null;
lib/results/resultsMoreBuilds.php:    $assignee = $argsObj->ownerSelected > 0 ? $argsObj->ownerSelected : TL_USER_ANYBODY;
lib/results/resultsMoreBuilds.php:    $tester = $argsObj->executorSelected > 0 ? $argsObj->executorSelected : TL_USER_ANYBODY  ;
lib/results/resultsMoreBuilds.php:                      	 $argsObj->keywordSelected,$assignee, 
lib/results/resultsMoreBuilds.php:                      	 $date_range->start->time, $date_range->end->time, 
lib/results/resultsMoreBuilds.php:                      	 $tester, $argsObj->search_notes_string, null);
lib/results/resultsMoreBuilds.php:    $gui->suiteList = $re->getSuiteList();  // test executions results
lib/results/resultsMoreBuilds.php:    $gui->flatArray = $re->getFlatArray();
lib/results/resultsMoreBuilds.php:    $gui->mapOfSuiteSummary =  $re->getAggregateMap();
lib/results/resultsMoreBuilds.php:    $gui->totals = new stdClass();
lib/results/resultsMoreBuilds.php:    $gui->totals->items = $re->getTotalsForPlan();
lib/results/resultsMoreBuilds.php:    $gui->totals->labels = array();
lib/results/resultsMoreBuilds.php:    foreach($gui->totals->items as $key => $value)
lib/results/resultsMoreBuilds.php:        $l18n = $key == 'total' ? 'th_total_cases' : $gui->resultsCfg['status_label'][$key];
lib/results/resultsMoreBuilds.php:        $gui->totals->labels[$key] = lang_get($l18n);  
lib/results/resultsMoreBuilds.php:    // BUGID 2012 - franciscom
lib/results/resultsMoreBuilds.php:    $gui->keywords = new stdClass();             
lib/results/resultsMoreBuilds.php:    $gui->keywords->items[0] = $gui->str_option_any;
lib/results/resultsMoreBuilds.php:    if(!is_null($tplan_keywords_map = $tplan_mgr->get_keywords_map($gui->tplan_id)))
lib/results/resultsMoreBuilds.php:        $gui->keywords->items += $tplan_keywords_map; 
lib/results/resultsMoreBuilds.php:    $gui->keywords->qty = count($gui->keywords->items);
lib/results/resultsMoreBuilds.php:    $gui->keywordSelected = $gui->keywords->items[$argsObj->keywordSelected];
lib/results/resultsMoreBuilds.php:    $gui->builds_html = $tplan_mgr->get_builds_for_html_options($gui->tplan_id);
lib/results/resultsMoreBuilds.php:    $gui->users = getUsersForHtmlOptions($dbHandler,ALL_USERS_FILTER,
lib/results/resultsMoreBuilds.php:                                         array(TL_USER_ANYBODY => $gui->str_option_any));
lib/results/resultsMoreBuilds.php:    $gui->ownerSelected = $gui->users[$argsObj->ownerSelected];      
lib/results/resultsMoreBuilds.php:    $gui->executorSelected = $gui->users[$argsObj->executorSelected];
lib/results/resultsMoreBuilds.php:    $gui->testsuitesSelected = $testsuiteNames;
lib/results/resultsMoreBuilds.php:    $gui->buildsSelected = $argsObj->buildsSelected;
lib/results/resultsMoreBuilds.php:    $gui->display = $argsObj->display;
lib/results/resultsMoreBuilds.php:    $gui->displayResults = array();
lib/results/resultsMoreBuilds.php:    $gui->lastStatus = array();
lib/results/resultsMoreBuilds.php:    foreach($reports_cfg->exec_status as $verbose => $label)
lib/results/resultsMoreBuilds.php:		$gui->displayResults[$gui->resultsCfg['status_code'][$verbose]]=false;
lib/results/resultsMoreBuilds.php:	foreach($gui->resultsCfg['status_label'] as $status_verbose => $label_key)
lib/results/resultsMoreBuilds.php:		$gui->statusLabels[$gui->resultsCfg['status_code'][$status_verbose]] = lang_get($label_key);
lib/results/resultsMoreBuilds.php:    foreach($argsObj->lastStatus as $key => $status_code)
lib/results/resultsMoreBuilds.php:    	$verbose = $gui->resultsCfg['code_status'][$status_code];
lib/results/resultsMoreBuilds.php:		$gui->displayResults[$status_code] = true;
lib/results/resultsMoreBuilds.php:		$lastStatus_localized[] = lang_get($gui->resultsCfg['status_label'][$verbose]);
lib/results/resultsMoreBuilds.php:    $gui->lastStatus = $lastStatus_localized;
lib/results/resultsMoreBuilds.php:	$args->format = $pParams["format"];
lib/results/resultsMoreBuilds.php:	$args->report_type = $pParams["report_type"];
lib/results/resultsMoreBuilds.php:	$args->tplan_id = $pParams["tplan_id"];
lib/results/resultsMoreBuilds.php:	$args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/results/resultsMoreBuilds.php:    $args->display = new stdClass();
lib/results/resultsMoreBuilds.php:    $args->display->suite_summaries = $pParams["display_suite_summaries"];
lib/results/resultsMoreBuilds.php:    $args->display->totals = $pParams["display_totals"];    
lib/results/resultsMoreBuilds.php:    $args->display->query_params = $pParams["display_query_params"];
lib/results/resultsMoreBuilds.php:    $args->display->test_cases = $pParams["display_test_cases"];
lib/results/resultsMoreBuilds.php:    $args->display->latest_results = $pParams["display_latest_results"];
lib/results/resultsMoreBuilds.php:    $args->lastStatus = $pParams["lastStatus"] ? $pParams["lastStatus"] : array();
lib/results/resultsMoreBuilds.php:    $args->keywordSelected = $pParams["keyword"];
lib/results/resultsMoreBuilds.php:    $args->ownerSelected = $pParams["owner"];
lib/results/resultsMoreBuilds.php:    $args->executorSelected = $pParams["executor"];
lib/results/resultsMoreBuilds.php:    $args->buildsSelected = $pParams["build"] ? $pParams["build"] : array();
lib/results/resultsMoreBuilds.php:    $args->testsuitesSelected = $pParams["testsuite"] ? $pParams["testsuite"] : array();
lib/results/resultsMoreBuilds.php:    $args->search_notes_string = $pParams['search_notes_string'];
lib/results/resultsMoreBuilds.php:	return $user->hasRight($db,'testplan_metrics');
lib/results/resultsMoreBuilds.php:	$cfg->cc = ''; 
lib/results/resultsMoreBuilds.php:	$cfg->subject = $guiObj->title . ' : ' . $labels['testproject'] . ' : ' . $guiObj->tproject_name . 
lib/results/resultsMoreBuilds.php:	                ' : ' . $labels['testplan'] . ' : ' . $guiObj->tplan_name;
lib/results/platformPieChart.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/results/platformPieChart.php: * @copyright 	2005-2009, TestLink community
lib/results/platformPieChart.php: * 20091222 - eloff - fixed extraction of data to current data structures
lib/results/platformPieChart.php:$totalsByPlatform = $tplan_mgr->getStatusTotalsByPlatform($args->tplan_id);
lib/results/platformPieChart.php:$totals=$totalsByPlatform[$args->platform_id]['details'];
lib/results/platformPieChart.php:$DataSet->AddPoint($values,"Serie1");   
lib/results/platformPieChart.php:$DataSet->AddPoint($labels,"Serie8");   
lib/results/platformPieChart.php:$DataSet->AddAllSeries();   
lib/results/platformPieChart.php:$DataSet->SetAbsciseLabelSerie("Serie8");   
lib/results/platformPieChart.php:$pChartCfg->XSize = 400;
lib/results/platformPieChart.php:$pChartCfg->YSize = 400;                    
lib/results/platformPieChart.php:$pChartCfg->centerX = intval($pChartCfg->XSize/2);                    
lib/results/platformPieChart.php:$pChartCfg->centerY = intval($pChartCfg->YSize/2);
lib/results/platformPieChart.php:$pChartCfg->radius = 150;
lib/results/platformPieChart.php:$pChartCfg->legendX = 10;                    
lib/results/platformPieChart.php:$pChartCfg->legendY = 15;
lib/results/platformPieChart.php:$graph->data = $DataSet->GetData();
lib/results/platformPieChart.php:$graph->description = $DataSet->GetDataDescription();
lib/results/platformPieChart.php:$Test = new pChart($pChartCfg->XSize,$pChartCfg->YSize);
lib/results/platformPieChart.php:    $Test->setColorPalette($key,hexdec($rgb[0]),hexdec($rgb[1]),hexdec($rgb[2]));  
lib/results/platformPieChart.php:$Test->setFontProperties(config_get('charts_font_path'),config_get('charts_font_size'));
lib/results/platformPieChart.php:$Test->AntialiasQuality = 0;
lib/results/platformPieChart.php:$Test->drawBasicPieGraph($graph->data,$graph->description,
lib/results/platformPieChart.php:                         $pChartCfg->centerX,$pChartCfg->centerY,$pChartCfg->radius,PIE_PERCENTAGE,255,255,218);   
lib/results/platformPieChart.php:$Test->drawPieLegend($pChartCfg->legendX,$pChartCfg->legendY,$graph->data,$graph->description,250,250,250);                                
lib/results/platformPieChart.php:$Test->Stroke();
lib/results/platformPieChart.php:	return $user->hasRight($db,'testplan_metrics');
lib/results/platformPieChart.php:    $args->tplan_id = $_REQUEST['tplan_id'];
lib/results/platformPieChart.php:    $args->tproject_id = $_SESSION['testprojectID'];
lib/results/platformPieChart.php:    $args->platform_id = $_REQUEST['platform_id'];
lib/results/resultsBugs.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/results/resultsBugs.php: *	20100616 - eloff - refactor out results class
lib/results/resultsBugs.php: *	20100124 - eloff - BUGID 3012 - don't show internal id in report
lib/results/resultsBugs.php: *	20080413 - franciscom - refactoring + BUGID 1477 
lib/results/resultsBugs.php: *	20070827 - franciscom - BUGID 994
lib/results/resultsBugs.php:$tplan_info = $tplan_mgr->get_by_id($args->tplan_id);
lib/results/resultsBugs.php:$tproject_info = $tproject_mgr->get_by_id($args->tproject_id);
lib/results/resultsBugs.php:$results = $tplan_mgr->get_linked_tcversions($args->tplan_id, $filters, $options);
lib/results/resultsBugs.php:$smarty->assign('user',$args->user);
lib/results/resultsBugs.php:$smarty->assign('printDate','');
lib/results/resultsBugs.php:$smarty->assign('tproject_name', $tproject_info['name']);
lib/results/resultsBugs.php:$smarty->assign('tplan_name', $tplan_info['name'] );
lib/results/resultsBugs.php:$smarty->assign('title', lang_get('link_report_total_bugs'));
lib/results/resultsBugs.php:$smarty->assign('arrData', $arrData);
lib/results/resultsBugs.php:$smarty->assign('totalOpenBugs', $totalOpenBugs);
lib/results/resultsBugs.php:$smarty->assign('totalResolvedBugs', $totalResolvedBugs);
lib/results/resultsBugs.php:$smarty->assign('totalBugs', $totalBugs);
lib/results/resultsBugs.php:$smarty->assign('totalCasesWithBugs', $totalCasesWithBugs);
lib/results/resultsBugs.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/results/resultsBugs.php:	$args->tproject_id = $_SESSION['testprojectID'];
lib/results/resultsBugs.php:	$args->user = $_SESSION['currentUser'];
lib/results/resultsBugs.php:	return $user->hasRight($db,'testplan_metrics');
lib/results/topLevelSuitesBarChart.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/results/topLevelSuitesBarChart.php:* rev: 20081116 - franciscom - refactored to display X axis ordered (alphabetical).
lib/results/topLevelSuitesBarChart.php:*      20081113 - franciscom - BUGID 1848
lib/results/topLevelSuitesBarChart.php:$cfg->chartTitle = lang_get('results_top_level_suites');
lib/results/topLevelSuitesBarChart.php:$cfg->XSize = 700;
lib/results/topLevelSuitesBarChart.php:$cfg->YSize = 275;
lib/results/topLevelSuitesBarChart.php:$cfg->scale = new stdClass();
lib/results/topLevelSuitesBarChart.php:$cfg->scale->legendXAngle = 35;
lib/results/topLevelSuitesBarChart.php:    $obj->canDraw = !is_null($dataSet);
lib/results/topLevelSuitesBarChart.php:    if($obj->canDraw) 
lib/results/topLevelSuitesBarChart.php:    $obj->xAxis = new stdClass();
lib/results/topLevelSuitesBarChart.php:    $obj->xAxis->values = $items;
lib/results/topLevelSuitesBarChart.php:    $obj->xAxis->serieName = 'Serie8';
lib/results/topLevelSuitesBarChart.php:    $obj->series_color = null;
lib/results/topLevelSuitesBarChart.php:       $obj->chart_data[] = $values;
lib/results/topLevelSuitesBarChart.php:       $obj->series_label[] = lang_get($resultsCfg['status_label'][$status]);
lib/results/topLevelSuitesBarChart.php:       $obj->series_color[] = $resultsCfg['charts']['status_colour'][$status];
lib/results/topLevelSuitesBarChart.php:	return $user->hasRight($db,'testplan_metrics');
lib/results/ownerBarChart.php:* TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/results/ownerBarChart.php:* rev: 20081116 - franciscom - refactored to display X axis ordered (alphabetical).
lib/results/ownerBarChart.php:*      20081113 - franciscom - BUGID 1848
lib/results/ownerBarChart.php:$cfg->chartTitle = lang_get('results_by_tester'); 
lib/results/ownerBarChart.php:$cfg->XSize = 700;
lib/results/ownerBarChart.php:$cfg->YSize = 300;
lib/results/ownerBarChart.php:$cfg->scale = new stdClass();
lib/results/ownerBarChart.php:$cfg->scale->legendXAngle = 35;
lib/results/ownerBarChart.php:    $obj->canDraw = !is_null($dataSet);
lib/results/ownerBarChart.php:    if($obj->canDraw)
lib/results/ownerBarChart.php:    $obj->xAxis = new stdClass();
lib/results/ownerBarChart.php:    $obj->xAxis->values = $items;
lib/results/ownerBarChart.php:    $obj->xAxis->serieName = 'Serie8';
lib/results/ownerBarChart.php:    $obj->series_color = null;
lib/results/ownerBarChart.php:    $obj->scale = new stdClass();
lib/results/ownerBarChart.php:    $obj->scale->maxY = 0;
lib/results/ownerBarChart.php:    $obj->scale->minY = 0;
lib/results/ownerBarChart.php:    $obj->scale->divisions = 0;
lib/results/ownerBarChart.php:            $obj->chart_data[] = $values;
lib/results/ownerBarChart.php:            $obj->series_label[] = lang_get($resultsCfg['status_label'][$status]);
lib/results/ownerBarChart.php:            $obj->series_color[] = $resultsCfg['charts']['status_colour'][$status];
lib/results/ownerBarChart.php:	return $user->hasRight($db,'testplan_metrics');
lib/results/resultsByTesterPerBuild.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/results/resultsByTesterPerBuild.php: * @version CVS: $Id: resultsByTesterPerBuild.php,v 1.7 2010/08/26 07:27:47 mx-julian Exp $
lib/results/resultsByTesterPerBuild.php: * 20100823 - asimon - refactoring: $table_id
lib/results/resultsByTesterPerBuild.php: * 20100816 - asimon - enable default sorting by progress column
lib/results/resultsByTesterPerBuild.php: * 20100731 - asimon - initial commit
lib/results/resultsByTesterPerBuild.php:$progress = new build_progress($db, $args->tplan_id);
lib/results/resultsByTesterPerBuild.php:$matrix = $progress->get_results_matrix();
lib/results/resultsByTesterPerBuild.php:$status_map = $progress->get_status_map();
lib/results/resultsByTesterPerBuild.php:$build_set = $progress->get_build_set();
lib/results/resultsByTesterPerBuild.php:$names = $user->getNames($db);
lib/results/resultsByTesterPerBuild.php:$table_id = 'tl_' . $args->tproject_id . '_' . $args->tplan_id . '_table_results_tester_build';
lib/results/resultsByTesterPerBuild.php:			        "{$user_id}, {$build_id}, {$args->tplan_id});\">{$username}</a>";
lib/results/resultsByTesterPerBuild.php:		$commented_progress = "<!-- $padded_percentage --> {$statistics['progress']}";
lib/results/resultsByTesterPerBuild.php:$matrix->title = lang_get('results_by_tester_per_build');
lib/results/resultsByTesterPerBuild.php:$matrix->setGroupByColumnName(lang_get('build'));
lib/results/resultsByTesterPerBuild.php:// 20100816 - asimon - enable default sorting by progress column
lib/results/resultsByTesterPerBuild.php:$matrix->setSortByColumnName(lang_get('progress'));
lib/results/resultsByTesterPerBuild.php:$matrix->showToolbar = true;
lib/results/resultsByTesterPerBuild.php:$matrix->toolbarExpandCollapseGroupsButton = true;
lib/results/resultsByTesterPerBuild.php:$matrix->toolbarShowAllColumnsButton = true;
lib/results/resultsByTesterPerBuild.php:$gui->tableSet = array($matrix);
lib/results/resultsByTesterPerBuild.php:$smarty->assign('gui',$gui);
lib/results/resultsByTesterPerBuild.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/results/resultsByTesterPerBuild.php:	$args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/results/resultsByTesterPerBuild.php:	if($args->tproject_id > 0) {
lib/results/resultsByTesterPerBuild.php:		$args->tproject_info = $tproject_mgr->get_by_id($args->tproject_id);
lib/results/resultsByTesterPerBuild.php:		$args->tproject_name = $args->tproject_info['name'];
lib/results/resultsByTesterPerBuild.php:		$args->tproject_description = $args->tproject_info['notes'];
lib/results/resultsByTesterPerBuild.php:	if ($args->tplan_id > 0) {
lib/results/resultsByTesterPerBuild.php:		$args->tplan_info = $tplan_mgr->get_by_id($args->tplan_id);
lib/results/resultsByTesterPerBuild.php:	$gui->pageTitle = lang_get('caption_results_by_tester_per_build');
lib/results/resultsByTesterPerBuild.php:	$gui->warning_msg = '';
lib/results/resultsByTesterPerBuild.php:	$gui->tproject_name = $argsObj->tproject_name;
lib/results/resultsByTesterPerBuild.php:	$gui->tplan_name = $argsObj->tplan_info['name'];
lib/results/resultsByTesterPerBuild.php:	return $user->hasRight($db,'testplan_metrics');
lib/results/metricsDashboard.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/results/metricsDashboard.php: * @modified $Date: 2010/08/27 09:48:54 $ $Author: mx-julian $
lib/results/metricsDashboard.php: * 20100526 - Julian - fixed wrong access to platform array
lib/results/metricsDashboard.php: * 20100525 - Julian - added option 'step_info' => 0 to get_linked_tcversions call
lib/results/metricsDashboard.php: * 20090919 - franciscom - added platform info
lib/results/metricsDashboard.php:$gui->tproject_name = $args->tproject_name;
lib/results/metricsDashboard.php:list($gui->tplan_metrics,$gui->show_platforms) = getMetrics($db,$args);
lib/results/metricsDashboard.php:$smarty->assign('gui', $gui);
lib/results/metricsDashboard.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template); 
lib/results/metricsDashboard.php:	$user_id = $args->currentUserID;
lib/results/metricsDashboard.php:	$tproject_id = $args->tproject_id;
lib/results/metricsDashboard.php:	$test_plans = $_SESSION['currentUser']->getAccessibleTestPlans($db,$tproject_id);
lib/results/metricsDashboard.php:    	$linked_tcversions[$tplan_id] = $tplan_mgr->get_linked_tcversions($tplan_id,$filters,$options);
lib/results/metricsDashboard.php:        $platformSet=$tplan_mgr->getPlatforms($tplan_id);
lib/results/metricsDashboard.php:    		$metrics[$tplan_id][$platform_name['id']]['executed_vs_active'] = -1;
lib/results/metricsDashboard.php:    		$metrics[$tplan_id][$platform_name['id']]['executed_vs_total'] = -1;
lib/results/metricsDashboard.php:    		$metrics[$tplan_id][$platform_name['id']]['active_vs_total'] = -1;
lib/results/metricsDashboard.php:	$args->tproject_id = isset($_SESSION['testprojectID']) ? intval($_SESSION['testprojectID']) : 0;
lib/results/metricsDashboard.php:	$args->tproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : null;
lib/results/metricsDashboard.php:	$args->currentUserID = $_SESSION['currentUser']->dbID;
lib/results/metricsDashboard.php:	return ($user->hasRight($db,'testplan_metrics') || $user->hasRight($db,'testplan_execute'));
lib/results/uncoveredTestCases.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/results/uncoveredTestCases.php: * @author Francisco Mancardi - francisco.mancardi@gmail.com
lib/results/uncoveredTestCases.php: * rev: 20081109 - franciscom - BUGID 512
lib/results/uncoveredTestCases.php:// $reqSpec = $tproject_mgr->getOptionReqSpec($args->tproject_id);
lib/results/uncoveredTestCases.php:$reqSpec = $tproject_mgr->genComboReqSpec($args->tproject_id);
lib/results/uncoveredTestCases.php:$gui->items = null;
lib/results/uncoveredTestCases.php:$gui->tproject_name = $args->tproject_name;
lib/results/uncoveredTestCases.php:$gui->has_reqspec = count($reqSpec) > 0;
lib/results/uncoveredTestCases.php:$gui->has_requirements = false;
lib/results/uncoveredTestCases.php:$gui->has_tc = false;
lib/results/uncoveredTestCases.php:if($gui->has_reqspec)
lib/results/uncoveredTestCases.php:   		if($gui->has_requirements = ($reqSpecMgr->get_requirements_count($reqSpecID) > 0))
lib/results/uncoveredTestCases.php:if($gui->has_requirements)
lib/results/uncoveredTestCases.php:    $tproject_mgr->get_all_testcases_id($args->tproject_id,$tcasesID);  
lib/results/uncoveredTestCases.php:        $debugMsg = 'File: ' . basename(__FILE__) . ' - Line: ' . __LINE__ . ' - ';
lib/results/uncoveredTestCases.php:        $uncovered = $db->fetchRowsIntoMap($sql,'tc_id');
lib/results/uncoveredTestCases.php:if($gui->has_tc = (!is_null($uncovered) && count($uncovered) > 0) )
lib/results/uncoveredTestCases.php:    $debugMsg = 'File: ' . basename(__FILE__) . ' - Line: ' . __LINE__ . ' - ';
lib/results/uncoveredTestCases.php:    $external_id = $db->fetchRowsIntoMap($sql,'tc_id');
lib/results/uncoveredTestCases.php:  	// $out = gen_spec_view($db,'uncoveredtestcases',$args->tproject_id,$args->tproject_id,null,
lib/results/uncoveredTestCases.php:    $out = gen_spec_view($db,'uncoveredtestcases',$args->tproject_id,$args->tproject_id,null,
lib/results/uncoveredTestCases.php:    $gui->items = $out['spec_view'];
lib/results/uncoveredTestCases.php:$gui->pageTitle = lang_get('report_testcases_without_requirement');
lib/results/uncoveredTestCases.php:$gui->testCasePrefix = $tproject_mgr->getTestCasePrefix($args->tproject_id);
lib/results/uncoveredTestCases.php:$gui->testCasePrefix .= $tcase_cfg->glue_character;
lib/results/uncoveredTestCases.php:$smarty->assign('gui', $gui);
lib/results/uncoveredTestCases.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/results/uncoveredTestCases.php:    $args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/results/uncoveredTestCases.php:    $args->tproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : '';
lib/results/uncoveredTestCases.php:	return $user->hasRight($db,'testplan_metrics');
lib/results/priorityBarChart.php:$tplan_info = $tplan_mgr->get_by_id($tplan_id);
lib/results/priorityBarChart.php:$tproject_info = $tproject_mgr->get_by_id($tproject_id);
lib/results/priorityBarChart.php:$arrDataKeys = $re->getAggregateKeywordResults();
lib/results/priorityBarChart.php:$chart[ 'draw' ] = array ( array ( 'transition'=>"slide_up", 'delay'=>1, 'duration'=>.5, 'type'=>"text", 'color'=>"000033", 'alpha'=>15, 'font'=>"arial", 'rotation'=>-90, 'bold'=>true, 'size'=>64, 'x'=>0, 'y'=>295, 'width'=>300, 'height'=>50, 'text'=>"Keywords", 'h_align'=>"right", 'v_align'=>"middle" ),
lib/results/priorityBarChart.php:                           array ( 'transition'=>"slide_up", 'delay'=>1, 'duration'=>.5, 'type'=>"text", 'color'=>"ffffff", 'alpha'=>40, 'font'=>"arial", 'rotation'=>-90, 'bold'=>true, 'size'=>25, 'x'=>30, 'y'=>300, 'width'=>300, 'height'=>50, 'text'=>"report", 'h_align'=>"right", 'v_align'=>"middle" ) );
lib/results/resultsGeneral.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/results/resultsGeneral.php: *  20100811 - asimon - removed "results by assigned testers" table,
lib/results/resultsGeneral.php: *  20100621 - eloff - BUGID 3542 - fixed typo
lib/results/resultsGeneral.php: *  20100206 - eloff - BUGID 3060 - Show verbose priority statistics like other tables.
lib/results/resultsGeneral.php: *  20100201 - franciscom - BUGID 0003123: General Test Plan Metrics - order of columns
lib/results/resultsGeneral.php: *  20091103 - franciscom - keywords, assigned testers, platform results refactored,
lib/results/resultsGeneral.php: *  20090209 - franciscom - BUGID 2080
lib/results/resultsGeneral.php: *  20080928 - franciscom - removed useless requires
lib/results/resultsGeneral.php: * 	20050807 - fm - refactoring:  changes in getTestSuiteReport() call
lib/results/resultsGeneral.php: * 	20050905 - fm - reduce global coupling
lib/results/resultsGeneral.php: *  20070101 - KL - upgraded to 1.7
lib/results/resultsGeneral.php: * 	20080626 - mht - added milestomes, priority report, refactorization
lib/results/resultsGeneral.php: * ----------------------------------------------------------------------------------- */
lib/results/resultsGeneral.php:$tplan_info = $tplan_mgr->get_by_id($args->tplan_id);
lib/results/resultsGeneral.php:$tproject_info = $tproject_mgr->get_by_id($args->tproject_id);
lib/results/resultsGeneral.php:$gui->title = lang_get('title_gen_test_rep');
lib/results/resultsGeneral.php:$gui->do_report = array();
lib/results/resultsGeneral.php:$gui->showPlatforms=true;
lib/results/resultsGeneral.php:$gui->columnsDefinition = new stdClass();
lib/results/resultsGeneral.php:$gui->columnsDefinition->keywords = null;
lib/results/resultsGeneral.php:$gui->columnsDefinition->testers = null;
lib/results/resultsGeneral.php:$gui->columnsDefinition->platform = null;
lib/results/resultsGeneral.php:$gui->statistics = new stdClass();
lib/results/resultsGeneral.php:$gui->statistics->keywords = null;
lib/results/resultsGeneral.php:$gui->statistics->testers = null;
lib/results/resultsGeneral.php:$gui->statistics->milestones = null;
lib/results/resultsGeneral.php:$gui->tplan_name = $tplan_info['name'];
lib/results/resultsGeneral.php:$gui->tproject_name = $tproject_info['name'];
lib/results/resultsGeneral.php:$gui->platformSet = $tplan_mgr->getPlatforms($args->tplan_id,$getOpt);
lib/results/resultsGeneral.php:if( is_null($gui->platformSet) )
lib/results/resultsGeneral.php:	$gui->platformSet = array('');
lib/results/resultsGeneral.php:	$gui->showPlatforms=false;
lib/results/resultsGeneral.php:// ----------------------------------------------------------------------------
lib/results/resultsGeneral.php:$topLevelSuites = $re->getTopLevelSuites();
lib/results/resultsGeneral.php:	// no test cases -> no report
lib/results/resultsGeneral.php:	$gui->do_report['status_ok'] = 0;
lib/results/resultsGeneral.php:	$gui->do_report['msg'] = lang_get('report_tspec_has_no_tsuites');
lib/results/resultsGeneral.php:	$gui->do_report['status_ok'] = 1;
lib/results/resultsGeneral.php:	$gui->do_report['msg'] = '';
lib/results/resultsGeneral.php:	$kwr = $tplan_mgr->getStatusTotalsByKeyword($args->tplan_id);
lib/results/resultsGeneral.php:    $gui->statistics->keywords = $tplan_mgr->tallyResultsForReport($kwr);
lib/results/resultsGeneral.php://    $usr=$tplan_mgr->getStatusTotalsByAssignedTester($args->tplan_id);
lib/results/resultsGeneral.php://    $gui->statistics->assigned_testers = $tplan_mgr->tallyResultsForReport($usr);
lib/results/resultsGeneral.php:	if( $gui->showPlatforms )
lib/results/resultsGeneral.php:		$platr = $tplan_mgr->getStatusTotalsByPlatform($args->tplan_id);
lib/results/resultsGeneral.php:		$gui->statistics->platform = $tplan_mgr->tallyResultsForReport($platr);
lib/results/resultsGeneral.php:	if($_SESSION['testprojectOptions']->testPriorityEnabled)
lib/results/resultsGeneral.php:		$prios = $tplan_mgr->getStatusTotalsByPriority($args->tplan_id);
lib/results/resultsGeneral.php:		$gui->statistics->priorities = $tplan_mgr->tallyResultsForReport($prios);
lib/results/resultsGeneral.php:      	if( !is_null($gui->statistics->$item) )
lib/results/resultsGeneral.php:          	$dummy = current($gui->statistics->$item);
lib/results/resultsGeneral.php:              			lang_get($tlCfg->results['status_label'][$status_verbose]);
lib/results/resultsGeneral.php:          	$gui->columnsDefinition->$item = $dummy['details'];
lib/results/resultsGeneral.php:  	$mapOfAggregate = $re->getAggregateMap();
lib/results/resultsGeneral.php:      		$results['total'] - $results['not_run']);
lib/results/resultsGeneral.php:    	$gui->statistics->testsuites = $arrDataSuite;
lib/results/resultsGeneral.php:    	$dummy = current($gui->statistics->testsuites);
lib/results/resultsGeneral.php:          			lang_get($tlCfg->results['status_label'][$status_verbose]);
lib/results/resultsGeneral.php:      	$gui->columnsDefinition->testsuites = $dummy['details'];
lib/results/resultsGeneral.php:	// ----------------------------------------------------------------------------
lib/results/resultsGeneral.php:    // $buildSet = $tplan_mgr->get_builds($args->tplan_id); //,testplan::ACTIVE_BUILDS);
lib/results/resultsGeneral.php:    // $myRBB = $tplan_mgr->get_linked_tcversions($args->tplan_id,$filters,$options);
lib/results/resultsGeneral.php:    // $code_verbose=$tplan_mgr->getStatusForReports();
lib/results/resultsGeneral.php:	// $results = $re->getAggregateBuildResults();
lib/results/resultsGeneral.php:	if($gui->do_report['status_ok'])
lib/results/resultsGeneral.php:  		$results = $re->getAggregateBuildResults();
lib/results/resultsGeneral.php:			// BUGID 0003123: General Test Plan Metrics - order of columns with test case exec results
lib/results/resultsGeneral.php:			$code_verbose = $tplan_mgr->getStatusForReports();
lib/results/resultsGeneral.php:    $planMetrics = $tplan_mgr->getStatusTotals($args->tplan_id);
lib/results/resultsGeneral.php:    $execResults = $tplan_mgr->get_linked_tcversions($args->tplan_id,$filters,$options);
lib/results/resultsGeneral.php:    $execResults = $tplan_mgr->get_linked_tcversions($args->tplan_id,$filters,$options);
lib/results/resultsGeneral.php:    $execResults = $tplan_mgr->get_linked_tcversions($args->tplan_id,$filters,$options);
lib/results/resultsGeneral.php:    $execResults = $tplan_mgr->get_linked_tcversions($args->tplan_id,$filters,$options);
lib/results/resultsGeneral.php:	$milestonesList = $tplan_mgr->get_milestones($args->tplan_id);
lib/results/resultsGeneral.php:		$gui->statistics->milestones = $metricsMgr->getMilestonesMetrics($args->tplan_id,$milestonesList);
lib/results/resultsGeneral.php:// ----------------------------------------------------------------------------
lib/results/resultsGeneral.php:$smarty->assign('gui', $gui);
lib/results/resultsGeneral.php:$smarty->assign('buildColDefinition', $colDefinition);
lib/results/resultsGeneral.php:$smarty->assign('buildResults',$results);
lib/results/resultsGeneral.php:displayReport($templateCfg->template_dir . $templateCfg->default_template, $smarty, $args->format,$mailCfg);
lib/results/resultsGeneral.php:    $args->tproject_id = $_SESSION['testprojectID'];
lib/results/resultsGeneral.php:    if (is_null($args->format))
lib/results/resultsGeneral.php:	return $user->hasRight($db,'testplan_metrics');
lib/results/resultsGeneral.php:	$cfg->cc = ''; 
lib/results/resultsGeneral.php:	$cfg->subject = $guiObj->title . ' : ' . $labels['testproject'] . ' : ' . $guiObj->tproject_name . 
lib/results/resultsGeneral.php:	                ' : ' . $labels['testplan'] . ' : ' . $guiObj->tplan_name;
lib/results/resultsTCnotes.php:* TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/results/resultsTCnotes.php:* 20100828 - eloff - adapt to rendering of status column
lib/results/resultsTCnotes.php:* 20100823 - Julian - table now uses a unique table id per test project and test plan
lib/results/resultsTCnotes.php:* 20100816 - Julian - changed default column width
lib/results/resultsTCnotes.php:                    - added default sorting
lib/results/resultsTCnotes.php:* 20100723 - asimon - BUGID 3590: crash when clicking testcase link because of missing build id
lib/results/resultsTCnotes.php:* 20100719 - eloff - Update due to changes in tlExtTable
lib/results/resultsTCnotes.php:* 20100716 - eloff - group by platform column
lib/results/resultsTCnotes.php:* 20100715 - eloff - use grouping on first column
lib/results/resultsTCnotes.php:* 20100503 - franciscom - BUGID 3419: In "Test result matrix", tests statuses or not colorized
lib/results/resultsTCnotes.php:* 20100502 - Julian - BUGID 3418
lib/results/resultsTCnotes.php:* 20100424 - franciscom - BUGID 3356	 
lib/results/resultsTCnotes.php:* 20091223 - eloff - added HTML tables for reports where JS is unavailable
lib/results/resultsTCnotes.php:* 20091221 - eloff - fixed bug when iterating over results
lib/results/resultsTCnotes.php:* 20091016 - franciscom - fix bug on URL to test case execution
lib/results/resultsTCnotes.php:* 20090909 - franciscom - refactored to manage multiple tables when more that one
lib/results/resultsTCnotes.php:* 20090804 - franciscom - added Eloff contribution
lib/results/resultsTCnotes.php:$gui->map_status_css = null;
lib/results/resultsTCnotes.php:$gui->title = lang_get('title_test_report_all_builds');
lib/results/resultsTCnotes.php:$gui->printDate = '';
lib/results/resultsTCnotes.php:$gui->matrixCfg  = config_get('resultMatrixReport');
lib/results/resultsTCnotes.php:$gui->matrixData = array();
lib/results/resultsTCnotes.php:$tplan_info = $tplan_mgr->get_by_id($args->tplan_id);
lib/results/resultsTCnotes.php:$tproject_info = $tproject_mgr->get_by_id($args->tproject_id);
lib/results/resultsTCnotes.php:$gui->tplan_name = $tplan_info['name'];
lib/results/resultsTCnotes.php:$gui->tproject_name = $tproject_info['name'];
lib/results/resultsTCnotes.php:$testCasePrefix = $tproject_info['prefix'] . $testCaseCfg->glue_character;;
lib/results/resultsTCnotes.php:$gui->platforms = $tplan_mgr->getPlatforms($args->tplan_id,$getOpt);
lib/results/resultsTCnotes.php:$show_platforms = !is_null($gui->platforms);
lib/results/resultsTCnotes.php:$gui->buildInfoSet = $tplan_mgr->get_builds($args->tplan_id, 1); //MHT: active builds only
lib/results/resultsTCnotes.php:if ($gui->buildInfoSet)
lib/results/resultsTCnotes.php:	$buildIDSet = array_keys($gui->buildInfoSet);
lib/results/resultsTCnotes.php:$executionsMap = $re->getSuiteList();
lib/results/resultsTCnotes.php:// lastResultMap provides list of all test cases in plan - data set includes title and suite names
lib/results/resultsTCnotes.php:$lastResultMap = $re->getMapOfLastResult();
lib/results/resultsTCnotes.php:    $gui->map_status_css[$code] = $resultsCfg['code_status'][$code] . '_text';
lib/results/resultsTCnotes.php:if ($gui->matrixCfg->buildColumns['showStatusLastExecuted'])
lib/results/resultsTCnotes.php:	$gui->buildInfoSet[] = array('name' => lang_get('result_on_last_build'));
lib/results/resultsTCnotes.php:if ($gui->matrixCfg->buildColumns['latestBuildOnLeft'])
lib/results/resultsTCnotes.php:	$gui->buildInfoSet = array_reverse($gui->buildInfoSet);
lib/results/resultsTCnotes.php:$gui->matrix = array();
lib/results/resultsTCnotes.php:				        '&tplan_id=' . $args->tplan_id .
lib/results/resultsTCnotes.php:					$rowArray[$cols['platform']] = $gui->platforms[$platformId];
lib/results/resultsTCnotes.php:				if($_SESSION['testprojectOptions']->testPriorityEnabled) 
lib/results/resultsTCnotes.php:						$dummy = $tplan_mgr->getPriority($args->tplan_id, array('tcversion_id' => $tcase['tcversion_id']));
lib/results/resultsTCnotes.php:					$cssClass = $gui->map_status_css[$lastStatus]; 
lib/results/resultsTCnotes.php:								"cssClass" => $gui->map_status_css[$status]);
lib/results/resultsTCnotes.php:						$cssClass = $gui->map_status_css[$resultsCfg['status_code']['not_run']]; 
lib/results/resultsTCnotes.php:			    if ($gui->matrixCfg->buildColumns['showStatusLastExecuted'])
lib/results/resultsTCnotes.php:			    if ($gui->matrixCfg->buildColumns['latestBuildOnLeft']) 
lib/results/resultsTCnotes.php:			    $gui->matrix[] = $rowArray;
lib/results/resultsTCnotes.php:$gui->tableSet[] =  buildMatrix($gui->buildInfoSet, $gui->matrix, $args->format, $show_platforms, $args);
lib/results/resultsTCnotes.php:$smarty->assign('gui',$gui);
lib/results/resultsTCnotes.php:displayReport($templateCfg->template_dir . $templateCfg->default_template, $smarty, $args->format, $mailCfg);
lib/results/resultsTCnotes.php:    $args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/results/resultsTCnotes.php:	return $user->hasRight($db,'testplan_metrics');
lib/results/resultsTCnotes.php: * Builds ext-js rich table to display matrix results
lib/results/resultsTCnotes.php:	if($_SESSION['testprojectOptions']->testPriorityEnabled) 
lib/results/resultsTCnotes.php:		$table_id = 'tl_'.$args->tproject_id. '_' .$args->tplan_id.'_table_results_tc';
lib/results/resultsTCnotes.php:		$matrix->setGroupByColumnName($group_name);
lib/results/resultsTCnotes.php:		$matrix->sortDirection = 'DESC';
lib/results/resultsTCnotes.php:		if($_SESSION['testprojectOptions']->testPriorityEnabled) 
lib/results/resultsTCnotes.php:			$matrix->addCustomBehaviour('priority', array('render' => 'priorityRenderer'));
lib/results/resultsTCnotes.php:			$matrix->setSortByColumnName(lang_get('priority'));
lib/results/resultsTCnotes.php:			$matrix->setSortByColumnName(lang_get('title_test_case_title'));
lib/results/resultsTCnotes.php:		$matrix->showToolbar = true;
lib/results/resultsTCnotes.php:		$matrix->toolbarExpandCollapseGroupsButton = true;
lib/results/resultsTCnotes.php:		$matrix->toolbarShowAllColumnsButton = true;
lib/results/resultsTCnotes.php:	$cfg->cc = ''; 
lib/results/resultsTCnotes.php:	$cfg->subject = $guiObj->title . ' : ' . $labels['testproject'] . ' : ' . $guiObj->tproject_name . 
lib/results/resultsTCnotes.php:	                ' : ' . $labels['testplan'] . ' : ' . $guiObj->tplan_name;
lib/results/testPlanWithCF.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/results/testPlanWithCF.php: * @author Amit Khullar - amkhullar@gmail.com
lib/results/testPlanWithCF.php: * 		20090504 - amitkhullar - BUGID 2465
lib/results/testPlanWithCF.php:$gui->pageTitle = lang_get('caption_testPlanWithCF');
lib/results/testPlanWithCF.php:$gui->warning_msg = '';
lib/results/testPlanWithCF.php:$gui->tcasePrefix = '';
lib/results/testPlanWithCF.php:$gui->path_info = null;
lib/results/testPlanWithCF.php:$gui->resultSet = null;
lib/results/testPlanWithCF.php:$gui->tproject_name = $args->tproject_name;
lib/results/testPlanWithCF.php:$gui->tplan_name = $args->tplan_name;
lib/results/testPlanWithCF.php:if($tplan_mgr->count_testcases($args->tplan_id) > 0)
lib/results/testPlanWithCF.php:    // -----------------------------------------------------------------------------------
lib/results/testPlanWithCF.php:    $gui->code_status = $resultsCfg['code_status'];
lib/results/testPlanWithCF.php:    $gui->cfields = $cfield_mgr->get_linked_cfields_at_testplan_design($args->tproject_id,1,'testcase',
lib/results/testPlanWithCF.php:    if(!is_null($gui->cfields))
lib/results/testPlanWithCF.php:        foreach($gui->cfields as $key => $values)
lib/results/testPlanWithCF.php:   	// Now get TPlan -> Test Cases with custom field values
lib/results/testPlanWithCF.php:    $cf_map = $cfield_mgr->get_linked_cfields_at_testplan_design($args->tproject_id,1,'testcase',
lib/results/testPlanWithCF.php:                                                                 null,null,$args->tplan_id);
lib/results/testPlanWithCF.php:    if(($gui->row_qty = count($cf_map)) > 0 )
lib/results/testPlanWithCF.php:        $gui->pageTitle .= " - " . lang_get('match_count') . ":" . $gui->row_qty;
lib/results/testPlanWithCF.php:        $gui->resultSet = $result;
lib/results/testPlanWithCF.php:$smarty->assign('gui',$gui);
lib/results/testPlanWithCF.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/results/testPlanWithCF.php:    $args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/results/testPlanWithCF.php:    $args->tproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : '';
lib/results/testPlanWithCF.php:    $args->tplan_name = '';
lib/results/testPlanWithCF.php:    if(!$args->tplan_id)
lib/results/testPlanWithCF.php:        $args->tplan_id = isset($_SESSION['testplanID']) ? $_SESSION['testplanID'] : 0;
lib/results/testPlanWithCF.php:    if($args->tplan_id > 0)
lib/results/testPlanWithCF.php:        $tplan_info = $tplan_mgr->get_by_id($args->tplan_id);
lib/results/testPlanWithCF.php:        $args->tplan_name = $tplan_info['name'];
lib/results/testPlanWithCF.php:	return $user->hasRight($db,'testplan_metrics');
lib/results/resultsTC.php:* TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/results/resultsTC.php:* 20100828 - eloff - adapt to rendering of status column
lib/results/resultsTC.php:* 20100823 - Julian - table now uses a unique table id per test project and test plan
lib/results/resultsTC.php:* 20100816 - Julian - changed default column width
lib/results/resultsTC.php:                    - added default sorting
lib/results/resultsTC.php:* 20100723 - asimon - BUGID 3590: crash when clicking testcase link because of missing build id
lib/results/resultsTC.php:* 20100719 - eloff - Update due to changes in tlExtTable
lib/results/resultsTC.php:* 20100716 - eloff - group by platform column
lib/results/resultsTC.php:* 20100715 - eloff - use grouping on first column
lib/results/resultsTC.php:* 20100503 - franciscom - BUGID 3419: In "Test result matrix", tests statuses or not colorized
lib/results/resultsTC.php:* 20100502 - Julian - BUGID 3418
lib/results/resultsTC.php:* 20100424 - franciscom - BUGID 3356	 
lib/results/resultsTC.php:* 20091223 - eloff - added HTML tables for reports where JS is unavailable
lib/results/resultsTC.php:* 20091221 - eloff - fixed bug when iterating over results
lib/results/resultsTC.php:* 20091016 - franciscom - fix bug on URL to test case execution
lib/results/resultsTC.php:* 20090909 - franciscom - refactored to manage multiple tables when more that one
lib/results/resultsTC.php:* 20090804 - franciscom - added Eloff contribution
lib/results/resultsTC.php:$gui->map_status_css = null;
lib/results/resultsTC.php:$gui->title = lang_get('title_test_report_all_builds');
lib/results/resultsTC.php:$gui->printDate = '';
lib/results/resultsTC.php:$gui->matrixCfg  = config_get('resultMatrixReport');
lib/results/resultsTC.php:$gui->matrixData = array();
lib/results/resultsTC.php:$tplan_info = $tplan_mgr->get_by_id($args->tplan_id);
lib/results/resultsTC.php:$tproject_info = $tproject_mgr->get_by_id($args->tproject_id);
lib/results/resultsTC.php:$gui->tplan_name = $tplan_info['name'];
lib/results/resultsTC.php:$gui->tproject_name = $tproject_info['name'];
lib/results/resultsTC.php:$testCasePrefix = $tproject_info['prefix'] . $testCaseCfg->glue_character;;
lib/results/resultsTC.php:$gui->platforms = $tplan_mgr->getPlatforms($args->tplan_id,$getOpt);
lib/results/resultsTC.php:$show_platforms = !is_null($gui->platforms);
lib/results/resultsTC.php:$gui->buildInfoSet = $tplan_mgr->get_builds($args->tplan_id, 1); //MHT: active builds only
lib/results/resultsTC.php:if ($gui->buildInfoSet)
lib/results/resultsTC.php:	$buildIDSet = array_keys($gui->buildInfoSet);
lib/results/resultsTC.php:$executionsMap = $re->getSuiteList();
lib/results/resultsTC.php:// lastResultMap provides list of all test cases in plan - data set includes title and suite names
lib/results/resultsTC.php:$lastResultMap = $re->getMapOfLastResult();
lib/results/resultsTC.php:    $gui->map_status_css[$code] = $resultsCfg['code_status'][$code] . '_text';
lib/results/resultsTC.php:if ($gui->matrixCfg->buildColumns['showStatusLastExecuted'])
lib/results/resultsTC.php:	$gui->buildInfoSet[] = array('name' => lang_get('result_on_last_build'));
lib/results/resultsTC.php:if ($gui->matrixCfg->buildColumns['latestBuildOnLeft'])
lib/results/resultsTC.php:	$gui->buildInfoSet = array_reverse($gui->buildInfoSet);
lib/results/resultsTC.php:$gui->matrix = array();
lib/results/resultsTC.php:				        '&tplan_id=' . $args->tplan_id .
lib/results/resultsTC.php:					$rowArray[$cols['platform']] = $gui->platforms[$platformId];
lib/results/resultsTC.php:				if($_SESSION['testprojectOptions']->testPriorityEnabled) 
lib/results/resultsTC.php:						$dummy = $tplan_mgr->getPriority($args->tplan_id, array('tcversion_id' => $tcase['tcversion_id']));
lib/results/resultsTC.php:					$cssClass = $gui->map_status_css[$lastStatus]; 
lib/results/resultsTC.php:								"cssClass" => $gui->map_status_css[$status]);
lib/results/resultsTC.php:						$cssClass = $gui->map_status_css[$resultsCfg['status_code']['not_run']]; 
lib/results/resultsTC.php:			    if ($gui->matrixCfg->buildColumns['showStatusLastExecuted'])
lib/results/resultsTC.php:			    if ($gui->matrixCfg->buildColumns['latestBuildOnLeft']) 
lib/results/resultsTC.php:			    $gui->matrix[] = $rowArray;
lib/results/resultsTC.php:$gui->tableSet[] =  buildMatrix($gui->buildInfoSet, $gui->matrix, $args->format, $show_platforms, $args);
lib/results/resultsTC.php:$smarty->assign('gui',$gui);
lib/results/resultsTC.php:displayReport($templateCfg->template_dir . $templateCfg->default_template, $smarty, $args->format, $mailCfg);
lib/results/resultsTC.php:    $args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/results/resultsTC.php:	return $user->hasRight($db,'testplan_metrics');
lib/results/resultsTC.php: * Builds ext-js rich table to display matrix results
lib/results/resultsTC.php:	if($_SESSION['testprojectOptions']->testPriorityEnabled) 
lib/results/resultsTC.php:		$table_id = 'tl_'.$args->tproject_id. '_' .$args->tplan_id.'_table_results_tc';
lib/results/resultsTC.php:		$matrix->setGroupByColumnName($group_name);
lib/results/resultsTC.php:		$matrix->sortDirection = 'DESC';
lib/results/resultsTC.php:		if($_SESSION['testprojectOptions']->testPriorityEnabled) 
lib/results/resultsTC.php:			$matrix->addCustomBehaviour('priority', array('render' => 'priorityRenderer'));
lib/results/resultsTC.php:			$matrix->setSortByColumnName(lang_get('priority'));
lib/results/resultsTC.php:			$matrix->setSortByColumnName(lang_get('title_test_case_title'));
lib/results/resultsTC.php:		$matrix->showToolbar = true;
lib/results/resultsTC.php:		$matrix->toolbarExpandCollapseGroupsButton = true;
lib/results/resultsTC.php:		$matrix->toolbarShowAllColumnsButton = true;
lib/results/resultsTC.php:	$cfg->cc = ''; 
lib/results/resultsTC.php:	$cfg->subject = $guiObj->title . ' : ' . $labels['testproject'] . ' : ' . $guiObj->tproject_name . 
lib/results/resultsTC.php:	                ' : ' . $labels['testplan'] . ' : ' . $guiObj->tplan_name;
lib/results/freeTestCases.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/results/freeTestCases.php: * @author Francisco Mancardi - francisco.mancardi@gmail.com
lib/results/freeTestCases.php: * rev: 20090412 - franciscom - BUGID 2363
lib/results/freeTestCases.php:$gui->freeTestCases = $tproject_mgr->getFreeTestCases($args->tproject_id);
lib/results/freeTestCases.php:$gui->path_info = null;
lib/results/freeTestCases.php:$gui->resultSet = null;
lib/results/freeTestCases.php:if(!is_null($gui->freeTestCases['items']))
lib/results/freeTestCases.php:    if($gui->freeTestCases['allfree'])
lib/results/freeTestCases.php:        $gui->tcasePrefix = $tproject_mgr->getTestCasePrefix($args->tproject_id) . $tcase_cfg->glue_character;
lib/results/freeTestCases.php:        $tcaseSet = array_keys($gui->freeTestCases['items']);
lib/results/freeTestCases.php:        $gui->path_info = $tproject_mgr->tree_manager->get_full_path_verbose($tcaseSet);
lib/results/freeTestCases.php:  	    $gui->resultSet = $gui->freeTestCases['items'];
lib/results/freeTestCases.php:$gui->tproject_name = $args->tproject_name;
lib/results/freeTestCases.php:$gui->pageTitle = lang_get('report_free_testcases_on_testproject');
lib/results/freeTestCases.php:$gui->warning_msg = lang_get($msg_key);
lib/results/freeTestCases.php:$smarty->assign('gui',$gui);
lib/results/freeTestCases.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/results/freeTestCases.php:	$args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/results/freeTestCases.php:    $args->tproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : '';
lib/results/freeTestCases.php:	return $user->hasRight($db,'testplan_metrics');
lib/api/xmlrpc.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/xmlrpc.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/xmlrpc.class.php: *  20100731 - asimon - BUGID 3644 (additional fix for BUGID 2607)
lib/api/xmlrpc.class.php: *	20100715 - franciscom - BUGID 3604 - getTestCasesForTestPlan()
lib/api/xmlrpc.class.php: *	20100711 - franciscom - BUGID 3564 - addTestCaseToTestPlan()
lib/api/xmlrpc.class.php: *                          BUGID 2607 - UTF8 settings for MySQL
lib/api/xmlrpc.class.php: *							BUGID 3544: deleteExecution doesn't handle missing execution id - checkExecutionID()
lib/api/xmlrpc.class.php: *	20100705 - franciscom - BUGID  - getTestPlanPlatforms() typo error
lib/api/xmlrpc.class.php: * 	20100704 - franciscom - BUGID 3565 - createTestPlan() typo and logic error
lib/api/xmlrpc.class.php: *	20100618 - franciscom - contribution refactored doesUserExist(), checkDevKey()
lib/api/xmlrpc.class.php: *  20100613 - franciscom - BUGID 2845: buildname option in reportTCResult will never be used
lib/api/xmlrpc.class.php: *	20100610 - eloff - added getTotalsForTestPlan() method
lib/api/xmlrpc.class.php: *	20100608 - franciscom - reportTCResult() writes always tcversion_number=1
lib/api/xmlrpc.class.php: *	20100514 - franciscom - BUGID 3454 - Contribution refactor class to be able to be extended to create other server.
lib/api/xmlrpc.class.php: *	20100513 - franciscom - fixed missing properties error on userHasRight()
lib/api/xmlrpc.class.php: *							BUGID 3455 - BUGID 3456
lib/api/xmlrpc.class.php: *	20100415 - franciscom - BUGID 3385 - contribution - getTestPlanPlatforms() (refactored)
lib/api/xmlrpc.class.php: *	20100328 - franciscom - BUGID 2645 - contribution - getTestSuitesForTestSuite()
lib/api/xmlrpc.class.php: *	20100308 - franciscom - BUGID 3243 - checkPlatformIdentity()
lib/api/xmlrpc.class.php: *	20100205 - franciscom - BUGID 3140 - _checkTCIDAndTPIDValid()	
lib/api/xmlrpc.class.php: *	20091228 - franciscom - checkReqSpecQuality() - refactoring due to req versioning feature
lib/api/xmlrpc.class.php: *	20091212 - franciscom - BUGID 2998 - contribution - getTestSuiteByID()
lib/api/xmlrpc.class.php: *  20091128 - franciscom - getTestCaseIDBy() - added testcasepathname
lib/api/xmlrpc.class.php: *  20091113 - franciscom - work for adding overwrite argument to reportTCResult() started.
lib/api/xmlrpc.class.php: *  20090917 - franciscom - reportTCResult() manages platform info
lib/api/xmlrpc.class.php: *	20090902 - franciscom - test case preconditions field
lib/api/xmlrpc.class.php: *	20090804 - franciscom - deleteExecution() - new method (need more work)
lib/api/xmlrpc.class.php: *	20090801 - franciscom - getTestCasesForTestPlan() allows keyword passed by name
lib/api/xmlrpc.class.php: *	20090727 - franciscom - added contribution BUGID  - reportTCResult() accepts CF info
lib/api/xmlrpc.class.php: *	20090726 - franciscom - added contribution BUGID 2719 - getFullPath()
lib/api/xmlrpc.class.php: *	20090609 - franciscom - createTestPlan() - new method
lib/api/xmlrpc.class.php: *	20090521 - franciscom - refactoring to manage DB_TABLE_PREFIX
lib/api/xmlrpc.class.php: *	20090521 - franciscom - getTestCase() - development started
lib/api/xmlrpc.class.php: *	20090426 - franciscom - getLastExecutionResult(), changed return type when there is not execution.
lib/api/xmlrpc.class.php: *	                        BUGID 2441 - getTestProjectByName(), getTestPlanByName() - new methods.
lib/api/xmlrpc.class.php: *	20090420 - franciscom - BUGID 2158 - full implementation of getTestCaseCustomFieldDesignValue()
lib/api/xmlrpc.class.php: *	20090411 - franciscom - BUGID 2369 - changes in addTestCaseToTestPlan()
lib/api/xmlrpc.class.php: *	20090314 - franciscom - createTestSuite()
lib/api/xmlrpc.class.php: *	20090303 - franciscom - BUGID 2179
lib/api/xmlrpc.class.php: *	20090218 - franciscom - Contribution by JaskaJ - BUGID 2127 - getTestCaseAttachments() Refactored 
lib/api/xmlrpc.class.php: *	20090214 - franciscom - BUGID 2098 - getTestCasesForTestPlan() - added executiontype parameter
lib/api/xmlrpc.class.php: *	20090209 - franciscom - getTestCasesForTestPlan()
lib/api/xmlrpc.class.php: *	                        reportTCResult() - contribution by hnishiyama - optional bug id 
lib/api/xmlrpc.class.php: *	20090209 - franciscom - getTestCasesForTestSuite() - refactoring
lib/api/xmlrpc.class.php: *	20090208 - franciscom - reading status from configuration using config_get()
lib/api/xmlrpc.class.php: *	20090126 - franciscom - added some contributions by hnishiyama. 
lib/api/xmlrpc.class.php: *	20090125 - franciscom - getLastTestResult() -> getLastExecutionResult()
lib/api/xmlrpc.class.php: *	20090122 - franciscom - assignRequirements()
lib/api/xmlrpc.class.php: *	20090117 - franciscom - createTestProject()
lib/api/xmlrpc.class.php: *	20090116 - franciscom - getFirstLevelTestSuitesForTestProject()
lib/api/xmlrpc.class.php: *	                        getTestCaseIDByName() - added testprojectname param
lib/api/xmlrpc.class.php: *	20090113 - franciscom - BUGID 1982 - addTestCaseToTestPlan()
lib/api/xmlrpc.class.php: *	20090106 - franciscom - createTestCase() - first implementation
lib/api/xmlrpc.class.php: *	20080409 - azl - implement using the testsuitename param with the getTestCaseIDByName method
lib/api/xmlrpc.class.php: *	20080309 - sbouffard - contribution - BUGID 1420: added getTestCasesForTestPlan (refactored by franciscom)
lib/api/xmlrpc.class.php: *	20080307 - franciscom - now is possible to use test case external or internal ID
lib/api/xmlrpc.class.php: *	20080306 - franciscom - BUGID 1421
lib/api/xmlrpc.class.php: *	20080305 - franciscom - minor code refactoring
lib/api/xmlrpc.class.php: *	20080103 - franciscom - fixed minor bugs due to refactoring
lib/api/xmlrpc.class.php: *	20080115 - havlatm - 0001296: API table refactoring 
lib/api/xmlrpc.class.php: * IXR is the class used for the XML-RPC server 
lib/api/xmlrpc.class.php:require_once(dirname(__FILE__) . "/../../third_party/xml-rpc/class-IXR.php");
lib/api/xmlrpc.class.php: * The entry class for serving XML-RPC Requests
lib/api/xmlrpc.class.php:	/**#@-*/
lib/api/xmlrpc.class.php:		$this->dbObj = new database(DB_TYPE);
lib/api/xmlrpc.class.php:		$this->dbObj->db->SetFetchMode(ADODB_FETCH_ASSOC);
lib/api/xmlrpc.class.php:		$this->_connectToDB();
lib/api/xmlrpc.class.php:		$this->tcaseMgr=new testcase($this->dbObj);
lib/api/xmlrpc.class.php:	    $this->tprojectMgr=new testproject($this->dbObj);
lib/api/xmlrpc.class.php:	    $this->tplanMgr=new testplan($this->dbObj);
lib/api/xmlrpc.class.php:	    $this->reqSpecMgr=new requirement_spec_mgr($this->dbObj);
lib/api/xmlrpc.class.php:        $this->reqMgr=new requirement_mgr($this->dbObj);
lib/api/xmlrpc.class.php:		$this->tables = $this->tcaseMgr->getDBTables();
lib/api/xmlrpc.class.php:            $this->statusCode[$key]=$resultsCfg['status_code'][$key];  
lib/api/xmlrpc.class.php:        if( isset($this->statusCode['not_run']) )
lib/api/xmlrpc.class.php:            unset($this->statusCode['not_run']);  
lib/api/xmlrpc.class.php:        $this->codeStatus=array_flip($this->statusCode);
lib/api/xmlrpc.class.php:	    $this->methods = array( 'tl.reportTCResult' => 'this:reportTCResult',
lib/api/xmlrpc.class.php:		$this->methods += $callbacks;
lib/api/xmlrpc.class.php:		$this->IXR_Server($this->methods);		
lib/api/xmlrpc.class.php:		$this->args = $args;
lib/api/xmlrpc.class.php:			$this->args[self::$buildIDParamName] = $buildID;			
lib/api/xmlrpc.class.php:			$this->errors[] = new IXR_Error(INVALID_BUILDID, INVALID_BUILDID_STR);
lib/api/xmlrpc.class.php:			$this->args[self::$testCaseIDParamName] = $tcaseID;			
lib/api/xmlrpc.class.php:	    $tplan_id=$this->args[self::$testPlanIDParamName];
lib/api/xmlrpc.class.php:        $maxbuildid = $this->tplanMgr->get_max_build_id($tplan_id);
lib/api/xmlrpc.class.php:	        $this->_setBuildID($maxbuildid);  
lib/api/xmlrpc.class.php:	 *  20100731 - asimon - BUGID 3644 (additional fix for BUGID 2607)
lib/api/xmlrpc.class.php:	 *  20100711 - franciscom - BUGID 2607 - UTF8 settings for MySQL
lib/api/xmlrpc.class.php:		if(true == $this->testMode)
lib/api/xmlrpc.class.php:		    $this->dbObj->connect(TEST_DSN, TEST_DB_HOST, TEST_DB_USER, TEST_DB_PASS, TEST_DB_NAME);
lib/api/xmlrpc.class.php:		    $this->dbObj->connect(DSN, DB_HOST, DB_USER, DB_PASS, DB_NAME);
lib/api/xmlrpc.class.php:		// asimon - BUGID 3644 & 2607 - $charSet was undefined here
lib/api/xmlrpc.class.php:		if((DB_TYPE == 'mysql') && ($charSet == 'UTF-8'))
lib/api/xmlrpc.class.php:		    $this->dbObj->exec_query("SET CHARACTER SET utf8");
lib/api/xmlrpc.class.php:		    $this->dbObj->exec_query("SET collation_connection = 'utf8_general_ci'");
lib/api/xmlrpc.class.php:	    if(!$this->_isDevKeyPresent())
lib/api/xmlrpc.class.php:	    	$this->errors[] = new IXR_ERROR(NO_DEV_KEY, $messagePrefix . NO_DEV_KEY_STR);
lib/api/xmlrpc.class.php:	    	$this->devKey = $this->args[self::$devKeyParamName];
lib/api/xmlrpc.class.php:	    if(!$this->_isDevKeyValid($this->devKey))
lib/api/xmlrpc.class.php:	    	$this->errors[] = new IXR_Error(INVALID_AUTH, $messagePrefix . INVALID_AUTH_STR);
lib/api/xmlrpc.class.php:	    	$this->user = tlUser::getByID($this->dbObj,$this->userID);		    	
lib/api/xmlrpc.class.php:      	$tprojectid = $this->args[self::$testProjectIDParamName];
lib/api/xmlrpc.class.php:		$tplanid = isset($this->args[self::$testPlanIDParamName]) ? $this->args[self::$testPlanIDParamName] : null;
lib/api/xmlrpc.class.php:    	if(!$this->user->hasRight($this->dbObj,$roleQuestion,$tprojectid, $tplanid))
lib/api/xmlrpc.class.php:    		$this->errors[] = new IXR_Error(INSUFFICIENT_RIGHTS, INSUFFICIENT_RIGHTS_STR);
lib/api/xmlrpc.class.php:    	if(!$this->_isTestCaseNamePresent())
lib/api/xmlrpc.class.php:    	  	$this->errors[] = new IXR_Error(NO_TESTCASENAME, NO_TESTCASENAME_STR);
lib/api/xmlrpc.class.php:    	    $testCaseName = $this->args[self::$testCaseNameParamName];
lib/api/xmlrpc.class.php:    	    	$this->errors[] = new IXR_Error(TESTCASENAME_NOT_STRING, TESTCASENAME_NOT_STRING_STR);
lib/api/xmlrpc.class.php:		    if( ($status=$this->_isStatusPresent()) )
lib/api/xmlrpc.class.php:		        if( !($status=$this->_isStatusValid($this->args[self::$statusParamName])))
lib/api/xmlrpc.class.php:		        	$msg = sprintf(INVALID_STATUS_STR,$this->args[self::$statusParamName]);
lib/api/xmlrpc.class.php:		        	$this->errors[] = new IXR_Error(INVALID_STATUS, $msg);
lib/api/xmlrpc.class.php:        	    $this->errors[] = new IXR_Error(NO_STATUS, NO_STATUS_STR);
lib/api/xmlrpc.class.php:        $status_ok=$this->_isTestCaseIDPresent();
lib/api/xmlrpc.class.php:            $tcaseid = $this->args[self::$testCaseIDParamName];
lib/api/xmlrpc.class.php:            if(!$this->_isTestCaseIDValid($tcaseid))
lib/api/xmlrpc.class.php:            	$this->errors[] = new IXR_Error(INVALID_TCASEID, $msg . INVALID_TCASEID_STR);
lib/api/xmlrpc.class.php:        	$this->errors[] = new IXR_Error(NO_TCASEID, $msg . NO_TCASEID_STR);
lib/api/xmlrpc.class.php:    	if(!$this->_isTestPlanIDPresent())
lib/api/xmlrpc.class.php:    		$this->errors[] = new IXR_Error(NO_TPLANID, $msg);
lib/api/xmlrpc.class.php:		    $tplanid = $this->dbObj->prepare_int($this->args[self::$testPlanIDParamName]);
lib/api/xmlrpc.class.php:        	$query = "SELECT id FROM {$this->tables['testplans']} WHERE id={$tplanid}";
lib/api/xmlrpc.class.php:        	$result = $this->dbObj->fetchFirstRowSingleColumn($query, "id");         	
lib/api/xmlrpc.class.php:        		  $this->errors[] = new IXR_Error(INVALID_TPLANID, $msg);
lib/api/xmlrpc.class.php:				if( $this->checkGuess() && 
lib/api/xmlrpc.class.php:					(!$this->_isBuildIDPresent() &&  
lib/api/xmlrpc.class.php:				     !$this->_isParamPresent(self::$buildNameParamName,$messagePrefix)))
lib/api/xmlrpc.class.php:					$status = $this->_setBuildID2Latest();
lib/api/xmlrpc.class.php:    	if(!($status=$this->_isTestProjectIDPresent()))
lib/api/xmlrpc.class.php:    		  $this->errors[] = new IXR_Error(NO_TESTPROJECTID, $messagePrefix . NO_TESTPROJECTID_STR);
lib/api/xmlrpc.class.php:		    $testprojectid = $this->dbObj->prepare_int($this->args[self::$testProjectIDParamName]);
lib/api/xmlrpc.class.php:        	$query = "SELECT id FROM {$this->tables['testprojects']} WHERE id={$testprojectid}";
lib/api/xmlrpc.class.php:        	$result = $this->dbObj->fetchFirstRowSingleColumn($query, "id");         	
lib/api/xmlrpc.class.php:        		$this->errors[] = new IXR_Error(INVALID_TESTPROJECTID, $msg);
lib/api/xmlrpc.class.php:    	if(!($status=$this->_isTestSuiteIDPresent()))
lib/api/xmlrpc.class.php:    		$this->errors[] = new IXR_Error(NO_TESTSUITEID, $messagePrefix . NO_TESTSUITEID_STR);
lib/api/xmlrpc.class.php:            $tsuiteMgr = new testsuite($this->dbObj);
lib/api/xmlrpc.class.php:	        $node_info = $tsuiteMgr->get_by_id($this->args[self::$testSuiteIDParamName]);
lib/api/xmlrpc.class.php:  		        $msg .= sprintf(INVALID_TESTSUITEID_STR, $this->args[self::$testSuiteIDParamName]);
lib/api/xmlrpc.class.php: 	            $this->errors[] = new IXR_Error(INVALID_TESTSUITEID, $msg);
lib/api/xmlrpc.class.php:    	return($this->_isGuessPresent() ? $this->args[self::$guessParamName] : self::BUILD_GUESS_DEFAULT_MODE);	
lib/api/xmlrpc.class.php:	 * 20100613 - franciscom - BUGID 2845: buildname option in reportTCResult will never be used
lib/api/xmlrpc.class.php:        $tplan_id=$this->args[self::$testPlanIDParamName];
lib/api/xmlrpc.class.php:      	$buildQty = $this->tplanMgr->getNumberOfBuilds($tplan_id);
lib/api/xmlrpc.class.php:			$tplan_info = $this->tplanMgr->get_by_id($tplan_id);
lib/api/xmlrpc.class.php:            $this->errors[] = new IXR_Error(TPLAN_HAS_NO_BUILDS,$msg);
lib/api/xmlrpc.class.php:	   		if(!$this->_isBuildIDPresent())
lib/api/xmlrpc.class.php:				if($this->_isBuildNamePresent())
lib/api/xmlrpc.class.php:       	            $bname = trim($this->args[self::$buildNameParamName]);
lib/api/xmlrpc.class.php:        	        $buildInfo=$this->tplanMgr->get_build_by_name($tplan_id,$bname); 
lib/api/xmlrpc.class.php:            			$this->errors[] = new IXR_Error(BUILDNAME_DOES_NOT_EXIST,$msg);
lib/api/xmlrpc.class.php:        	            $this->args[self::$buildIDParamName]=$buildInfo['id'];
lib/api/xmlrpc.class.php:				if(false == $this->checkGuess())   		
lib/api/xmlrpc.class.php:					$this->errors[] = new IXR_Error(BUILDID_NOGUESS, BUILDID_NOGUESS_STR);
lib/api/xmlrpc.class.php:					$this->errors[] = new IXR_Error(NO_BUILDID, NO_BUILDID_STR);				
lib/api/xmlrpc.class.php:					$setBuildResult = $this->_setBuildID2Latest();
lib/api/xmlrpc.class.php:						$this->errors[] = new IXR_Error(NO_BUILD_FOR_TPLANID, NO_BUILD_FOR_TPLANID_STR);
lib/api/xmlrpc.class.php:	   		    $buildID = $this->dbObj->prepare_int($this->args[self::$buildIDParamName]);
lib/api/xmlrpc.class.php:        	  $buildInfo=$this->tplanMgr->get_build_by_id($tplan_id,$buildID); 
lib/api/xmlrpc.class.php:        	      $tplan_info = $this->tplanMgr->get_by_id($tplan_id);
lib/api/xmlrpc.class.php:				    	  $this->errors[] = new IXR_Error(BAD_BUILD_FOR_TPLAN, $msg);				
lib/api/xmlrpc.class.php:	 *                true: add predefined error code to $this->error[]
lib/api/xmlrpc.class.php:	    $status_ok=(isset($this->args[$pname]) ? true : false);
lib/api/xmlrpc.class.php:	        $this->errors[] = new IXR_Error(MISSING_REQUIRED_PARAMETER, $msg);				      
lib/api/xmlrpc.class.php:    	return(in_array($status, $this->statusCode));
lib/api/xmlrpc.class.php:		    return (isset($this->args[self::$testCaseNameParamName]) ? true : false);
lib/api/xmlrpc.class.php:	      $status=isset($this->args[self::$testCaseExternalIDParamName]) ? true : false;
lib/api/xmlrpc.class.php:    	return (isset($this->args[self::$timeStampParamName]) ? true : false);
lib/api/xmlrpc.class.php:    	return (isset($this->args[self::$buildIDParamName]) ? true : false);
lib/api/xmlrpc.class.php:        $status=isset($this->args[self::$buildNameParamName]) ? true : false;
lib/api/xmlrpc.class.php:    	return (isset($this->args[self::$buildNotesParamName]) ? true : false);
lib/api/xmlrpc.class.php:		return (isset($this->args[self::$testSuiteIDParamName]) ? true : false);
lib/api/xmlrpc.class.php:    	return (isset($this->args[self::$noteParamName]) ? true : false);
lib/api/xmlrpc.class.php:    	return (isset($this->args[self::$testPlanIDParamName]) ? true : false);    	
lib/api/xmlrpc.class.php:    	return (isset($this->args[self::$testProjectIDParamName]) ? true : false);    	
lib/api/xmlrpc.class.php:    	return (isset($this->args[self::$automatedParamName]) ? true : false);    	
lib/api/xmlrpc.class.php:    	return (isset($this->args[self::$testModeParamName]) ? true : false);      
lib/api/xmlrpc.class.php:    	return (isset($this->args[self::$devKeyParamName]) ? true : false);
lib/api/xmlrpc.class.php:		return (isset($this->args[self::$testCaseIDParamName]) ? true : false);
lib/api/xmlrpc.class.php:		$status=isset($this->args[self::$guessParamName]) ? true : false;
lib/api/xmlrpc.class.php:		    return (isset($this->args[self::$testSuiteNameParamName]) ? true : false);
lib/api/xmlrpc.class.php:		return (isset($this->args[self::$deepParamName]) ? true : false);
lib/api/xmlrpc.class.php:		return (isset($this->args[self::$statusParamName]) ? true : false);
lib/api/xmlrpc.class.php:	 *                true: add predefined error code to $this->error[]
lib/api/xmlrpc.class.php:            $tcaseid = $this->dbObj->prepare_int($tcaseid);
lib/api/xmlrpc.class.php:		             " FROM {$this->tables['nodes_hierarchy']} NH, " .
lib/api/xmlrpc.class.php:		             " {$this->tables['node_types']} NT " .
lib/api/xmlrpc.class.php:		    $result = $this->dbObj->fetchFirstRowSingleColumn($query, "id");
lib/api/xmlrpc.class.php:            $this->errors[] = new IXR_Error(TCASEID_NOT_INTEGER, 
lib/api/xmlrpc.class.php:        	$this->userID = null;
lib/api/xmlrpc.class.php:        	$this->devKey = $this->dbObj->prepare_string($devKey);
lib/api/xmlrpc.class.php:        	$query = "SELECT id FROM {$this->tables['users']} WHERE script_key='{$this->devKey}'";
lib/api/xmlrpc.class.php:        	$this->userID = $this->dbObj->fetchFirstRowSingleColumn($query, "id");
lib/api/xmlrpc.class.php:        	if(null == $this->userID)
lib/api/xmlrpc.class.php:    	$tplan_id = $this->args[self::$testPlanIDParamName];
lib/api/xmlrpc.class.php:    	$tcase_id = $this->args[self::$testCaseIDParamName];
lib/api/xmlrpc.class.php:    	$info = $this->tcaseMgr->get_linked_versions($tcase_id,"ALL","ALL",$tplan_id,$platform_id);
lib/api/xmlrpc.class.php:		// $this->errors[]=$info;
lib/api/xmlrpc.class.php:            $this->tcVersionID = key($info);
lib/api/xmlrpc.class.php:            $this->versionNumber = $dummy[$tplan_id][$plat]['version'];
lib/api/xmlrpc.class.php:            // $this->errors[] = $this->tcVersionID;
lib/api/xmlrpc.class.php:            // $this->errors[] = $this->versionNumber;
lib/api/xmlrpc.class.php:            $tplan_info = $this->tplanMgr->get_by_id($tplan_id);
lib/api/xmlrpc.class.php:            $tcase_info = $this->tcaseMgr->get_by_id($tcase_id);
lib/api/xmlrpc.class.php:            	               $this->args[self::$testCaseExternalIDParamName],$tplan_info['name'],$tplan_id);          
lib/api/xmlrpc.class.php:            	$this->errors[] = new IXR_Error(TCASEID_NOT_IN_TPLANID, $msg);
lib/api/xmlrpc.class.php:            	               $this->args[self::$testCaseExternalIDParamName],
lib/api/xmlrpc.class.php:            	$this->errors[] = new IXR_Error(TCASEID_NOT_IN_TPLANID_FOR_PLATFORM, $msg);
lib/api/xmlrpc.class.php:        $status_ok=$this->_runChecks($checkFunctions,$messagePrefix);
lib/api/xmlrpc.class.php:            $status_ok=$this->_isParamPresent(self::$buildNameParamName,$messagePrefix,self::SET_ERROR);            
lib/api/xmlrpc.class.php:        $status_ok=$this->_runChecks($checkFunctions);       
lib/api/xmlrpc.class.php:          if( !($status_ok = $this->$pfn($messagePrefix)) )
lib/api/xmlrpc.class.php: 	    $msg_prefix="({$operation}) - ";
lib/api/xmlrpc.class.php:	    $this->_setArgs($args);
lib/api/xmlrpc.class.php:        $status_ok=$this->_runChecks($checkFunctions,$msg_prefix);       
lib/api/xmlrpc.class.php:            $testPlanID = $this->args[self::$testPlanIDParamName];
lib/api/xmlrpc.class.php:            $build_id = $this->tplanMgr->get_max_build_id($testPlanID);
lib/api/xmlrpc.class.php:                $builds = $this->tplanMgr->get_builds($testPlanID);  
lib/api/xmlrpc.class.php:                $tplan_info=$this->tplanMgr->get_by_id($testPlanID);
lib/api/xmlrpc.class.php:                $this->errors[] = new IXR_Error(TPLAN_HAS_NO_BUILDS,$msg);
lib/api/xmlrpc.class.php:        return $status_ok ? $build_info : $this->errors;
lib/api/xmlrpc.class.php:        $builds = $this->_getBuildsForTestPlan($args);
lib/api/xmlrpc.class.php:        $maxid = -1;
lib/api/xmlrpc.class.php:		$maxkey = -1;
lib/api/xmlrpc.class.php:     *               array('id' => -1)
lib/api/xmlrpc.class.php: 	    $msg_prefix="({$operation}) - ";
lib/api/xmlrpc.class.php:        $this->_setArgs($args);
lib/api/xmlrpc.class.php:        $status_ok=$this->_runChecks($checkFunctions,$msg_prefix) && 
lib/api/xmlrpc.class.php:                   $this->_checkTCIDAndTPIDValid(null,$msg_prefix) &&
lib/api/xmlrpc.class.php:                   $this->userHasRight("mgt_view_tc");       
lib/api/xmlrpc.class.php:            $sql = " SELECT * FROM {$this->tables['executions']} " .
lib/api/xmlrpc.class.php:                   " WHERE testplan_id = {$this->args[self::$testPlanIDParamName]} " .
lib/api/xmlrpc.class.php:                   " SELECT id FROM {$this->tables['nodes_hierarchy']} " .
lib/api/xmlrpc.class.php:                   " WHERE parent_id = {$this->args[self::$testCaseIDParamName]})" .
lib/api/xmlrpc.class.php:            $result = $this->dbObj->fetchFirstRow($sql);
lib/api/xmlrpc.class.php:               // execution id = -1 => test case has not been runned.
lib/api/xmlrpc.class.php:               $resultInfo[]=array('id' => -1);
lib/api/xmlrpc.class.php:        return $status_ok ? $resultInfo : $this->errors;
lib/api/xmlrpc.class.php:		$build_id = $this->args[self::$buildIDParamName];
lib/api/xmlrpc.class.php:		$tester_id =  $this->userID;
lib/api/xmlrpc.class.php:		$status = $this->args[self::$statusParamName];
lib/api/xmlrpc.class.php:		$testplan_id =	$this->args[self::$testPlanIDParamName];
lib/api/xmlrpc.class.php:		$tcversion_id =	$this->tcVersionID;
lib/api/xmlrpc.class.php:		$version_number =	$this->versionNumber;
lib/api/xmlrpc.class.php:		$db_now=$this->dbObj->db_now();
lib/api/xmlrpc.class.php:		if( isset($this->args[self::$platformIDParamName]) )
lib/api/xmlrpc.class.php:			$platform_id = $this->args[self::$platformIDParamName]; 	
lib/api/xmlrpc.class.php:		if($this->_isNotePresent())
lib/api/xmlrpc.class.php:			$notes = $this->dbObj->prepare_string($this->args[self::$noteParamName]);
lib/api/xmlrpc.class.php:		$query = "INSERT INTO {$this->tables['executions']} " .
lib/api/xmlrpc.class.php:		$this->dbObj->exec_query($query);
lib/api/xmlrpc.class.php:		return $this->dbObj->insert_id($this->tables['executions']);		
lib/api/xmlrpc.class.php:		$this->_setArgs($args);
lib/api/xmlrpc.class.php:		$str = "You said: " . $this->args['str'];
lib/api/xmlrpc.class.php:		$this->_setArgs($args);
lib/api/xmlrpc.class.php:        $messagePrefix="({$operation}) - ";
lib/api/xmlrpc.class.php:		$this->_setArgs($args);
lib/api/xmlrpc.class.php:		if($this->_checkCreateBuildRequest($messagePrefix) && 
lib/api/xmlrpc.class.php:		   $this->userHasRight("testplan_create_build"))
lib/api/xmlrpc.class.php:			$testPlanID = $this->args[self::$testPlanIDParamName];
lib/api/xmlrpc.class.php:			$buildName = $this->args[self::$buildNameParamName];					
lib/api/xmlrpc.class.php:			if($this->_isBuildNotePresent())
lib/api/xmlrpc.class.php:				$buildNotes = $this->dbObj->prepare_string($this->args[self::$buildNotesParamName]);
lib/api/xmlrpc.class.php:			if ($this->tplanMgr->check_build_name_existence($testPlanID,$buildName))
lib/api/xmlrpc.class.php:				$insertID = $this->tplanMgr->get_build_id_by_name($testPlanID,$buildName);
lib/api/xmlrpc.class.php:				$insertID = $this->tplanMgr->create_build($testPlanID,$buildName,$buildNotes);
lib/api/xmlrpc.class.php:			return $this->errors;
lib/api/xmlrpc.class.php:		$this->_setArgs($args);		
lib/api/xmlrpc.class.php:		if($this->authenticate())
lib/api/xmlrpc.class.php:			return $this->tprojectMgr->get_all();	
lib/api/xmlrpc.class.php:			return $this->errors;
lib/api/xmlrpc.class.php:        $messagePrefix="(" .__FUNCTION__ . ") - ";
lib/api/xmlrpc.class.php:		$this->_setArgs($args);
lib/api/xmlrpc.class.php:        $status_ok=$this->_runChecks($checkFunctions,$messagePrefix);       
lib/api/xmlrpc.class.php:			$testProjectID = $this->args[self::$testProjectIDParamName];
lib/api/xmlrpc.class.php:			$info=$this->tprojectMgr->get_all_testplans($testProjectID);
lib/api/xmlrpc.class.php:			return $this->errors;
lib/api/xmlrpc.class.php: 	    $msg_prefix="({$operation}) - ";
lib/api/xmlrpc.class.php:        $this->_setArgs($args);
lib/api/xmlrpc.class.php:        $status_ok=$this->_runChecks($checkFunctions,$msg_prefix);       
lib/api/xmlrpc.class.php:            $testPlanID = $this->args[self::$testPlanIDParamName];
lib/api/xmlrpc.class.php:            $dummy = $this->tplanMgr->get_builds($testPlanID);
lib/api/xmlrpc.class.php:        return $status_ok ? $builds : $this->errors;
lib/api/xmlrpc.class.php: 	    $msg_prefix="({$operation}) - ";
lib/api/xmlrpc.class.php:	 	$this->_setArgs($args);
lib/api/xmlrpc.class.php:        $status_ok=$this->_runChecks($checkFunctions,$msg_prefix);       
lib/api/xmlrpc.class.php:			$testPlanID = $this->args[self::$testPlanIDParamName];			
lib/api/xmlrpc.class.php:			$result = $this->tplanMgr->get_testsuites($testPlanID);
lib/api/xmlrpc.class.php:			return $this->errors;
lib/api/xmlrpc.class.php:	    $this->_setArgs($args);
lib/api/xmlrpc.class.php:        $msg_prefix="(" . __FUNCTION__ . ") - ";
lib/api/xmlrpc.class.php:	    if( $this->$checkRequestMethod($msg_prefix) && $this->userHasRight("mgt_modify_product"))
lib/api/xmlrpc.class.php:	        $options->requirement_mgmt=1;
lib/api/xmlrpc.class.php:	        $options->priority_mgmt=1;
lib/api/xmlrpc.class.php:	        $options->automated_execution=1;
lib/api/xmlrpc.class.php:	        $name=htmlspecialchars($this->args[self::$testProjectNameParamName]);
lib/api/xmlrpc.class.php:            $prefix=htmlspecialchars($this->args[self::$testCasePrefixParamName]);
lib/api/xmlrpc.class.php:            $notes=htmlspecialchars($this->args[self::$noteParamName]);
lib/api/xmlrpc.class.php:	        $info=$this->tprojectMgr->create($name,'',$options,$notes,1,$prefix);
lib/api/xmlrpc.class.php:	        return $this->errors;
lib/api/xmlrpc.class.php:      $status_ok=$this->authenticate();
lib/api/xmlrpc.class.php:      $name=$this->args[self::$testProjectNameParamName];
lib/api/xmlrpc.class.php:      $prefix=$this->args[self::$testCasePrefixParamName];
lib/api/xmlrpc.class.php:          $check_op=$this->tprojectMgr->checkNameSintax($name);
lib/api/xmlrpc.class.php:	           $this->errors[] = new IXR_Error(TESTPROJECTNAME_SINTAX_ERROR, 
lib/api/xmlrpc.class.php:          $check_op=$this->tprojectMgr->checkNameExistence($name);
lib/api/xmlrpc.class.php:	           $this->errors[] = new IXR_Error(TESTPROJECTNAME_EXISTS, 
lib/api/xmlrpc.class.php:	           $this->errors[] = new IXR_Error(TESTPROJECT_TESTCASEPREFIX_IS_EMPTY, 
lib/api/xmlrpc.class.php:           $info=$this->tprojectMgr->get_by_prefix($prefix);
lib/api/xmlrpc.class.php:              $this->errors[] = new IXR_Error(TPROJECT_PREFIX_ALREADY_EXISTS,$msg);
lib/api/xmlrpc.class.php:	 * @param boolean $args["deep"] - optional (default is true)
lib/api/xmlrpc.class.php:	 * @param boolean $args["details"] - optional (default is simple)
lib/api/xmlrpc.class.php: 	    $msg_prefix="({$operation}) - ";
lib/api/xmlrpc.class.php:		$this->_setArgs($args);
lib/api/xmlrpc.class.php:		$status_ok=$this->_runChecks(array('authenticate','checkTestSuiteID'),$msg_prefix);       
lib/api/xmlrpc.class.php:		if( $this->_isParamPresent($key2search) )
lib/api/xmlrpc.class.php:		    $details=$this->args[$key2search];  
lib/api/xmlrpc.class.php:		if($status_ok && $this->userHasRight("mgt_view_tc"))
lib/api/xmlrpc.class.php:			$testSuiteID = $this->args[self::$testSuiteIDParamName];
lib/api/xmlrpc.class.php:            $tsuiteMgr = new testsuite($this->dbObj);
lib/api/xmlrpc.class.php:			if(!$this->_isDeepPresent() || $this->args[self::$deepParamName] )
lib/api/xmlrpc.class.php:			return $tsuiteMgr->$pfn($testSuiteID,$details);
lib/api/xmlrpc.class.php:			return $this->errors;
lib/api/xmlrpc.class.php:  * @param string $args["testsuitename"] - optional
lib/api/xmlrpc.class.php:  * @param string $args["testprojectname"] - optional
lib/api/xmlrpc.class.php:  * @param string $args["testcasepathname"] - optional
lib/api/xmlrpc.class.php:  *               pieces separator -> :: -> default value of getByPathName()
lib/api/xmlrpc.class.php:		$msg_prefix="(" .__FUNCTION__ . ") - ";
lib/api/xmlrpc.class.php:      	$this->_setArgs($args);
lib/api/xmlrpc.class.php:      	$status_ok=$this->_runChecks($checkFunctions,$msg_prefix) && $this->userHasRight("mgt_view_tc");       
lib/api/xmlrpc.class.php:          	$testCaseName = $this->args[self::$testCaseNameParamName];
lib/api/xmlrpc.class.php:          	$testCaseMgr = new testcase($this->dbObj);
lib/api/xmlrpc.class.php:  		        $optional[$key]=$this->_isParamPresent($key) ? trim($this->args[$key]) : '';
lib/api/xmlrpc.class.php:            // 20091128 - franciscom
lib/api/xmlrpc.class.php:          		$dummy = $testCaseMgr->getByPathName($optional[self::$testCasePathNameParamName]);
lib/api/xmlrpc.class.php:          		$result = $testCaseMgr->get_by_name($testCaseName,$optional[self::$testSuiteNameParamName],
lib/api/xmlrpc.class.php:          	    $this->errors[] = new IXR_ERROR(NO_TESTCASE_BY_THIS_NAME, 
lib/api/xmlrpc.class.php:          	    return $this->errors;
lib/api/xmlrpc.class.php:      return $status_ok ? $result : $this->errors; 
lib/api/xmlrpc.class.php:  	  * @param string $args["preconditions"] - optional
lib/api/xmlrpc.class.php:      * @param string $args["importance"] - optional - see const.inc.php for domain
lib/api/xmlrpc.class.php:      * @param string $args["execution"] - optional - see ... for domain
lib/api/xmlrpc.class.php:      * @param string $args["order'] - optional
lib/api/xmlrpc.class.php:      * @param string $args["internalid"] - optional - do not use
lib/api/xmlrpc.class.php:      * @param string $args["checkduplicatedname"] - optional
lib/api/xmlrpc.class.php:      * @param string $args["actiononduplicatedname"] - optional
lib/api/xmlrpc.class.php:      * @return string $resultInfo['operation'] - verbose operation
lib/api/xmlrpc.class.php:      * @return boolean $resultInfo['status'] - verbose operation
lib/api/xmlrpc.class.php:      * @return int $resultInfo['id'] - test case internal ID (Database ID)
lib/api/xmlrpc.class.php:      * @return string $resultInfo['additionalInfo']['msg'] - for debug 
lib/api/xmlrpc.class.php:      * @return boolean $resultInfo['additionalInfo']['has_duplicate'] - for debug 
lib/api/xmlrpc.class.php: 	    $msg_prefix="({$operation}) - ";
lib/api/xmlrpc.class.php:	    $this->_setArgs($args);
lib/api/xmlrpc.class.php:        $status_ok=$this->_runChecks($checkFunctions,$msg_prefix) && $this->userHasRight("mgt_modify_tc");
lib/api/xmlrpc.class.php:      		    if(!$this->_isParamPresent($key))
lib/api/xmlrpc.class.php:      		        $this->errors[] = new IXR_Error(MISSING_REQUIRED_PARAMETER, $msg);				      
lib/api/xmlrpc.class.php:            $author_id = tlUser::doesUserExist($this->dbObj,$this->args[self::$authorLoginParamName]);		    	
lib/api/xmlrpc.class.php:            	$msg = $msg_prefix . sprintf(NO_USER_BY_THIS_LOGIN_STR,$this->args[self::$authorLoginParamName]);
lib/api/xmlrpc.class.php:     	    	$this->errors[] = new IXR_Error(NO_USER_BY_THIS_LOGIN, $msg);				
lib/api/xmlrpc.class.php:        	$keywordSet=$this->getKeywordSet($this->args[self::$testProjectIDParamName]);
lib/api/xmlrpc.class.php:		            if($this->_isParamPresent($key))
lib/api/xmlrpc.class.php:		                $opt[$key]=$this->args[$key];      
lib/api/xmlrpc.class.php:            $op_result=$this->tcaseMgr->create($this->args[self::$testSuiteIDParamName],
lib/api/xmlrpc.class.php:                                               $this->args[self::$testCaseNameParamName],
lib/api/xmlrpc.class.php:                                               $this->args[self::$summaryParamName],
lib/api/xmlrpc.class.php:                                               $this->args[self::$stepsParamName],
lib/api/xmlrpc.class.php:        return ($status_ok ? $resultInfo : $this->errors);
lib/api/xmlrpc.class.php:     * @param string $args["status"] - status is {@link $validStatusList}
lib/api/xmlrpc.class.php:	 * @param int $args["buildid"] - optional.
lib/api/xmlrpc.class.php:	 * @param int $args["buildname"] - optional.
lib/api/xmlrpc.class.php:	 * @param string $args["notes"] - optional
lib/api/xmlrpc.class.php:	 * @param bool $args["guess"] - optional defining whether to guess optinal params or require them 
lib/api/xmlrpc.class.php:	 * @param string $args["bugid"] - optional
lib/api/xmlrpc.class.php:     * @param string $args["platformid"] - optional, if not present platformname must be present
lib/api/xmlrpc.class.php:	 * @param string $args["platformname"] - optional, if not present platformid must be present
lib/api/xmlrpc.class.php:     * @param string $args["customfields"] - optional
lib/api/xmlrpc.class.php:     * @param boolean $args["overwrite"] - optional, if present and true, then last execution
lib/api/xmlrpc.class.php:	    $msg_prefix="({$operation}) - ";
lib/api/xmlrpc.class.php:		$this->_setArgs($args);              
lib/api/xmlrpc.class.php:        $status_ok=$this->_runChecks($checkFunctions,$msg_prefix);       
lib/api/xmlrpc.class.php:        	$platformSet = $this->tplanMgr->getPlatforms($this->args[self::$testPlanIDParamName],
lib/api/xmlrpc.class.php:	    		$status_ok = $this->checkPlatformIdentity($this->args[self::$testPlanIDParamName],$platformSet,$msg_prefix);
lib/api/xmlrpc.class.php:					$targetPlatform[$this->args[self::$platformIDParamName]] = $platformSet[$this->args[self::$platformIDParamName]];
lib/api/xmlrpc.class.php:			$status_ok = $status_ok && $this->_checkTCIDAndTPIDValid($targetPlatform,$msg_prefix);
lib/api/xmlrpc.class.php:		if($status_ok && $this->userHasRight("testplan_execute"))
lib/api/xmlrpc.class.php:    	    if($this->_isParamPresent(self::$overwriteParamName))
lib/api/xmlrpc.class.php:    	    	$executionID = $this->_updateResult();
lib/api/xmlrpc.class.php:            	$executionID = $this->_insertResultToDB();			
lib/api/xmlrpc.class.php:    	    if($this->_isParamPresent(self::$bugIDParamName))
lib/api/xmlrpc.class.php:    	    	$bugID = $this->args[self::$bugIDParamName];
lib/api/xmlrpc.class.php:		    	$resultInfo[0]["bugidstatus"] = $this->_insertExecutionBug($executionID, $bugID);
lib/api/xmlrpc.class.php:    	    if($this->_isParamPresent(self::$customFieldsParamName))
lib/api/xmlrpc.class.php:    	    		$this->_insertCustomFieldExecValues($executionID);   
lib/api/xmlrpc.class.php:			return $this->errors;			
lib/api/xmlrpc.class.php:		$this->_setArgs($args);
lib/api/xmlrpc.class.php:		if(!$this->_isTestModePresent())
lib/api/xmlrpc.class.php:			$this->errors[] = new IXR_ERROR(NO_TEST_MODE, NO_TEST_MODE_STR);
lib/api/xmlrpc.class.php:			$this->testMode = $this->args[self::$testModeParamName];
lib/api/xmlrpc.class.php:	 * test case external id  (PREFIX-NNNN) 
lib/api/xmlrpc.class.php:        // Three Cases - Internal ID, External ID, No Id        
lib/api/xmlrpc.class.php:	    if($this->_isTestCaseIDPresent())
lib/api/xmlrpc.class.php:		      $tcaseID = $this->args[self::$testCaseIDParamName];
lib/api/xmlrpc.class.php:		elseif ($this->_isTestCaseExternalIDPresent())
lib/api/xmlrpc.class.php:			$tcaseExternalID = $this->args[self::$testCaseExternalIDParamName]; 
lib/api/xmlrpc.class.php:		    $glueCharacter=$tcaseCfg->glue_character;
lib/api/xmlrpc.class.php:		    $tcaseID=$this->tcaseMgr->getInternalID($tcaseExternalID,$glueCharacter);
lib/api/xmlrpc.class.php:	        if($this->_isTestCaseIDValid($tcaseID,$messagePrefix))
lib/api/xmlrpc.class.php:	            $this->_setTestCaseID($tcaseID);  
lib/api/xmlrpc.class.php:		          $this->errors[] = $error_msg; 
lib/api/xmlrpc.class.php:	 * @param int $args["testcaseid"] - optional
lib/api/xmlrpc.class.php:	 * @param int $args["buildid"] - optional
lib/api/xmlrpc.class.php:	 * @param int $args["keywordid"] - optional mutual exclusive with $args["keywordname"]
lib/api/xmlrpc.class.php:	 * @param int $args["keywords"] - optional  mutual exclusive with $args["keywordid"]
lib/api/xmlrpc.class.php:	 * @param boolean $args["executed"] - optional
lib/api/xmlrpc.class.php:	 * @param int $args["$assignedto"] - optional
lib/api/xmlrpc.class.php:	 * @param string $args["executestatus"] - optional
lib/api/xmlrpc.class.php:	 * @param array $args["executiontype"] - optional
lib/api/xmlrpc.class.php:	 * @param array $args["getstepinfo"] - optional - default false
lib/api/xmlrpc.class.php: 	    $msg_prefix="({$operation}) - ";
lib/api/xmlrpc.class.php:        $this->_setArgs($args);
lib/api/xmlrpc.class.php:		if(!$this->_checkGetTestCasesForTestPlanRequest($msg_prefix) && $this->userHasRight("mgt_view_tc"))
lib/api/xmlrpc.class.php:			return $this->errors;
lib/api/xmlrpc.class.php:		$tplanid=$this->args[self::$testPlanIDParamName];
lib/api/xmlrpc.class.php:		$tplanInfo=$this->tplanMgr->tree_manager->get_node_hierarchy_info($tplanid);
lib/api/xmlrpc.class.php:		    if($this->_isParamPresent($key))
lib/api/xmlrpc.class.php:		        $opt[$key]=$this->args[$key];      
lib/api/xmlrpc.class.php:        $keywordList=$this->getKeywordSet($tplanInfo['parent_id']);
lib/api/xmlrpc.class.php:		$recordset=$this->tplanMgr->get_linked_tcversions($tplanid,$filters,$options);
lib/api/xmlrpc.class.php:		$status=$this->authenticate();
lib/api/xmlrpc.class.php:	        $status &=$this->checkTestPlanID($messagePrefix);
lib/api/xmlrpc.class.php:	        if($status && $this->_isTestCaseIDPresent($messagePrefix))
lib/api/xmlrpc.class.php:	            $status &=$this->_checkTCIDAndTPIDValid(null,$messagePrefix);
lib/api/xmlrpc.class.php:	        if($status && $this->_isBuildIDPresent($messagePrefix))  
lib/api/xmlrpc.class.php:	            $status &=$this->checkBuildID($messagePrefix);
lib/api/xmlrpc.class.php:        $msg_prefix="(" .__FUNCTION__ . ") - ";
lib/api/xmlrpc.class.php:		$this->_setArgs($args);		
lib/api/xmlrpc.class.php:        $status_ok=$this->_runChecks($checkFunctions,$msg_prefix);       
lib/api/xmlrpc.class.php:		    $status_ok=$this->_isParamPresent(self::$customFieldNameParamName,$msg_prefix,self::SET_ERROR);
lib/api/xmlrpc.class.php:            $ret = $this->checkTestCaseAncestry();
lib/api/xmlrpc.class.php:                $status_ok=$this->_checkGetTestCaseCustomFieldDesignValueRequest($msg_prefix);
lib/api/xmlrpc.class.php:                $this->errors[] = new IXR_Error($ret['error_code'], $msg_prefix . $ret['error_msg']); 
lib/api/xmlrpc.class.php:		if($status_ok && $this->userHasRight("mgt_view_tc"))
lib/api/xmlrpc.class.php:		    if( $this->_isParamPresent(self::$detailsParamName) )
lib/api/xmlrpc.class.php:		        $details=$this->args[self::$detailsParamName];  
lib/api/xmlrpc.class.php:            $cf_name=$this->args[self::$customFieldNameParamName];
lib/api/xmlrpc.class.php:            $tproject_id=$this->args[self::$testProjectIDParamName];
lib/api/xmlrpc.class.php:            $tcase_id=$this->args[self::$testCaseIDParamName];
lib/api/xmlrpc.class.php:		    $cfield_mgr=$this->tprojectMgr->cfield_mgr;
lib/api/xmlrpc.class.php:            $cfinfo=$cfield_mgr->get_by_name($cf_name);
lib/api/xmlrpc.class.php:            $cfieldSpec=$this->tcaseMgr->get_linked_cfields_at_design($tcase_id,null,$filters,$tproject_id);
lib/api/xmlrpc.class.php:            // $cf_map=$cfield_mgr->string_custom_field_value($cfieldSpec[$cfield['id']],$tcase_id);
lib/api/xmlrpc.class.php:			return $this->errors;
lib/api/xmlrpc.class.php:     * - Custom Field exists ?
lib/api/xmlrpc.class.php:     * - Can be used on a test case ?
lib/api/xmlrpc.class.php:     * - Custom Field scope includes 'design' ?
lib/api/xmlrpc.class.php:     * - is linked to testproject that owns test case ?
lib/api/xmlrpc.class.php:	    // $status_ok=$this->authenticate($messagePrefix);
lib/api/xmlrpc.class.php:        $cf_name=$this->args[self::$customFieldNameParamName];
lib/api/xmlrpc.class.php:        // - Custom Field exists ?
lib/api/xmlrpc.class.php:        // - Can be used on a test case ?
lib/api/xmlrpc.class.php:        // - Custom Field scope includes 'design' ?
lib/api/xmlrpc.class.php:        // - is linked to testproject that owns test case ?
lib/api/xmlrpc.class.php:        // - Custom Field exists ?
lib/api/xmlrpc.class.php:        $cfield_mgr=$this->tprojectMgr->cfield_mgr; // ($this->dbObj);
lib/api/xmlrpc.class.php:        $cfinfo=$cfield_mgr->get_by_name($cf_name);
lib/api/xmlrpc.class.php:	         $this->errors[] = new IXR_Error(NO_CUSTOMFIELD_BY_THIS_NAME, $messagePrefix . $msg);
lib/api/xmlrpc.class.php:        // $this->errors[] = current($cfinfo);
lib/api/xmlrpc.class.php:        // - Can be used on a test case ?
lib/api/xmlrpc.class.php:	             $this->errors[] = new IXR_Error(CUSTOMFIELD_NOT_APP_FOR_NODE_TYPE, $messagePrefix . $msg);
lib/api/xmlrpc.class.php:        // - Custom Field scope includes 'design' ?
lib/api/xmlrpc.class.php:	             $this->errors[] = new IXR_Error(CUSTOMFIELD_HAS_NOT_DESIGN_SCOPE, $messagePrefix . $msg);
lib/api/xmlrpc.class.php:        // - is linked to testproject that owns test case ?
lib/api/xmlrpc.class.php:            $allCF = $cfield_mgr->get_linked_to_testproject($this->args[self::$testProjectIDParamName]);
lib/api/xmlrpc.class.php:                $tproject_info = $this->tprojectMgr->get_by_id($this->args[self::$testProjectIDParamName]);
lib/api/xmlrpc.class.php:	                           $cf_name,$tproject_info['name'],$this->args[self::$testProjectIDParamName]);
lib/api/xmlrpc.class.php:	            $this->errors[] = new IXR_Error(CUSTOMFIELD_NOT_ASSIGNED_TO_TESTPROJECT, $messagePrefix . $msg);
lib/api/xmlrpc.class.php:    	if($this->_isParamPresent(self::$keywordNameParamName))
lib/api/xmlrpc.class.php:		else if ($this->_isParamPresent(self::$keywordIDParamName))
lib/api/xmlrpc.class.php:    	    $keywordSet=$this->$kMethod($tproject_id,$this->args[$accessKey]);
lib/api/xmlrpc.class.php:		return $this->getValidKeywordSet($tproject_id,$keywords,true);
lib/api/xmlrpc.class.php:	        $sql = " SELECT keyword,id FROM {$this->tables['keywords']} " .
lib/api/xmlrpc.class.php:	        $keywordMap = $this->dbObj->fetchRowsIntoMap($sql,'keyword');
lib/api/xmlrpc.class.php:        if(!($status=$this->_isParamPresent(self::$versionNumberParamName)))
lib/api/xmlrpc.class.php:            $this->errors[] = new IXR_Error(MISSING_REQUIRED_PARAMETER, $msg);				      
lib/api/xmlrpc.class.php:            $version = $this->args[self::$versionNumberParamName];
lib/api/xmlrpc.class.php:            	$this->errors[] = new IXR_Error(PARAMETER_NOT_INT, $msg);
lib/api/xmlrpc.class.php:                    $this->errors[] = new IXR_Error(VERSION_NOT_VALID,$msg);
lib/api/xmlrpc.class.php:	  * @param args['platformid'] - OPTIONAL Only if  test plan has no platforms
lib/api/xmlrpc.class.php:	  * @param args['executionorder'] - OPTIONAL
lib/api/xmlrpc.class.php:	  * @param args['urgency'] - OPTIONAL
lib/api/xmlrpc.class.php:		$messagePrefix="({$operation}) - ";
lib/api/xmlrpc.class.php:		$this->_setArgs($args);
lib/api/xmlrpc.class.php:		$status_ok=$this->_runChecks($checkFunctions,$messagePrefix) && $this->userHasRight("testplan_planning");       
lib/api/xmlrpc.class.php:		   $tproject_id=$this->args[self::$testProjectIDParamName];
lib/api/xmlrpc.class.php:		   $tplan_id=$this->args[self::$testPlanIDParamName];
lib/api/xmlrpc.class.php:		   $tplan_info = $this->tplanMgr->get_by_id($tplan_id);
lib/api/xmlrpc.class.php:		   $sql=" SELECT id FROM {$this->tables['testplans']}" .
lib/api/xmlrpc.class.php:		   $rs=$this->dbObj->get_recordset($sql);
lib/api/xmlrpc.class.php:		      $tproject_info = $this->tprojectMgr->get_by_id($tproject_id);
lib/api/xmlrpc.class.php:		      $this->errors[] = new IXR_Error(TPLAN_TPROJECT_KO,$msg_prefix . $msg); 
lib/api/xmlrpc.class.php:            $ret = $this->checkTestCaseAncestry();
lib/api/xmlrpc.class.php:                $this->errors[] = new IXR_Error($ret['error_code'], $msg_prefix . $ret['error_msg']); 
lib/api/xmlrpc.class.php:            $tcase_id=$this->args[self::$testCaseIDParamName];
lib/api/xmlrpc.class.php:            $version_number=$this->args[self::$versionNumberParamName];
lib/api/xmlrpc.class.php:                   " FROM {$this->tables['nodes_hierarchy']} NH, {$this->tables['tcversions']} TCV " .
lib/api/xmlrpc.class.php:           $target_tcversion=$this->dbObj->fetchRowsIntoMap($sql,'version');
lib/api/xmlrpc.class.php:              $tcase_info=$this->tcaseMgr->get_by_id($tcase_id);
lib/api/xmlrpc.class.php:              $this->errors[] = new IXR_Error(TCASE_VERSION_NUMBER_KO,$msg_prefix . $msg); 
lib/api/xmlrpc.class.php:			    if($this->_isParamPresent($key))
lib/api/xmlrpc.class.php:			            $additional_values[]=$this->args[$key];
lib/api/xmlrpc.class.php:			// 20100705 - work in progress - BUGID 3564
lib/api/xmlrpc.class.php:        	$platformSet = $this->tplanMgr->getPlatforms($tplan_id,$opt);  
lib/api/xmlrpc.class.php:			$hasPlatformIDArgs = $this->_isParamPresent(self::$platformIDParamName);
lib/api/xmlrpc.class.php:					$platform_id = $this->args[self::$platformIDParamName];
lib/api/xmlrpc.class.php:   						$this->errors[] = new IXR_Error(PLATFORM_ID_NOT_LINKED_TO_TESTPLAN, $msg);
lib/api/xmlrpc.class.php:              		$this->errors[] = new IXR_Error(MISSING_PLATFORMID_BUT_NEEDED,$msg_prefix . $msg); 
lib/api/xmlrpc.class.php:       	  // 20100711 - franciscom
lib/api/xmlrpc.class.php:       	  //	error -> give message to user
lib/api/xmlrpc.class.php:          // 20090411 - franciscom
lib/api/xmlrpc.class.php:                 " FROM {$this->tables['nodes_hierarchy']} NH, {$this->tables['tcversions']} TCV " .
lib/api/xmlrpc.class.php:          $all_tcversions = $this->dbObj->fetchRowsIntoMap($sql,'id');
lib/api/xmlrpc.class.php:          $sql = " SELECT tcversion_id, platform_id, PLAT.name FROM {$this->tables['testplan_tcversions']} TPTCV " .
lib/api/xmlrpc.class.php:                 " LEFT OUTER JOIN {$this->tables['platforms']} PLAT ON PLAT.id = platform_id " . 
lib/api/xmlrpc.class.php:		  $rs = $this->dbObj->fetchMapRowsIntoMap($sql,'tcversion_id','platform_id');
lib/api/xmlrpc.class.php:		  		$platform_id = $this->args[self::$platformIDParamName];
lib/api/xmlrpc.class.php:          	  		$this->errors[] = new IXR_Error(LINKED_FEATURE_ALREADY_EXISTS,$msg_prefix . $msg); 
lib/api/xmlrpc.class.php:          	  	$this->errors[] = new IXR_Error(OTHER_VERSION_IS_ALREADY_LINKED,$msg_prefix . $msg); 
lib/api/xmlrpc.class.php:              $sql=" DELETE FROM {$this->tables['testplan_tcversions']} " .
lib/api/xmlrpc.class.php:           		$this->dbObj->exec_query($sql);
lib/api/xmlrpc.class.php:          	            "{$this->userID},{$this->dbObj->db_now()}";
lib/api/xmlrpc.class.php:          	$sql=" INSERT INTO {$this->tables['testplan_tcversions']} ({$fields}) VALUES({$sql_values})"; 
lib/api/xmlrpc.class.php:          	$this->dbObj->exec_query($sql);
lib/api/xmlrpc.class.php:          	$op_result['feature_id']=$this->dbObj->insert_id($this->tables['testplan_tcversions']);
lib/api/xmlrpc.class.php:       return ($status_ok ? $op_result : $this->errors);
lib/api/xmlrpc.class.php:        $msg_prefix="(" .__FUNCTION__ . ") - ";
lib/api/xmlrpc.class.php:	    $this->_setArgs($args);
lib/api/xmlrpc.class.php:        $status_ok=$this->_runChecks($checkFunctions,$msg_prefix);
lib/api/xmlrpc.class.php:            $result = $this->tprojectMgr->get_first_level_test_suites($this->args[self::$testProjectIDParamName]);
lib/api/xmlrpc.class.php:                $tproject_info = $this->tprojectMgr->get_by_id($this->args[self::$testProjectIDParamName]);
lib/api/xmlrpc.class.php:                $this->errors[] = new IXR_ERROR(TPROJECT_IS_EMPTY,$msg); 
lib/api/xmlrpc.class.php:        return $status_ok ? $result : $this->errors;       
lib/api/xmlrpc.class.php:        $msg_prefix="({$operation}) - ";
lib/api/xmlrpc.class.php:	    $this->_setArgs($args);
lib/api/xmlrpc.class.php:        $status_ok=$this->_runChecks($checkFunctions,$msg_prefix);
lib/api/xmlrpc.class.php:            $ret = $this->checkTestCaseAncestry();
lib/api/xmlrpc.class.php:                $this->errors[] = new IXR_Error($ret['error_code'], $msg_prefix . $ret['error_msg']); 
lib/api/xmlrpc.class.php:            $ret = $this->checkReqSpecQuality();
lib/api/xmlrpc.class.php:                $this->errors[] = new IXR_Error($ret['error_code'], $msg_prefix . $ret['error_msg']); 
lib/api/xmlrpc.class.php:            $tcase_id=$this->args[self::$testCaseIDParamName];
lib/api/xmlrpc.class.php:            foreach($this->args[self::$requirementsParamName] as $item)
lib/api/xmlrpc.class.php:                     $this->reqMgr->assign_to_tcase($req_id,$tcase_id);
lib/api/xmlrpc.class.php:   		 	                        "status" => true, "id" => -1, 
lib/api/xmlrpc.class.php:        return ($status_ok ? $resultInfo : $this->errors);
lib/api/xmlrpc.class.php:      $tproject_id=$this->args[self::$testProjectIDParamName];
lib/api/xmlrpc.class.php:      $tcase_id=$this->args[self::$testCaseIDParamName];
lib/api/xmlrpc.class.php:      $tcase_external_id=$this->args[self::$testCaseExternalIDParamName];
lib/api/xmlrpc.class.php:      $tcase_tproject_id=$this->tcaseMgr->get_testproject($tcase_id);
lib/api/xmlrpc.class.php:          $tcase_info=$this->tcaseMgr->get_by_id($tcase_id);
lib/api/xmlrpc.class.php:          $tproject_info = $this->tprojectMgr->get_by_id($tproject_id);
lib/api/xmlrpc.class.php:      $tproject_id=$this->args[self::$testProjectIDParamName];
lib/api/xmlrpc.class.php:      $nodes_types = $this->tprojectMgr->tree_manager->get_available_node_types();
lib/api/xmlrpc.class.php:      foreach($this->args[self::$requirementsParamName] as $item)
lib/api/xmlrpc.class.php:          $reqspec_info=$this->reqSpecMgr->get_by_id($req_spec_id);      
lib/api/xmlrpc.class.php:          $a_path=$this->tprojectMgr->tree_manager->get_path($req_spec_id);
lib/api/xmlrpc.class.php:              $tproject_info = $this->tprojectMgr->get_by_id($tproject_id);
lib/api/xmlrpc.class.php:          $my_requirements = $this->tprojectMgr->tree_manager->get_subtree_list($req_spec_id,$nodes_types['requirement']);
lib/api/xmlrpc.class.php:                      $req_info = $this->reqMgr->get_by_id($req_id,requirement_mgr::LATEST_VERSION);
lib/api/xmlrpc.class.php:		$sql="SELECT id FROM {$this->tables['executions']} WHERE id={$executionID}";
lib/api/xmlrpc.class.php:		$rs=$this->dbObj->fetchRowsIntoMap($sql,'id');
lib/api/xmlrpc.class.php:            $safeBugID=$this->dbObj->prepare_string($bugID);
lib/api/xmlrpc.class.php:       	    $sql="SELECT execution_id FROM {$this->tables['execution_bugs']} " .  
lib/api/xmlrpc.class.php:            if( is_null($this->dbObj->fetchRowsIntoMap($sql, 'execution_id')) )
lib/api/xmlrpc.class.php:            	$sql = "INSERT INTO {$this->tables['execution_bugs']} " .
lib/api/xmlrpc.class.php:                $result = $this->dbObj->exec_query($sql); 
lib/api/xmlrpc.class.php:               "FROM {$this->tables['execution_bugs']} ," .
lib/api/xmlrpc.class.php:               " {$this->tables['executions']} E, {$this->tables['builds']} B ".
lib/api/xmlrpc.class.php:        $rs=$this->dbObj->fetchRowsIntoMap($sql,'bug_id');
lib/api/xmlrpc.class.php:	$this->_setArgs($args);
lib/api/xmlrpc.class.php:    $status_ok=$this->_runChecks($checkFunctions) && $this->userHasRight("mgt_view_tc");
lib/api/xmlrpc.class.php:	    $tcase_id = $this->args[self::$testCaseIDParamName];
lib/api/xmlrpc.class.php:		$attachmentRepository = tlAttachmentRepository::create($this->dbObj);
lib/api/xmlrpc.class.php:		$attachmentInfos = $attachmentRepository->getAttachmentInfosFor($tcase_id,"nodes_hierarchy");
lib/api/xmlrpc.class.php:				$content = $attachmentRepository->getAttachmentContent($aID, $attachmentInfo);
lib/api/xmlrpc.class.php:  return $status_ok ? $attachments : $this->errors;
lib/api/xmlrpc.class.php:	    $this->_setArgs($args);
lib/api/xmlrpc.class.php:        $msg_prefix="({$operation}) - ";
lib/api/xmlrpc.class.php:        $status_ok=$this->_runChecks($checkFunctions,$msg_prefix) && $this->userHasRight("mgt_modify_tc");
lib/api/xmlrpc.class.php:		        if($this->_isParamPresent($key))
lib/api/xmlrpc.class.php:		            $opt[$key]=$this->args[$key];      
lib/api/xmlrpc.class.php:            $tprojectInfo=$this->tprojectMgr->get_by_id($args[self::$testProjectIDParamName]);
lib/api/xmlrpc.class.php:            $tsuiteMgr = new testsuite($this->dbObj);
lib/api/xmlrpc.class.php:  		    if( $this->_isParamPresent(self::$parentIDParamName) )
lib/api/xmlrpc.class.php:  		        $node_info = $tsuiteMgr->get_by_id($args[self::$parentIDParamName]);
lib/api/xmlrpc.class.php:                   $this->errors[] = new IXR_Error(INVALID_PARENT_TESTSUITEID,$msg_prefix . $msg);
lib/api/xmlrpc.class.php:                   $root_node_id=$tsuiteMgr->getTestProjectFromTestSuite($args[self::$parentIDParamName],null);
lib/api/xmlrpc.class.php:                     $this->errors[] = new IXR_Error(TESTSUITE_DONOTBELONGTO_TESTPROJECT,$msg_prefix . $msg);
lib/api/xmlrpc.class.php:          $op=$tsuiteMgr->create($parent_id,$args[self::$testSuiteNameParamName],
lib/api/xmlrpc.class.php:              $this->errors=$op;   
lib/api/xmlrpc.class.php:			return $status_ok ? $result : $this->errors;
lib/api/xmlrpc.class.php:        $status_ok=isset($this->args[self::$testSuiteNameParamName]) ? true : false;
lib/api/xmlrpc.class.php:    	      $name = $this->args[self::$testSuiteNameParamName];
lib/api/xmlrpc.class.php:    	      	$this->errors[] = new IXR_Error(TESTSUITENAME_NOT_STRING, $msg);
lib/api/xmlrpc.class.php:       	  	$this->errors[] = new IXR_Error(NO_TESTSUITENAME, $messagePrefix . NO_TESTSUITENAME_STR);
lib/api/xmlrpc.class.php:        $msg_prefix="(" .__FUNCTION__ . ") - ";
lib/api/xmlrpc.class.php:    	$this->_setArgs($args);		
lib/api/xmlrpc.class.php:    	if($this->authenticate())
lib/api/xmlrpc.class.php:            if( $this->_isParamPresent(self::$testProjectNameParamName,$msg_prefix,self::SET_ERROR) )
lib/api/xmlrpc.class.php:                $name=trim($this->args[self::$testProjectNameParamName]);
lib/api/xmlrpc.class.php:                $check_op=$this->tprojectMgr->checkNameExistence($name);
lib/api/xmlrpc.class.php:                    $this->errors[] = new IXR_Error(TESTPROJECTNAME_DOESNOT_EXIST, $msg);
lib/api/xmlrpc.class.php:            $info=$this->tprojectMgr->get_by_name($name);            
lib/api/xmlrpc.class.php:        return $status_ok ? $info : $this->errors;
lib/api/xmlrpc.class.php:        $msg_prefix="(" .__FUNCTION__ . ") - ";
lib/api/xmlrpc.class.php:    	$this->_setArgs($args);		
lib/api/xmlrpc.class.php:    	if($this->authenticate())
lib/api/xmlrpc.class.php:                $names[$key]=$this->_isParamPresent($key,$msg_prefix,self::SET_ERROR) ? trim($this->args[$key]) : '';
lib/api/xmlrpc.class.php:            $check_op=$this->tprojectMgr->checkNameExistence($name);
lib/api/xmlrpc.class.php:                $this->errors[] = new IXR_Error(TESTPROJECTNAME_DOESNOT_EXIST, $msg);
lib/api/xmlrpc.class.php:    	        $tprojectInfo=current($this->tprojectMgr->get_by_name($name));
lib/api/xmlrpc.class.php:            $info = $this->tplanMgr->get_by_name($name,$tprojectInfo['id']);
lib/api/xmlrpc.class.php:                $this->errors[] = new IXR_Error(TESTPLANNAME_DOESNOT_EXIST, $msg);
lib/api/xmlrpc.class.php:        return $status_ok ? $info : $this->errors;
lib/api/xmlrpc.class.php:    $msg_prefix="(" .__FUNCTION__ . ") - ";
lib/api/xmlrpc.class.php:    $this->_setArgs($args);
lib/api/xmlrpc.class.php:    $status_ok=$this->_runChecks($checkFunctions,$msg_prefix) && $this->userHasRight("mgt_view_tc");       
lib/api/xmlrpc.class.php:    $version_number=-1;
lib/api/xmlrpc.class.php:        if( $this->_isParamPresent(self::$versionNumberParamName) )
lib/api/xmlrpc.class.php:            if( ($status_ok=$this->checkTestCaseVersionNumber()) )
lib/api/xmlrpc.class.php:                $version_number=$this->args[self::$versionNumberParamName];
lib/api/xmlrpc.class.php:        $testCaseMgr = new testcase($this->dbObj);
lib/api/xmlrpc.class.php:        $id=$this->args[self::$testCaseIDParamName];
lib/api/xmlrpc.class.php:        $result = $testCaseMgr->get_by_id($id,$version_id,'ALL','ALL',$version_number);            
lib/api/xmlrpc.class.php:            $this->errors[] = new IXR_ERROR(NO_TESTCASE_FOUND, 
lib/api/xmlrpc.class.php:            return $this->errors;
lib/api/xmlrpc.class.php:    return $status_ok ? $result : $this->errors; 
lib/api/xmlrpc.class.php:	 *	20100704 - franciscom - BUGID 3565
lib/api/xmlrpc.class.php:	    $this->_setArgs($args);
lib/api/xmlrpc.class.php:        $msg_prefix="(" . __FUNCTION__ . ") - ";
lib/api/xmlrpc.class.php:    	if($this->authenticate() && $this->userHasRight("mgt_modify_product"))
lib/api/xmlrpc.class.php:                $names[$key]=$this->_isParamPresent($key,$msg_prefix,self::SET_ERROR) ? trim($this->args[$key]) : '';
lib/api/xmlrpc.class.php:            $name=trim($this->args[self::$testProjectNameParamName]);
lib/api/xmlrpc.class.php:            $check_op=$this->tprojectMgr->checkNameExistence($name);
lib/api/xmlrpc.class.php:                $tprojectInfo=current($this->tprojectMgr->get_by_name($name));
lib/api/xmlrpc.class.php:                $this->errors[] = new IXR_Error(TESTPROJECTNAME_DOESNOT_EXIST, $msg);
lib/api/xmlrpc.class.php:            $info = $this->tplanMgr->get_by_name($name,$tprojectInfo['id']);
lib/api/xmlrpc.class.php:                $this->errors[] = new IXR_Error(TESTPLANNAME_ALREADY_EXISTS, $msg);
lib/api/xmlrpc.class.php:  		        $optional[$key]=$this->_isParamPresent($key) ? trim($this->args[$key]) : $value;
lib/api/xmlrpc.class.php:            $retval = $this->tplanMgr->create(htmlspecialchars($name),
lib/api/xmlrpc.class.php:        return $status_ok ? $resultInfo : $this->errors;
lib/api/xmlrpc.class.php:	  	$this->_setArgs($args);
lib/api/xmlrpc.class.php:	    $msg_prefix="({$operation}) - ";
lib/api/xmlrpc.class.php:	    $status_ok=$this->_runChecks($checkFunctions,$msg_prefix) && 
lib/api/xmlrpc.class.php:	               $this->_isParamPresent(self::$nodeIDParamName,$msg_prefix,self::SET_ERROR) ;
lib/api/xmlrpc.class.php:	        $nodeID=$this->args[self::$nodeIDParamName];
lib/api/xmlrpc.class.php:	            $this->errors[] = new IXR_Error(NODEID_IS_NOT_INTEGER, $msg);
lib/api/xmlrpc.class.php:	        $full_path = $this->tprojectMgr->tree_manager->get_full_path_verbose($nodeID);
lib/api/xmlrpc.class.php:	            $this->errors[] = new IXR_Error(NODEID_DOESNOT_EXIST, $msg);
lib/api/xmlrpc.class.php:	    return $status_ok ? $full_path : $this->errors;
lib/api/xmlrpc.class.php:		$sql="SELECT id FROM {$this->tables['executions']} WHERE id={$executionID}";
lib/api/xmlrpc.class.php:		$rs=$this->dbObj->fetchRowsIntoMap($sql,'id');
lib/api/xmlrpc.class.php:        $cfieldSet=$this->args[self::$customFieldsParamName];
lib/api/xmlrpc.class.php:        $tprojectID=$this->tcaseMgr->get_testproject($this->args[self::$testCaseIDParamName]);
lib/api/xmlrpc.class.php:        $tplanID=$this->args[self::$testPlanIDParamName];
lib/api/xmlrpc.class.php:        $cfieldMgr=$this->tprojectMgr->cfield_mgr;        
lib/api/xmlrpc.class.php:        $cfieldsMap = $cfieldMgr->get_linked_cfields_at_execution($tprojectID, 1,'testcase',
lib/api/xmlrpc.class.php:             	$cfieldMgr->execution_values_to_db($cfield4write,$this->tcVersionID,$executionID,$tplanID,
lib/api/xmlrpc.class.php:                                                    null,'write-through');
lib/api/xmlrpc.class.php:	    $msg_prefix="({$operation}) - ";
lib/api/xmlrpc.class.php:		$this->_setArgs($args);              
lib/api/xmlrpc.class.php:        $status_ok = $this->_runChecks($checkFunctions,$msg_prefix);       
lib/api/xmlrpc.class.php:        $status_ok = ($status_ok && $this->userHasRight("testplan_execute"));	
lib/api/xmlrpc.class.php:			if( $execCfg->can_delete_execution )  
lib/api/xmlrpc.class.php:				$this->tcaseMgr->deleteExecution($args[self::$executionIDParamName]);			
lib/api/xmlrpc.class.php:    		    $this->errors[] = new IXR_Error(CFG_DELETE_EXEC_DISABLED, 
lib/api/xmlrpc.class.php:		return $status_ok ? $resultInfo : $this->errors;
lib/api/xmlrpc.class.php:        // need to be implemented - franciscom
lib/api/xmlrpc.class.php:		$status_ok = $this->_isParamPresent($pname,$messagePrefix,$setError);
lib/api/xmlrpc.class.php:	        $this->errors[] = new IXR_Error(MISSING_REQUIRED_PARAMETER, $msg);				      
lib/api/xmlrpc.class.php:			$status_ok = is_int($this->args[$pname]) && $this->args[$pname] > 0;
lib/api/xmlrpc.class.php:            	$msg = $messagePrefix . sprintf(PARAMETER_NOT_INT_STR,$pname,$this->args[$pname]);
lib/api/xmlrpc.class.php:            	$this->errors[] = new IXR_Error(PARAMETER_NOT_INT, $msg);
lib/api/xmlrpc.class.php:        $name_exists = $this->_isParamPresent(self::$platformNameParamName,$messagePrefix);
lib/api/xmlrpc.class.php:        $id_exists = $this->_isParamPresent(self::$platformIDParamName,$messagePrefix);
lib/api/xmlrpc.class.php:        // for debug - file_put_contents('c:\checkPlatformIdentity.txt', $status ? 1:0);                            
lib/api/xmlrpc.class.php:	        $this->errors[] = new IXR_Error(MISSING_REQUIRED_PARAMETER, $msg);				      
lib/api/xmlrpc.class.php:       		$tplanInfo = $this->tplanMgr->get_by_id($tplanID);
lib/api/xmlrpc.class.php:       			$platformInfo = $this->tplanMgr->getPlatforms($tplanID,array('outputFormat' => 'map'));  
lib/api/xmlrpc.class.php:   				$this->errors[] = new IXR_Error(TESTPLAN_HAS_NO_PLATFORMS, $msg);
lib/api/xmlrpc.class.php:        		// file_put_contents('c:\checkPlatformIdentity.txt', $this->args[self::$platformNameParamName]);                            
lib/api/xmlrpc.class.php:        		// $this->errors[]=$platformInfo;
lib/api/xmlrpc.class.php:        		$platform_name = $this->args[self::$platformNameParamName];
lib/api/xmlrpc.class.php:        		$status = in_array($this->args[self::$platformNameParamName],$platformInfo);
lib/api/xmlrpc.class.php:            	$platform_id = $this->args[self::$platformIDParamName];
lib/api/xmlrpc.class.php:            	$status = isset($platformInfo[$this->args[self::$platformIDParamName]]);
lib/api/xmlrpc.class.php:				// $this->tprojectMgr->        		
lib/api/xmlrpc.class.php:   				$this->errors[] = new IXR_Error(PLATFORM_NOT_LINKED_TO_TESTPLAN, $msg);
lib/api/xmlrpc.class.php:        		$this->args[self::$platformIDParamName] = $dummy[$this->args[self::$platformNameParamName]];
lib/api/xmlrpc.class.php:		$build_id = $this->args[self::$buildIDParamName];
lib/api/xmlrpc.class.php:		$tester_id =  $this->userID;
lib/api/xmlrpc.class.php:		$status = $this->args[self::$statusParamName];
lib/api/xmlrpc.class.php:		$testplan_id =	$this->args[self::$testPlanIDParamName];
lib/api/xmlrpc.class.php:		$tcversion_id =	$this->tcVersionID;
lib/api/xmlrpc.class.php:    	$tcase_id = $this->args[self::$testCaseIDParamName];
lib/api/xmlrpc.class.php:    	$db_now=$this->dbObj->db_now();
lib/api/xmlrpc.class.php:    	if( isset($this->args[self::$platformIDParamName]) )
lib/api/xmlrpc.class.php:			$platform_id = $this->args[self::$platformIDParamName]; 	
lib/api/xmlrpc.class.php:		$last_exec = $this->tcaseMgr->get_last_execution($tcase_id,testcase::ALL_VERSIONS,
lib/api/xmlrpc.class.php:			if($this->_isNotePresent())
lib/api/xmlrpc.class.php:				$notes = $this->dbObj->prepare_string($this->args[self::$noteParamName]);
lib/api/xmlrpc.class.php:			$sql = " UPDATE {$this->tables['executions']} " .
lib/api/xmlrpc.class.php:            $this->dbObj->exec_query($sql);
lib/api/xmlrpc.class.php:        $msg_prefix="({$operation}) - ";
lib/api/xmlrpc.class.php:        $this->_setArgs($args);
lib/api/xmlrpc.class.php:        $status_ok=$this->_runChecks(array('authenticate','checkTestSuiteID'),$msg_prefix);
lib/api/xmlrpc.class.php:        if( $this->_isParamPresent($key2search) )
lib/api/xmlrpc.class.php:            $details=$this->args[$key2search];
lib/api/xmlrpc.class.php:        if($status_ok && $this->userHasRight("mgt_view_tc"))
lib/api/xmlrpc.class.php:            $testSuiteID = $this->args[self::$testSuiteIDParamName];
lib/api/xmlrpc.class.php:            $tsuiteMgr = new testsuite($this->dbObj);
lib/api/xmlrpc.class.php:            return $tsuiteMgr->get_by_id($testSuiteID);
lib/api/xmlrpc.class.php:            return $this->errors;
lib/api/xmlrpc.class.php:	    $msg_prefix="({$operation}) - ";
lib/api/xmlrpc.class.php:	    $this->_setArgs($args);
lib/api/xmlrpc.class.php:	    $status_ok = $this->_runChecks(array('authenticate','checkTestSuiteID'),$msg_prefix) && 
lib/api/xmlrpc.class.php:	                 $this->userHasRight("mgt_view_tc");
lib/api/xmlrpc.class.php:	        $testSuiteID = $this->args[self::$testSuiteIDParamName];
lib/api/xmlrpc.class.php:	        $tsuiteMgr = new testsuite($this->dbObj);
lib/api/xmlrpc.class.php:	        $items = $tsuiteMgr->get_children($testSuiteID);
lib/api/xmlrpc.class.php:	    return $status_ok ? $items : $this->errors;
lib/api/xmlrpc.class.php:        $msg_prefix="({$operation}) - ";
lib/api/xmlrpc.class.php:    	$this->_setArgs($args);	
lib/api/xmlrpc.class.php:		$status_ok = $this->_isParamPresent(self::$testPlanIDParamName,$msg_prefix,self::SET_ERROR);
lib/api/xmlrpc.class.php:			$status_ok=$this->_runChecks(array('authenticate','checkTestPlanID'),$msg_prefix);
lib/api/xmlrpc.class.php:			$tplanID = $this->args[self::$testPlanIDParamName];
lib/api/xmlrpc.class.php:			$tplanInfo = $this->tplanMgr->get_by_id($tplanID);
lib/api/xmlrpc.class.php:        	$items = $this->tplanMgr->getPlatforms($tplanID);  
lib/api/xmlrpc.class.php:   				$this->errors[] = new IXR_Error(TESTPLAN_HAS_NO_PLATFORMS, $msg);
lib/api/xmlrpc.class.php:	    return $status_ok ? $items : $this->errors;
lib/api/xmlrpc.class.php:		$msg_prefix="({$operation}) - ";
lib/api/xmlrpc.class.php:		$this->_setArgs($args);
lib/api/xmlrpc.class.php:		$status_ok=$this->_runChecks($checkFunctions,$msg_prefix) && $this->userHasRight("mgt_view_tc");
lib/api/xmlrpc.class.php:			$total = $this->tplanMgr->getStatusTotalsByPlatform($this->args[self::$testPlanIDParamName]);
lib/api/xmlrpc.class.php:		return $status_ok ? $total : $this->errors;
lib/api/xmlrpc.class.php: 	    $msg_prefix="({$operation}) - ";
lib/api/xmlrpc.class.php:	    $this->_setArgs($args);
lib/api/xmlrpc.class.php:		$user_id = tlUser::doesUserExist($this->dbObj,$this->args[self::$userParamName]);		    	
lib/api/xmlrpc.class.php:			$msg = $msg_prefix . sprintf(NO_USER_BY_THIS_LOGIN_STR,$this->args[self::$userParamName]);
lib/api/xmlrpc.class.php:			$this->errors[] = new IXR_Error(NO_USER_BY_THIS_LOGIN, $msg);	
lib/api/xmlrpc.class.php:		return $status_ok ? $status_ok : $this->errors;
lib/api/xmlrpc.class.php:		$msg_prefix="({$operation}) - ";
lib/api/xmlrpc.class.php:		$this->_setArgs($args);
lib/api/xmlrpc.class.php:	    $status_ok = $this->_runChecks($checkFunctions,$msg_prefix);
lib/api/xmlrpc.class.php:	    return $status_ok ? $status_ok : $this->errors;        
lib/api/test/test_data.sql:-- phpMyAdmin SQL Dump
lib/api/test/test_data.sql:-- version 2.11.3deb1ubuntu1.1
lib/api/test/test_data.sql:-- http://www.phpmyadmin.net
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Host: localhost
lib/api/test/test_data.sql:-- Generation Time: Oct 01, 2008 at 10:56 AM
lib/api/test/test_data.sql:-- Server version: 5.0.51
lib/api/test/test_data.sql:-- PHP Version: 5.2.4-2ubuntu5.3
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Database: `testlink_test`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `api_developer_keys`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `api_developer_keys`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `assignment_status`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `assignment_status`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `assignment_types`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `assignment_types`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `attachments`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:  `date_added` datetime NOT NULL default '0000-00-00 00:00:00',
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `attachments`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `builds`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `builds`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `cfield_design_values`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `cfield_design_values`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `cfield_execution_values`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `cfield_execution_values`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `cfield_node_types`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `cfield_node_types`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `cfield_testprojects`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `cfield_testprojects`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `custom_fields`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Updated to TL 1.8 RC1  - DB 1.2' AUTO_INCREMENT=1 ;
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `custom_fields`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `db_version`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:  `upgrade_ts` datetime NOT NULL default '0000-00-00 00:00:00',
lib/api/test/test_data.sql:) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Updated to TL 1.8 RC1 - DB 1.2';
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `db_version`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:('DB 1.1', '2007-11-01 14:06:11', NULL),
lib/api/test/test_data.sql:('DB 1.2', '2008-09-24 11:11:35', 'first version with API feature');
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `events`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `events`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `executions`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:  `execution_type` tinyint(1) NOT NULL default '1' COMMENT '1 -> manual, 2 -> automated',
lib/api/test/test_data.sql:) ENGINE=MyISAM  DEFAULT CHARSET=utf8 COMMENT='Updated to TL 1.8 RC1 - DB 1.2' AUTO_INCREMENT=167 ;
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `executions`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:(1, 1, 1, '2007-11-07 15:00:29', 'f', 2, 8, 1, 1, '', NULL),
lib/api/test/test_data.sql:(2, 1, 1, '2007-11-07 15:00:36', 'p', 2, 7, 1, 1, '', NULL),
lib/api/test/test_data.sql:(3, 1, 1, '2007-12-03 13:25:30', 'b', 2, 8, 1, 1, NULL, 1),
lib/api/test/test_data.sql:(4, 1, 1, '2007-12-03 13:25:30', 'p', 2, 8, 1, 1, NULL, 1),
lib/api/test/test_data.sql:(5, 1, 1, '2007-12-03 13:25:30', 'f', 2, 8, 1, 1, NULL, 1),
lib/api/test/test_data.sql:(6, 1, 1, '2007-12-03 13:25:30', 'p', 2, 8, 1, 1, NULL, 1),
lib/api/test/test_data.sql:(7, 1, 1, '2007-12-03 13:25:30', 'f', 2, 8, 1, 1, NULL, 1),
lib/api/test/test_data.sql:(8, 3, 1, '2007-12-03 13:27:07', 'b', 2, 8, 1, 1, NULL, 1),
lib/api/test/test_data.sql:(9, 3, 1, '2007-12-03 13:27:07', 'p', 2, 8, 1, 1, NULL, 1),
lib/api/test/test_data.sql:(10, 3, 1, '2007-12-03 13:27:07', 'f', 2, 8, 1, 1, NULL, 1),
lib/api/test/test_data.sql:(11, 3, 1, '2007-12-03 13:27:08', 'p', 2, 8, 1, 1, NULL, 1),
lib/api/test/test_data.sql:(12, 1, 1, '2007-12-03 13:27:08', 'f', 2, 8, 1, 1, NULL, 1),
lib/api/test/test_data.sql:(13, 1, 1, '2008-09-24 16:59:22', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(14, 1, 1, '2008-09-29 09:05:14', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(15, 1, 1, '2008-09-29 09:05:15', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(16, 1, 1, '2008-09-29 09:09:29', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(17, 1, 1, '2008-09-29 09:09:29', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(18, 1, 1, '2008-09-29 09:09:58', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(19, 1, 1, '2008-09-29 09:09:58', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(20, 1, 1, '2008-09-29 09:10:06', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(21, 1, 1, '2008-09-29 09:10:06', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(22, 1, 1, '2008-09-29 09:50:20', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(23, 1, 1, '2008-09-29 09:50:20', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(24, 1, 1, '2008-09-29 10:03:37', 'b', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(25, 1, 1, '2008-09-29 10:04:21', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(26, 1, 1, '2008-09-29 10:04:51', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(27, 1, 1, '2008-09-29 10:05:34', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(28, 1, 1, '2008-09-29 10:06:14', 'b', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(29, 1, 1, '2008-09-29 10:06:14', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(30, 1, 1, '2008-09-29 10:06:14', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(31, 1, 1, '2008-09-29 10:06:14', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(32, 1, 1, '2008-09-29 10:06:14', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(33, 1, 1, '2008-09-29 10:06:15', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(34, 1, 1, '2008-09-29 10:06:18', 'b', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(35, 1, 1, '2008-09-29 10:06:18', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(36, 1, 1, '2008-09-29 10:06:18', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(37, 1, 1, '2008-09-29 10:06:19', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(38, 1, 1, '2008-09-29 10:06:19', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(39, 1, 1, '2008-09-29 10:06:19', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(40, 1, 1, '2008-09-30 08:58:30', 'b', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(41, 1, 1, '2008-09-30 08:58:30', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(42, 1, 1, '2008-09-30 08:58:31', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(43, 1, 1, '2008-09-30 08:58:31', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(44, 1, 1, '2008-09-30 08:58:31', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(45, 1, 1, '2008-09-30 08:58:31', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(46, 1, 1, '2008-09-30 10:20:33', 'b', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(47, 1, 1, '2008-09-30 10:20:33', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(48, 1, 1, '2008-09-30 10:20:33', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(49, 1, 1, '2008-09-30 10:20:33', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(50, 1, 1, '2008-09-30 10:20:34', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(51, 1, 1, '2008-09-30 10:20:34', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(52, 1, 1, '2008-09-30 10:21:18', 'b', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(53, 1, 1, '2008-09-30 10:21:18', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(54, 1, 1, '2008-09-30 10:21:19', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(55, 1, 1, '2008-09-30 10:21:19', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(56, 1, 1, '2008-09-30 10:21:19', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(57, 1, 1, '2008-09-30 10:21:19', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(58, 1, 1, '2008-09-30 10:22:07', 'b', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(59, 1, 1, '2008-09-30 10:22:07', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(60, 1, 1, '2008-09-30 10:22:07', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(61, 1, 1, '2008-09-30 10:22:07', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(62, 1, 1, '2008-09-30 10:22:08', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(63, 1, 1, '2008-09-30 10:22:08', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(64, 1, 1, '2008-09-30 10:33:49', 'b', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(65, 1, 1, '2008-09-30 10:33:49', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(66, 1, 1, '2008-09-30 10:33:49', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(67, 1, 1, '2008-09-30 10:33:50', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(68, 1, 1, '2008-09-30 10:33:50', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(69, 1, 1, '2008-09-30 10:33:50', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(70, 1, 1, '2008-09-30 10:35:17', 'b', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(71, 1, 1, '2008-09-30 10:35:17', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(72, 1, 1, '2008-09-30 10:35:17', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(73, 1, 1, '2008-09-30 10:35:17', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(74, 1, 1, '2008-09-30 10:35:17', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(75, 1, 1, '2008-09-30 10:35:18', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(76, 1, 1, '2008-09-30 13:14:39', 'b', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(77, 1, 1, '2008-09-30 13:14:39', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(78, 1, 1, '2008-09-30 13:14:40', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(79, 1, 1, '2008-09-30 13:14:40', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(80, 1, 1, '2008-09-30 13:14:40', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(81, 1, 1, '2008-09-30 13:14:41', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(82, 1, 1, '2008-09-30 13:25:04', 'b', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(83, 1, 1, '2008-09-30 13:25:04', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(84, 1, 1, '2008-09-30 13:25:04', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(85, 1, 1, '2008-09-30 13:25:04', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(86, 1, 1, '2008-09-30 13:25:05', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(87, 1, 1, '2008-09-30 13:25:05', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(88, 1, 1, '2008-09-30 14:16:09', 'b', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(89, 1, 1, '2008-09-30 14:16:09', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(90, 1, 1, '2008-09-30 14:16:09', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(91, 1, 1, '2008-09-30 14:16:10', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(92, 1, 1, '2008-09-30 14:16:10', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(93, 1, 1, '2008-09-30 14:16:10', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(94, 1, 1, '2008-09-30 14:20:27', 'b', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(95, 1, 1, '2008-09-30 14:20:27', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(96, 1, 1, '2008-09-30 14:20:28', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(97, 1, 1, '2008-09-30 14:20:28', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(98, 1, 1, '2008-09-30 14:20:28', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(99, 1, 1, '2008-09-30 14:20:29', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(100, 1, 1, '2008-09-30 14:20:30', 'b', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(101, 1, 1, '2008-09-30 14:20:48', 'b', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(102, 1, 1, '2008-09-30 14:20:48', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(103, 1, 1, '2008-09-30 14:20:48', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(104, 1, 1, '2008-09-30 14:20:49', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(105, 1, 1, '2008-09-30 14:20:49', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(106, 1, 1, '2008-09-30 14:20:49', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(107, 1, 1, '2008-09-30 14:24:46', 'b', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(108, 1, 1, '2008-09-30 14:24:46', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(109, 1, 1, '2008-09-30 14:24:46', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(110, 1, 1, '2008-09-30 14:24:46', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(111, 1, 1, '2008-09-30 14:24:46', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(112, 1, 1, '2008-09-30 14:24:47', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(113, 1, 1, '2008-09-30 14:25:59', 'b', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(114, 1, 1, '2008-09-30 14:25:59', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(115, 1, 1, '2008-09-30 14:25:59', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(116, 1, 1, '2008-09-30 14:26:00', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(117, 1, 1, '2008-09-30 14:26:00', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(118, 1, 1, '2008-09-30 14:26:00', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(119, 1, 1, '2008-09-30 14:26:25', 'b', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(120, 1, 1, '2008-09-30 14:26:25', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(121, 1, 1, '2008-09-30 14:26:25', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(122, 1, 1, '2008-09-30 14:26:25', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(123, 1, 1, '2008-09-30 14:26:26', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(124, 1, 1, '2008-09-30 14:26:26', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(125, 1, 1, '2008-09-30 14:30:10', 'b', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(126, 1, 1, '2008-09-30 14:30:10', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(127, 1, 1, '2008-09-30 14:30:10', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(128, 1, 1, '2008-09-30 14:30:10', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(129, 1, 1, '2008-09-30 14:30:10', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(130, 1, 1, '2008-09-30 14:30:11', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(131, 1, 1, '2008-09-30 14:30:55', 'b', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(132, 1, 1, '2008-09-30 14:30:55', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(133, 1, 1, '2008-09-30 14:30:56', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(134, 1, 1, '2008-09-30 14:30:56', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(135, 1, 1, '2008-09-30 14:30:56', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(136, 1, 1, '2008-09-30 14:30:57', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(137, 1, 1, '2008-09-30 14:36:28', 'b', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(138, 1, 1, '2008-09-30 14:36:28', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(139, 1, 1, '2008-09-30 14:36:29', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(140, 1, 1, '2008-09-30 14:36:29', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(141, 1, 1, '2008-09-30 14:36:29', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(142, 1, 1, '2008-09-30 14:36:29', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(143, 1, 1, '2008-09-30 14:36:56', 'b', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(144, 1, 1, '2008-09-30 14:36:56', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(145, 1, 1, '2008-09-30 14:36:56', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(146, 1, 1, '2008-09-30 14:36:56', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(147, 1, 1, '2008-09-30 14:36:57', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(148, 1, 1, '2008-09-30 14:36:57', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(149, 1, 1, '2008-09-30 16:00:42', 'b', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(150, 1, 1, '2008-09-30 16:00:43', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(151, 1, 1, '2008-09-30 16:00:43', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(152, 1, 1, '2008-09-30 16:00:43', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(153, 1, 1, '2008-09-30 16:00:43', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(154, 1, 1, '2008-09-30 16:00:44', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(155, 1, 1, '2008-10-01 10:14:14', 'b', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(156, 1, 1, '2008-10-01 10:14:14', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(157, 1, 1, '2008-10-01 10:14:14', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(158, 1, 1, '2008-10-01 10:14:15', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(159, 1, 1, '2008-10-01 10:14:15', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(160, 1, 1, '2008-10-01 10:14:15', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(161, 1, 1, '2008-10-01 10:37:36', 'b', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(162, 1, 1, '2008-10-01 10:37:36', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(163, 1, 1, '2008-10-01 10:37:36', 'p', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(164, 1, 1, '2008-10-01 10:37:37', 'f', 2, 8, 1, 2, NULL, NULL),
lib/api/test/test_data.sql:(165, 1, 1, '2008-10-01 10:37:37', 'p', 2, 8, 1, 2, 'this is a note about the test', NULL),
lib/api/test/test_data.sql:(166, 1, 1, '2008-10-01 10:37:37', 'f', 2, 8, 1, 2, NULL, NULL);
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `execution_bugs`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `execution_bugs`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `keywords`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `keywords`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `milestones`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:  `target_date` date NOT NULL default '0000-00-00',
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `milestones`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `nodes_hierarchy`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `nodes_hierarchy`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `node_types`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `node_types`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `object_keywords`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `object_keywords`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `requirements`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:  `creation_ts` datetime NOT NULL default '0000-00-00 00:00:00',
lib/api/test/test_data.sql:  `modification_ts` datetime NOT NULL default '0000-00-00 00:00:00',
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `requirements`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `req_coverage`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `req_coverage`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `req_specs`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:  `creation_ts` datetime NOT NULL default '0000-00-00 00:00:00',
lib/api/test/test_data.sql:  `modification_ts` datetime NOT NULL default '0000-00-00 00:00:00',
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `req_specs`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `rights`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `rights`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `roles`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `roles`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `role_rights`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `role_rights`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `tcversions`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:  `creation_ts` datetime NOT NULL default '0000-00-00 00:00:00',
lib/api/test/test_data.sql:  `modification_ts` datetime NOT NULL default '0000-00-00 00:00:00',
lib/api/test/test_data.sql:  `execution_type` tinyint(1) default '1' COMMENT '1 -> manual, 2 -> automated',
lib/api/test/test_data.sql:) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Updated to TL 1.8 RC1 - DB 1.2';
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `tcversions`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:(5, 1, '<p>This test case should do some stuff</p>', '<p>1. create a tc</p>\r\n<p>2. execute it</p>', '<p>The test should have executed</p>', 0, 51, '2007-11-01 14:09:36', NULL, '0000-00-00 00:00:00', 1, 1, 1, 0),
lib/api/test/test_data.sql:(7, 1, '<p>more things to do</p>', '<p>Wash windows</p>', '<p>The windows should be sparkly clean</p>', 0, 51, '2007-11-01 14:10:05', NULL, '0000-00-00 00:00:00', 1, 1, 1, 0),
lib/api/test/test_data.sql:(8, 2, '<p>This test case should do some stuff. This is a new version.</p>', '<p>1. create a tc</p>\r\n<p>2. execute it</p>\r\n<p>3. do more stuff</p>', '<p>The test should have executed</p>', 0, 1, '2007-11-07 14:41:46', 1, '2007-11-07 14:42:14', 1, 1, 1, 0),
lib/api/test/test_data.sql:(9, 3, '<p>This test case should do some stuff. This is yet another new version.</p>', '<p>1. create a tc</p>\r\n<p>2. execute it</p>\r\n<p>3. do more stuff</p>', '<p>The test should have executed</p>', 0, 1, '2007-11-07 15:04:03', 1, '2007-11-07 15:04:21', 1, 1, 1, 0),
lib/api/test/test_data.sql:(12, 1, '', '', '', 0, 1, '2007-12-03 13:26:52', NULL, '0000-00-00 00:00:00', 1, 1, 1, 0);
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `testcase_keywords`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `testcase_keywords`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `testplans`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `testplans`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `testplan_tcversions`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:) ENGINE=MyISAM  DEFAULT CHARSET=utf8 COMMENT='Updated to TL 1.8 RC1  - DB 1.2' AUTO_INCREMENT=5 ;
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `testplan_tcversions`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `testprojects`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Updated to TL 1.8 RC1 - DB 1.2';
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `testprojects`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `testsuites`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `testsuites`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `text_templates`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:  `creation_ts` datetime NOT NULL default '1900-00-00 01:00:00',
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `text_templates`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `transactions`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `transactions`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `users`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:) ENGINE=MyISAM  DEFAULT CHARSET=utf8 COMMENT='Updated to TL 1.8 RC1 - DB 1.2' AUTO_INCREMENT=4 ;
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `users`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `user_assignments`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:  `creation_ts` datetime NOT NULL default '0000-00-00 00:00:00',
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `user_assignments`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `user_group`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `user_group`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `user_group_assign`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `user_group_assign`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `user_testplan_roles`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `user_testplan_roles`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- --------------------------------------------------------
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Table structure for table `user_testproject_roles`
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:--
lib/api/test/test_data.sql:-- Dumping data for table `user_testproject_roles`
lib/api/test/test_data.sql:--
lib/api/test/TestlinkXMLRPCServerTestData.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/test/TestlinkXMLRPCServerTestData.php:		echo $this->_getMessage();
lib/api/test/TestlinkXMLRPCServerTestData.php:		echo $this->_getTestDeveloperKeys();
lib/api/test/TestlinkXMLRPCServerTestData.php:		$str .= "-- Copy this SQL text and insert it into your testlink database";
lib/api/test/TestlinkXMLRPCServerTest.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/test/TestlinkXMLRPCServerTest.php:require_once dirname(__FILE__) . '/../../../third_party/xml-rpc/class-IXR.php';
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->client = $client = new IXR_Client($this->SERVER_URL);
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->client->debug = true;
lib/api/test/TestlinkXMLRPCServerTest.php:		//$this->setupTestMode();
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.setTestMode', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> problem setting testMode - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals(true, $this->client->getResponse());
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testSayHello'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testReportTCResultWithInvalidDevKey'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testReportTCResultWithoutDevKey'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testReportTCResultWithEmptyDevKey'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testReportTCResultWithoutTCID'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testReportTCResultWithInvalidTCID'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testReportTCResultWithoutNonIntTCID'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testReportTCResultWithoutTPID'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testReportTCResultRequestWithoutStatus'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testReportTCResultRequestWithInvalidStatus'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testReportTCResultRequestWithBlockedStatus'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testReportTCResultRequestWithPassedStatus'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testReportTCResultValidRequest'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testReportTCResultWithNoParams'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testReportTCResultRequestWithValidBuildID'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testReportTCResultNotGuessingBuildID'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testReportTCResultWithNotes'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testCreateBuildWithoutNotes'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testCreateBuildWithNotes'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testCreateBuildWithInvalidTPID'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testValidDevKeyWorks'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testGetProjects'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testReportTCResultRequestWithFailedStatus'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testCreateBuildWithInsufficientRights'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testGetProjectTestPlans'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testGetTestCasesForTestSuite'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testGetTestCasesForTestSuiteDeepFalse'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testGetTestCaseIDByName'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testGetTestCaseIDByNameWithInvalidName'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testRepeat'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testAbout'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testNonExistantMethod'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testCreateBuildWithInsufficientRights'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testReportTCResultWithInsufficientRights'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testGetTestCasesForTestSuiteWithInsufficientRights'));
lib/api/test/TestlinkXMLRPCServerTest.php:		$suite->addTest(new TestlinkXMLRPCServerTest('testGetTestCaseIDByNameWithInsufficientRights'));
lib/api/test/TestlinkXMLRPCServerTest.php:        $suite->addTest(new TestlinkXMLRPCServerTest('testGetLastTestResult'));
lib/api/test/TestlinkXMLRPCServerTest.php:		//THERE IS NO RIGHTS ASSOCIATED WITH THIS YET - $suite->addTest(new TestlinkXMLRPCServerTest('testGetProjectsWithInsufficientRights'));
lib/api/test/TestlinkXMLRPCServerTest.php:		//$suite->addTest(new TestlinkXMLRPCServerTest('testReportTCResultWithInvalidTCIDAndTPIDCombo'));
lib/api/test/TestlinkXMLRPCServerTest.php:		//$suite->addTest(new TestlinkXMLRPCServerTest('testReportTCResultWithTimestamp'));
lib/api/test/TestlinkXMLRPCServerTest.php:		//$suite->addTest(new TestlinkXMLRPCServerTest('testGetProjectTestPlansWithInvalidID'));
lib/api/test/TestlinkXMLRPCServerTest.php:		//$suite->addTest(new TestlinkXMLRPCServerTest('testGetProjectTestPlansWithoutTestProjectID'));
lib/api/test/TestlinkXMLRPCServerTest.php:		//$suite->addTest(new TestlinkXMLRPCServerTest('testGetTestSuitesForTestPlan'));
lib/api/test/TestlinkXMLRPCServerTest.php:		//$suite->addTest(new TestlinkXMLRPCServerTest('testGetTestSuitesForTestPlanWithoutTestPlanID'));
lib/api/test/TestlinkXMLRPCServerTest.php:		//$suite->addTest(new TestlinkXMLRPCServerTest('testGetTestCasesForTestSuiteWithInvalidSuiteID'));
lib/api/test/TestlinkXMLRPCServerTest.php:		//$suite->addTest(new TestlinkXMLRPCServerTest('testGetTestCasesForTestSuiteWithoutSuiteID'));
lib/api/test/TestlinkXMLRPCServerTest.php:		//$suite->addTestSuite('TestlinkXMLRPCServerTest');
lib/api/test/TestlinkXMLRPCServerTest.php:		if (!$this->client->query('tl.sayHello')) {
lib/api/test/TestlinkXMLRPCServerTest.php:				die('big time problem ' . $this->client->getErrorCode() . ' : ' . 
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage());
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals('Hello!', $this->client->getResponse());		
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.reportTCResult', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals($expectedResult, $this->client->getResponse());	
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.reportTCResult', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$result = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals($expectedResult, $result);	
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.reportTCResult', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals($expectedResult, $this->client->getResponse());	
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.reportTCResult', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals($expectedResult, $this->client->getResponse());	
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.reportTCResult', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		var_dump($this->client->getResponse());
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals($expectedResult, $this->client->getResponse());	
lib/api/test/TestlinkXMLRPCServerTest.php:		$data["testcaseid"] = -100; // shouldn't have a negative number for TCID in db
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.reportTCResult', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$result = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals($expectedResult, $result);	
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.reportTCResult', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$result = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals($expectedResult, $this->client->getResponse());	
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.reportTCResult', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$response = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals($expectedResult, $response);	
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.reportTCResult', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$response = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals($expectedResult, $response);	
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.reportTCResult', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$response = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals($expectedResult, $response);	
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.reportTCResult', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$response = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals(3, sizeof($response[0]));
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.reportTCResult', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$response = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals(3, sizeof($response[0]));
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.reportTCResult', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$response = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals(3, sizeof($response[0]));
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.reportTCResult', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals($expectedResult, $this->client->getResponse());	
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.reportTCResult', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$response = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals(3, sizeof($response[0]));
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.reportTCResult', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$response = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.getLastTestResult', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:        $response = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:        $this->assertEquals(9, sizeof($response[0]));
lib/api/test/TestlinkXMLRPCServerTest.php:        $this->assertEquals('b', $response[0]['status']);
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.reportTCResult', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$response = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals(3, sizeof($response[0]));
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.reportTCResult', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$response = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals($expectedResult, $response);	
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.reportTCResult', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$response = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals(3, sizeof($response[0]));				
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.createBuild', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$result = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals($expectedResult, $result);		
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.createBuild', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$response = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals(3, sizeof($response[0]));
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.createBuild', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$response = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals(3, sizeof($response[0]));
lib/api/test/TestlinkXMLRPCServerTest.php:		$data["testplanid"] = -1;
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.createBuild', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$result = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:        $this->assertEquals($expectedResult, $result);
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.reportTCResult', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$response = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertNotEquals($expectedResult, $this->client->getResponse());			
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertNotEquals($expectedResult, $this->client->getResponse());
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.getProjects', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$response = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals($expectedResult, $response);		
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.getProjects', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$result = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals($expectedResult, $result);	
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.getProjectTestPlans', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$response = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals($expectedResult, $response);
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.getTestCasesForTestSuite', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$response = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals($expectedResult, $response, "arrays do not match");		
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.getTestCasesForTestSuite', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$result = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals($expectedResult, $result);		
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.getTestCasesForTestSuite', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$response = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals($expectedResult, $response, "arrays do not match");				
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.getTestCasesForTestSuite', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$response = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.getTestCasesForTestSuite', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$response = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.getTestCaseIDByName', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$response = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals($expectedResult, $response);
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.getTestCaseIDByName', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$result = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals($expectedResult, $result);	
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.getTestCaseIDByName', $data)) {
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n" . $this->getName() . " >> something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$expectedResult[0]["message"] = "(getTestCaseIDByName) - " . constant("NO_TESTCASE_BY_THIS_NAME_STR");
lib/api/test/TestlinkXMLRPCServerTest.php:		$response = $this->client->getResponse();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals($expectedResult, $response);
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.repeat', $data)) 
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n\n" . $this->getName() . "something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();			
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertEquals("You said: " . $data["str"], $this->client->getResponse());
lib/api/test/TestlinkXMLRPCServerTest.php:		if(!$this->client->query('tl.about', null))
lib/api/test/TestlinkXMLRPCServerTest.php:			echo "\n\n" . $this->getName() . "something went really wrong - " . $this->client->getErrorCode() .
lib/api/test/TestlinkXMLRPCServerTest.php:					$this->client->getErrorMessage();
lib/api/test/TestlinkXMLRPCServerTest.php:		$this->assertFalse($this->client->query('tl.noSuchMethodExists'));				
lib/api/APIErrors.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/APIErrors.php: * rev: 20090420 - franciscom - BUGID 2158
lib/api/APIErrors.php: *      20090304 - franciscom - BUGID 2191
lib/api/APIErrors.php: *      20080518 - franciscom - TestLink Development team - www.teamst.org
lib/api/APIErrors.php:define('GENERAL_ERROR_CODE', -1);
lib/api/APIErrors.php://           null -> use user locale
lib/api/APIErrors.php://           1 -> do not log on audit system if localized string do not exist
lib/api/APIErrors.php: * 2000 level - authentication errors
lib/api/APIErrors.php: * 3000 level - Test Plan errors
lib/api/APIErrors.php: * 4000 level - Build errors
lib/api/APIErrors.php: * 5000 level - Test Case errors
lib/api/APIErrors.php: * 6000 level - Status errors
lib/api/APIErrors.php: * 7000 level - Test Project errors
lib/api/APIErrors.php: * 8000 level - Test Suite errors
lib/api/APIErrors.php: * 9000 level - Custom Fields
lib/api/APIErrors.php: * 10000 level - User
lib/api/APIErrors.php: * 11000 level - Requirements
lib/api/sample_extended_server/extended_server.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_extended_server/extended_server.php: * Contribution - example of XMLRPC server extended using TestLink XMLRPC server
lib/api/sample_extended_server/extended_server.php:        $result = $this->tsuiteMgr->get_by_name($testSuiteName);
lib/api/sample_extended_server/extended_server.php:            $this->errors[] = new IXR_Error(8004, $msg);
lib/api/sample_extended_server/extended_server.php:                $projectid = $this->tsuiteMgr->getTestProjectFromTestSuite($row['id']);
lib/api/sample_extended_server/extended_server.php:            	$tprojectInfo=$this->tprojectMgr->get_by_id($args[self::$testProjectIDParamName]);
lib/api/sample_extended_server/extended_server.php:                $this->errors[] = new IXR_Error(TESTSUITE_DONOTBELONGTO_TESTPROJECT,$msg_prefix . $msg);
lib/api/sample_extended_server/extended_server.php:        return $status_ok ? $result : $this->errors;
lib/api/sample_extended_server/extended_server.php:        $msg_prefix="(" .__FUNCTION__. ") - ";
lib/api/sample_extended_server/extended_server.php:        $this->_setArgs($args);
lib/api/sample_extended_server/extended_server.php:        $status_ok = $this->_runChecks($checkFunctions,$msg_prefix) && $this->userHasRight("mgt_view_tc");
lib/api/sample_extended_server/extended_server.php:                if (!$this->_isParamPresent($key)) {
lib/api/sample_extended_server/extended_server.php:                    $this->errors[] = new IXR_Error(NO_TESTSUITENAME,
lib/api/sample_extended_server/extended_server.php:        return $status_ok ? $this->_getTestSuiteByName($this->args) : $this->errors;
lib/api/sample_clients/java/.classpath:<?xml version="1.0" encoding="UTF-8"?>
lib/api/sample_clients/java/.classpath:	<classpathentry kind="lib" path="lib/xmlrpc-client-3.1.jar" sourcepath="lib/xmlrpc-client-3.1-sources.jar"/>
lib/api/sample_clients/java/.classpath:	<classpathentry kind="lib" path="lib/xmlrpc-common-3.1.jar" sourcepath="lib/xmlrpc-common-3.1-sources.jar"/>
lib/api/sample_clients/java/.classpath:	<classpathentry kind="lib" path="lib/ws-commons-util-1.0.2.jar"/>
lib/api/sample_clients/java/comp.bat:%JAVA_HOME%/bin/javac -classpath .\lib\xmlrpc-client-3.1.jar;.\lib\xmlrpc-common-3.1.jar clientAddTestCaseToTestPlan.java 
lib/api/sample_clients/java/.project:<?xml version="1.0" encoding="UTF-8"?>
lib/api/sample_clients/java/run.bat:﻿java -classpath .;.\lib\xmlrpc-client-3.1.jar;.\lib\xmlrpc-common-3.1.jar;.\lib\ws-commons-util-1.0.2.jar clientAddTestCaseToTestPlan 
Binary file lib/api/sample_clients/java/lib/ws-commons-util-1.0.2.jar matches
Binary file lib/api/sample_clients/java/lib/xmlrpc-common-3.1-sources.jar matches
Binary file lib/api/sample_clients/java/lib/xmlrpc-client-3.1-sources.jar matches
Binary file lib/api/sample_clients/java/lib/commons-logging-1.1.jar matches
Binary file lib/api/sample_clients/java/lib/xmlrpc-client-3.1.jar matches
Binary file lib/api/sample_clients/java/lib/xmlrpc-common-3.1.jar matches
lib/api/sample_clients/java/org/testlink/api/client/sample/clientAddTestCaseToTestPlan.java: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/java/org/testlink/api/client/sample/clientAddTestCaseToTestPlan.java:	public static final String SERVER_URL = "http://localhost:8600/testlink-1.8.5b/lib/api/xmlrpc.php";	
lib/api/sample_clients/java/org/testlink/api/client/sample/clientAddTestCaseToTestPlan.java:		clientAddTestCaseToTestPlan.doIt(1,2,"QAZ-5",1);
lib/api/sample_clients/perl/clientCreateBuild.pl:# TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/perl/clientCreateBuild.pl:# ------------------------------------------------------------------------------
lib/api/sample_clients/perl/clientCreateBuild.pl:# Tested on windows using strawberry-perl-5.10.1.2-portable (Francisco Mancardi)
lib/api/sample_clients/perl/clientCreateBuild.pl:# ------------------------------------------------------------------------------
lib/api/sample_clients/perl/clientCreateBuild.pl:my $server_url = 'http://localhost:8900/head-20100702/lib/api/xmlrpc.php';
lib/api/sample_clients/perl/clientCreateBuild.pl:# my $server_url = 'http://localhost:8900/head-20100501/lib/api/xmlrpc.php';
lib/api/sample_clients/perl/clientCreateBuild.pl:# my $server_url = 'http://localhost:8600/testlink-1.9.beta4/lib/api/xmlrpc.php';
lib/api/sample_clients/perl/clientCreateBuild.pl:my $cli = RPC::XML::Client->new($server_url);
lib/api/sample_clients/perl/clientCreateBuild.pl:print "\nTest Link XML-RPC API \n";
lib/api/sample_clients/perl/clientCreateBuild.pl:my $build=$cli->send_request('tl.createBuild',
lib/api/sample_clients/perl/clientCreateBuild.pl:my @resp = @{$build->value};
lib/api/sample_clients/perl/clientCreateBuild.pl:    print "key \'$k\' has value  \'$b->{$k}\'\n";
lib/api/sample_clients/perl/clientGetProjects.pl:# TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/perl/clientGetProjects.pl:# ------------------------------------------------------------------------------
lib/api/sample_clients/perl/clientGetProjects.pl:# Tested on windows using strawberry-perl-5.10.1.2-portable (Francisco Mancardi)
lib/api/sample_clients/perl/clientGetProjects.pl:# ------------------------------------------------------------------------------
lib/api/sample_clients/perl/clientGetProjects.pl:my $server_url = 'http://localhost:8900/head-20100702/lib/api/xmlrpc.php';
lib/api/sample_clients/perl/clientGetProjects.pl:# my $server_url = 'http://localhost:8900/head-20100501/lib/api/xmlrpc.php';
lib/api/sample_clients/perl/clientGetProjects.pl:# my $server_url = 'http://localhost:8600/testlink-1.9.beta4/lib/api/xmlrpc.php';
lib/api/sample_clients/perl/clientGetProjects.pl:my $cli = RPC::XML::Client->new($server_url);
lib/api/sample_clients/perl/clientGetProjects.pl:print "\nTest Link XML-RPC API \n";
lib/api/sample_clients/perl/clientGetProjects.pl:my $answer = $cli->send_request('tl.' . $method_on_test,{devKey=>$devkey});
lib/api/sample_clients/perl/clientGetProjects.pl:my @resp = @{$answer->value};
lib/api/sample_clients/perl/clientGetProjects.pl:  print "------------------------------------------------------------------------------------------- \n";
lib/api/sample_clients/perl/clientGetProjects.pl:      print "key \'$k\' has value  \'$b->{$k}\'\n";
lib/api/sample_clients/perl/clientGetProjects.pl:        # my $dd = pack("C*", unpack('U*', $b->{$k}));
lib/api/sample_clients/perl/clientGetProjects.pl:        # $dd = encode("iso-8859-1", $b->{$k}); 
lib/api/sample_clients/perl/clientGetProjects.pl:        # $dd = decode("cp1252", $b->{$k});
lib/api/sample_clients/perl/clientGetProjects.pl:        $dd = decode("iso-8859-1", $b->{$k});
lib/api/sample_clients/php/clientCreateBuild.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientCreateBuild.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientCreateBuild.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestCasesIDByName.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientGetTestCasesIDByName.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetTestCasesIDByName.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestCasesIDByName.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestCasesIDByName.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestCasesIDByName.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetTestCasesIDByName.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestCasesIDByName.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestPlanPlatforms.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientGetTestPlanPlatforms.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetTestPlanPlatforms.php:$args["testplanid"]=-123;
lib/api/sample_clients/php/clientGetTestPlanPlatforms.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestPlanPlatforms.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestPlanPlatforms.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestPlanPlatforms.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetTestPlanPlatforms.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestPlanPlatforms.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestPlanPlatforms.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestPlanPlatforms.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetTestPlanPlatforms.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestPlanPlatforms.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestPlanPlatforms.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestPlanPlatforms.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetTestPlanPlatforms.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestPlanPlatforms.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestCaseAttachments.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientGetTestCaseAttachments.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetTestCaseAttachments.php:$args["testcaseexternalid"]='API-2';
lib/api/sample_clients/php/clientGetTestCaseAttachments.php:$client->debug=$debug;
lib/api/sample_clients/php/clientCheckDevKey.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientCheckDevKey.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientCheckDevKey.php:$client->debug=$debug;
lib/api/sample_clients/php/clientCheckDevKey.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientCheckDevKey.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientCheckDevKey.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientCheckDevKey.php:$client->debug=$debug;
lib/api/sample_clients/php/clientCheckDevKey.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientCreateTestPlan.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientCreateTestPlan.php:$unitTestDescription="Test - {$method}";
lib/api/sample_clients/php/clientCreateTestPlan.php:$args["notes"]="test plan created using XML-RPC-API";
lib/api/sample_clients/php/clientCreateTestPlan.php:$client->debug=$debug;
lib/api/sample_clients/php/clientCreateTestPlan.php:// --------------------------------------------------------------------------
lib/api/sample_clients/php/clientCreateTestPlan.php:$args["notes"]="test plan created using XML-RPC-API";
lib/api/sample_clients/php/clientCreateTestPlan.php:$client->debug=$debug;
lib/api/sample_clients/php/clientCreateTestPlan.php:// --------------------------------------------------------------------------
lib/api/sample_clients/php/clientCreateTestPlan.php:$args["testplanname"]="TPLAN BY API-2";
lib/api/sample_clients/php/clientCreateTestPlan.php:$args["notes"]="test plan 2 created using XML-RPC-API";
lib/api/sample_clients/php/clientCreateTestPlan.php:$client->debug=$debug;
lib/api/sample_clients/php/clientCreateTestProject.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientCreateTestProject.php:$unitTestDescription="Test - {$method}";
lib/api/sample_clients/php/clientCreateTestProject.php:$args["notes"]="test project created using XML-RPC-API";
lib/api/sample_clients/php/clientCreateTestProject.php:$client->debug=$debug;
lib/api/sample_clients/php/clientSample.php: * rev: 20080306 - franciscom - added dBug to improve diagnostic info.
lib/api/sample_clients/php/clientSample.php: *      20080305 - franciscom - refactored
lib/api/sample_clients/php/clientSample.php:$unitTestDescription="Test - Call with valid parameters: testPlanID,testCaseID,buildID";
lib/api/sample_clients/php/clientSample.php:$exec_notes="Call using all INTERNAL ID's ({$testCaseID}) - status={$status}";
lib/api/sample_clients/php/clientSample.php:// $unitTestDescription="Test - Call with at least one NON EXISTENT parameters: testPlanID,testCaseID,buildID";
lib/api/sample_clients/php/clientSample.php:// // ----------------------------------------------------------------------------------------
lib/api/sample_clients/php/clientSample.php:// $unitTestDescription="Test - Call with valid parameters: testPlanID,testCaseID,buildName";
lib/api/sample_clients/php/clientSample.php:// // ----------------------------------------------------------------------------------------
lib/api/sample_clients/php/clientSample.php:// $unitTestDescription="Test - Call with valid parameters: testPlanID,testCaseExternalID,buildName";
lib/api/sample_clients/php/clientSample.php:// $testCaseExternalID='ESP-3';
lib/api/sample_clients/php/clientSample.php:  $client->debug=$debug;
lib/api/sample_clients/php/clientSample.php:	if(!$client->query('tl.reportTCResult', $data))
lib/api/sample_clients/php/clientSample.php:		echo "something went wrong - " . $client->getErrorCode() . " - " . $client->getErrorMessage();			
lib/api/sample_clients/php/clientSample.php:		return $client->getResponse();
lib/api/sample_clients/php/clientGetLastExecutionResult.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientGetLastExecutionResult.php:$unitTestDescription="Test - {$method}";
lib/api/sample_clients/php/clientGetLastExecutionResult.php:// $args["testcaseexternalid"]='API-2';
lib/api/sample_clients/php/clientGetLastExecutionResult.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestPlanByName.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientGetTestPlanByName.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetTestPlanByName.php:$args["testplanname"]="PLAN 1 - API TEST";
lib/api/sample_clients/php/clientGetTestPlanByName.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestProjectByName.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientGetTestProjectByName.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetTestProjectByName.php:$client->debug=$debug;
lib/api/sample_clients/php/clientDeleteExecution.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientDeleteExecution.php:$unitTestDescription="Test - {$method}";
lib/api/sample_clients/php/clientDeleteExecution.php:$args["executionid"]=-19;
lib/api/sample_clients/php/clientDeleteExecution.php:$client->debug=$debug;
lib/api/sample_clients/php/clientDeleteExecution.php:// ---------------------------------------------------------------------------------------
lib/api/sample_clients/php/sample.inc.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/sample.inc.php:require_once dirname(__FILE__) . THIRD_PARTY_CODE . '/xml-rpc/class-IXR.php';
lib/api/sample_clients/php/sample.inc.php:echo '<h1>Test Link XML-RPC API - PHP Samples </h1><br />';
lib/api/sample_clients/php/clientGetTestSuitesForTestSuite.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientGetTestSuitesForTestSuite.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetTestSuitesForTestSuite.php:$args["testsuiteid"]=-123;
lib/api/sample_clients/php/clientGetTestSuitesForTestSuite.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestSuitesForTestSuite.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestSuitesForTestSuite.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestSuitesForTestSuite.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetTestSuitesForTestSuite.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestSuitesForTestSuite.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestSuitesForTestSuite.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestSuitesForTestSuite.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetTestSuitesForTestSuite.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestSuitesForTestSuite.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestSuitesForTestSuite.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestSuitesForTestSuite.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetTestSuitesForTestSuite.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestSuitesForTestSuite.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientCreateTestCase.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientCreateTestCase.php:$unitTestDescription = "Test #{$tcCounter}- {$method} - With NAME exceeding limit";
lib/api/sample_clients/php/clientCreateTestCase.php:'TEST CASE NAME IS LONGER THAT ALLOWED SIZE - 100 CHARACTERS - The quick brown fox jumps over the X % lazydog (bye bye dog)';
lib/api/sample_clients/php/clientCreateTestCase.php:$client->debug=$debug;
lib/api/sample_clients/php/clientCreateTestCase.php:// ----------------------------------------------------------------------------------------------------
lib/api/sample_clients/php/clientCreateTestCase.php:$unitTestDescription="Test #{$tcCounter}- {$method}";
lib/api/sample_clients/php/clientCreateTestCase.php:$client->debug=$debug;
lib/api/sample_clients/php/clientCreateTestCase.php:// ----------------------------------------------------------------------------------------------------
lib/api/sample_clients/php/clientCreateTestCase.php:$unitTestDescription="Test #{$tcCounter}- {$method}";
lib/api/sample_clients/php/clientCreateTestCase.php:$args["summary"]='Test Case created via API - Volume Manager Increase size';
lib/api/sample_clients/php/clientCreateTestCase.php:$client->debug=$debug;
lib/api/sample_clients/php/clientCreateTestCase.php:// ----------------------------------------------------------------------------------------------------
lib/api/sample_clients/php/clientCreateTestCase.php:$unitTestDescription="Test #{$tcCounter}- {$method}";
lib/api/sample_clients/php/clientCreateTestCase.php:$client->debug=$debug;
lib/api/sample_clients/php/clientCreateTestCase.php:// ----------------------------------------------------------------------------------------------------
lib/api/sample_clients/php/clientDoesUserExist.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientDoesUserExist.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientDoesUserExist.php:$client->debug=$debug;
lib/api/sample_clients/php/clientDoesUserExist.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientDoesUserExist.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientDoesUserExist.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientDoesUserExist.php:$client->debug=$debug;
lib/api/sample_clients/php/clientDoesUserExist.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/util.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/util.php: * rev: 20100710 - franciscom - runTest() now returns server response.
lib/api/sample_clients/php/util.php:    $msg_click_to_show="click to show XML-RPC Client Debug Info";
lib/api/sample_clients/php/util.php:    <img src='img/icon-foldout.gif' align='top' title='show/hide'>{$msg_click_to_show}</a>";
lib/api/sample_clients/php/util.php:    echo '<div class="detail-container" id="' . $html_id . '" style="display: none;">';
lib/api/sample_clients/php/util.php:    if(!$client->query("tl.{$method}", $args))
lib/api/sample_clients/php/util.php:    		echo "something went wrong - " . $client->getErrorCode() . " - " . $client->getErrorMessage();			
lib/api/sample_clients/php/util.php:    		$response=$client->getResponse();
lib/api/sample_clients/php/clientCreateTestSuite.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientCreateTestSuite.php:$unitTestDescription="Test - $method";
lib/api/sample_clients/php/clientCreateTestSuite.php:$client->debug=$debug;
lib/api/sample_clients/php/clientReportTCResultOVERWRITE.php: * rev: 20080306 - franciscom - added dBug to improve diagnostic info.
lib/api/sample_clients/php/clientReportTCResultOVERWRITE.php: *      20080305 - franciscom - refactored
lib/api/sample_clients/php/clientReportTCResultOVERWRITE.php:$unitTestDescription="Test - Call with valid parameters: testPlanID,testCaseID,buildID";
lib/api/sample_clients/php/clientReportTCResultOVERWRITE.php:// $testCaseExternalID='API-71';  // 'API-69'
lib/api/sample_clients/php/clientReportTCResultOVERWRITE.php:$testCaseExternalID='API-66';
lib/api/sample_clients/php/clientReportTCResultOVERWRITE.php:$exec_notes="Call using all EXTERNAL ID ({$testCaseExternalID}) - status={$status}";
lib/api/sample_clients/php/clientReportTCResultOVERWRITE.php:// $unitTestDescription="Test - Call with valid parameters: testPlanID,testCaseID,buildID";
lib/api/sample_clients/php/clientReportTCResultOVERWRITE.php:// $testCaseExternalID='AA-1';
lib/api/sample_clients/php/clientReportTCResultOVERWRITE.php:// // $exec_notes="Call using all INTERNAL ID's ({$testCaseID}) - status={$status}";
lib/api/sample_clients/php/clientReportTCResultOVERWRITE.php:// $exec_notes="Call using all EXTERNAL ID ({$testCaseExternalID}) - status={$status}";
lib/api/sample_clients/php/clientReportTCResultOVERWRITE.php:  $client->debug=$debug;
lib/api/sample_clients/php/clientReportTCResultOVERWRITE.php:	if(!$client->query('tl.reportTCResult', $data))
lib/api/sample_clients/php/clientReportTCResultOVERWRITE.php:		echo "something went wrong - " . $client->getErrorCode() . " - " . $client->getErrorMessage();			
lib/api/sample_clients/php/clientReportTCResultOVERWRITE.php:		return $client->getResponse();
lib/api/sample_clients/php/clientGetTotalsForPlan.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientGetTotalsForPlan.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetTotalsForPlan.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTotalsForPlan.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTotalsForPlan.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTotalsForPlan.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetTotalsForPlan.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTotalsForPlan.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientSample2.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientSample2.php: * rev: 20081013 - franciscom - minor improvements to avoid reconfigure server url
lib/api/sample_clients/php/clientSample2.php: *      20080818 - franciscom - start work on custom field tests
lib/api/sample_clients/php/clientSample2.php: *      20080306 - franciscom - added dBug to improve diagnostic info.
lib/api/sample_clients/php/clientSample2.php: *      20080305 - franciscom - refactored
lib/api/sample_clients/php/clientSample2.php:$unitTestDescription="Test - getTestCasesForTestPlan";
lib/api/sample_clients/php/clientSample2.php:* @param int $args["testcaseid"] - optional
lib/api/sample_clients/php/clientSample2.php:* @param int $args["buildid"] - optional
lib/api/sample_clients/php/clientSample2.php:* @param int $args["keywordid"] - optional
lib/api/sample_clients/php/clientSample2.php:* @param boolean $args["executed"] - optional
lib/api/sample_clients/php/clientSample2.php:* @param int $args["$assignedto"] - optional
lib/api/sample_clients/php/clientSample2.php:* @param string $args["executestatus"] - optional
lib/api/sample_clients/php/clientSample2.php:// $args["testcaseid"] - optional
lib/api/sample_clients/php/clientSample2.php:// $args["buildid"] - optional
lib/api/sample_clients/php/clientSample2.php:// $args["keywordid"] - optional
lib/api/sample_clients/php/clientSample2.php:// $args["executed"] - optional
lib/api/sample_clients/php/clientSample2.php:// $args["$assignedto"] - optional
lib/api/sample_clients/php/clientSample2.php:// $args["executestatus"] - optional
lib/api/sample_clients/php/clientSample2.php:$client->debug=$debug;
lib/api/sample_clients/php/clientSample2.php:if(!$client->query('tl.getTestCasesForTestPlan', $args))
lib/api/sample_clients/php/clientSample2.php:		echo "something went wrong - " . $client->getErrorCode() . " - " . $client->getErrorMessage();			
lib/api/sample_clients/php/clientSample2.php:		$response=$client->getResponse();
lib/api/sample_clients/php/clientSample2.php:// 20080518 - franciscom
lib/api/sample_clients/php/clientSample2.php:$unitTestDescription="Test - createTestProject";
lib/api/sample_clients/php/clientSample2.php:$client->debug=$debug;
lib/api/sample_clients/php/clientSample2.php:if(!$client->query('tl.createTestProject', $args))
lib/api/sample_clients/php/clientSample2.php:		echo "something went wrong - " . $client->getErrorCode() . " - " . $client->getErrorMessage();			
lib/api/sample_clients/php/clientSample2.php:		$response=$client->getResponse();
lib/api/sample_clients/php/clientSample2.php:// ----------------------------------------------------------------------
lib/api/sample_clients/php/clientSample2.php:$unitTestDescription="Test - $method";
lib/api/sample_clients/php/clientSample2.php:$args["testcaseexternalid"]='ESP-1';
lib/api/sample_clients/php/clientSample2.php:$client->debug=$debug;
lib/api/sample_clients/php/clientSample2.php:if(!$client->query($client_query, $args))
lib/api/sample_clients/php/clientSample2.php:		echo "something went wrong - " . $client->getErrorCode() . " - " . $client->getErrorMessage();			
lib/api/sample_clients/php/clientSample2.php:		$response=$client->getResponse();
lib/api/sample_clients/php/clientSample2.php:// -------------------------------------------------------------------------------------
lib/api/sample_clients/php/clientSample2.php:$unitTestDescription="Test - getTestSuitesForTestPlan";
lib/api/sample_clients/php/clientSample2.php:$client->debug=$debug;
lib/api/sample_clients/php/clientSample2.php:if(!$client->query('tl.getTestSuitesForTestPlan', $args))
lib/api/sample_clients/php/clientSample2.php:		echo "something went wrong - " . $client->getErrorCode() . " - " . $client->getErrorMessage();			
lib/api/sample_clients/php/clientSample2.php:		$response=$client->getResponse();
lib/api/sample_clients/php/clientGetTestSuitesForTestPlan.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientGetTestSuitesForTestPlan.php: * rev: 20081013 - franciscom - minor improvements to avoid reconfigure server url
lib/api/sample_clients/php/clientGetTestSuitesForTestPlan.php: *      20080818 - franciscom - start work on custom field tests
lib/api/sample_clients/php/clientGetTestSuitesForTestPlan.php: *      20080306 - franciscom - added dBug to improve diagnostic info.
lib/api/sample_clients/php/clientGetTestSuitesForTestPlan.php: *      20080305 - franciscom - refactored
lib/api/sample_clients/php/clientGetTestSuitesForTestPlan.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetTestSuitesForTestPlan.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestCasesForTestPlan.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientGetTestCasesForTestPlan.php: *		20100715 - franciscom - new argument getstepinfo
lib/api/sample_clients/php/clientGetTestCasesForTestPlan.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetTestCasesForTestPlan.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestCasesForTestPlan.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestCasesForTestPlan.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestCasesForTestPlan.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestCasesForTestPlan.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestCasesForTestPlan.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestCasesForTestPlan.php:$additionalInfo='get steps info: -> false';
lib/api/sample_clients/php/clientGetTestCasesForTestPlan.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestCasesForTestPlan.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestCasesForTestPlan.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestCasesForTestPlan.php:$additionalInfo='get steps info: -> true';
lib/api/sample_clients/php/clientGetTestCasesForTestPlan.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestCasesForTestPlan.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientAddTestCaseToTestPlan.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientAddTestCaseToTestPlan.php:$unitTestDescription="Test - {$method} - Test Plan WITHOUT Platforms";
lib/api/sample_clients/php/clientAddTestCaseToTestPlan.php:$args["testcaseexternalid"]='API-1';
lib/api/sample_clients/php/clientAddTestCaseToTestPlan.php:$client->debug=$debug;
lib/api/sample_clients/php/clientAddTestCaseToTestPlan.php:// ---------------------------------------------------------------------------------------
lib/api/sample_clients/php/clientAddTestCaseToTestPlan.php:// ---------------------------------------------------------------------------------------
lib/api/sample_clients/php/clientAddTestCaseToTestPlan.php:$unitTestDescription="Test - {$method} - Test Plan WITH Platforms";
lib/api/sample_clients/php/clientAddTestCaseToTestPlan.php:$args["testcaseexternalid"]='P1-10'; // P1-6,4
lib/api/sample_clients/php/clientAddTestCaseToTestPlan.php:$client->debug=$debug;
lib/api/sample_clients/php/clientAssignRequirements.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientAssignRequirements.php:$unitTestDescription="Test - {$method}";
lib/api/sample_clients/php/clientAssignRequirements.php:$args["testcaseexternalid"]='OPSLC-55';
lib/api/sample_clients/php/clientAssignRequirements.php:$client->debug=$debug;
lib/api/sample_clients/php/clientReportTCResult.php: * rev: 20080306 - franciscom - added dBug to improve diagnostic info.
lib/api/sample_clients/php/clientReportTCResult.php: *      20080305 - franciscom - refactored
lib/api/sample_clients/php/clientReportTCResult.php:$unitTestDescription="Test - Call with valid parameters: testPlanID,testCaseID,buildID";
lib/api/sample_clients/php/clientReportTCResult.php:// $testCaseExternalID='API-71';  // 'API-69'
lib/api/sample_clients/php/clientReportTCResult.php:$testCaseExternalID='API-66';
lib/api/sample_clients/php/clientReportTCResult.php:$exec_notes="Call using all EXTERNAL ID ({$testCaseExternalID}) - status={$status}";
lib/api/sample_clients/php/clientReportTCResult.php:// $unitTestDescription="Test - Call with valid parameters: testPlanID,testCaseID,buildID";
lib/api/sample_clients/php/clientReportTCResult.php:// $testCaseExternalID='AA-1';
lib/api/sample_clients/php/clientReportTCResult.php:// // $exec_notes="Call using all INTERNAL ID's ({$testCaseID}) - status={$status}";
lib/api/sample_clients/php/clientReportTCResult.php:// $exec_notes="Call using all EXTERNAL ID ({$testCaseExternalID}) - status={$status}";
lib/api/sample_clients/php/clientReportTCResult.php:  $client->debug=$debug;
lib/api/sample_clients/php/clientReportTCResult.php:	if(!$client->query('tl.reportTCResult', $data))
lib/api/sample_clients/php/clientReportTCResult.php:		echo "something went wrong - " . $client->getErrorCode() . " - " . $client->getErrorMessage();			
lib/api/sample_clients/php/clientReportTCResult.php:		return $client->getResponse();
lib/api/sample_clients/php/clientGetFullPath.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientGetFullPath.php:$unitTestDescription="Test - {$method}";
lib/api/sample_clients/php/clientGetFullPath.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetFullPath.php:// --------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetFullPath.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetFullPath.php:// --------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetFullPath.php:$args["nodeid"]=-1;
lib/api/sample_clients/php/clientGetFullPath.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetFullPath.php:// --------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetFullPath.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetFullPath.php:// --------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetFullPath.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestCaseIDByName.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientGetTestCaseIDByName.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetTestCaseIDByName.php:'TEST CASE NAME IS LONGER THAT ALLOWED SIZE - 100 CHARACTERS - The quick brown fox jumps over the X % lazydog (bye bye dog)';
lib/api/sample_clients/php/clientGetTestCaseIDByName.php:$additionalInfo='- Test Case Name is longer that allowed';
lib/api/sample_clients/php/clientGetTestCaseIDByName.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestCaseIDByName.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestCaseIDByName.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetTestCaseIDByName.php:$args["testcaseexternalid"]='API-2';
lib/api/sample_clients/php/clientGetTestCaseIDByName.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestCaseIDByName.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestCaseIDByName.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetTestCaseIDByName.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestCaseIDByName.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetFirstLevelTestSuitesForTestProject.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientGetFirstLevelTestSuitesForTestProject.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetFirstLevelTestSuitesForTestProject.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetProjectTestPlans.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientGetProjectTestPlans.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetProjectTestPlans.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestCaseCustomFieldDesignValue.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientGetTestCaseCustomFieldDesignValue.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetTestCaseCustomFieldDesignValue.php:$args["testcaseexternalid"]='FMAN-4';
lib/api/sample_clients/php/clientGetTestCaseCustomFieldDesignValue.php:$client->debug=$debug;
lib/api/sample_clients/php/css/style.css:	/* text-align: center; */
lib/api/sample_clients/php/css/style.css:	background-color: #FFFFFF;
lib/api/sample_clients/php/css/style.css:	font-family: Verdana, Arial, Helvetica, sans-serif; 
lib/api/sample_clients/php/css/style.css:	border-top: 1px solid #003399;
lib/api/sample_clients/php/css/style.css:	border-left: 1px solid #003399;
lib/api/sample_clients/php/css/style.css:	border-right: 1px solid #003399;
lib/api/sample_clients/php/css/style.css:	background: #fff url(./img/section.jpg) no-repeat top right ;
lib/api/sample_clients/php/css/style.css:	text-align: left;
lib/api/sample_clients/php/css/style.css:	/* font-family: Verdana, Arial, Helvetica, sans-serif; */
lib/api/sample_clients/php/css/style.css:	font-size: 11px;
lib/api/sample_clients/php/css/style.css:	text-decoration: underline;
lib/api/sample_clients/php/css/style.css:	text-decoration: none;
lib/api/sample_clients/php/css/style.css:	text-decoration: underline;
lib/api/sample_clients/php/css/style.css:	background: #fff url(./img/section.jpg) no-repeat top right;
lib/api/sample_clients/php/css/style.css:	margin-bottom: 2px;
lib/api/sample_clients/php/css/style.css:	margin-top: 2px;
lib/api/sample_clients/php/css/style.css:	background: #fff url(./img/section.jpg) no-repeat top right;
lib/api/sample_clients/php/css/style.css:	text-decoration: none; 
lib/api/sample_clients/php/css/style.css:	background: #fff url(./img/buttonbar.gif) repeat-x top ;
lib/api/sample_clients/php/css/style.css:	font-size: 12px;
lib/api/sample_clients/php/css/style.css:	font-weight: bold;
lib/api/sample_clients/php/css/style.css:	text-decoration: none;
lib/api/sample_clients/php/css/style.css:	background: #fff url(./img/buttonbar.gif) repeat-x top ;
lib/api/sample_clients/php/css/style.css:	font-weight: bold;
lib/api/sample_clients/php/css/style.css:	background: #fff url(./img/buttonbar_gs.gif) repeat-x top;
lib/api/sample_clients/php/css/style.css:	background: #fff url(./img/buttonbar.gif) repeat-x top;
lib/api/sample_clients/php/css/style.css:	background: #fff url(./img/treeback.jpg) repeat-x top;
lib/api/sample_clients/php/css/style.css:.border-top-bottom {
lib/api/sample_clients/php/css/style.css:	border-top: 1px solid #003399;
lib/api/sample_clients/php/css/style.css:	border-bottom: 1px solid #003399;
lib/api/sample_clients/php/css/style.css:	/* text-align:	center; */
lib/api/sample_clients/php/css/style.css:	font-weight: bold;
lib/api/sample_clients/php/css/style.css:	border-top:	1px solid #003399;
lib/api/sample_clients/php/css/style.css:	border-left: 1px solid #003399;
lib/api/sample_clients/php/css/style.css:	border-right: 1px solid #003399;
lib/api/sample_clients/php/css/style.css:	font-size: 9px;
lib/api/sample_clients/php/css/style.css:	list-style: disc outside url("./img/li.gif");
lib/api/sample_clients/php/css/style.css:	text-decoration: none; 
lib/api/sample_clients/php/css/style.css:	text-decoration: none !important; 
lib/api/sample_clients/php/css/style.css:	background: #fff url(./img/section.jpg) no-repeat top right;
lib/api/sample_clients/php/css/style.css:	font-weight: bold
lib/api/sample_clients/php/css/style.css:	text-decoration: none;
lib/api/sample_clients/php/css/style.css:	text-decoration: underline;
lib/api/sample_clients/php/css/style.css:	text-decoration:line-through;
lib/api/sample_clients/php/css/style.css:	font-family:"Courier New", Courier, mono, sans-serif;
lib/api/sample_clients/php/css/style.css:td.basic {background-color: #FFFFFF; vertical-align:top;} 
lib/api/sample_clients/php/css/style.css:	font: 11px Verdana, Tahoma, Arial, Trebuchet MS, Sans-Serif, Georgia, Courier, Times New Roman, Serif;
lib/api/sample_clients/php/css/style.css:	background-color: #F7CC76;
lib/api/sample_clients/php/css/style.css:.boldtext {font-weight: bold;}
lib/api/sample_clients/php/css/style.css:	font-size: 13px;
lib/api/sample_clients/php/css/style.css:	margin-left: 0px;
lib/api/sample_clients/php/css/style.css:	margin-top: 0px;
lib/api/sample_clients/php/css/style.css:	margin-right: 0px;
lib/api/sample_clients/php/css/style.css:	margin-bottom: 6px;
lib/api/sample_clients/php/css/style.css:	font-size: 12px;
lib/api/sample_clients/php/css/style.css:font-weight: bold;
lib/api/sample_clients/php/css/style.css:	margin-left: 0px;
lib/api/sample_clients/php/css/style.css:	margin-top: 4px;
lib/api/sample_clients/php/css/style.css:	margin-right: 0px;
lib/api/sample_clients/php/css/style.css:	margin-bottom: 4px;
lib/api/sample_clients/php/css/style.css:margin-top: 0px;
lib/api/sample_clients/php/css/style.css:acronym { cursor: hand; border-bottom: dashed 1px #000000; }
lib/api/sample_clients/php/css/style.css:font-weight: bold;
lib/api/sample_clients/php/css/style.css:font-size: 16px;}
lib/api/sample_clients/php/css/style.css:	font-weight: bold;
lib/api/sample_clients/php/css/style.css:	list-style: disc outside url("./img/li.gif");
lib/api/sample_clients/php/clientGetTestCasesForTestSuite.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientGetTestCasesForTestSuite.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetTestCasesForTestSuite.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestCasesForTestSuite.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestCasesForTestSuite.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetBuilds.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientGetBuilds.php:// -------------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetBuilds.php:$unitTestDescription="Test - {$method}";
lib/api/sample_clients/php/clientGetBuilds.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetBuilds.php:// -------------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetBuilds.php:$unitTestDescription="Test - {$method}";
lib/api/sample_clients/php/clientGetBuilds.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestCase.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientGetTestCase.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetTestCase.php:$args["testcaseexternalid"]='API-2';
lib/api/sample_clients/php/clientGetTestCase.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestCase.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestCase.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetTestCase.php:$args["testcaseexternalid"]='API-2';
lib/api/sample_clients/php/clientGetTestCase.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestCase.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/clientGetTestCase.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetTestCase.php:$client->debug=$debug;
lib/api/sample_clients/php/clientGetTestCase.php:// ---------------------------------------------------------------------------------
lib/api/sample_clients/php/index.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientGetProjects.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/sample_clients/php/clientGetProjects.php:$unitTestDescription="Test {$test_num} - {$method}";
lib/api/sample_clients/php/clientGetProjects.php:$client->debug=$debug;
lib/api/sample_clients/python/clientGetProjects.py:# Testlink API Sample Python 3.1.2 getProjects() - Client implementation
lib/api/sample_clients/python/clientGetProjects.py:    SERVER_URL = "http://localhost:8900/head-20100702/lib/api/xmlrpc.php"
lib/api/APIKey.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/api/APIKey.php: *     20080129 - franciscom - generateKey
lib/api/APIKey.php:		$query = "UPDATE {$this->object_table} " .
lib/api/APIKey.php:		         " SET script_key='" . $this->generateKey() . "' " .
lib/api/APIKey.php:		$result = $this->db->exec_query($query);
lib/api/APIKey.php:			$this->dbID = $this->db->insert_id();
lib/api/APIKey.php:    args: -
lib/api/APIKey.php:    args: -
lib/api/APIKey.php:	    $key_map=$this->getAPIKeys($userID);
lib/api/APIKey.php:               " FROM {$this->object_table} " ;
lib/api/APIKey.php:      $rs = $this->db->fetchColumnsIntoMap($query, 'id', 'script_key');
lib/api/api.const.inc.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/general/staticPage.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/general/staticPage.php:$gui->pageTitle = '';
lib/general/staticPage.php:$gui->pageContent = '';
lib/general/staticPage.php:$gui->refreshTree = $args->refreshTree;
lib/general/staticPage.php:$pageKey = htmlspecialchars($args->key);
lib/general/staticPage.php:$locale = isset($_SESSION['locale']) ? $_SESSION['locale'] : $tlCfg->default_language;
lib/general/staticPage.php:	$gui->pageTitle = $TLS_htmltext_title[$pageKey];
lib/general/staticPage.php:	$gui->pageContent =  $TLS_htmltext[$pageKey];
lib/general/staticPage.php:	$gui->pageContent = "Please, ask administrator to update localization file" .
lib/general/staticPage.php:	                    " - missing key: " . $pageKey;
lib/general/staticPage.php:$smarty->assign('gui', $gui);
lib/general/staticPage.php:$smarty->display('staticPage.tpl');
lib/general/show_help.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/general/show_help.php: *     20071102 - franciscom - BUGID 1033
lib/general/show_help.php:$td = TL_ABS_PATH . TL_HELP_RPATH . $args->locale;
lib/general/show_help.php:$smarty->template_dir = $td;
lib/general/show_help.php:$smarty->clear_compiled_tpl($args->help . ".html"); 
lib/general/show_help.php:$smarty->display($args->help . ".html");
lib/general/mainPage.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/general/mainPage.php: * Rev: 20090808 - franciscom - grants refactoring
lib/general/mainPage.php: *      20090426 - franciscom - BUGID - new right testproject_user_role_assignment
lib/general/mainPage.php: *      20081030 - franciscom - BUGID 1698 - refixed
lib/general/mainPage.php: *      20080905 - franciscom - BUGID 1698
lib/general/mainPage.php: *      20080322 - franciscom - changes in $tproject_mgr->get_all_testplans()
lib/general/mainPage.php: *      20080120 - franciscom - added logic to enable/disable test case search link
lib/general/mainPage.php:$userID = $currentUser->dbID;
lib/general/mainPage.php:$gui->grants=array();
lib/general/mainPage.php:$gui->grants['project_edit'] = $currentUser->hasRight($db,'mgt_modify_product'); 
lib/general/mainPage.php:// ----------------------------------------------------------------------
lib/general/mainPage.php:if ($gui->grants['project_edit'] && !isset($_SESSION['testprojectID']))
lib/general/mainPage.php:// ----------------------------------------------------------------------
lib/general/mainPage.php:$gui->grants['reqs_view'] = $currentUser->hasRight($db,"mgt_view_req"); 
lib/general/mainPage.php:$gui->grants['reqs_edit'] = $currentUser->hasRight($db,"mgt_modify_req"); 
lib/general/mainPage.php:$gui->grants['keywords_view'] = $currentUser->hasRight($db,"mgt_view_key");
lib/general/mainPage.php:$gui->grants['keywords_edit'] = $currentUser->hasRight($db,"mgt_modify_key");
lib/general/mainPage.php:$gui->grants['platform_management'] = $currentUser->hasRight($db,"platform_management");
lib/general/mainPage.php:$gui->grants['configuration'] = $currentUser->hasRight($db,"system_configuraton");
lib/general/mainPage.php:$gui->grants['usergroups'] = $currentUser->hasRight($db,"mgt_view_usergroups");
lib/general/mainPage.php:$gui->grants['view_tc'] = $currentUser->hasRight($db,"mgt_view_tc");
lib/general/mainPage.php:$gui->grants['project_inventory_view'] = ($_SESSION['testprojectOptions']->inventoryEnabled 
lib/general/mainPage.php:	&& ($currentUser->hasRight($db,"project_inventory_view") == 'yes')) ? 1 : 0;
lib/general/mainPage.php:$gui->grants['modify_tc'] = null; 
lib/general/mainPage.php:$gui->hasTestCases = true;
lib/general/mainPage.php:if($gui->grants['view_tc'])
lib/general/mainPage.php:    $gui->grants['modify_tc'] = $currentUser->hasRight($db,"mgt_modify_tc"); 
lib/general/mainPage.php:	$gui->hasTestCases = $tproject_mgr->count_testcases($testprojectID) > 0 ? 1 : 0;
lib/general/mainPage.php:$smarty->assign('opt_requirements', isset($_SESSION['testprojectOptions']->requirementsEnabled) 
lib/general/mainPage.php:		? $_SESSION['testprojectOptions']->requirementsEnabled : null); 
lib/general/mainPage.php:// ----- Test Plan Section --------------------------------------------------------------
lib/general/mainPage.php: * @TODO - franciscom - we must understand if these two calls are really needed,
lib/general/mainPage.php:$gui->num_active_tplans = sizeof($tproject_mgr->get_all_testplans($testprojectID,$filters));
lib/general/mainPage.php:$arrPlans = $currentUser->getAccessibleTestPlans($db,$testprojectID);
lib/general/mainPage.php:$gui->testplanRole = null;
lib/general/mainPage.php:if ($testplanID && isset($currentUser->tplanRoles[$testplanID]))
lib/general/mainPage.php:	$role = $currentUser->tplanRoles[$testplanID];
lib/general/mainPage.php:	$gui->testplanRole = $tlCfg->gui->role_separator_open . $role->getDisplayName() . $tlCfg->gui->role_separator_close;
lib/general/mainPage.php:    $gui->grants[$the_right] = $currentUser->hasRight($db,$the_right);
lib/general/mainPage.php:// 20090426 - franciscom - BUGID
lib/general/mainPage.php:$gui->grants['tproject_user_role_assignment'] = "no";
lib/general/mainPage.php:if( $currentUser->hasRight($db,"testproject_user_role_assignment",$testprojectID,-1) == "yes" ||
lib/general/mainPage.php:    $currentUser->hasRight($db,"user_role_assignment",null,-1) == "yes" )
lib/general/mainPage.php:    $gui->grants['tproject_user_role_assignment'] = "yes";
lib/general/mainPage.php:$gui->url = array('metrics_dashboard' => 'lib/results/metricsDashboard.php',
lib/general/mainPage.php:$gui->launcher = 'lib/general/frmWorkArea.php';
lib/general/mainPage.php:$gui->arrPlans = $arrPlans;                   
lib/general/mainPage.php:$gui->countPlans = count($gui->arrPlans);
lib/general/mainPage.php:$gui->securityNotes = getSecurityNotes($db);
lib/general/mainPage.php:$gui->testprojectID = $testprojectID;
lib/general/mainPage.php:$gui->testplanID = $testplanID;
lib/general/mainPage.php:$gui->docs = getUserDocumentation();
lib/general/mainPage.php:$gui->current_tp_name = $arrPlans[$index]['name'];
lib/general/mainPage.php:$smarty->assign('gui',$gui);
lib/general/mainPage.php:$smarty->display('mainPage.tpl');
lib/general/frmWorkArea.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/general/frmWorkArea.php: *  20100822 - asimon - BUGID 3697: Assign Test Case execution - problems 
lib/general/frmWorkArea.php: *  20100106 - asimon - contribution for 2976 req/reqspec search
lib/general/frmWorkArea.php: * 	20080620 - havlatm - urgency support
lib/general/frmWorkArea.php: * 	20080501 - franciscom -
lib/general/frmWorkArea.php: *  20060809 - franciscom - changes in validateBuildAvailability()
lib/general/frmWorkArea.php:// --------------------------------------------------------------------------------------
lib/general/frmWorkArea.php:// --------------------------------------------------------------------------------------
lib/general/frmWorkArea.php:// (aa_tfp -> Associative Array TreeFramePath)
lib/general/frmWorkArea.php:$showFeature = $args->feature;
lib/general/frmWorkArea.php:	$smarty->assign('treewidth', TL_FRMWORKAREA_LEFT_FRAME_WIDTH);
lib/general/frmWorkArea.php:	$smarty->assign('treeframe', $aa_tfp[$showFeature]);
lib/general/frmWorkArea.php:	$smarty->assign('workframe', 'lib/general/staticPage.php?key='.$showFeature);
lib/general/frmWorkArea.php:	$smarty->display('frmInner.tpl');
lib/general/frmWorkArea.php: *  20060809 - franciscom - check if user can create builds,
lib/general/frmWorkArea.php:	if (!$tp->getNumberOfBuilds($tpID))
lib/general/frmWorkArea.php:		$smarty->assign('content', $message);
lib/general/frmWorkArea.php:		$smarty->assign('link_to_op', $link_to_op);
lib/general/frmWorkArea.php:		$smarty->assign('hint_text', $hint_text);
lib/general/frmWorkArea.php:		$smarty->display('workAreaSimple.tpl');
lib/general/navBar.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/general/navBar.php: *       20090404 - franciscom - adjust size of test case input using len of tcase prefix
lib/general/navBar.php: *       20080504 - franciscom - add code based on contribution by Eugenia Drosdezki
lib/general/navBar.php: *       20070505 - franciscom - use of role_separator configuration
lib/general/navBar.php:$gui->tprojectID = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/general/navBar.php:$gui->tcasePrefix = '';
lib/general/navBar.php:$gui->searchSize = 8; // magic default
lib/general/navBar.php:if($gui->tprojectID > 0)
lib/general/navBar.php:    $gui->tcasePrefix = $tproject_mgr->getTestCasePrefix($gui->tprojectID) . 
lib/general/navBar.php:                        config_get('testcase_cfg')->glue_character;
lib/general/navBar.php:    $gui->searchSize = tlStringLen($gui->tcasePrefix) + 7; // magic again
lib/general/navBar.php:$userID = $user->dbID;
lib/general/navBar.php:$gui->TestProjects = $tproject_mgr->get_accessible_for_user($userID,'map',$tlCfg->gui->tprojects_combo_order_by);
lib/general/navBar.php:$gui->TestProjectCount = sizeof($gui->TestProjects);
lib/general/navBar.php:$gui->TestPlanCount = 0; 
lib/general/navBar.php:if ($gui->tprojectID)
lib/general/navBar.php:	$testPlanSet = $user->getAccessibleTestPlans($db,$gui->tprojectID);
lib/general/navBar.php:    $gui->TestPlanCount = sizeof($testPlanSet);
lib/general/navBar.php:if ($gui->tprojectID && isset($user->tprojectRoles[$gui->tprojectID]))
lib/general/navBar.php:	$role = $user->tprojectRoles[$gui->tprojectID];
lib/general/navBar.php:	$testprojectRole = $role->getDisplayName();
lib/general/navBar.php:	$testprojectRole = $user->globalRole->getDisplayName();
lib/general/navBar.php:$gui->whoami = $user->getDisplayName() . ' ' . $tlCfg->gui->role_separator_open . 
lib/general/navBar.php:	           $testprojectRole . $tlCfg->gui->role_separator_close;
lib/general/navBar.php:$gui->updateMainPage = 0;
lib/general/navBar.php:if ($args->testproject)
lib/general/navBar.php:	$gui->updateMainPage = 1;
lib/general/navBar.php:	setcookie('TL_lastTestProjectForUserID_'. $userID, $args->testproject, TL_COOKIE_KEEPTIME, '/');
lib/general/navBar.php:$gui->grants = getGrants($db);
lib/general/navBar.php:$smarty->assign('gui',$gui);
lib/general/navBar.php:$smarty->display('navBar.tpl');
lib/general/navBar.php:    $grants->view_testcase_spec = has_rights($db,"mgt_view_tc");
lib/keywords/keywordsAssign.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/keywords/keywordsAssign.php:$opt_cfg->js_ot_name = 'ot';
lib/keywords/keywordsAssign.php:if ($args->edit == 'testproject')
lib/keywords/keywordsAssign.php:$opt_cfg->global_lbl = '';
lib/keywords/keywordsAssign.php:$opt_cfg->additional_global_lbl = null;
lib/keywords/keywordsAssign.php:$opt_cfg->from->lbl = lang_get('available_kword');
lib/keywords/keywordsAssign.php:$opt_cfg->to->lbl = lang_get('assigned_kword');
lib/keywords/keywordsAssign.php:$opt_cfg->from->map = $tproject_mgr->get_keywords_map($args->testproject_id);
lib/keywords/keywordsAssign.php:$opt_cfg->to->map = $tcase_mgr->get_keywords_map($args->id," ORDER BY keyword ASC ");
lib/keywords/keywordsAssign.php:if ($args->edit == 'testsuite')
lib/keywords/keywordsAssign.php:	$testsuite = $tsuite_mgr->get_by_id($args->id);
lib/keywords/keywordsAssign.php:	$tcs = $tsuite_mgr->get_testcases_deep($args->id,'only_id');
lib/keywords/keywordsAssign.php:		if ($args->bAssignTestSuite)
lib/keywords/keywordsAssign.php:				$tcase_mgr->setKeywords($tcID,$args->keywordArray);
lib/keywords/keywordsAssign.php:else if($args->edit == 'testcase')
lib/keywords/keywordsAssign.php:	$tcData = $tcase_mgr->get_by_id($args->id);
lib/keywords/keywordsAssign.php:	if($args->bAssignTestCase)
lib/keywords/keywordsAssign.php:		$tcase_mgr->setKeywords($args->id,$args->keywordArray);
lib/keywords/keywordsAssign.php:		$itemID = $args->id;
lib/keywords/keywordsAssign.php:	$opt_cfg->to->map = $tcase_mgr->get_keywords_map($itemID," ORDER BY keyword ASC ");
lib/keywords/keywordsAssign.php:keywords_opt_transf_cfg($opt_cfg, $args->keywordList);
lib/keywords/keywordsAssign.php:$smarty->assign('can_do', $can_do);
lib/keywords/keywordsAssign.php:$smarty->assign('sqlResult', $result);
lib/keywords/keywordsAssign.php:$smarty->assign('data', $args->id);
lib/keywords/keywordsAssign.php:$smarty->assign('level', $args->edit);
lib/keywords/keywordsAssign.php:$smarty->assign('opt_cfg', $opt_cfg);
lib/keywords/keywordsAssign.php:$smarty->assign('keyword_assignment_subtitle',$keyword_assignment_subtitle);
lib/keywords/keywordsAssign.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/keywords/keywordsAssign.php:	$rl_html_name = $opt_cfg->js_ot_name . "_newRight";
lib/keywords/keywordsAssign.php:    $args->id = $pParams["id"];
lib/keywords/keywordsAssign.php:    $args->keywordArray = null;
lib/keywords/keywordsAssign.php:    $args->keywordList = $pParams[$rl_html_name];
lib/keywords/keywordsAssign.php:    if ($args->keywordList != "")
lib/keywords/keywordsAssign.php:    	$args->keywordArray = explode(",",$args->keywordList);
lib/keywords/keywordsAssign.php:    $args->edit = $pParams["edit"];
lib/keywords/keywordsAssign.php:    $args->bAssignTestCase = ($pParams["assigntestcase"] != "") ? 1 : 0;
lib/keywords/keywordsAssign.php:    $args->bAssignTestSuite = ($pParams["assigntestsuite"] != "") ? 1 : 0;
lib/keywords/keywordsAssign.php:    $args->testproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/keywords/keywordsAssign.php:	return ($user->hasRight($db,'mgt_modify_key') && $user->hasRight($db,'mgt_view_key'));
lib/keywords/keywordsView.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/keywords/keywordsView.php:$keywords = $tproject->getKeywords($args->testproject_id);
lib/keywords/keywordsView.php:$smarty->assign('action',null);
lib/keywords/keywordsView.php:$smarty->assign('sqlResult',null);
lib/keywords/keywordsView.php:$smarty->assign('keywords', $keywords);
lib/keywords/keywordsView.php:$smarty->assign('canManage',has_rights($db,"mgt_modify_key"));
lib/keywords/keywordsView.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/keywords/keywordsView.php:	$args->testproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/keywords/keywordsView.php:	return $user->hasRight($db,'mgt_view_key');
lib/keywords/keywordsEdit.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/keywords/keywordsEdit.php:$op->status = 0;
lib/keywords/keywordsEdit.php:$action = $args->doAction;
lib/keywords/keywordsEdit.php:if($op->status == 1)
lib/keywords/keywordsEdit.php:	$default_template = $op->template;
lib/keywords/keywordsEdit.php:	$msg = getKeywordErrorMessage($op->status);
lib/keywords/keywordsEdit.php:	$keywords = $tprojectMgr->getKeywords($args->testproject_id);
lib/keywords/keywordsEdit.php:$smarty->assign('user_feedback',$msg);
lib/keywords/keywordsEdit.php:$smarty->assign('canManage',$canManage);
lib/keywords/keywordsEdit.php:$smarty->assign('keywords', $keywords);
lib/keywords/keywordsEdit.php:$smarty->assign('name',$args->keyword);
lib/keywords/keywordsEdit.php:$smarty->assign('keyword',$args->keyword);
lib/keywords/keywordsEdit.php:$smarty->assign('notes',$args->notes);
lib/keywords/keywordsEdit.php:$smarty->assign('keywordID',$args->keyword_id);
lib/keywords/keywordsEdit.php:$smarty->assign('mgt_view_events',has_rights($db,"mgt_view_events"));
lib/keywords/keywordsEdit.php:$smarty->display($template_dir . $default_template);
lib/keywords/keywordsEdit.php:	$args->doAction = $pParams["doAction"];
lib/keywords/keywordsEdit.php:	$args->keyword_id = $pParams["id"];
lib/keywords/keywordsEdit.php:	$args->keyword = $pParams["keyword"];
lib/keywords/keywordsEdit.php:	$args->notes = $pParams["notes"];
lib/keywords/keywordsEdit.php:	if ($args->doAction == "edit")
lib/keywords/keywordsEdit.php:		$_SESSION['s_keyword_id'] = $args->keyword_id;
lib/keywords/keywordsEdit.php:	else if($args->doAction == "do_update")
lib/keywords/keywordsEdit.php:		$args->keyword_id = $_SESSION['s_keyword_id'];
lib/keywords/keywordsEdit.php:	$args->testproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/keywords/keywordsEdit.php:	$args->testproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : 0;
lib/keywords/keywordsEdit.php:	$ret->template = 'keywordsEdit.tpl';
lib/keywords/keywordsEdit.php:	$ret->status = 1;
lib/keywords/keywordsEdit.php:	$smarty->assign('submit_button_label',lang_get('btn_save'));
lib/keywords/keywordsEdit.php:	$smarty->assign('submit_button_action','do_create');
lib/keywords/keywordsEdit.php:	$smarty->assign('main_descr',lang_get('keyword_management'));
lib/keywords/keywordsEdit.php:	$smarty->assign('action_descr',lang_get('create_keyword'));
lib/keywords/keywordsEdit.php:	$ret->template = 'keywordsEdit.tpl';
lib/keywords/keywordsEdit.php:	$ret->status = 1;
lib/keywords/keywordsEdit.php:	$keyword = $tproject_mgr->getKeyword($args->keyword_id);
lib/keywords/keywordsEdit.php:		$args->keyword = $keyword->name;
lib/keywords/keywordsEdit.php:		$args->notes = $keyword->notes;
lib/keywords/keywordsEdit.php:		$action_descr .= TITLE_SEP . $keyword->name;
lib/keywords/keywordsEdit.php:	$smarty->assign('submit_button_label',lang_get('btn_save'));
lib/keywords/keywordsEdit.php:	$smarty->assign('submit_button_action','do_update');
lib/keywords/keywordsEdit.php:	$smarty->assign('main_descr',lang_get('keyword_management'));
lib/keywords/keywordsEdit.php:	$smarty->assign('action_descr',$action_descr);
lib/keywords/keywordsEdit.php:	$smarty->assign('main_descr',lang_get('keyword_management'));
lib/keywords/keywordsEdit.php:	$smarty->assign('action_descr',lang_get('create_keyword'));
lib/keywords/keywordsEdit.php:	$smarty->assign('submit_button_label',lang_get('btn_save'));
lib/keywords/keywordsEdit.php:	$smarty->assign('submit_button_action','do_create');
lib/keywords/keywordsEdit.php:	$op = $tproject_mgr->addKeyword($args->testproject_id,$args->keyword,$args->notes);
lib/keywords/keywordsEdit.php:	$ret->template = 'keywordsView.tpl';
lib/keywords/keywordsEdit.php:	$ret->status = $op['status'];
lib/keywords/keywordsEdit.php:	$keyword = $tproject_mgr->getKeyword($args->keyword_id);
lib/keywords/keywordsEdit.php:		$action_descr .= TITLE_SEP . $keyword->name;
lib/keywords/keywordsEdit.php:	$smarty->assign('submit_button_label',lang_get('btn_save'));
lib/keywords/keywordsEdit.php:	$smarty->assign('submit_button_action','do_update');
lib/keywords/keywordsEdit.php:	$smarty->assign('main_descr',lang_get('keyword_management'));
lib/keywords/keywordsEdit.php:	$smarty->assign('action_descr',$action_descr);
lib/keywords/keywordsEdit.php:	$ret->template = 'keywordsView.tpl';
lib/keywords/keywordsEdit.php:	$ret->status = $tproject_mgr->updateKeyword($args->testproject_id,$args->keyword_id,
lib/keywords/keywordsEdit.php:										  $args->keyword,$args->notes);
lib/keywords/keywordsEdit.php:	$main_descr = lang_get('testproject') . TITLE_SEP . $args->testproject_name;
lib/keywords/keywordsEdit.php:	$smarty->assign('submit_button_label',lang_get('btn_save'));
lib/keywords/keywordsEdit.php:	$smarty->assign('submit_button_action','do_update');
lib/keywords/keywordsEdit.php:	$smarty->assign('main_descr',$main_descr);
lib/keywords/keywordsEdit.php:	$smarty->assign('action_descr',lang_get('edit_keyword'));
lib/keywords/keywordsEdit.php:	$ret->template = 'keywordsView.tpl';
lib/keywords/keywordsEdit.php:	$ret->status = $tproject_mgr->deleteKeyword($args->keyword_id);
lib/keywords/keywordsEdit.php:	return $user->hasRight($db,'mgt_modify_key') && $user->hasRight($db,'mgt_view_key');
lib/keywords/keywordsImport.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/keywords/keywordsImport.php:$dest = TL_TEMP_PATH . session_id()."-importkeywords.".$args->importType;
lib/keywords/keywordsImport.php:$msg = getFileUploadErrorMessage($args->fInfo);
lib/keywords/keywordsImport.php:if(!$msg && $args->UploadFile)
lib/keywords/keywordsImport.php:	if(($args->source != 'none') && ($args->source != ''))
lib/keywords/keywordsImport.php:		if (move_uploaded_file($args->source, $dest))
lib/keywords/keywordsImport.php:			switch($args->importType)
lib/keywords/keywordsImport.php:				$result = $tproject->$pfn($args->testproject_id,$dest);
lib/keywords/keywordsImport.php:$importTypes = $tlKeyword->getSupportedSerializationInterfaces();
lib/keywords/keywordsImport.php:$formatStrings = $tlKeyword->getSupportedSerializationFormatDescriptions();
lib/keywords/keywordsImport.php:$smarty->assign('import_type_selected',$args->importType);
lib/keywords/keywordsImport.php:$smarty->assign('msg',$msg);  
lib/keywords/keywordsImport.php:$smarty->assign('keywordFormatStrings',$formatStrings);
lib/keywords/keywordsImport.php:$smarty->assign('importTypes',$importTypes);
lib/keywords/keywordsImport.php:$smarty->assign('tproject_name', $args->testproject_name);
lib/keywords/keywordsImport.php:$smarty->assign('tproject_id', $args->testproject_id);
lib/keywords/keywordsImport.php:$smarty->assign('fileSizeLimitMsg',sprintf(lang_get('max_file_size_is'), $file_size_limit/1024 . ' KB '));
lib/keywords/keywordsImport.php:$smarty->assign('importLimit',$file_size_limit);
lib/keywords/keywordsImport.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/keywords/keywordsImport.php:	$args->UploadFile = ($args->UploadFile != "") ? 1 : 0; 
lib/keywords/keywordsImport.php:	$args->testproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/keywords/keywordsImport.php:	$args->testproject_name = $_SESSION['testprojectName'];
lib/keywords/keywordsImport.php:	$args->fInfo = isset($_FILES['uploadedFile']) ? $_FILES['uploadedFile'] : null;
lib/keywords/keywordsImport.php:	$args->source = isset($args->fInfo['tmp_name']) ? $args->fInfo['tmp_name'] : null;
lib/keywords/keywordsImport.php:	return $user->hasRight($db,'mgt_modify_key') && $user->hasRight($db,'mgt_modify_key');
lib/keywords/keywordsExport.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/keywords/keywordsExport.php:switch ($args->doAction)
lib/keywords/keywordsExport.php:$exportTypes = $keyword->getSupportedSerializationInterfaces();
lib/keywords/keywordsExport.php:$main_descr = lang_get('testproject') . TITLE_SEP . $args->testproject_name;
lib/keywords/keywordsExport.php:$fileName = is_null($args->export_filename) ? 'keywords.xml' : $args->export_filename;
lib/keywords/keywordsExport.php:$smarty->assign('export_filename',$fileName);
lib/keywords/keywordsExport.php:$smarty->assign('main_descr',$main_descr);
lib/keywords/keywordsExport.php:$smarty->assign('action_descr', lang_get('export_keywords'));
lib/keywords/keywordsExport.php:$smarty->assign('exportTypes',$exportTypes);
lib/keywords/keywordsExport.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/keywords/keywordsExport.php:	$args->testproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/keywords/keywordsExport.php:	$args->testproject_name = $_SESSION['testprojectName'];
lib/keywords/keywordsExport.php:	switch($args->exportType)
lib/keywords/keywordsExport.php:		$content = $tprojectMgr->$pfn($args->testproject_id);
lib/keywords/keywordsExport.php:		downloadContentsToFile($content,$args->export_filename);
lib/keywords/keywordsExport.php:	return $user->hasRight($db,'mgt_view_key');
lib/project/project_req_spec_mgmt.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/project/project_req_spec_mgmt.php:$gui->main_descr = lang_get('testproject') .  TITLE_SEP . $tproject_name;
lib/project/project_req_spec_mgmt.php:$gui->tproject_id = $tproject_id;
lib/project/project_req_spec_mgmt.php:$gui->refresh_tree = 'no';
lib/project/project_req_spec_mgmt.php:$smarty->assign('gui', $gui);
lib/project/project_req_spec_mgmt.php:$smarty->display('requirements/project_req_spec_mgmt.tpl');
lib/project/project_req_spec_mgmt.php:	return ($user->hasRight($db,'mgt_view_req') && $user->hasRight($db,'mgt_modify_req'));
lib/project/projectView.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/project/projectView.php: * @copyright 	2007-2009, TestLink community 
lib/project/projectView.php:$gui->doAction = $args->doAction;
lib/project/projectView.php:$gui->canManage = has_rights($db,"mgt_modify_product");
lib/project/projectView.php:$gui->tprojects = $tproject_mgr->get_accessible_for_user($args->userID,'array_of_map', 
lib/project/projectView.php:$template2launch = $templateCfg->default_template;
lib/project/projectView.php:if(count($gui->tprojects) == 0)
lib/project/projectView.php:    $gui->doAction = "create";
lib/project/projectView.php:$smarty->assign('gui',$gui);
lib/project/projectView.php:$smarty->display($templateCfg->template_dir . $template2launch);
lib/project/projectView.php:   $args->tproject_id = isset($_SESSION['testprojectID']) ? intval($_SESSION['testprojectID']) : 0 ;
lib/project/projectView.php:   $args->doAction = isset($_REQUEST['doAction']) ? $_REQUEST['doAction'] : 'list' ;
lib/project/projectView.php:   $args->userID =isset($_SESSION['userID']) ? $_SESSION['userID'] : 0;
lib/project/projectView.php:	return $user->hasRight($db,'mgt_modify_product');
lib/project/fix_tplans.php:/** TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/project/fix_tplans.php:	$testProjects = $tpObj->get_all();
lib/project/fix_tplans.php:	$smarty->assign('testPlans', $testPlans);
lib/project/fix_tplans.php:	$smarty->assign('testProjects', $testProjects);
lib/project/fix_tplans.php:	$smarty->assign('count', $testPlansCount);
lib/project/fix_tplans.php:	$smarty->display($template_dir . 'fix_tplans.tpl');
lib/project/fix_tplans.php:	$db->exec_query($query);
lib/project/projectEdit.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/project/projectEdit.php: * @copyright 	2007-2009, TestLink community 
lib/project/projectEdit.php: * 20100313 - franciscom - reduced interface 'width' with smarty
lib/project/projectEdit.php: * 20100217 - franciscom - fixed errors showed on event viewer due to missing properties
lib/project/projectEdit.php: * 20100119 - franciscom - BUGID 3048
lib/project/projectEdit.php: * 20091227 - franciscom - BUGID 3020
lib/project/projectEdit.php: * 20091121 - franciscom - BUGID - Julian Contribution
lib/project/projectEdit.php: * 20080827 - franciscom - BUGID 1692
lib/project/projectEdit.php:$ui->doActionValue = '';
lib/project/projectEdit.php:$ui->buttonValue = '';
lib/project/projectEdit.php:$ui->caption = '';
lib/project/projectEdit.php:$ui->main_descr = lang_get('title_testproject_management');
lib/project/projectEdit.php:$gui->canManage = has_rights($db,"mgt_modify_product");
lib/project/projectEdit.php:$gui->found = 'yes';
lib/project/projectEdit.php:switch($args->doAction)
lib/project/projectEdit.php:    	$template = $templateCfg->default_template;
lib/project/projectEdit.php:      	$gui->testprojects = $ui->testprojects;
lib/project/projectEdit.php:    	$template = $templateCfg->default_template;
lib/project/projectEdit.php:    	$template= $op->status_ok ?  null : $templateCfg->default_template;
lib/project/projectEdit.php:    	$ui = $op->ui;
lib/project/projectEdit.php:    	$status_ok = $op->status_ok;
lib/project/projectEdit.php:    	$user_feedback = $op->msg;
lib/project/projectEdit.php:    	$reloadType = $op->reloadType;
lib/project/projectEdit.php:    	$template= $op->status_ok ?  null : $templateCfg->default_template;
lib/project/projectEdit.php:    	$ui = $op->ui;
lib/project/projectEdit.php:    	$status_ok = $op->status_ok;
lib/project/projectEdit.php:    	$user_feedback = $op->msg;
lib/project/projectEdit.php:    	$reloadType = $op->reloadType;
lib/project/projectEdit.php:    	$status_ok = $op->status_ok;
lib/project/projectEdit.php:    	$user_feedback = $op->msg;
lib/project/projectEdit.php:    	$reloadType = $op->reloadType;
lib/project/projectEdit.php:$ui->main_descr = lang_get('title_testproject_management');
lib/project/projectEdit.php:$smarty->assign('gui_cfg',$gui_cfg);
lib/project/projectEdit.php:$smarty->assign('editorType',$editorCfg['type']);
lib/project/projectEdit.php:$smarty->assign('mgt_view_events',$_SESSION['currentUser']->hasRight($db,"mgt_view_events"));
lib/project/projectEdit.php:   $args->doAction = "ErrorOnAction";
lib/project/projectEdit.php:switch($args->doAction)
lib/project/projectEdit.php:        $gui->tprojects = $tproject_mgr->get_accessible_for_user($args->userID,'array_of_map',
lib/project/projectEdit.php:		$gui->doAction = $reloadType;
lib/project/projectEdit.php:        $smarty->assign('gui',$gui);
lib/project/projectEdit.php:        $smarty->display($templateCfg->template_dir . $template);
lib/project/projectEdit.php:        if( $args->doAction != "edit")
lib/project/projectEdit.php:    		$of->Value = getItemTemplateContents('project_template', $of->InstanceName, $args->notes);
lib/project/projectEdit.php:        	$of->Value = $args->notes;
lib/project/projectEdit.php:            $smarty->assign($prop,$value);
lib/project/projectEdit.php:        $smarty->assign('gui', $args);
lib/project/projectEdit.php:        $smarty->assign('notes', $of->CreateHTML());
lib/project/projectEdit.php:        $smarty->assign('user_feedback', $user_feedback);
lib/project/projectEdit.php:        $smarty->assign('feedback_type', 'ultrasoft');
lib/project/projectEdit.php:        $smarty->display($templateCfg->template_dir . $template);
lib/project/projectEdit.php: * super-global hashes.
lib/project/projectEdit.php: * rev:20080112 - franciscom -
lib/project/projectEdit.php: *     20070206 - franciscom - BUGID 617
lib/project/projectEdit.php:		$args->$value = isset($request_hash[$value]) ? trim($request_hash[$value]) : null;
lib/project/projectEdit.php:		$args->$key = isset($request_hash[$key]) ? intval($request_hash[$key]) : $value;
lib/project/projectEdit.php:		$args->$key = isset($request_hash[$key]) ? 1 : $value;
lib/project/projectEdit.php:	// 20070206 - BUGID 617
lib/project/projectEdit.php:	if($args->doAction != 'doUpdate' && $args->doAction != 'doCreate')
lib/project/projectEdit.php:		if ($args->tprojectID > 0)
lib/project/projectEdit.php:			$the_data = $tprojectMgr->get_by_id($args->tprojectID);
lib/project/projectEdit.php:			$args->notes = $the_data['notes'];
lib/project/projectEdit.php:			if ($args->doAction == 'doDelete')
lib/project/projectEdit.php:				$args->tprojectName = $the_data['name'];
lib/project/projectEdit.php:			$args->notes = '';
lib/project/projectEdit.php:	$args->userID = isset($_SESSION['userID']) ? $_SESSION['userID'] : 0;
lib/project/projectEdit.php:	$args->testprojects = null;
lib/project/projectEdit.php:	$args->projectOptions = prepareOptions($args);
lib/project/projectEdit.php:	  	$options->requirementsEnabled = $argsObj->optReq;
lib/project/projectEdit.php:	  	$options->testPriorityEnabled = $argsObj->optPriority;
lib/project/projectEdit.php:	  	$options->automationEnabled = $argsObj->optAutomation;
lib/project/projectEdit.php:	  	$options->inventoryEnabled = $argsObj->optInventory;
lib/project/projectEdit.php:	$op->ui = new stdClass();
lib/project/projectEdit.php:	$op->status_ok = 0;
lib/project/projectEdit.php:	$op->template = null;
lib/project/projectEdit.php:	$op->msg = '';
lib/project/projectEdit.php:	$op->id = 0;
lib/project/projectEdit.php:    $op->reloadType = 'none';
lib/project/projectEdit.php:	    $op->$key=$check_op[$key];
lib/project/projectEdit.php:	if($op->status_ok)
lib/project/projectEdit.php:		$new_id = $tprojectMgr->create($argsObj->tprojectName, $argsObj->color,
lib/project/projectEdit.php:					$options, $argsObj->notes, $argsObj->active, $argsObj->tcasePrefix,
lib/project/projectEdit.php:					$argsObj->is_public);
lib/project/projectEdit.php:			$op->msg = lang_get('refer_to_log');
lib/project/projectEdit.php:			$op->template = 'projectView.tpl';
lib/project/projectEdit.php:			$op->id = $new_id;
lib/project/projectEdit.php:	if( $op->status_ok )
lib/project/projectEdit.php:	    logAuditEvent(TLS("audit_testproject_created",$argsObj->tprojectName),"CREATE",$op->id,"testprojects");
lib/project/projectEdit.php:    	$op->reloadType = 'reloadNavBar'; // BUGID 3048
lib/project/projectEdit.php:		if($argsObj->copy_from_tproject_id > 0)
lib/project/projectEdit.php:			$options = array('copy_requirements' => $argsObj->optReq);
lib/project/projectEdit.php:			$tprojectMgr->copy_as($argsObj->copy_from_tproject_id,$new_id,
lib/project/projectEdit.php:			                      $argsObj->userID,trim($argsObj->tprojectName),$options);
lib/project/projectEdit.php:		$op->ui->doActionValue = 'doCreate';
lib/project/projectEdit.php:		$op->ui->buttonValue = lang_get('btn_create');
lib/project/projectEdit.php:		$op->ui->caption = lang_get('caption_new_tproject');
lib/project/projectEdit.php:    $op->ui = new stdClass();
lib/project/projectEdit.php:    $op->status_ok = 0;
lib/project/projectEdit.php:    $op->msg = '';
lib/project/projectEdit.php:    $op->template = null;
lib/project/projectEdit.php:    $op->reloadType = 'none';
lib/project/projectEdit.php:    $oldObjData = $tprojectMgr->get_by_id($argsObj->tprojectID);
lib/project/projectEdit.php:    $op->oldName = $oldObjData['name'];
lib/project/projectEdit.php:        $op->$key=$check_op[$key];
lib/project/projectEdit.php:	 if($op->status_ok)
lib/project/projectEdit.php:        if( $tprojectMgr->update($argsObj->tprojectID,trim($argsObj->tprojectName),
lib/project/projectEdit.php:        						 $argsObj->color, $argsObj->notes, $options, $argsObj->active,
lib/project/projectEdit.php:        						 $argsObj->tcasePrefix, $argsObj->is_public) )
lib/project/projectEdit.php:        	$op->msg = '';
lib/project/projectEdit.php:        	$tprojectMgr->activateTestProject($argsObj->tprojectID,$argsObj->active);
lib/project/projectEdit.php:        	logAuditEvent(TLS("audit_testproject_saved",$argsObj->tprojectName),"UPDATE",$argsObj->tprojectID,"testprojects");
lib/project/projectEdit.php:        	$op->status_ok=0;
lib/project/projectEdit.php:    if($op->status_ok)
lib/project/projectEdit.php:		if($sessionTprojectID == $argsObj->tprojectID)
lib/project/projectEdit.php:			$op->reloadType = 'reloadNavBar';
lib/project/projectEdit.php:    	$op->ui->doActionValue = 'doUpdate';
lib/project/projectEdit.php:    	$op->ui->buttonValue = lang_get('btn_save');
lib/project/projectEdit.php:    	$op->ui->caption = sprintf(lang_get('caption_edit_tproject'),$op->oldName);
lib/project/projectEdit.php:  returns: -
lib/project/projectEdit.php:	$tprojectInfo = $tprojectMgr->get_by_id($argsObj->tprojectID);
lib/project/projectEdit.php:	$argsObj->tprojectName = $tprojectInfo['name'];
lib/project/projectEdit.php:	$argsObj->color = $tprojectInfo['color'];
lib/project/projectEdit.php:	$argsObj->notes = $tprojectInfo['notes'];
lib/project/projectEdit.php:	$argsObj->projectOptions = $tprojectInfo['opt'];
lib/project/projectEdit.php:	$argsObj->active = $tprojectInfo['active'];
lib/project/projectEdit.php:	$argsObj->tcasePrefix = $tprojectInfo['prefix'];
lib/project/projectEdit.php:	$argsObj->is_public = $tprojectInfo['is_public'];
lib/project/projectEdit.php:	$ui->main_descr=lang_get('title_testproject_management');
lib/project/projectEdit.php:	$ui->doActionValue = 'doUpdate';
lib/project/projectEdit.php:	$ui->buttonValue = lang_get('btn_save');
lib/project/projectEdit.php:	$ui->caption = sprintf(lang_get('caption_edit_tproject'),$argsObj->tprojectName);
lib/project/projectEdit.php:            - name is valid ?
lib/project/projectEdit.php:            - name already exists ?
lib/project/projectEdit.php:            - prefix already exits ?
lib/project/projectEdit.php:  returns: -
lib/project/projectEdit.php:  rev: 20090606 - franciscom - minor refactoring
lib/project/projectEdit.php:    $op = $tprojectMgr->checkName($argsObj->tprojectName);
lib/project/projectEdit.php:    if($argsObj->doAction == 'doUpdate')
lib/project/projectEdit.php:        $updateAdditionalSQLFilter = " testprojects.id <> {$argsObj->tprojectID}";
lib/project/projectEdit.php:		    if($tprojectMgr->get_by_name($argsObj->tprojectName,$updateAdditionalSQLFilter))
lib/project/projectEdit.php:		    	$check_op['msg'][] = sprintf(lang_get('error_product_name_duplicate'),$argsObj->tprojectName);
lib/project/projectEdit.php:		    $rs = $tprojectMgr->get_by_prefix($argsObj->tcasePrefix,$updateAdditionalSQLFilter);
lib/project/projectEdit.php:		    	$check_op['msg'][] = sprintf(lang_get('error_tcase_prefix_exists'),$argsObj->tcasePrefix);
lib/project/projectEdit.php:    $argsObj->active = 1;
lib/project/projectEdit.php:    $argsObj->is_public = 1;
lib/project/projectEdit.php:	$gui->doActionValue = 'doCreate';
lib/project/projectEdit.php:	$gui->buttonValue = lang_get('btn_create');
lib/project/projectEdit.php:	$gui->caption = lang_get('caption_new_tproject');
lib/project/projectEdit.php:	$gui->testprojects = $tprojectMgr->get_all(null,array('access_key' => 'id'));
lib/project/projectEdit.php:  	$ope_status = $tprojectMgr->delete($argsObj->tprojectID);
lib/project/projectEdit.php:	$op->status_ok = $ope_status['status_ok'];
lib/project/projectEdit.php:	$op->reloadType = 'none';
lib/project/projectEdit.php:		if($sessionTprojectID == $argsObj->tprojectID)
lib/project/projectEdit.php:			$op->reloadType = 'reloadNavBar';
lib/project/projectEdit.php:		$op->msg = sprintf(lang_get('test_project_deleted'),$argsObj->tprojectName);
lib/project/projectEdit.php:		logAuditEvent(TLS("audit_testproject_deleted",$argsObj->tprojectName),"DELETE",$argsObj->tprojectID,"testprojects");
lib/project/projectEdit.php:		$op->msg = lang_get('info_product_not_deleted_check_log') . ' ' . $ope_status['msg'];
lib/project/projectEdit.php:	return $user->hasRight($db,'mgt_modify_product');
lib/plan/planAddTC.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/plan/planAddTC.php: * @copyright 	2007-2009, TestLink community 
lib/plan/planAddTC.php: * 20100721 - asimon - BUGID 3406: assign users per build when adding testcases to plan,
lib/plan/planAddTC.php: * 20100628 - asimon - removal of constants from filter control class
lib/plan/planAddTC.php: * 20100625 - asimon - refactoring for new filter features and BUGID 3516
lib/plan/planAddTC.php: * 20100624 - asimon - CVS merge (experimental branch to HEAD)
lib/plan/planAddTC.php: * 20100417 - BUGDID 2498 - filter by test case importance
lib/plan/planAddTC.php: * 20100411 - BUGID 2797 - filter by test case execution type
lib/plan/planAddTC.php: * 20100225 - eloff - BUGID 3205 - Don't show "save platforms" when platforms aren't used
lib/plan/planAddTC.php: * 20100129 - franciscom - moved here from template, logic to initialize:
lib/plan/planAddTC.php: * 20090922 - franciscom - add contribution - bulk tester assignment while adding test cases
lib/plan/planAddTC.php:$gui->build = init_build_selector($tplan_mgr, $args);
lib/plan/planAddTC.php:if(is_array($args->keyword_id))
lib/plan/planAddTC.php:    $keywordsFilter->items = $args->keyword_id;
lib/plan/planAddTC.php:    $keywordsFilter->type = $gui->keywordsFilterType->selected;
lib/plan/planAddTC.php:switch($args->item_level)
lib/plan/planAddTC.php:switch($args->doAction)
lib/plan/planAddTC.php:	    if(!is_null($args->testcases2add))
lib/plan/planAddTC.php:            foreach ($args->testcases2add as $tcase_id => $info) 
lib/plan/planAddTC.php:                    // $items_to_link[$tcase_id][$platform_id] = $args->tcversion_for_tcid[$tcase_id];
lib/plan/planAddTC.php:                    if( isset($args->tcversion_for_tcid[$tcase_id]) )
lib/plan/planAddTC.php:                    	$tcversion_id = $args->tcversion_for_tcid[$tcase_id];
lib/plan/planAddTC.php:                    	$tcversion_id = $args->linkedVersion[$tcase_id];
lib/plan/planAddTC.php:		    $linked_features=$tplan_mgr->link_tcversions($args->tplan_id,$items_to_link,$args->userID);
lib/plan/planAddTC.php:		    if( $args->testerID > 0 )
lib/plan/planAddTC.php:				$status_map = $tplan_mgr->assignment_mgr->get_available_status();
lib/plan/planAddTC.php:		        $types_map = $tplan_mgr->assignment_mgr->get_available_types();
lib/plan/planAddTC.php:		        $db_now = $db->db_now();
lib/plan/planAddTC.php:                $platformSet = $tplan_mgr->getPlatforms($args->tplan_id,$getOpt);
lib/plan/planAddTC.php:		    			$features2['add'][$feature_id]['user_id'] = $args->testerID;
lib/plan/planAddTC.php:						$features2['add'][$feature_id]['assigner_id'] = $args->userID;
lib/plan/planAddTC.php:					    $features2['add'][$feature_id]['build_id'] = $args->build_id;
lib/plan/planAddTC.php:			       	$tplan_mgr->assignment_mgr->assign($values);
lib/plan/planAddTC.php:				if($args->send_mail)
lib/plan/planAddTC.php:				}	// if($args->send_mail)
lib/plan/planAddTC.php:	    if(!is_null($args->testcases2remove))
lib/plan/planAddTC.php:            foreach ($args->testcases2remove as $tcase_id => $info) 
lib/plan/planAddTC.php:		    $tplan_mgr->unlink_tcversions($args->tplan_id,$items_to_unlink);
lib/plan/planAddTC.php:	$tsuite_data = $tsuite_mgr->get_by_id($args->object_id);
lib/plan/planAddTC.php:	//  1. Test Suite A - create TC1 - Version 1 - exec type MANUAL
lib/plan/planAddTC.php:	//  2. Test Suite A - create TC2 - Version 1 - exec type AUTO
lib/plan/planAddTC.php:	//  3. Test Suite A - create TC3 - Version 1 - exec type MANUAL
lib/plan/planAddTC.php:	//  5. Add TC1 - Version 1 to test plan
lib/plan/planAddTC.php:	//     TC2 - Version 1 NOT ASSIGNED TO TEST PLAN is displayed
lib/plan/planAddTC.php:	//  9. Use feature edits test cases, to create a new version for TC1 -> Version 2 - exec type AUTO
lib/plan/planAddTC.php:	//     TC2 - Version 1 NOT ASSIGNED TO TEST PLAN is displayed
lib/plan/planAddTC.php:	//     TC1 - Version 2 NOT ASSIGNED TO TEST PLAN is displayed  ----> THIS IS RIGHT but WRONG
lib/plan/planAddTC.php:	    $keywordsTestCases = $tproject_mgr->get_keywords_tcases($args->tproject_id,$keywordsFilter->items,
lib/plan/planAddTC.php:	                                                            $keywordsFilter->type);
lib/plan/planAddTC.php:	$cfields=$tsuite_mgr->cfield_mgr->get_linked_cfields_at_testplan_design($args->tproject_id,1,'testcase');
lib/plan/planAddTC.php:	// 20100411 - BUGID 2797 - filter by test case execution type
lib/plan/planAddTC.php:    $filters = array('keywords' => $args->keyword_id, 'testcases' => $testCaseSet, 
lib/plan/planAddTC.php:                     'exec_type' => $args->executionType, 'importance' => $args->importance);
lib/plan/planAddTC.php:	$out = gen_spec_view($db,'testPlanLinking',$args->tproject_id,$args->object_id,$tsuite_data['name'],
lib/plan/planAddTC.php:  	$gui->has_tc = ($out['num_tc'] > 0 ? 1 : 0);
lib/plan/planAddTC.php:	$gui->items = $out['spec_view'];
lib/plan/planAddTC.php:	$gui->has_linked_items = $out['has_linked_items'];
lib/plan/planAddTC.php:	$gui->add_custom_fields = $opt['add_custom_fields'];
lib/plan/planAddTC.php:    $gui->drawSavePlatformsButton = false;
lib/plan/planAddTC.php:    $gui->drawSaveCFieldsButton = false;
lib/plan/planAddTC.php:    if( !is_null($gui->items) )
lib/plan/planAddTC.php:	$smarty->assign('gui', $gui);
lib/plan/planAddTC.php:	$smarty->display($templateCfg->template_dir .  'planAddTC_m1.tpl');
lib/plan/planAddTC.php:	$args->tplan_id = isset($_REQUEST['tplan_id']) ? $_REQUEST['tplan_id'] : $_SESSION['testplanID'];
lib/plan/planAddTC.php:	$args->object_id = isset($_REQUEST['id']) ? intval($_REQUEST['id']) : 0;
lib/plan/planAddTC.php:	$args->item_level = isset($_REQUEST['edit']) ? trim($_REQUEST['edit']) : null;
lib/plan/planAddTC.php:	$args->doAction = isset($_REQUEST['doAction']) ? $_REQUEST['doAction'] : "default";
lib/plan/planAddTC.php:	$args->tproject_id = $_SESSION['testprojectID'];
lib/plan/planAddTC.php:	$args->tproject_name = $_SESSION['testprojectName'];
lib/plan/planAddTC.php:	$args->testcases2add = isset($_REQUEST['achecked_tc']) ? $_REQUEST['achecked_tc'] : null;
lib/plan/planAddTC.php:	$args->tcversion_for_tcid = isset($_REQUEST['tcversion_for_tcid']) ? $_REQUEST['tcversion_for_tcid'] : null;
lib/plan/planAddTC.php:	$args->testcases2remove = isset($_REQUEST['remove_checked_tc']) ? $_REQUEST['remove_checked_tc'] : null;
lib/plan/planAddTC.php://	$args->keyword_id = 0;  
lib/plan/planAddTC.php://		$args->keyword_id = explode(',',$keywordSet);  
lib/plan/planAddTC.php://	$args->keywordsFilterType = isset($_REQUEST['keywordsFilterType']) ? $_REQUEST['keywordsFilterType'] : 'OR';
lib/plan/planAddTC.php:	$args->testcases2order = isset($_REQUEST['exec_order']) ? $_REQUEST['exec_order'] : null;
lib/plan/planAddTC.php:	$args->linkedOrder = isset($_REQUEST['linked_exec_order']) ? $_REQUEST['linked_exec_order'] : null;
lib/plan/planAddTC.php:	$args->linkedVersion = isset($_REQUEST['linked_version']) ? $_REQUEST['linked_version'] : null;
lib/plan/planAddTC.php:	$args->linkedWithCF = isset($_REQUEST['linked_with_cf']) ? $_REQUEST['linked_with_cf'] : null;
lib/plan/planAddTC.php:	$args->feature2fix = isset($_REQUEST['feature2fix']) ? $_REQUEST['feature2fix'] : null;
lib/plan/planAddTC.php:	$args->userID = $_SESSION['currentUser']->dbID;
lib/plan/planAddTC.php:	$args->testerID = isset($_REQUEST['testerID']) ? intval($_REQUEST['testerID']) : 0;
lib/plan/planAddTC.php:    $args->send_mail = isset($_REQUEST['send_mail']) ? $_REQUEST['send_mail'] : false;
lib/plan/planAddTC.php://	// BUGID 2797 - filter by test case execution type
lib/plan/planAddTC.php://	// 0 -> Any, but has to be converter to null to be used on call to other functions
lib/plan/planAddTC.php://	$args->executionType = isset($_REQUEST['executionType']) ? intval($_REQUEST['executionType']) : 0;
lib/plan/planAddTC.php://	$args->executionType = ($args->executionType > 0) ? $args->executionType : null;
lib/plan/planAddTC.php://	// 0 -> Any, but has to be converter to null to be used on call to other functions
lib/plan/planAddTC.php://	$args->importance = isset($_REQUEST['importance']) ? intval($_REQUEST['importance']) : 0;
lib/plan/planAddTC.php://	$args->importance = ($args->importance > 0) ? $args->importance : null;
lib/plan/planAddTC.php:	$args->refreshTree = isset($session_data['setting_refresh_tree_on_action']) ?
lib/plan/planAddTC.php:	$args->executionType = isset($session_data['filter_execution_type']) ? 
lib/plan/planAddTC.php:	$args->importance = isset($session_data['filter_priority']) ? 
lib/plan/planAddTC.php:	$args->importance = ($args->importance > 0) ? $args->importance : null;
lib/plan/planAddTC.php:	$args->keyword_id = 0;
lib/plan/planAddTC.php:		$args->keyword_id = $session_data[$fk];
lib/plan/planAddTC.php:		if (is_array($args->keyword_id) && count($args->keyword_id) == 1) {
lib/plan/planAddTC.php:			$args->keyword_id = $args->keyword_id[0];
lib/plan/planAddTC.php:	$args->keywordsFilterType = null;
lib/plan/planAddTC.php:		$args->keywordsFilterType = $session_data[$ft];
lib/plan/planAddTC.php:	$args->build_id = isset($_REQUEST['build_id']) ? intval($_REQUEST['build_id']) : 0;
lib/plan/planAddTC.php:  returns: -
lib/plan/planAddTC.php:    if(!is_null($argsObj->linkedVersion))
lib/plan/planAddTC.php:        foreach($argsObj->linkedVersion as $tcid => $tcversion_id)
lib/plan/planAddTC.php:            if($argsObj->linkedOrder[$tcid] != $argsObj->testcases2order[$tcid] )
lib/plan/planAddTC.php:                $mapo[$tcversion_id] = $argsObj->testcases2order[$tcid];
lib/plan/planAddTC.php:    if(!is_null($argsObj->testcases2add))
lib/plan/planAddTC.php:        $tcaseSet = array_keys($argsObj->testcases2add);
lib/plan/planAddTC.php:        	if( isset($argsObj->tcversion_for_tcid[$tcid]) )
lib/plan/planAddTC.php:            	$tcversion_id = $argsObj->tcversion_for_tcid[$tcid];
lib/plan/planAddTC.php:            	//$mapo[$tcversion_id] = $argsObj->testcases2order[$tcid];
lib/plan/planAddTC.php:            else if( isset($argsObj->linkedVersion[$tcid]) && 
lib/plan/planAddTC.php:                     !isset($mapo[$argsObj->linkedVersion[$tcid]]))
lib/plan/planAddTC.php:            	// $mapo[$argsObj->linkedVersion[$tcid]]=$argsObj->testcases2order[$tcid];
lib/plan/planAddTC.php:            	$tcversion_id = $argsObj->linkedVersion[$tcid];
lib/plan/planAddTC.php:            	$mapo[$tcversion_id] = $argsObj->testcases2order[$tcid];
lib/plan/planAddTC.php:        $tplanMgr->setExecutionOrder($argsObj->tplan_id,$mapo);
lib/plan/planAddTC.php:    $gui->testCasePrefix = $tcaseMgr->tproject_mgr->getTestCasePrefix($argsObj->tproject_id);
lib/plan/planAddTC.php:    $gui->testCasePrefix .= $tcase_cfg->glue_character;
lib/plan/planAddTC.php:    $gui->can_remove_executed_testcases=$tcase_cfg->can_remove_executed;
lib/plan/planAddTC.php:    $gui->keywordsFilterType = $argsObj->keywordsFilterType;
lib/plan/planAddTC.php:    $gui->keywords_filter = '';
lib/plan/planAddTC.php:    $gui->has_tc = 0;
lib/plan/planAddTC.php:    $gui->items = null;
lib/plan/planAddTC.php:    $gui->has_linked_items = false;
lib/plan/planAddTC.php:    $gui->keywordsFilterType = new stdClass();
lib/plan/planAddTC.php:    $gui->keywordsFilterType->options = array('OR' => 'Or' , 'AND' =>'And'); 
lib/plan/planAddTC.php:    $gui->keywordsFilterType->selected=$argsObj->keywordsFilterType;
lib/plan/planAddTC.php:    $gui->full_control = 1;
lib/plan/planAddTC.php:    $tplan_info = $tplanMgr->get_by_id($argsObj->tplan_id);
lib/plan/planAddTC.php:    $gui->testPlanName = $tplan_info['name'];
lib/plan/planAddTC.php:    $gui->pageTitle = lang_get('test_plan') . $title_separator . $gui->testPlanName;
lib/plan/planAddTC.php:    $gui->refreshTree = $argsObj->refreshTree;
lib/plan/planAddTC.php:    $gui->testers = getTestersForHtmlOptions($dbHandler,$argsObj->tplan_id,$argsObj->tproject_id);
lib/plan/planAddTC.php:    $gui->testerID = $argsObj->testerID;
lib/plan/planAddTC.php:    $gui->send_mail = $argsObj->send_mail;
lib/plan/planAddTC.php:    $gui->send_mail_checked = '';
lib/plan/planAddTC.php:    if($gui->send_mail)
lib/plan/planAddTC.php:    	$gui->send_mail_checked = ' checked="checked" ';
lib/plan/planAddTC.php:	$platform_mgr = new tlPlatform($dbHandler, $argsObj->tproject_id);
lib/plan/planAddTC.php:	$gui->platforms = $platform_mgr->getLinkedToTestplan($argsObj->tplan_id);
lib/plan/planAddTC.php:	$gui->platformsForHtmlOptions = null;
lib/plan/planAddTC.php:	$gui->usePlatforms = $platform_mgr->platformsActiveForTestplan($argsObj->tplan_id);
lib/plan/planAddTC.php:	if($gui->usePlatforms)
lib/plan/planAddTC.php:		$gui->platformsForHtmlOptions[0]='';
lib/plan/planAddTC.php:		foreach($gui->platforms as $elem)
lib/plan/planAddTC.php:			$gui->platformsForHtmlOptions[$elem['id']] =$elem['name'];
lib/plan/planAddTC.php:		$gui->bulk_platforms = $platform_mgr->getLinkedToTestplanAsMap($argsObj->tplan_id);
lib/plan/planAddTC.php:		$gui->bulk_platforms[0] = lang_get("all_platforms");
lib/plan/planAddTC.php:		ksort($gui->bulk_platforms);
lib/plan/planAddTC.php:	$gui->warning_msg = new stdClass();
lib/plan/planAddTC.php:	$gui->warning_msg->executed = lang_get('executed_can_not_be_removed');
lib/plan/planAddTC.php:	if( $gui->can_remove_executed_testcases )
lib/plan/planAddTC.php:		$gui->warning_msg->executed = lang_get('has_been_executed');
lib/plan/planAddTC.php:  returns: -
lib/plan/planAddTC.php:    $cf_prefix = $tcaseMgr->cfield_mgr->get_name_prefix();
lib/plan/planAddTC.php:    // foreach($argsObj->linkedWithCF as $key => $link_id)
lib/plan/planAddTC.php:        $tcaseMgr->cfield_mgr->testplan_design_values_to_db($cfvalues,null,$link_id);
lib/plan/planAddTC.php:  returns: -
lib/plan/planAddTC.php:	foreach($argsObj->feature2fix as $feature_id => $tcversion_platform)
lib/plan/planAddTC.php:			$tplanMgr->changeLinkedTCVersionsPlatform($argsObj->tplan_id,0,$platform_id,$tcversion_id);
lib/plan/planAddTC.php:    $userSet[]=$argsObj->userID;
lib/plan/planAddTC.php:    $userSet[]=$argsObj->testerID;
lib/plan/planAddTC.php:    $assigner=$userData[$argsObj->userID]->firstName . ' ' . $userData[$argsObj->userID]->lastName ;
lib/plan/planAddTC.php:    $body_first_lines = lang_get('testproject') . ': ' . $argsObj->tproject_name . '<br />' .
lib/plan/planAddTC.php:                        lang_get('testplan') . ': ' . $guiObj->testPlanName .'<br /><br />';
lib/plan/planAddTC.php:    $infoSet=$tcaseMgr->get_by_id_bulk($tcaseSet,$tcversionSet);
lib/plan/planAddTC.php:        $tcnames[$value['testcase_id']] = $guiObj->testCasePrefix . $value['tc_external_id'] . ' ' . $value['name'];    
lib/plan/planAddTC.php:    $path_info = $tcaseMgr->tree_manager->get_full_path_verbose($tcaseSet,array('output_format' => 'simple'));
lib/plan/planAddTC.php:            $email['subject'] = $mail_subject[$tester_type] . ' ' . $guiObj->testPlanName;  
lib/plan/planAddTC.php:                $email['to_address']=$userObj->emailAddress;
lib/plan/planAddTC.php:                                          $userObj->firstName . ' ' .$userObj->lastName,$assigner);
lib/plan/planAddTC.php:	$keySet = array_keys($guiObj->items);
lib/plan/planAddTC.php:	// 20100225 - eloff - BUGID 3205 - check only when platforms are active
lib/plan/planAddTC.php:	if ($guiObj->usePlatforms)
lib/plan/planAddTC.php:			$testSuite = &$guiObj->items[$key];
lib/plan/planAddTC.php:						$guiObj->drawSavePlatformsButton = true;
lib/plan/planAddTC.php:		$tcaseSet = &$guiObj->items[$key]['testcases'];
lib/plan/planAddTC.php:					$guiObj->drawSaveCFieldsButton = true;
lib/plan/planAddTC.php:  	$guiObj->exec_order_input_disabled = 'disabled="disabled"';
lib/plan/planAddTC.php:   	if( $guiObj->full_control )
lib/plan/planAddTC.php:		if( $guiObj->has_linked_items )
lib/plan/planAddTC.php:		$guiObj->exec_order_input_disabled = ' ';
lib/plan/planAddTC.php:	$guiObj->actionTitle = lang_get($actionTitle);
lib/plan/planAddTC.php:	$guiObj->buttonValue = lang_get($buttonValue);
lib/plan/planAddTC.php:	$html_menu['items'] = $testplan_mgr->get_builds_for_html_options($argsObj->tplan_id,
lib/plan/planAddTC.php:	$build_id = $argsObj->build_id;
lib/plan/tc_exec_assignment.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/plan/tc_exec_assignment.php: * @copyright 	2005-2009, TestLink community 
lib/plan/tc_exec_assignment.php: * 20100721 - asimon - BUGID 3406 - testcase execution assignment per build
lib/plan/tc_exec_assignment.php: * 20100326 - amitkhullar - BUGID 3346: Update the date on updating test case asssigments
lib/plan/tc_exec_assignment.php: * 20100228 - franciscom - BUGID 3226: Assignment of single test case not possible
lib/plan/tc_exec_assignment.php: * 20100225 - eloff - remove unnecessary call to platformVisibleForTestplan
lib/plan/tc_exec_assignment.php: * 20100215 - asimon - BUGID 2455, BUGID 3026
lib/plan/tc_exec_assignment.php: * 20100212 - eloff - BUGID 3157 - fixes reassignment to other user
lib/plan/tc_exec_assignment.php: * 20090807 - franciscom - new feature platforms
lib/plan/tc_exec_assignment.php: * 20090201 - franciscom - new feature send mail to tester
lib/plan/tc_exec_assignment.php: * 20080312 - franciscom - BUGID 1427
lib/plan/tc_exec_assignment.php: * 20080114 - franciscom - added testcase external_id management
lib/plan/tc_exec_assignment.php: * 20071228 - franciscom - BUG build combo of users using only users
lib/plan/tc_exec_assignment.php: * 20070912 - franciscom - BUGID 1041
lib/plan/tc_exec_assignment.php:$keywordsFilter->items = null;
lib/plan/tc_exec_assignment.php:$keywordsFilter->type = null;
lib/plan/tc_exec_assignment.php:if(is_array($args->keyword_id))
lib/plan/tc_exec_assignment.php:    $keywordsFilter->items = $args->keyword_id;
lib/plan/tc_exec_assignment.php:    $keywordsFilter->type = $gui->keywordsFilterType;
lib/plan/tc_exec_assignment.php:if(!is_null($args->doAction))
lib/plan/tc_exec_assignment.php:	if(!is_null($args->achecked_tc))
lib/plan/tc_exec_assignment.php:		$types_map = $assignment_mgr->get_available_types();
lib/plan/tc_exec_assignment.php:		$status_map = $assignment_mgr->get_available_status();
lib/plan/tc_exec_assignment.php:		$db_now = $db->db_now();
lib/plan/tc_exec_assignment.php:		foreach($args->achecked_tc as $key_tc => $platform_tcversion)
lib/plan/tc_exec_assignment.php:				$feature_id = $args->feature_id[$key_tc][$platform_id];
lib/plan/tc_exec_assignment.php:				if($args->has_prev_assignment[$key_tc][$platform_id] > 0)
lib/plan/tc_exec_assignment.php:					if($args->tester_for_tcid[$key_tc][$platform_id] > 0)
lib/plan/tc_exec_assignment.php:					    if( $args->has_prev_assignment[$key_tc][$platform_id] != $args->tester_for_tcid[$key_tc][$platform_id])
lib/plan/tc_exec_assignment.php:						    $features2[$op][$feature_id]['user_id'] = $args->tester_for_tcid[$key_tc][$platform_id];
lib/plan/tc_exec_assignment.php:						    $features2[$op][$feature_id]['assigner_id'] = $args->user_id;
lib/plan/tc_exec_assignment.php:            	            $features2[$op][$feature_id]['previous_user_id'] = $args->has_prev_assignment[$key_tc][$platform_id];					    
lib/plan/tc_exec_assignment.php:            	            $features2[$op][$feature_id]['build_id'] = $args->build_id; // BUGID 3406
lib/plan/tc_exec_assignment.php:            	        $features2[$op][$feature_id]['previous_user_id'] = $args->has_prev_assignment[$key_tc][$platform_id];
lib/plan/tc_exec_assignment.php:            	        $features2[$op][$feature_id]['build_id'] = $args->build_id; // BUGID 3406					    
lib/plan/tc_exec_assignment.php:				else if($args->tester_for_tcid[$key_tc][$platform_id] > 0)
lib/plan/tc_exec_assignment.php:					$features2[$op][$feature_id]['user_id'] = $args->tester_for_tcid[$key_tc][$platform_id];
lib/plan/tc_exec_assignment.php:					$features2[$op][$feature_id]['assigner_id'] = $args->user_id;
lib/plan/tc_exec_assignment.php:					$features2[$op][$feature_id]['build_id'] = $args->build_id; // BUGID 3406
lib/plan/tc_exec_assignment.php:	                $assignment_mgr->$method2call[$key](array_keys($values));
lib/plan/tc_exec_assignment.php:	           	    $assignment_mgr->$method2call[$key]($values);
lib/plan/tc_exec_assignment.php:		if($args->send_mail)
lib/plan/tc_exec_assignment.php:		}	// if($args->send_mail)		
lib/plan/tc_exec_assignment.php:switch($args->level)
lib/plan/tc_exec_assignment.php:        $xx=$tcase_mgr->getPathLayered(array($args->id));
lib/plan/tc_exec_assignment.php:		// 20100228 - franciscom - BUGID 3226: Assignment of single test case not possible
lib/plan/tc_exec_assignment.php:        $getFilters = array('tcase_id' => $args->id);
lib/plan/tc_exec_assignment.php:        $getOptions = array('output' => 'mapOfArray', 'user_assignments_per_build' => $args->build_id);
lib/plan/tc_exec_assignment.php:		$linked_items = $tplan_mgr->get_linked_tcversions($args->tplan_id,$getFilters,$getOptions);
lib/plan/tc_exec_assignment.php:		$filters = array('keywords' => $keywordsFilter->items );	
lib/plan/tc_exec_assignment.php:		$opt = array('write_button_only_if_linked' => 1, 'user_assignments_per_build' => $args->build_id);
lib/plan/tc_exec_assignment.php:		$my_out = gen_spec_view($db,'testplan',$args->tplan_id,$tsuite_data['id'],$tsuite_data['name'],
lib/plan/tc_exec_assignment.php:		$tcaseFilter = (isset($args->testcases_to_show)) ? $args->testcases_to_show : null;
lib/plan/tc_exec_assignment.php:		$opt = array('user_assignments_per_build' => $args->build_id);
lib/plan/tc_exec_assignment.php:$gui->items = $out['spec_view'];
lib/plan/tc_exec_assignment.php:$gui->items_qty = is_null($gui->items) ? 0 : count($gui->items);
lib/plan/tc_exec_assignment.php:$gui->has_tc = $out['num_tc'] > 0 ? 1:0;
lib/plan/tc_exec_assignment.php:$gui->support_array = array_keys($gui->items);
lib/plan/tc_exec_assignment.php:if ($_SESSION['testprojectOptions']->testPriorityEnabled) 
lib/plan/tc_exec_assignment.php:	$gui->priority_labels = init_labels($urgencyCfg["code_label"]);
lib/plan/tc_exec_assignment.php:$smarty->assign('gui', $gui);
lib/plan/tc_exec_assignment.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/plan/tc_exec_assignment.php:	  $args->user_id = $_SESSION['userID'];
lib/plan/tc_exec_assignment.php:	  $args->tproject_id = $_SESSION['testprojectID'];
lib/plan/tc_exec_assignment.php:	  $args->tproject_name = $_SESSION['testprojectName'];
lib/plan/tc_exec_assignment.php://	  $args->tplan_id = isset($_REQUEST['tplan_id']) ? $_REQUEST['tplan_id'] : $_SESSION['testplanID'];
lib/plan/tc_exec_assignment.php:	  	$args->$key = isset($_REQUEST[$key]) ? $_REQUEST[$key] : $value;
lib/plan/tc_exec_assignment.php://    $args->keyword_id = is_null($keywordSet) ? 0 : explode(',',$keywordSet); 
lib/plan/tc_exec_assignment.php://    $args->keywordsFilterType = isset($_REQUEST['keywordsFilterType']) ? $_REQUEST['keywordsFilterType'] : 'OR';
lib/plan/tc_exec_assignment.php://    if( !is_null($args->filter_assigned_to) )
lib/plan/tc_exec_assignment.php://        $args->filter_assigned_to = (array)$args->filter_assigned_to;  
lib/plan/tc_exec_assignment.php://		$args->tcids_to_show = explode(",", $_REQUEST['show_only_tcs']);
lib/plan/tc_exec_assignment.php:	$args->refreshTree = isset($session_data['setting_refresh_tree_on_action']) ?
lib/plan/tc_exec_assignment.php:    $args->keyword_id = 0;
lib/plan/tc_exec_assignment.php:		$args->keyword_id = $session_data[$fk];
lib/plan/tc_exec_assignment.php:		if (is_array($args->keyword_id) && count($args->keyword_id) == 1) {
lib/plan/tc_exec_assignment.php:			$args->keyword_id = $args->keyword_id[0];
lib/plan/tc_exec_assignment.php:	$args->keywordsFilterType = null;
lib/plan/tc_exec_assignment.php:		$args->keywordsFilterType = $session_data[$ft];
lib/plan/tc_exec_assignment.php:	$args->filter_assigned_to = isset($session_data['filter_assigned_user']) ? 
lib/plan/tc_exec_assignment.php:	$args->testcases_to_show = null;
lib/plan/tc_exec_assignment.php:		$args->testcases_to_show = $session_data['testcases_to_show'];
lib/plan/tc_exec_assignment.php:	$args->build_id = isset($session_data['setting_build']) ? $session_data['setting_build'] : 0;
lib/plan/tc_exec_assignment.php:	$args->tplan_id = isset($session_data['setting_testplan']) ? $session_data['setting_testplan'] : 0;
lib/plan/tc_exec_assignment.php:	if ($args->tplan_id) {
lib/plan/tc_exec_assignment.php:		$args->tplan_id = isset($_REQUEST['tplan_id']) ? $_REQUEST['tplan_id'] : $_SESSION['testplanID'];
lib/plan/tc_exec_assignment.php:	$platform_mgr = new tlPlatform($dbHandler,$argsObj->tproject_id);
lib/plan/tc_exec_assignment.php:    $gui->platforms = $platform_mgr->getLinkedToTestplanAsMap($argsObj->tplan_id);
lib/plan/tc_exec_assignment.php:    $gui->usePlatforms = $platform_mgr->platformsActiveForTestplan($argsObj->tplan_id);
lib/plan/tc_exec_assignment.php:    $gui->bulk_platforms = $platform_mgr->getLinkedToTestplanAsMap($argsObj->tplan_id);
lib/plan/tc_exec_assignment.php:    $gui->bulk_platforms[0] = lang_get("all_platforms");
lib/plan/tc_exec_assignment.php:    ksort($gui->bulk_platforms);
lib/plan/tc_exec_assignment.php:    $gui->send_mail = $argsObj->send_mail;
lib/plan/tc_exec_assignment.php:    $gui->send_mail_checked = "";
lib/plan/tc_exec_assignment.php:    if($gui->send_mail)
lib/plan/tc_exec_assignment.php:    	$gui->send_mail_checked = ' checked="checked" ';
lib/plan/tc_exec_assignment.php:    $gui->glueChar=$tcase_cfg->glue_character;
lib/plan/tc_exec_assignment.php:    if ($argsObj->level != 'testproject')
lib/plan/tc_exec_assignment.php:	    $gui->testCasePrefix = $tcaseMgr->tproject_mgr->getTestCasePrefix($argsObj->tproject_id);
lib/plan/tc_exec_assignment.php:	    $gui->testCasePrefix .= $tcase_cfg->glue_character;
lib/plan/tc_exec_assignment.php:	    $gui->keywordsFilterType = $argsObj->keywordsFilterType;
lib/plan/tc_exec_assignment.php:	    $tplan_info = $tplanMgr->get_by_id($argsObj->tplan_id);
lib/plan/tc_exec_assignment.php:	    $gui->testPlanName = $tplan_info['name'];
lib/plan/tc_exec_assignment.php:	    $build_info = $tplanMgr->get_build_by_id($argsObj->tplan_id, $argsObj->build_id);
lib/plan/tc_exec_assignment.php:	    $gui->buildName = $build_info['name'];
lib/plan/tc_exec_assignment.php:	    $gui->main_descr = sprintf(lang_get('title_tc_exec_assignment'), 
lib/plan/tc_exec_assignment.php:	                               $gui->buildName, $gui->testPlanName);
lib/plan/tc_exec_assignment.php:	    $gui->all_users = tlUser::getAll($dbHandler,null,"id",null);
lib/plan/tc_exec_assignment.php:	   	$gui->users = getUsersForHtmlOptions($dbHandler,null,null,null,$gui->all_users);
lib/plan/tc_exec_assignment.php:	   	$gui->testers = getTestersForHtmlOptions($dbHandler,$argsObj->tplan_id,$argsObj->tproject_id,$gui->all_users);
lib/plan/tc_exec_assignment.php:    $assigner=$guiObj->all_users[$argsObj->user_id]->firstName . ' ' .
lib/plan/tc_exec_assignment.php:              $guiObj->all_users[$argsObj->user_id]->lastName ;
lib/plan/tc_exec_assignment.php:    $body_first_lines = lang_get('testproject') . ': ' . $argsObj->tproject_name . '<br />' .
lib/plan/tc_exec_assignment.php:                        lang_get('testplan') . ': ' . $guiObj->testPlanName .'<br /><br />';
lib/plan/tc_exec_assignment.php:    $infoSet=$tcaseMgr->get_by_id_bulk($tcaseSet,$tcversionSet);
lib/plan/tc_exec_assignment.php:        $tcnames[$value['testcase_id']] = $guiObj->testCasePrefix . $value['tc_external_id'] . ' ' . $value['name'];    
lib/plan/tc_exec_assignment.php:    $path_info = $tcaseMgr->tree_manager->get_full_path_verbose($tcaseSet);
lib/plan/tc_exec_assignment.php:            $email['subject'] = $mail_subject[$tester_type] . ' ' . $guiObj->testPlanName;  
lib/plan/tc_exec_assignment.php:                $userObj=$guiObj->all_users[$user_id];
lib/plan/tc_exec_assignment.php:                $email['to_address']=$userObj->emailAddress;
lib/plan/tc_exec_assignment.php:                                          $userObj->firstName . ' ' .$userObj->lastName,$assigner);
lib/plan/tc_exec_assignment.php:	return $user->hasRight($db,'testplan_planning');
lib/plan/newest_tcversions.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/plan/newest_tcversions.php: *      20070930 - franciscom - added tplan combo box
lib/plan/newest_tcversions.php:$gui->can_manage_testplans=$_SESSION['currentUser']->hasRight($db,"mgt_testplan_create");
lib/plan/newest_tcversions.php:$gui->tplans = array();
lib/plan/newest_tcversions.php:$gui->show_details = 0;
lib/plan/newest_tcversions.php:$gui->user_feedback = '';
lib/plan/newest_tcversions.php:$gui->tcasePrefix = $tcase_mgr->tproject_mgr->getTestCasePrefix($args->tproject_id) .
lib/plan/newest_tcversions.php:                    $testcase_cfg->glue_character;
lib/plan/newest_tcversions.php:$tplan_info = $tcase_mgr->get_by_id($args->tplan_id);
lib/plan/newest_tcversions.php:$gui->tplan_name = $tplan_info['name'];
lib/plan/newest_tcversions.php:$gui->tplan_id=$args->tplan_id;
lib/plan/newest_tcversions.php:$gui->tproject_name = $args->tproject_name;
lib/plan/newest_tcversions.php:// $linked_tcases = $tplan_mgr->get_linked_tcversions($args->tplan_id);
lib/plan/newest_tcversions.php:$linked_tcases = $tplan_mgr->get_linked_items_id($args->tplan_id);
lib/plan/newest_tcversions.php:$gui->testcases = $tplan_mgr->get_linked_and_newest_tcversions($args->tplan_id);
lib/plan/newest_tcversions.php:    $qty_newest = count($gui->testcases);
lib/plan/newest_tcversions.php:        $gui->show_details = 1;
lib/plan/newest_tcversions.php:        $tcaseSet=array_keys($gui->testcases);
lib/plan/newest_tcversions.php:        $path_info=$tree_mgr->get_full_path_verbose($tcaseSet);
lib/plan/newest_tcversions.php:        foreach($gui->testcases as $tcase_id => $value)
lib/plan/newest_tcversions.php:            $gui->testcases[$tcase_id]['path']=implode(' / ',$path);
lib/plan/newest_tcversions.php:        $gui->user_feedback = lang_get('no_newest_version_of_linked_tcversions');  
lib/plan/newest_tcversions.php:    $gui->user_feedback = lang_get('no_linked_tcversions');  
lib/plan/newest_tcversions.php:$tplans = $_SESSION['currentUser']->getAccessibleTestPlans($db,$args->tproject_id);
lib/plan/newest_tcversions.php:	$gui->tplans[$value['id']] = $value['name'];
lib/plan/newest_tcversions.php:$smarty->assign('gui', $gui);
lib/plan/newest_tcversions.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/plan/newest_tcversions.php:    $args->user_id = $_SESSION['userID'];
lib/plan/newest_tcversions.php:    $args->tproject_id = $_SESSION['testprojectID'];
lib/plan/newest_tcversions.php:    $args->tproject_name = $_SESSION['testprojectName'];
lib/plan/newest_tcversions.php:    $args->tplan_id = isset($_REQUEST['tplan_id']) ? $_REQUEST['tplan_id'] : $_SESSION['testplanID'];
lib/plan/newest_tcversions.php:    $args->id = isset($_REQUEST['id']) ? $_REQUEST['id'] : null;
lib/plan/newest_tcversions.php:    $args->version_id = isset($_REQUEST['version_id']) ? $_REQUEST['version_id'] : 0;
lib/plan/newest_tcversions.php:    $args->level = isset($_REQUEST['level']) ? $_REQUEST['level'] : null;
lib/plan/newest_tcversions.php:    $args->keyword_id = isset($_REQUEST['keyword_id']) ? $_REQUEST['keyword_id'] : 0;
lib/plan/newest_tcversions.php:	return $user->hasRight($db,'testplan_planning');
lib/plan/planEdit.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/plan/planEdit.php: * @copyright 	2007-2009, TestLink community 
lib/plan/planEdit.php: * 20100602 - franciscom - BUGID 3485: "Create from existing Test Plan" always copies builds
lib/plan/planEdit.php:if (!$args->tproject_id)
lib/plan/planEdit.php:	$smarty->assign('title', lang_get('fatal_page_title'));
lib/plan/planEdit.php:	$smarty->assign('content', lang_get('error_no_testprojects_present'));
lib/plan/planEdit.php:	$smarty->display('workAreaSimple.tpl');
lib/plan/planEdit.php:$of->Value = getItemTemplateContents('testplan_template', $of->InstanceName, $args->notes);
lib/plan/planEdit.php:if($args->do_action == "do_create" || $args->do_action == "do_update")
lib/plan/planEdit.php:	$gui->testplan_name = $args->testplan_name;
lib/plan/planEdit.php:	$name_exists = $tproject_mgr->check_tplan_name_existence($args->tproject_id,$args->testplan_name);
lib/plan/planEdit.php:	$name_id_rel_ok = (isset($gui->tplans[$args->tplan_id]) && 
lib/plan/planEdit.php:	                   $gui->tplans[$args->tplan_id]['name'] == $args->testplan_name);
lib/plan/planEdit.php:$gui->cfields = $tplan_mgr->html_table_of_custom_field_inputs($args->tplan_id,$args->tproject_id);
lib/plan/planEdit.php:switch($args->do_action)
lib/plan/planEdit.php:		$tplanInfo = $tplan_mgr->get_by_id($args->tplan_id);
lib/plan/planEdit.php:			$of->Value = $tplanInfo['notes'];
lib/plan/planEdit.php:			$gui->testplan_name = $tplanInfo['name'];
lib/plan/planEdit.php:			$gui->is_active = $tplanInfo['active'];
lib/plan/planEdit.php:			$gui->is_public = $tplanInfo['is_public'];
lib/plan/planEdit.php:			$gui->tplan_id = $args->tplan_id;
lib/plan/planEdit.php:		$tplanInfo = $tplan_mgr->get_by_id($args->tplan_id);
lib/plan/planEdit.php:			$tplan_mgr->delete($args->tplan_id);
lib/plan/planEdit.php:			logAuditEvent(TLS("audit_testplan_deleted",$args->tproject_name,$tplanInfo['name']),
lib/plan/planEdit.php:			              "DELETE",$args->tplan_id,"testplan");
lib/plan/planEdit.php:		if (isset($_SESSION['testplanID']) && ($_SESSION['testplanID'] = $args->tplan_id))
lib/plan/planEdit.php:		$of->Value = $args->notes;
lib/plan/planEdit.php:		$gui->testplan_name = $args->testplan_name;
lib/plan/planEdit.php:		$gui->is_active = ($args->active == 'on') ? 1 :0 ;
lib/plan/planEdit.php:		$gui->is_public = ($args->is_public == 'on') ? 1 :0 ;
lib/plan/planEdit.php:			if(!$tplan_mgr->update($args->tplan_id,$args->testplan_name,$args->notes,
lib/plan/planEdit.php:			                       $args->active,$args->is_public))
lib/plan/planEdit.php:				$gui->user_feedback = lang_get('update_tp_failed1'). $gui->testplan_name . 
lib/plan/planEdit.php:				                      lang_get('update_tp_failed2').": " . $db->error_msg() . "<br />";
lib/plan/planEdit.php:				logAuditEvent(TLS("audit_testplan_saved",$args->tproject_name,$args->testplan_name),"SAVE",
lib/plan/planEdit.php:				                  $args->tplan_id,"testplans");
lib/plan/planEdit.php:				$cf_map = $tplan_mgr->get_linked_cfields_at_design($args->tplan_id);
lib/plan/planEdit.php:				$tplan_mgr->cfield_mgr->design_values_to_db($_REQUEST,$args->tplan_id,$cf_map);
lib/plan/planEdit.php:				if(isset($_SESSION['testplanID']) && ($args->tplan_id == $_SESSION['testplanID']))
lib/plan/planEdit.php:					$_SESSION['testplanName'] = $args->testplan_name;
lib/plan/planEdit.php:			$gui->user_feedback = lang_get("warning_duplicate_tplan_name");
lib/plan/planEdit.php:			$gui->tplan_id=$args->tplan_id;
lib/plan/planEdit.php:			$gui->tproject_name=$args->tproject_name;
lib/plan/planEdit.php:			$gui->notes=$of->CreateHTML();
lib/plan/planEdit.php:		$of->Value = $args->notes;
lib/plan/planEdit.php:		$gui->testplan_name = $args->testplan_name;
lib/plan/planEdit.php:		$gui->is_active = ($args->active == 'on') ? 1 :0 ;
lib/plan/planEdit.php:		$gui->is_public = ($args->is_public == 'on') ? 1 :0 ;
lib/plan/planEdit.php:			$new_tplan_id = $tplan_mgr->create($args->testplan_name,$args->notes,
lib/plan/planEdit.php:			                                   $args->tproject_id,$args->active,$args->is_public);
lib/plan/planEdit.php:				$gui->user_feedback = $db->error_msg();
lib/plan/planEdit.php:				logAuditEvent(TLS("audit_testplan_created",$args->tproject_name,$args->testplan_name),
lib/plan/planEdit.php:				$cf_map = $tplan_mgr->get_linked_cfields_at_design($new_tplan_id,$args->tproject_id);
lib/plan/planEdit.php:				$tplan_mgr->cfield_mgr->design_values_to_db($_REQUEST,$new_tplan_id,$cf_map);
lib/plan/planEdit.php:				$gui->user_feedback ='';
lib/plan/planEdit.php:				if($args->rights == 'on')
lib/plan/planEdit.php:					$result = insertTestPlanUserRight($db,$new_tplan_id,$args->user_id);
lib/plan/planEdit.php:				if($args->copy)
lib/plan/planEdit.php:					$options = array('items2copy' => $args->copy_options,'copy_assigned_to' => $args->copy_assigned_to,
lib/plan/planEdit.php:									 'tcversion_type' => $args->tcversion_type);
lib/plan/planEdit.php:					$tplan_mgr->copy_as($args->source_tplanid, $new_tplan_id,$args->testplan_name,
lib/plan/planEdit.php:										$args->tproject_id,$args->user_id,$options);
lib/plan/planEdit.php:			$gui->user_feedback = lang_get("warning_duplicate_tplan_name");
lib/plan/planEdit.php:			// $gui->tplan_id=$new_tplan_id;
lib/plan/planEdit.php:			$gui->tproject_name=$args->tproject_name;
lib/plan/planEdit.php:			$gui->notes=$of->CreateHTML();
lib/plan/planEdit.php:switch($args->do_action)
lib/plan/planEdit.php:        $gui->tplans = $tproject_mgr->get_all_testplans($args->tproject_id);
lib/plan/planEdit.php:      	$gui->notes=$of->CreateHTML();
lib/plan/planEdit.php:    $smarty->assign('gui',$gui);
lib/plan/planEdit.php:    $smarty->display($templateCfg->template_dir . $template);
lib/plan/planEdit.php: * super-global hashes.
lib/plan/planEdit.php: * 20060103 - fm
lib/plan/planEdit.php:		$args->$value = isset($request_hash[$value]) ? trim($request_hash[$value]) : null;
lib/plan/planEdit.php:		$args->$key = isset($request_hash[$key]) ? 1 : 0;
lib/plan/planEdit.php:	    $args->$key = isset($request_hash[$key]) ? intval($request_hash[$key]) : $value;
lib/plan/planEdit.php:	$args->source_tplanid = $args->copy_from_tplan_id;
lib/plan/planEdit.php:	$args->copy = ($args->copy_from_tplan_id > 0) ? TRUE : FALSE;
lib/plan/planEdit.php:	$args->copy_options=array();
lib/plan/planEdit.php:	    $args->copy_options[$key]=isset($request_hash[$key]) ? 1 : 0;
lib/plan/planEdit.php:	$args->copy_assigned_to = isset($request_hash['copy_assigned_to']) ? 1 : 0;
lib/plan/planEdit.php:	$args->tcversion_type = isset($request_hash['tcversion_type']) ? $request_hash['tcversion_type'] : null;
lib/plan/planEdit.php:	$args->tproject_id = $session_hash['testprojectID'];
lib/plan/planEdit.php:	$args->tproject_name = $session_hash['testprojectName'];
lib/plan/planEdit.php:	$args->user_id = $session_hash['userID'];
lib/plan/planEdit.php:	return $user->hasRight($db,'mgt_testplan_create');
lib/plan/planEdit.php:    $guiObj->tproject_id = $argsObj->tproject_id; 
lib/plan/planEdit.php:    $guiObj->editorType = $editorCfg['type'];
lib/plan/planEdit.php:    $guiObj->tplans = $tprojectMgr->get_all_testplans($argsObj->tproject_id);
lib/plan/planEdit.php:    $guiObj->tproject_name = $argsObj->tproject_name;
lib/plan/planEdit.php:    $guiObj->main_descr = lang_get('testplan_title_tp_management'). " - " .
lib/plan/planEdit.php:                         lang_get('testproject') . ' ' . $argsObj->tproject_name;
lib/plan/planEdit.php:    $guiObj->testplan_name = null;
lib/plan/planEdit.php:    $guiObj->tplan_id = null;
lib/plan/planEdit.php:    $guiObj->is_active = 0;
lib/plan/planEdit.php:    $guiObj->is_public = 0;
lib/plan/planEdit.php:    $guiObj->cfields = '';
lib/plan/planEdit.php:    $guiObj->user_feedback = '';               
lib/plan/planEdit.php:    $guiObj->grants = new stdClass();  
lib/plan/planEdit.php:    $guiObj->grants->testplan_create = $_SESSION['currentUser']->hasRight($dbHandler,"mgt_testplan_create");
lib/plan/planEdit.php:    $guiObj->grants->mgt_view_events = $_SESSION['currentUser']->hasRight($dbHandler,"mgt_view_events");
lib/plan/planEdit.php:    $guiObj->notes = '';
lib/plan/planMilestonesView.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/plan/planMilestonesView.php: * @copyright 	2003-2009, TestLink community 
lib/plan/planMilestonesView.php: *	20100427 - franciscom - added standard documentation file header
lib/plan/planMilestonesView.php:$smarty->assign('gui',$gui);
lib/plan/planMilestonesView.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/plan/planMilestonesView.php:	$args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/plan/planMilestonesView.php:	$args->tproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : "";
lib/plan/planMilestonesView.php:	$args->tplan_id = isset($_SESSION['testplanID']) ? $_SESSION['testplanID'] : 0;
lib/plan/planMilestonesView.php:	$args->tplan_name = isset($_SESSION['testplanName']) ? $_SESSION['testplanName'] : "";
lib/plan/planMilestonesView.php:  args : -
lib/plan/planMilestonesView.php:    $gui->user_feedback = null;
lib/plan/planMilestonesView.php:    $gui->main_descr = lang_get('title_milestones') . $argsObj->tplan_name;
lib/plan/planMilestonesView.php:    $gui->action_descr = null;
lib/plan/planMilestonesView.php:    $gui->tplan_name = $argsObj->tplan_name;
lib/plan/planMilestonesView.php:    $gui->tplan_id = $argsObj->tplan_id;
lib/plan/planMilestonesView.php:	$gui->items = $manager->get_all_by_testplan($argsObj->tplan_id);
lib/plan/planMilestonesView.php:	$gui->grants = new stdClass();
lib/plan/planMilestonesView.php:    $gui->grants->milestone_mgmt = has_rights($dbHandler,"testplan_planning");
lib/plan/planMilestonesView.php:	$gui->grants->mgt_view_events = has_rights($dbHandler,"mgt_view_events");
lib/plan/planMilestonesView.php:	return ($user->hasRight($db,"testplan_planning"));
lib/plan/planUrgency.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/plan/planUrgency.php: * @copyright 	2003-2009, TestLink community 
lib/plan/planUrgency.php: * 		20080925 - franciscom - BUGID 1746
lib/plan/planUrgency.php: *      20080721 - franciscom
lib/plan/planUrgency.php:if($args->show_help)
lib/plan/planUrgency.php:// $xx=$tplan_mgr->getPriority($args->tplan_id,$filters,$options);
lib/plan/planUrgency.php:// $xx=$tplan_mgr->getPriority($args->tplan_id,$filters,$options);
lib/plan/planUrgency.php:$node_info = $tplan_mgr->tree_manager->get_node_hierarchy_info($args->node_id);
lib/plan/planUrgency.php:$gui->urgencyCfg = config_get('urgency');
lib/plan/planUrgency.php:$gui->node_name = $node_info['name'];
lib/plan/planUrgency.php:$gui->user_feedback = null;
lib/plan/planUrgency.php:$gui->node_id = $args->node_id;
lib/plan/planUrgency.php:$gui->tplan_id = $args->tplan_id;
lib/plan/planUrgency.php:$gui->tplan_name = $args->tplan_name;
lib/plan/planUrgency.php:if($args->urgency != OFF)
lib/plan/planUrgency.php:	$gui->user_feedback['type'] = $tplan_mgr->setSuiteUrgency($args->tplan_id, $args->node_id, $args->urgency);
lib/plan/planUrgency.php:	$msg_key = ($gui->user_feedback['type'] == OK) ? "feedback_urgency_ok" : "feedback_urgency_fail";
lib/plan/planUrgency.php:	$gui->user_feedback['message'] = lang_get($msg_key);
lib/plan/planUrgency.php:if(isset($args->urgency_tc))
lib/plan/planUrgency.php:	foreach ($args->urgency_tc as $id => $urgency) {
lib/plan/planUrgency.php:		$tplan_mgr->setTestUrgency($args->tplan_id, $id, $urgency);
lib/plan/planUrgency.php:$gui->listTestCases = $tplan_mgr->getSuiteUrgency($args->tplan_id, $args->node_id,$args->tproject_id);
lib/plan/planUrgency.php:$smarty->assign('gui', $gui);
lib/plan/planUrgency.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/plan/planUrgency.php:  args: -
lib/plan/planUrgency.php:    $args->show_help = (isset($_REQUEST['level']) && $_REQUEST['level']=='testproject');
lib/plan/planUrgency.php:    $args->tproject_id = isset($_REQUEST['tproject_id']) ? $_REQUEST['tproject_id'] : $_SESSION['testprojectID'];
lib/plan/planUrgency.php:    $args->tplan_id = isset($_REQUEST['tplan_id']) ? $_REQUEST['tplan_id'] : $_SESSION['testplanID'];
lib/plan/planUrgency.php:    $args->tplan_name = $_SESSION['testplanName'];
lib/plan/planUrgency.php:    $args->node_type = isset($_REQUEST['level']) ? $_REQUEST['level'] : OFF;
lib/plan/planUrgency.php:    $args->node_id = isset($_REQUEST['id']) ? $_REQUEST['id'] : ERROR;
lib/plan/planUrgency.php:    	$args->urgency = HIGH;
lib/plan/planUrgency.php:    	$args->urgency = MEDIUM;
lib/plan/planUrgency.php:    	$args->urgency = LOW;
lib/plan/planUrgency.php:    	$args->urgency = OFF;
lib/plan/planUrgency.php:		$args->urgency_tc = $_REQUEST['urgency'];
lib/plan/planUrgency.php:	return $user->hasRight($db,'testplan_planning');
lib/plan/tc_exec_unassign_all.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/plan/tc_exec_unassign_all.php: * @copyright	2005-2010, TestLink community 
lib/plan/tc_exec_unassign_all.php:if ($args->build_id) {
lib/plan/tc_exec_unassign_all.php:	$assignment_count = $assignment_mgr->get_count_of_assignments_for_build_id($args->build_id);
lib/plan/tc_exec_unassign_all.php:	$build_info = $build_mgr->get_by_id($args->build_id);
lib/plan/tc_exec_unassign_all.php:	if ($args->confirmed) {
lib/plan/tc_exec_unassign_all.php:		$assignment_mgr->delete_by_build_id($args->build_id);
lib/plan/tc_exec_unassign_all.php:		$gui->message = sprintf(lang_get('unassigned_all_tcs_msg'), $build_name);
lib/plan/tc_exec_unassign_all.php:		$gui->refreshTree = $args->refreshTree ? true : false;
lib/plan/tc_exec_unassign_all.php:		$gui->draw_tc_unassign_button = true;
lib/plan/tc_exec_unassign_all.php:		$gui->popup_title = lang_get('unassign_all_tcs_msgbox_title');
lib/plan/tc_exec_unassign_all.php:		$gui->popup_message = sprintf(lang_get('unassign_all_tcs_warning_msg'), $build_name);
lib/plan/tc_exec_unassign_all.php:		$gui->message = sprintf(lang_get('number_of_assignments_per_build'), $assignment_count, $build_name);
lib/plan/tc_exec_unassign_all.php:	$gui->message = lang_get('no_testers_assigned_to_build');
lib/plan/tc_exec_unassign_all.php:$smarty->assign('gui', $gui);
lib/plan/tc_exec_unassign_all.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/plan/tc_exec_unassign_all.php:	$args->build_id = isset($_REQUEST['build_id']) ? $_REQUEST['build_id'] : 0;
lib/plan/tc_exec_unassign_all.php:	$args->confirmed = isset($_REQUEST['confirmed']) && $_REQUEST['confirmed'] == 'yes' ? true : false;
lib/plan/tc_exec_unassign_all.php:	$args->user_id = $_SESSION['userID'];
lib/plan/tc_exec_unassign_all.php:	$args->testproject_id = $_SESSION['testprojectID'];
lib/plan/tc_exec_unassign_all.php:	$args->testproject_name = $_SESSION['testprojectName'];
lib/plan/tc_exec_unassign_all.php:	$args->refreshTree = isset($_SESSION['setting_refresh_tree_on_action']) ?
lib/plan/tc_exec_unassign_all.php:	$gui->build_id = $argsObj->build_id;
lib/plan/tc_exec_unassign_all.php:	$gui->draw_tc_unassign_button = false;
lib/plan/tc_exec_unassign_all.php:	$gui->refreshTree = false;
lib/plan/tc_exec_unassign_all.php:	$gui->title = lang_get('remove_all_tester_assignments_title');
lib/plan/tc_exec_unassign_all.php:	$gui->message = "";
lib/plan/tc_exec_unassign_all.php:	$gui->popup_title = "";
lib/plan/tc_exec_unassign_all.php:	$gui->popup_message = "";
lib/plan/tc_exec_unassign_all.php:	return $user->hasRight($dbHandler, 'testplan_planning');
lib/plan/planAddTCNavigator.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/plan/planAddTCNavigator.php: * @copyright 	2005-2009, TestLink community
lib/plan/planAddTCNavigator.php: * 20100628 - asimon - removal of constants from filter control class
lib/plan/planAddTCNavigator.php: * 20100625 - asimon - refactoring for new filter features and BUGID 3516
lib/plan/planAddTCNavigator.php: * 20100624 - asimon - CVS merge (experimental branch to HEAD)
lib/plan/planAddTCNavigator.php: * 20100622 - asimon - huge refactorization for new tlTestCaseFilterControl class
lib/plan/planAddTCNavigator.php: * 20100428 - asimon - BUGID 3301 and related issues - changed name or case
lib/plan/planAddTCNavigator.php: * 20100417 - franciscom - BUGID 2498: Add test case to test plan - Filter Test Cases based on Test Importance
lib/plan/planAddTCNavigator.php: * 20100410 - franciscom - BUGID 2797 - filter by test case execution type
lib/plan/planAddTCNavigator.php: * 20100228 - franciscom - BUGID 0001927: filter on keyword - Filter tree when add/remove testcases - KO
lib/plan/planAddTCNavigator.php: * 20090415 - franciscom - BUGID 2384 - Tree doesnt load properly in Add / Remove Test Cases
lib/plan/planAddTCNavigator.php: * 20090118 - franciscom - added logic to switch (for EXTJS tree type), how tree is builded
lib/plan/planAddTCNavigator.php:$control->build_tree_menu($gui);
lib/plan/planAddTCNavigator.php:$smarty->assign('gui', $gui);
lib/plan/planAddTCNavigator.php:$smarty->assign('control', $control);
lib/plan/planAddTCNavigator.php:$smarty->assign('args', $gui->args);
lib/plan/planAddTCNavigator.php:$smarty->assign('menuUrl', $gui->menuUrl);
lib/plan/planAddTCNavigator.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/plan/planAddTCNavigator.php:	$gui->menuUrl = 'lib/plan/planAddTC.php';
lib/plan/planAddTCNavigator.php:	$gui->args = $control->get_argument_string();
lib/plan/planAddTCNavigator.php:	$gui->additional_string = '';
lib/plan/planAddTCNavigator.php:	$gui->src_workframe = $control->args->basehref . $gui->menuUrl .
lib/plan/planAddTCNavigator.php:	                "?edit=testproject&id={$control->args->testproject_id}" . $gui->args;
lib/plan/planAddTCNavigator.php://// BUGID 3301 - added exec_cfield_mgr here
lib/plan/planAddTCNavigator.php://$exec_cfield_mgr = new exec_cfield_mgr($db,$args->tproject_id);
lib/plan/planAddTCNavigator.php://$gui->ajaxTree = initAjaxTree($args,$_SESSION['basehref']);
lib/plan/planAddTCNavigator.php://$gui->tree = buildTree($db,$gui,$args, $exec_cfield_mgr);
lib/plan/planAddTCNavigator.php://$smarty->assign('gui', $gui);
lib/plan/planAddTCNavigator.php://$smarty->assign('args', $gui->args);
lib/plan/planAddTCNavigator.php://$smarty->assign('additionalArgs',$gui->additionalArgs);
lib/plan/planAddTCNavigator.php://$smarty->assign('menuUrl', $gui->menuUrl);
lib/plan/planAddTCNavigator.php://$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/plan/planAddTCNavigator.php://  args: -
lib/plan/planAddTCNavigator.php://    $args->keyword_id = isset($_REQUEST['keyword_id']) ? $_REQUEST['keyword_id'] : 0;
lib/plan/planAddTCNavigator.php://    $args->tplan_id = isset($_REQUEST['tplan_id']) ? $_REQUEST['tplan_id'] : $_SESSION['testplanID'];
lib/plan/planAddTCNavigator.php://    $args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/plan/planAddTCNavigator.php://    $args->tproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : '';
lib/plan/planAddTCNavigator.php://    $args->user_id = $_SESSION['userID'];
lib/plan/planAddTCNavigator.php://    $args->doUpdateTree = isset($_REQUEST['doUpdateTree']) ? 1 : 0;
lib/plan/planAddTCNavigator.php://    $args->called_by_me = isset($_REQUEST['called_by_me']) ? 1 : 0;
lib/plan/planAddTCNavigator.php://    $args->called_url = isset($_REQUEST['called_url']) ? $_REQUEST['called_url'] : null;
lib/plan/planAddTCNavigator.php://    $args->keywordsFilterType =isset($_REQUEST['keywordsFilterType']) ? $_REQUEST['keywordsFilterType'] : 'OR';
lib/plan/planAddTCNavigator.php://    $args->exec_type = isset($_REQUEST['exec_type']) ? intval($_REQUEST['exec_type']) : 0;
lib/plan/planAddTCNavigator.php://    $args->importance = isset($_REQUEST['importance']) ? intval($_REQUEST['importance']) : 0;
lib/plan/planAddTCNavigator.php://  rev:20100428 - asimon - BUGID 3301, added exec_cfield_mgr
lib/plan/planAddTCNavigator.php://      20080629 - franciscom - added missed argument basehref
lib/plan/planAddTCNavigator.php://      20080622 - franciscom - changes for ext js tree
lib/plan/planAddTCNavigator.php://      20080429 - franciscom
lib/plan/planAddTCNavigator.php://    $gui->strOptionAny = $gui_open . lang_get('any') . $gui_close;
lib/plan/planAddTCNavigator.php://    $gui->do_reload = 0;
lib/plan/planAddTCNavigator.php://    $gui->src_workframe = null;
lib/plan/planAddTCNavigator.php://    $gui->keywordsFilterItemQty = 0;
lib/plan/planAddTCNavigator.php://    $gui->keywordID = $argsObj->keyword_id; 
lib/plan/planAddTCNavigator.php://    $gui->keywordsMap = $tprojectMgr->get_keywords_map($argsObj->tproject_id); 
lib/plan/planAddTCNavigator.php://    if(!is_null($gui->keywordsMap))
lib/plan/planAddTCNavigator.php://        $gui->keywordsMap = array( 0 => $gui->strOptionAny) + $gui->keywordsMap;
lib/plan/planAddTCNavigator.php://        $gui->keywordsFilterItemQty = min(count($gui->keywordsMap),3);
lib/plan/planAddTCNavigator.php://    $gui->execType = $argsObj->exec_type; 
lib/plan/planAddTCNavigator.php://    $initValues['keywords'] = $gui->keywordsMap;
lib/plan/planAddTCNavigator.php://    $gui->controlPanel = new tlControlPanel($dbHandler,$argsObj,$initValues);
lib/plan/planAddTCNavigator.php://	$gui->execTypeMap = $gui->controlPanel->filters['execTypes']['items'];
lib/plan/planAddTCNavigator.php://    $gui->controlPanel->settings['testPlans']['items'] = 
lib/plan/planAddTCNavigator.php://    	$_SESSION['currentUser']->getAccessibleTestPlans($dbHandler,$argsObj->tproject_id,null,$opt);
lib/plan/planAddTCNavigator.php://	$gui->controlPanel->filters['testPlans']['items'] = $gui->controlPanel->settings['testPlans']['items'];
lib/plan/planAddTCNavigator.php://    $gui->mapTPlans = $gui->controlPanel->settings['testPlans']['items'];
lib/plan/planAddTCNavigator.php://    $gui->tPlanID = $argsObj->tplan_id;
lib/plan/planAddTCNavigator.php://    $gui->importance = $argsObj->importance; 
lib/plan/planAddTCNavigator.php://    $gui->menuUrl = 'lib/plan/planAddTC.php';
lib/plan/planAddTCNavigator.php://    $gui->args = '&tplan_id=' . $gui->tPlanID;
lib/plan/planAddTCNavigator.php://    if(is_array($argsObj->keyword_id))
lib/plan/planAddTCNavigator.php://		    $kl = implode(',',$argsObj->keyword_id);
lib/plan/planAddTCNavigator.php://		    $gui->args .= '&keyword_id=' . $kl;
lib/plan/planAddTCNavigator.php://    else if($argsObj->keyword_id > 0)
lib/plan/planAddTCNavigator.php://		    $gui->args .= '&keyword_id='.$argsObj->keyword_id;
lib/plan/planAddTCNavigator.php://    $gui->args .= '&keywordsFilterType=' . $argsObj->keywordsFilterType;
lib/plan/planAddTCNavigator.php://    $gui->args .= '&executionType=' . $argsObj->exec_type;
lib/plan/planAddTCNavigator.php://    $gui->args .= '&importance=' . $argsObj->importance;
lib/plan/planAddTCNavigator.php://    $gui->keywordsFilterTypes = new stdClass();
lib/plan/planAddTCNavigator.php://    $gui->keywordsFilterTypes->options = array('OR' => 'Or' , 'AND' =>'And'); 
lib/plan/planAddTCNavigator.php://    $gui->keywordsFilterTypes->selected=$argsObj->keywordsFilterType;
lib/plan/planAddTCNavigator.php://    $gui->design_time_cfields = $exec_cfield_mgr->html_table_of_custom_field_inputs(30);
lib/plan/planAddTCNavigator.php://    $gui->additionalArgs = '';
lib/plan/planAddTCNavigator.php://  20100428 - asimon - BUGID 3301, added exec_cfield_mgr
lib/plan/planAddTCNavigator.php://	$my_workframe = $_SESSION['basehref']. $guiObj->menuUrl .                      
lib/plan/planAddTCNavigator.php://	                "?edit=testproject&id={$argsObj->tproject_id}" . $guiObj->args;
lib/plan/planAddTCNavigator.php://	if($argsObj->doUpdateTree)
lib/plan/planAddTCNavigator.php://	     $guiObj->src_workframe = $my_workframe; 
lib/plan/planAddTCNavigator.php://	else if($argsObj->called_by_me)
lib/plan/planAddTCNavigator.php://		// -------------------------------------------------------------------------------
lib/plan/planAddTCNavigator.php://		// 20090308 - franciscom - think this is result of cut/paste from other
lib/plan/planAddTCNavigator.php://	   	$dummy = explode('?',$argsObj->called_url);
lib/plan/planAddTCNavigator.php://			    $guiObj->src_workframe = $dummy[0] . "?" . $qs[0] . "&" . $guiObj->args;
lib/plan/planAddTCNavigator.php://			    $guiObj->src_workframe = $my_workframe; 
lib/plan/planAddTCNavigator.php://		// -------------------------------------------------------------------------------
lib/plan/planAddTCNavigator.php://	$filters['keywords'] = buildKeywordsFilter($argsObj->keyword_id,$guiObj);
lib/plan/planAddTCNavigator.php://	$filters['executionType'] = buildExecTypeFilter($argsObj->exec_type); // BUGID 2797
lib/plan/planAddTCNavigator.php://	$filters['importance'] = buildImportanceFilter($argsObj->importance); // BUGID 2498
lib/plan/planAddTCNavigator.php://    $filters['cf_hash'] = $exec_cfield_mgr->get_set_values();
lib/plan/planAddTCNavigator.php://				   (!is_null($filters['executionType']) && intval($filters['executionType']->items) > 0) ||
lib/plan/planAddTCNavigator.php://				   (!is_null($filters['importance']) && intval($filters['importance']->items) > 0);
lib/plan/planAddTCNavigator.php://		// 20100412 - franciscom
lib/plan/planAddTCNavigator.php://		$filters['testplan'] = $argsObj->tplan_id;
lib/plan/planAddTCNavigator.php://		                 'getArguments' => $guiObj->args, 'viewType' => 'testSpecTreeForTestPlan');
lib/plan/planAddTCNavigator.php://		$treeMenu = generateTestSpecTree($dbHandler,$argsObj->tproject_id, $argsObj->tproject_name,
lib/plan/planAddTCNavigator.php://		                                 $guiObj->menuUrl,$filters,$options);
lib/plan/planAddTCNavigator.php://	    // that's reason why I'm re-creating from scratch ajaxTree.
lib/plan/planAddTCNavigator.php://	    $cookiePrefix = $guiObj->ajaxTree->cookiePrefix;
lib/plan/planAddTCNavigator.php://		$guiObj->ajaxTree = new stdClass();
lib/plan/planAddTCNavigator.php://	    $guiObj->ajaxTree->loader = '';
lib/plan/planAddTCNavigator.php://	    $guiObj->ajaxTree->root_node = $treeMenu->rootnode;
lib/plan/planAddTCNavigator.php://		$guiObj->ajaxTree->cookiePrefix = $cookiePrefix;
lib/plan/planAddTCNavigator.php://	    // BUGID 2384 - if we return '' or null => EXT JS does not like it, we need to
lib/plan/planAddTCNavigator.php://	    $guiObj->ajaxTree->children = $treeMenu->menustring ? $treeMenu->menustring : "[]";
lib/plan/planAddTCNavigator.php://    // 20080629 - franciscom
lib/plan/planAddTCNavigator.php://    // "filter_node={$argsObj->tsuites_to_show}";
lib/plan/planAddTCNavigator.php://    $ajaxTree->loader=$basehref . 'lib/ajax/gettprojectnodes.php?' .
lib/plan/planAddTCNavigator.php://                      "root_node={$argsObj->tproject_id}&show_tcases=0";
lib/plan/planAddTCNavigator.php://    $ajaxTree->root_node=new stdClass();
lib/plan/planAddTCNavigator.php://    $ajaxTree->root_node->href="javascript:EP({$argsObj->tproject_id})";
lib/plan/planAddTCNavigator.php://    $ajaxTree->root_node->id=$argsObj->tproject_id;
lib/plan/planAddTCNavigator.php://    $ajaxTree->root_node->name=$argsObj->tproject_name;
lib/plan/planAddTCNavigator.php://    // 20080831 - franciscom - Custom attribute
lib/plan/planAddTCNavigator.php://    $ajaxTree->root_node->testlink_node_type='testproject';
lib/plan/planAddTCNavigator.php://    $ajaxTree->cookiePrefix="planaddtc_{$ajaxTree->root_node->id}_{$argsObj->user_id}_";
lib/plan/planAddTCNavigator.php://    $ajaxTree->dragDrop=new stdClass();
lib/plan/planAddTCNavigator.php://    $ajaxTree->dragDrop->enabled=false;
lib/plan/planAddTCNavigator.php://    $ajaxTree->dragDrop->BackEndUrl='';
lib/plan/planAddTCNavigator.php://    // TRUE -> beforemovenode() event will use our custom implementation 
lib/plan/planAddTCNavigator.php://    $ajaxTree->dragDrop->useBeforeMoveNode=FALSE;
lib/plan/planTCNavigator.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/plan/planTCNavigator.php: * @copyright 	2003-2009, TestLink community
lib/plan/planTCNavigator.php: *  20100708 - asimon - BUGID 3406
lib/plan/planTCNavigator.php: *  20100628 - asimon - removal of constants from filter control class
lib/plan/planTCNavigator.php: *  20160625 - asimon - refactoring for new filter features
lib/plan/planTCNavigator.php: *  20100624 - asimon - CVS merge (experimental branch to HEAD)
lib/plan/planTCNavigator.php: *  20100622 - asimon - huge refactorization for new tlTestCaseFilterControl class
lib/plan/planTCNavigator.php: *  20100428 - asimon - BUGID 3301 and related issues - changed name or case
lib/plan/planTCNavigator.php: *	20100202 - asimon - BUGID 2455, BUGID 3026
lib/plan/planTCNavigator.php: *  20081223 - franciscom - advanced/simple filter feature
lib/plan/planTCNavigator.php:$control->build_tree_menu($gui);
lib/plan/planTCNavigator.php:$smarty->assign('gui', $gui);
lib/plan/planTCNavigator.php:$smarty->assign('control', $control);
lib/plan/planTCNavigator.php:$smarty->assign('menuUrl', $gui->menuUrl);
lib/plan/planTCNavigator.php:$smarty->assign('args', $control->get_argument_string());
lib/plan/planTCNavigator.php:$smarty->assign('treeHeader', $gui->title);
lib/plan/planTCNavigator.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/plan/planTCNavigator.php: *   20100721 - asimon - BUGID 3406, added assignmentMgr
lib/plan/planTCNavigator.php:	$gui->feature = $control->args->feature;
lib/plan/planTCNavigator.php:    $gui->tPlanID = $control->args->testplan_id;
lib/plan/planTCNavigator.php:	$gui->title = lang_get('title_test_plan_navigator');
lib/plan/planTCNavigator.php:	$gui->src_workframe = '';
lib/plan/planTCNavigator.php:	$gui->additional_string = '';
lib/plan/planTCNavigator.php:	switch($control->args->feature) {
lib/plan/planTCNavigator.php:			$gui->menuUrl = "lib/plan/planUpdateTC.php";
lib/plan/planTCNavigator.php:			$control->draw_bulk_update_button = true;
lib/plan/planTCNavigator.php:			$gui->menuUrl = "lib/plan/planUrgency.php";
lib/plan/planTCNavigator.php:			$gui->menuUrl = "lib/plan/tc_exec_assignment.php";
lib/plan/planTCNavigator.php:			// BUGID 3406 - check for assignments before displaying the unassign button
lib/plan/planTCNavigator.php:			$build_id = $control->settings['setting_build']['selected'];
lib/plan/planTCNavigator.php:			if ($assignmentMgr->get_count_of_assignments_for_build_id($build_id)) {
lib/plan/planTCNavigator.php:				$control->draw_tc_unassign_button = true;
lib/plan/planTCNavigator.php://$exec_cfield_mgr = new exec_cfield_mgr($db,$args->tproject_id);
lib/plan/planTCNavigator.php://$smarty->assign('gui',$gui);
lib/plan/planTCNavigator.php://$smarty->assign('menuUrl',$gui->menuUrl);
lib/plan/planTCNavigator.php://$smarty->assign('args',$gui->args);
lib/plan/planTCNavigator.php://$smarty->assign('additionalArgs',$gui->additionalArgs);
lib/plan/planTCNavigator.php://$smarty->assign('treeHeader', $gui->title);
lib/plan/planTCNavigator.php://$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/plan/planTCNavigator.php://    $cfg->gui = config_get('gui');
lib/plan/planTCNavigator.php://    $cfg->exec = config_get('exec_cfg');
lib/plan/planTCNavigator.php://    $cfg->results = config_get('results');
lib/plan/planTCNavigator.php://    $cfg->testcase_cfg = config_get('testcase_cfg');
lib/plan/planTCNavigator.php://	$args->feature = $_REQUEST['feature'];
lib/plan/planTCNavigator.php://    switch($args->feature)
lib/plan/planTCNavigator.php://    $args->user_id = $_SESSION['userID'];
lib/plan/planTCNavigator.php://    $args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/plan/planTCNavigator.php://    $args->tproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : '';
lib/plan/planTCNavigator.php://	// 20070120 - franciscom -
lib/plan/planTCNavigator.php://    $args->tplan_id = isset($_SESSION['testplanID']) ? intval($_SESSION['testplanID']) : 0;
lib/plan/planTCNavigator.php://    $args->tplan_name = isset($_SESSION['testplanName']) ? $_SESSION['testplanName'] : '';
lib/plan/planTCNavigator.php://    if($args->tplan_id != 0)
lib/plan/planTCNavigator.php://		$args->tplan_id = isset($_REQUEST['tplan_id']) ? $_REQUEST['tplan_id'] : $_SESSION['testplanID'];
lib/plan/planTCNavigator.php://		$tplan_info = $tplanMgr->get_by_id($args->tplan_id);
lib/plan/planTCNavigator.php://		$args->tplan_name = $tplan_info['name'];
lib/plan/planTCNavigator.php://		if($args->tplan_id != $_SESSION['testplanID']) {
lib/plan/planTCNavigator.php://	    	$arrPlans = $currentUser->getAccessibleTestPlans($dbHandler,$args->tproject_id);
lib/plan/planTCNavigator.php://				if ($plan['id'] == $args->tplan_id) {
lib/plan/planTCNavigator.php://    $args->$key = isset($_REQUEST[$key]) ? $_REQUEST[$key] : 0;
lib/plan/planTCNavigator.php://    $args->keywordsFilterType=isset($_REQUEST['keywordsFilterType']) ? $_REQUEST['keywordsFilterType'] : 'OR';
lib/plan/planTCNavigator.php://    $args->help_topic = isset($_REQUEST['help_topic']) ? $_REQUEST['help_topic'] : $args->feature;
lib/plan/planTCNavigator.php://    $args->$key=isset($_REQUEST[$key]) ? $_REQUEST[$key] : 0;
lib/plan/planTCNavigator.php://    	$args->src_workframe = $_SESSION['basehref'] .
lib/plan/planTCNavigator.php://                      "lib/general/staticPage.php?key={$args->help_topic}";
lib/plan/planTCNavigator.php://    	$args->src_workframe = '';
lib/plan/planTCNavigator.php://    $args->tcase_id = isset($_REQUEST['tcase_id']) ? intval($_REQUEST['tcase_id']) : null;
lib/plan/planTCNavigator.php://    $args->$key = isset($_REQUEST[$key]) ? (array)$_REQUEST[$key] : array($cfgObj->results['status_code']['all']);
lib/plan/planTCNavigator.php://    if( !is_null($args->$key) )
lib/plan/planTCNavigator.php://        if( in_array($cfgObj->results['status_code']['all'], $args->$key) )
lib/plan/planTCNavigator.php://            $args->$key = array($cfgObj->results['status_code']['all']);
lib/plan/planTCNavigator.php://        else if( !$args->advancedFilterMode && count($args->$key) > 0)
lib/plan/planTCNavigator.php://            $args->$key = array($args->$key[0]);
lib/plan/planTCNavigator.php://    $args->filter_method_selected = isset($_REQUEST['filter_method']) ?
lib/plan/planTCNavigator.php://	$args->optBuildSelected = isset($_REQUEST['build_id']) ? $_REQUEST['build_id'] : -1;
lib/plan/planTCNavigator.php://    $args->optFilterBuildSelected = isset($_REQUEST['filter_build_id']) ? $_REQUEST['filter_build_id'] : -1;
lib/plan/planTCNavigator.php://    $args->optPlatformSelected = isset($_REQUEST['platform_id']) ? $_REQUEST['platform_id'] : null;
lib/plan/planTCNavigator.php://    if (in_array(0, (array)$args->optPlatformSelected)) {
lib/plan/planTCNavigator.php://		$args->optPlatformSelected = null;
lib/plan/planTCNavigator.php://    // 20081221 - franciscom
lib/plan/planTCNavigator.php://    $args->filter_assigned_to = isset($_REQUEST['filter_assigned_to']) ? $_REQUEST['filter_assigned_to'] : null;                                                                                                                        
lib/plan/planTCNavigator.php://    if( !is_null($args->filter_assigned_to) )
lib/plan/planTCNavigator.php://        $args->filter_assigned_to = (array)$args->filter_assigned_to;
lib/plan/planTCNavigator.php://        if( in_array(TL_USER_ANYBODY, $args->filter_assigned_to) )
lib/plan/planTCNavigator.php://            $args->filter_assigned_to = array(TL_USER_ANYBODY);  
lib/plan/planTCNavigator.php://        else if( in_array(TL_USER_NOBODY, $args->filter_assigned_to) )
lib/plan/planTCNavigator.php://            $args->filter_assigned_to = array(TL_USER_NOBODY);    
lib/plan/planTCNavigator.php://        else if( !$args->advancedFilterMode && count($args->filter_assigned_to) > 0)
lib/plan/planTCNavigator.php://            $args->filter_assigned_to=array($args->filter_assigned_to[0]);
lib/plan/planTCNavigator.php://	$args->include_unassigned = isset($_REQUEST['include_unassigned']) ? $_REQUEST['include_unassigned'] : 0;
lib/plan/planTCNavigator.php://  20100428 - asimon - BUGID 3301, added exec_cfield_mgr
lib/plan/planTCNavigator.php://	$platformMgr = new tlPlatform($dbHandler, $argsObj->tproject_id);
lib/plan/planTCNavigator.php://    $gui->strOptionAny = $gui_open . lang_get('any') . $gui_close;
lib/plan/planTCNavigator.php://    $gui->strOptionNone = $gui_open . lang_get('nobody') . $gui_close;
lib/plan/planTCNavigator.php://    $gui->strOptionSomebody = $gui_open . lang_get('filter_somebody') . $gui_close;
lib/plan/planTCNavigator.php://    $initValues['keywords'] = "testplan,{$argsObj->tplan_id}";
lib/plan/planTCNavigator.php://    $gui->controlPanel = new tlControlPanel($dbHandler,$argsObj,$initValues);
lib/plan/planTCNavigator.php://    $gui->design_time_cfields = $exec_cfield_mgr->html_table_of_custom_field_inputs(30);
lib/plan/planTCNavigator.php://    $gui->feature = $argsObj->feature;
lib/plan/planTCNavigator.php://    $gui->filterAssignedTo=$argsObj->filter_assigned_to;
lib/plan/planTCNavigator.php://    $gui->includeUnassigned = $argsObj->include_unassigned;
lib/plan/planTCNavigator.php://   	$gui->toggleFilterModeLabel='';
lib/plan/planTCNavigator.php://    $gui->optFilterBuild = initFilterBuildInfo($dbHandler,$argsObj,$tplanMgr);
lib/plan/planTCNavigator.php://    $gui->buildCount = count($gui->optFilterBuild['items']);
lib/plan/planTCNavigator.php://    $gui->optPlatform = initPlatformInfo($dbHandler,$argsObj,$platformMgr, $gui->strOptionAny);
lib/plan/planTCNavigator.php://    $gui->keywordsFilterTypes=new stdClass();                                 
lib/plan/planTCNavigator.php://    $gui->keywordsFilterTypes->options = array('OR' => 'Or' , 'AND' =>'And'); 
lib/plan/planTCNavigator.php://    $gui->keywordsFilterTypes->selected=$argsObj->keywordsFilterType;         
lib/plan/planTCNavigator.php://    $tplans = $_SESSION['currentUser']->getAccessibleTestPlans($dbHandler,$argsObj->tproject_id);
lib/plan/planTCNavigator.php://    $gui->mapTPlans = array();
lib/plan/planTCNavigator.php://    	$gui->mapTPlans[$value['id']] = $value['name'];
lib/plan/planTCNavigator.php://    $gui->tPlanID=$argsObj->tplan_id;
lib/plan/planTCNavigator.php://	$gui->testers=null;
lib/plan/planTCNavigator.php://   	$gui->title = lang_get('title_test_plan_navigator');
lib/plan/planTCNavigator.php://    $gui->src_workframe=$argsObj->src_workframe;
lib/plan/planTCNavigator.php://    // $gui->drawBulkUpdateButton=false;
lib/plan/planTCNavigator.php://    $gui->tcase_id=intval($argsObj->tcase_id) > 0 ? $argsObj->tcase_id : '';
lib/plan/planTCNavigator.php://    $gui->filterMethods = createExecutionAssignmentFilterMethodMenu();
lib/plan/planTCNavigator.php://    $gui->filterMethodSpecificBuild = $filter_cfg['status_code']['specific_build'];
lib/plan/planTCNavigator.php://	$gui->optFilterMethodSelected = $argsObj->filter_method_selected;
lib/plan/planTCNavigator.php://    switch($argsObj->feature)
lib/plan/planTCNavigator.php://    	    $gui->menuUrl = "lib/plan/planUpdateTC.php";
lib/plan/planTCNavigator.php://    	    $gui->controlPanel->drawBulkUpdateButton=true;
lib/plan/planTCNavigator.php://    	    $gui->menuUrl = "lib/plan/planUrgency.php";
lib/plan/planTCNavigator.php://    	    $gui->menuUrl = "lib/plan/tc_exec_assignment.php";
lib/plan/planTCNavigator.php://    	    $gui->testers = getTestersForHtmlOptions($dbHandler,$argsObj->tplan_id,$argsObj->tproject_id,
lib/plan/planTCNavigator.php://     	                                             array(TL_USER_ANYBODY => $gui->controlPanel->strOption['any'],
lib/plan/planTCNavigator.php://	                                                       TL_USER_NOBODY => $gui->controlPanel->strOption['none'],
lib/plan/planTCNavigator.php://	                                                       TL_USER_SOMEBODY => $gui->controlPanel->strOption['somebody']) );
lib/plan/planTCNavigator.php://          if( $gui->panelFiltersAdvancedFilterMode )
lib/plan/planTCNavigator.php://              $gui->assigneeFilterItemQty=4; // as good as any other number
lib/plan/planTCNavigator.php://              $gui->assigneeFilterItemQty=1;
lib/plan/planTCNavigator.php://          $gui->toggleFilterModeLabel=lang_get($label);
lib/plan/planTCNavigator.php://          $gui->controlPanel->drawTCUnassignButton=true;
lib/plan/planTCNavigator.php://    $gui->additional_string = '';
lib/plan/planTCNavigator.php://	$gui->tree = buildTree($dbHandler,$gui,$argsObj,$cfgObj, $exec_cfield_mgr);
lib/plan/planTCNavigator.php://  rev: 20100428 - asimon - added exec_cfield_mgr
lib/plan/planTCNavigator.php://       20081221 - franciscom -
lib/plan/planTCNavigator.php://       20080821 - franciscom - added management of ajaxTree property
lib/plan/planTCNavigator.php://    // using global coupling is 99% (ALWAYS) BAD -> global $tlCfg;
lib/plan/planTCNavigator.php://    // - is standard practice on whole TL code (used in 75 files).
lib/plan/planTCNavigator.php://    // - is better because you do not need to care about name
lib/plan/planTCNavigator.php://    $filters->keyword = buildKeywordsFilter($argsObj->panelFiltersKeyword,$guiObj);
lib/plan/planTCNavigator.php://    $filters->keyword_id = $argsObj->panelFiltersKeyword;
lib/plan/planTCNavigator.php://    $filters->keywordsFilterType = $argsObj->keywordsFilterType;
lib/plan/planTCNavigator.php://    $filters->platform_id = null;
lib/plan/planTCNavigator.php://    if($argsObj->optPlatformSelected != null) 
lib/plan/planTCNavigator.php://    	$filters->platform_id = $argsObj->optPlatformSelected;
lib/plan/planTCNavigator.php://    $filters->include_unassigned = $guiObj->includeUnassigned;
lib/plan/planTCNavigator.php://    $filters->show_testsuite_contents=1;
lib/plan/planTCNavigator.php://   	$filters->hide_testcases = 0;
lib/plan/planTCNavigator.php://   	$filters->tc_id = $argsObj->tcase_id;	
lib/plan/planTCNavigator.php://    $filters->build_id = $argsObj->optBuildSelected;
lib/plan/planTCNavigator.php://    $filters->filter_build_id = $argsObj->optFilterBuildSelected;
lib/plan/planTCNavigator.php://    $filters->method = $argsObj->filter_method_selected;
lib/plan/planTCNavigator.php://    $filters->filter_status = null;
lib/plan/planTCNavigator.php://    if( !is_null($argsObj->panelFiltersExecStatus) )
lib/plan/planTCNavigator.php://        if( !in_array($cfgObj->results['status_code']['all'], $guiObj->panelFiltersExecStatus) )
lib/plan/planTCNavigator.php://            $dummy = array_flip($argsObj->panelFiltersExecStatus);
lib/plan/planTCNavigator.php://            $filters->filter_status = $dummy;
lib/plan/planTCNavigator.php://    $filters->hide_testcases = false;
lib/plan/planTCNavigator.php://    $filters->build_id = 0;
lib/plan/planTCNavigator.php://    $filters->assignedTo = null;
lib/plan/planTCNavigator.php://    $filters->status = null;
lib/plan/planTCNavigator.php://    $filters->exec_type = null;
lib/plan/planTCNavigator.php://    //$filters->cf_hash = null;
lib/plan/planTCNavigator.php://    $filters->cf_hash = $exec_cfield_mgr->get_set_values();
lib/plan/planTCNavigator.php://    switch($argsObj->feature)
lib/plan/planTCNavigator.php://    	$filters->hide_testcases = 1;
lib/plan/planTCNavigator.php://    	$filters->assignedTo = $argsObj->filter_assigned_to;
lib/plan/planTCNavigator.php://      if( !is_null($filters->assignedTo) )
lib/plan/planTCNavigator.php://          if( in_array(TL_USER_ANYBODY, $argsObj->filter_assigned_to) )
lib/plan/planTCNavigator.php://              $filters->assignedTo = null;
lib/plan/planTCNavigator.php://              $dummy = array_flip($guiObj->filterAssignedTo);
lib/plan/planTCNavigator.php://              $filters->assignedTo = $dummy;
lib/plan/planTCNavigator.php://    $additionalInfo->useCounters=CREATE_TC_STATUS_COUNTERS_OFF;
lib/plan/planTCNavigator.php://    $additionalInfo->useColours=COLOR_BY_TC_STATUS_OFF;
lib/plan/planTCNavigator.php://    $guiObj->args = initializeGetArguments($argsObj,$filters);
lib/plan/planTCNavigator.php://    $guiObj->additionalArgs = '';
lib/plan/planTCNavigator.php://    list($treeMenu, $guiObj->additionalArgs) = generateExecTree($dbHandler,$guiObj->menuUrl,
lib/plan/planTCNavigator.php://                                                                $argsObj->tproject_id,$argsObj->tproject_name,
lib/plan/planTCNavigator.php://                                                                $argsObj->tplan_id,$argsObj->tplan_name,
lib/plan/planTCNavigator.php://    // $guiObj->args .= $add2guiObjArgs;
lib/plan/planTCNavigator.php://   	$guiObj->ajaxTree = new stdClass();
lib/plan/planTCNavigator.php://    $guiObj->ajaxTree->loader = '';
lib/plan/planTCNavigator.php://    $guiObj->ajaxTree->root_node = $treeMenu->rootnode;
lib/plan/planTCNavigator.php://    $guiObj->ajaxTree->children = $treeMenu->menustring ? $treeMenu->menustring : "''";
lib/plan/planTCNavigator.php://    $guiObj->ajaxTree->cookiePrefix = $argsObj->feature;
lib/plan/planTCNavigator.php://  rev: 20100428 - asimon - added cf_hash filter
lib/plan/planTCNavigator.php://       20080427 - franciscom - added cfgObj arguments
lib/plan/planTCNavigator.php://       20080224 - franciscom - added include_unassigned
lib/plan/planTCNavigator.php://    $settings = '&include_unassigned=' . $filtersObj->include_unassigned;
lib/plan/planTCNavigator.php://    if(is_array($argsObj->panelFiltersKeyword) && !in_array(0, $argsObj->panelFiltersKeyword))
lib/plan/planTCNavigator.php://       $kl=implode(',',$argsObj->panelFiltersKeyword);
lib/plan/planTCNavigator.php://    else if(!is_array($argsObj->panelFiltersKeyword) && $argsObj->panelFiltersKeyword > 0)
lib/plan/planTCNavigator.php://    	  $settings .= '&keyword_id='.$argsObj->panelFiltersKeyword;
lib/plan/planTCNavigator.php://    $settings .= '&keywordsFilterType='.$argsObj->keywordsFilterType;
lib/plan/planTCNavigator.php://    if($filtersObj->assignedTo)
lib/plan/planTCNavigator.php://    	  $settings .= '&filter_assigned_to=' . serialize($filtersObj->assignedTo);
lib/plan/planTCNavigator.php://    $settings .= '&tplan_id=' . $argsObj->tplan_id;
lib/plan/planTCNavigator.php://	if ($filtersObj->cf_hash)
lib/plan/planTCNavigator.php://    	 $settings .= '&cfields='. serialize($filtersObj->cf_hash);
lib/plan/planTCNavigator.php:// * @return HTML-Select for builds (names and values)
lib/plan/planTCNavigator.php://    $htmlSelect['items'] = $tplanMgr->get_builds_for_html_options($argsObj->tplan_id,
lib/plan/planTCNavigator.php://    $maxBuildID = $tplanMgr->get_max_build_id($argsObj->tplan_id,
lib/plan/planTCNavigator.php://    $argsObj->optFilterBuildSelected = $argsObj->optFilterBuildSelected > 0 ? $argsObj->optFilterBuildSelected : $maxBuildID;
lib/plan/planTCNavigator.php://    if (!$argsObj->optFilterBuildSelected && sizeof($htmlSelect['items']))
lib/plan/planTCNavigator.php://    	$argsObj->optFilterBuildSelected = key($htmlSelect['items']);
lib/plan/planTCNavigator.php://    $htmlSelect['selected'] = $argsObj->optFilterBuildSelected;
lib/plan/planTCNavigator.php://    $htmlSelect['items'] = array(0 => $str_any) + (array)$platformMgr->getLinkedToTestplanAsMap($argsObj->tplan_id);
lib/plan/planTCNavigator.php://    	if (is_null($argsObj->optPlatformSelected)) 
lib/plan/planTCNavigator.php://    	    $argsObj->optPlatformSelected = key($htmlSelect['items']);
lib/plan/planTCNavigator.php://    	$htmlSelect['selected'] = $argsObj->optPlatformSelected;
lib/plan/planExport.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/plan/planExport.php: * @copyright 	2003-2009, TestLink community 
lib/plan/planExport.php:$node_id = $args->container_id;
lib/plan/planExport.php:if($args->useRecursion)
lib/plan/planExport.php:	$gui->page_title=lang_get('title_tsuite_export');
lib/plan/planExport.php:	$gui->export_filename = 'testsuites.xml';
lib/plan/planExport.php:	if($node_id == $args->tproject_id)
lib/plan/planExport.php:		$gui->page_title=lang_get('title_tsuite_export_all');
lib/plan/planExport.php:		$gui->export_filename = 'all_testsuites.xml';
lib/plan/planExport.php:		$gui->nothing_todo_msg=lang_get('no_testsuites_to_export');
lib/plan/planExport.php:	$exporting_just_one_tc = ($args->tcase_id && $args->tcversion_id);
lib/plan/planExport.php:	$gui->export_filename = 'testcases.xml';
lib/plan/planExport.php:		$node_id = $args->tcase_id;
lib/plan/planExport.php:		$gui->page_title = lang_get('title_tc_export');
lib/plan/planExport.php:		$gui->page_title = lang_get('title_tc_export_all');
lib/plan/planExport.php:		$gui->nothing_todo_msg = lang_get('no_testcases_to_export');
lib/plan/planExport.php:$gui->export_filename = is_null($args->export_filename) ? $gui->export_filename : $args->export_filename;
lib/plan/planExport.php:	$children=$tree_mgr->get_children($node_id, 
lib/plan/planExport.php:	$gui->nothing_todo_msg='';
lib/plan/planExport.php:		$gui->do_it = 0 ;
lib/plan/planExport.php:$node = $tree_mgr->get_node_hierarchy_info($node_id);
lib/plan/planExport.php:if ($args->doExport)
lib/plan/planExport.php:	$optExport = array('REQS' => $args->exportReqs, 'CFIELDS' => $args->exportCFields,
lib/plan/planExport.php:	                   'KEYWORDS' => $args->exportKeywords, 'RECURSIVE' => $args->useRecursion);
lib/plan/planExport.php:	switch($args->exportType)
lib/plan/planExport.php:			$content = $tcase_mgr->$pfn($args->tcase_id,$args->tcversion_id,$args->tproject_id,null,$optExport);
lib/plan/planExport.php:			$content .= $tsuite_mgr->$pfn($args->container_id,$args->tproject_id,$optExport);
lib/plan/planExport.php:		downloadContentsToFile($content,$gui->export_filename);
lib/plan/planExport.php:if( $args->useRecursion )
lib/plan/planExport.php:$gui->object_name=$node['name'];
lib/plan/planExport.php:$gui->exportTypes=$obj_mgr->get_export_file_types();
lib/plan/planExport.php:$gui->tproject_name=$args->tproject_name;
lib/plan/planExport.php:$gui->tproject_id=$args->tproject_id;
lib/plan/planExport.php:$gui->tcID=$args->tcase_id; 
lib/plan/planExport.php:$gui->useRecursion=$args->useRecursion ? 1 : 0;
lib/plan/planExport.php:$gui->tcVersionID=$args->tcversion_id;
lib/plan/planExport.php:$gui->containerID=$args->container_id;
lib/plan/planExport.php:$smarty->assign('gui',$gui);
lib/plan/planExport.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/plan/planExport.php:    $args->doExport = isset($_REQUEST['export']) ? $_REQUEST['export'] : null;
lib/plan/planExport.php:    $args->exportType = isset($_REQUEST['exportType']) ? $_REQUEST['exportType'] : null;
lib/plan/planExport.php:    $args->tcase_id = isset($_REQUEST['testcase_id']) ? intval($_REQUEST['testcase_id']) : 0;
lib/plan/planExport.php:    $args->container_id = isset($_REQUEST['containerID']) ? intval($_REQUEST['containerID']) : 0;
lib/plan/planExport.php:    $args->useRecursion = isset($_REQUEST['useRecursion']) ? $_REQUEST['useRecursion'] : false;
lib/plan/planExport.php:    $args->tproject_id = $_REQUEST['tproject_id'];
lib/plan/planExport.php:    $args->tplan_id = $_REQUEST['tplan_id'];
lib/plan/planExport.php:    $args->export_filename=isset($_REQUEST['export_filename']) ? $_REQUEST['export_filename'] : null;
lib/plan/planExport.php:    $args->goback_url=isset($_REQUEST['goback_url']) ? $_REQUEST['goback_url'] : null;
lib/plan/planExport.php:	$guiObj->do_it = 1;
lib/plan/planExport.php:	$guiObj->nothing_todo_msg = '';
lib/plan/planExport.php:	$guiObj->export_filename = '';
lib/plan/planExport.php:	$guiObj->page_title = '';
lib/plan/planExport.php:	$guiObj->object_name='';
lib/plan/planExport.php:	$guiObj->goback_url = !is_null($argsObj->goback_url) ? $argsObj->goback_url : ''; 
lib/plan/planUpdateTC.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/plan/planUpdateTC.php: *  20100726 - asimon - fixed bug in processTestPlan(): "All linked Test Case Versions are current" 
lib/plan/planUpdateTC.php: *  20100628 - asimon - removal of constants from filter control class
lib/plan/planUpdateTC.php: *  20160625 - asimon - refactoring for new filter features and BUGID 3516
lib/plan/planUpdateTC.php: *  20100624 - asimon - CVS merge (experimental branch to HEAD)
lib/plan/planUpdateTC.php: *	20100131 - franciscom - BUGID 3008/3109	
lib/plan/planUpdateTC.php: *	20100123 - franciscom - BUGID 2652 + missing refactoring for table prefix doUpdate()
lib/plan/planUpdateTC.php: *	20091212 - franciscom - added contribution by asimon83 (refactored) - BUGID 2652
lib/plan/planUpdateTC.php:if(is_array($args->keyword_id))
lib/plan/planUpdateTC.php:    $keywordsFilter->items = $args->keyword_id;
lib/plan/planUpdateTC.php:    $keywordsFilter->type = $gui->keywordsFilterType->selected;
lib/plan/planUpdateTC.php:switch ($args->doAction)
lib/plan/planUpdateTC.php:	    $gui->user_feedback = doUpdate($db,$args);
lib/plan/planUpdateTC.php:$gui->show_details = 0;
lib/plan/planUpdateTC.php:$gui->operationType = 'standard';
lib/plan/planUpdateTC.php:$gui->hasItems = 0;        	
lib/plan/planUpdateTC.php:switch($args->level)
lib/plan/planUpdateTC.php:        $gui->testcases = $itemSet['items'];
lib/plan/planUpdateTC.php:        $gui->user_feedback = $itemSet['msg'];
lib/plan/planUpdateTC.php:		$gui->instructions = lang_get('update2latest');
lib/plan/planUpdateTC.php:		$gui->buttonAction = "doBulkUpdateToLatest";
lib/plan/planUpdateTC.php:        $gui->operationType = 'bulk';
lib/plan/planUpdateTC.php:        if( !is_null($gui->testcases) )
lib/plan/planUpdateTC.php:	        $gui->hasItems = 1;
lib/plan/planUpdateTC.php:			$gui->show_details = 1;
lib/plan/planUpdateTC.php:	$gui->hasItems = $out['num_tc'] > 0 ? 1 : 0;
lib/plan/planUpdateTC.php:	$gui->items = $out['spec_view'];
lib/plan/planUpdateTC.php:$smarty->assign('gui', $gui);
lib/plan/planUpdateTC.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/plan/planUpdateTC.php:    $args->id = isset($_REQUEST['id']) ? $_REQUEST['id'] : null;
lib/plan/planUpdateTC.php:    $args->level = isset($_REQUEST['level']) ? $_REQUEST['level'] : null;
lib/plan/planUpdateTC.php:    $args->doAction = isset($_REQUEST['doAction']) ? $_REQUEST['doAction'] : null;
lib/plan/planUpdateTC.php:    $args->fullTestCaseSet = isset($_REQUEST['a_tcid']) ? $_REQUEST['a_tcid'] : null;
lib/plan/planUpdateTC.php:    $args->checkedTestCaseSet = isset($_REQUEST['achecked_tc']) ? $_REQUEST['achecked_tc'] : null;
lib/plan/planUpdateTC.php:    $args->newVersionSet = isset($_REQUEST['new_tcversion_for_tcid']) ? $_REQUEST['new_tcversion_for_tcid'] : null;
lib/plan/planUpdateTC.php:    $args->version_id = isset($_REQUEST['version_id']) ? $_REQUEST['version_id'] : 0;
lib/plan/planUpdateTC.php://    $args->keyword_id = is_null($keywordSet) ? 0 : explode(',',$keywordSet); 
lib/plan/planUpdateTC.php://    $args->keywordsFilterType = isset($_REQUEST['keywordsFilterType']) ? $_REQUEST['keywordsFilterType'] : 'OR';
lib/plan/planUpdateTC.php://    $args->tplan_id = isset($_REQUEST['tplan_id']) ? intval($_REQUEST['tplan_id']) : 0;
lib/plan/planUpdateTC.php://    if($args->tplan_id == 0)
lib/plan/planUpdateTC.php://        $args->tplan_id = isset($_SESSION['testplanID']) ? intval($_SESSION['testplanID']) : 0;
lib/plan/planUpdateTC.php://        $args->tplan_name = $_SESSION['testplanName'];
lib/plan/planUpdateTC.php://        $tpi = $tplanMgr->get_by_id($args->tplan_id);  
lib/plan/planUpdateTC.php://        $args->tplan_name = $tpi['name'];
lib/plan/planUpdateTC.php:    $args->tproject_id = $_SESSION['testprojectID'];
lib/plan/planUpdateTC.php:    $args->tproject_name = $_SESSION['testprojectName'];
lib/plan/planUpdateTC.php:	$args->tplan_id = isset($session_data['setting_testplan']) ? $session_data['setting_testplan'] : 0;
lib/plan/planUpdateTC.php:	if($args->tplan_id == 0) {
lib/plan/planUpdateTC.php:		$args->tplan_id = isset($_SESSION['testplanID']) ? intval($_SESSION['testplanID']) : 0;
lib/plan/planUpdateTC.php:		$args->tplan_name = $_SESSION['testplanName'];
lib/plan/planUpdateTC.php:		$tpi = $tplanMgr->get_by_id($args->tplan_id);  
lib/plan/planUpdateTC.php:		$args->tplan_name = $tpi['name'];
lib/plan/planUpdateTC.php:	$args->refreshTree = isset($session_data['setting_refresh_tree_on_action']) ?
lib/plan/planUpdateTC.php:    $args->keyword_id = 0;
lib/plan/planUpdateTC.php:		$args->keyword_id = $session_data[$fk];
lib/plan/planUpdateTC.php:		if (is_array($args->keyword_id) && count($args->keyword_id) == 1) {
lib/plan/planUpdateTC.php:			$args->keyword_id = $args->keyword_id[0];
lib/plan/planUpdateTC.php:	$args->keywordsFilterType = null;
lib/plan/planUpdateTC.php:		$args->keywordsFilterType = $session_data[$ft];
lib/plan/planUpdateTC.php:	$debugMsg = 'File:' . __FILE__ . ' - Function: ' . __FUNCTION__;
lib/plan/planUpdateTC.php:	if(!is_null($argsObj->checkedTestCaseSet))
lib/plan/planUpdateTC.php:		foreach($argsObj->checkedTestCaseSet as $tcaseID => $tcversionID)
lib/plan/planUpdateTC.php:			$newtcversion=$argsObj->newVersionSet[$tcaseID];
lib/plan/planUpdateTC.php:				       " AND testplan_id={$argsObj->tplan_id}";
lib/plan/planUpdateTC.php:				$dbObj->exec_query($sql);
lib/plan/planUpdateTC.php:    $gui->refreshTree=false;
lib/plan/planUpdateTC.php:    $gui->instructions='';
lib/plan/planUpdateTC.php:    $gui->buttonAction="doUpdate";
lib/plan/planUpdateTC.php:    $gui->testCasePrefix = $tcaseMgr->tproject_mgr->getTestCasePrefix($argsObj->tproject_id);
lib/plan/planUpdateTC.php:    $gui->testCasePrefix .= $tcase_cfg->glue_character;
lib/plan/planUpdateTC.php:    $gui->user_feedback = '';
lib/plan/planUpdateTC.php:    $gui->testPlanName = $argsObj->tplan_name;
lib/plan/planUpdateTC.php:    $gui->items = null;
lib/plan/planUpdateTC.php:    $gui->has_tc = 1;  
lib/plan/planUpdateTC.php:  // $linkedItems=$tplanMgr->get_linked_tcversions($argsObj->tplan_id);
lib/plan/planUpdateTC.php:  $linkedItems = $tplanMgr->get_linked_items_id($argsObj->tplan_id);
lib/plan/planUpdateTC.php:  $items=$tplanMgr->get_linked_and_newest_tcversions($argsObj->tplan_id);
lib/plan/planUpdateTC.php:                   " AND testplan_id={$argsObj->tplan_id}";
lib/plan/planUpdateTC.php:            $dbObj->exec_query($sql);
lib/plan/planUpdateTC.php:                  " AND testplan_id={$argsObj->tplan_id}";
lib/plan/planUpdateTC.php:            $dbObj->exec_query($sql);
lib/plan/planUpdateTC.php:                  " AND testplan_id={$argsObj->tplan_id}";
lib/plan/planUpdateTC.php:            $dbObj->exec_query($sql);
lib/plan/planUpdateTC.php:	$my_path = $treeMgr->get_path($argsObj->id);
lib/plan/planUpdateTC.php:	$idx_ts = count($my_path)-1;
lib/plan/planUpdateTC.php:	$tsuite_data = $my_path[$idx_ts-1];
lib/plan/planUpdateTC.php:	$filters = array('tcase_id' => $argsObj->id);
lib/plan/planUpdateTC.php:	$dummy_items = $tplanMgr->get_linked_tcversions($argsObj->tplan_id,$filters);		
lib/plan/planUpdateTC.php:    // 20100131 - franciscom
lib/plan/planUpdateTC.php:	$filters = array('keywords' => $argsObj->keyword_id, 'testcases' => $argsObj->id);
lib/plan/planUpdateTC.php:	$out = gen_spec_view($dbHandler,'testplan',$argsObj->tplan_id,$tsuite_data['id'],$tsuite_data['name'],
lib/plan/planUpdateTC.php: *  20100726 - asimon - fixed bug: "All linked Test Case Versions are current" 
lib/plan/planUpdateTC.php:    $filters = array('keywords' => $argsObj->keyword_id);
lib/plan/planUpdateTC.php:	$linked_tcases = $tplanMgr->get_linked_tcversions($argsObj->tplan_id,$filters);
lib/plan/planUpdateTC.php:    	$set2update['items'] = $tplanMgr->get_linked_and_newest_tcversions($argsObj->tplan_id,$testCaseSet);
lib/plan/planUpdateTC.php:		// 20100726 - asimon
lib/plan/planUpdateTC.php:			$path_info=$tplanMgr->tree_manager->get_full_path_verbose($itemSet);
lib/plan/planUpdateTC.php:			// 20100726 - asimon
lib/plan/planUpdateTC.php:	return $user->hasRight($db,'testplan_planning');
lib/plan/buildView.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/plan/buildView.php: *      20090509 - franciscom - minor refactoring      
lib/plan/buildView.php:$gui->tplan_id = isset($_SESSION['testplanID']) ? $_SESSION['testplanID'] : 0;
lib/plan/buildView.php:$gui->tplan_name = $_SESSION['testplanName'];
lib/plan/buildView.php:$gui->buildSet = $tplan_mgr->get_builds($gui->tplan_id);
lib/plan/buildView.php:$gui->user_feedback = null;
lib/plan/buildView.php:$smarty->assign('gui', $gui);
lib/plan/buildView.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/plan/buildView.php:	return $user->hasRight($db,'testplan_create_build');
lib/plan/planMilestonesCommands.class.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/plan/planMilestonesCommands.class.php: *	20090910 - franciscom - start_date
lib/plan/planMilestonesCommands.class.php:	    $this->db = $db;
lib/plan/planMilestonesCommands.class.php:	    $this->milestone_mgr = new milestone_mgr($db);
lib/plan/planMilestonesCommands.class.php: 		$this->submit_button_label = lang_get('btn_save');
lib/plan/planMilestonesCommands.class.php:	    $this->auditContext = $auditContext;
lib/plan/planMilestonesCommands.class.php:		$guiObj->main_descr = lang_get('testplan') . TITLE_SEP;
lib/plan/planMilestonesCommands.class.php:		$guiObj->action_descr = lang_get('create_milestone');
lib/plan/planMilestonesCommands.class.php:		$guiObj->template = $this->defaultTemplate;
lib/plan/planMilestonesCommands.class.php:		$guiObj->submit_button_label = $this->submit_button_label;
lib/plan/planMilestonesCommands.class.php:		$guiObj->milestone = array('id' => 0, 'name' => '', 'target_date' => '', 
lib/plan/planMilestonesCommands.class.php:		                           'testplan_id' => $argsObj->tplan_id,
lib/plan/planMilestonesCommands.class.php:		                           'testplan_name' => $argsObj->tplan_name,);
lib/plan/planMilestonesCommands.class.php:	    $dummy = $this->milestone_mgr->get_by_id($argsObj->id);
lib/plan/planMilestonesCommands.class.php:	    $guiObj->milestone = $dummy[$argsObj->id];
lib/plan/planMilestonesCommands.class.php:	    $guiObj->main_descr = lang_get('testplan') . TITLE_SEP;
lib/plan/planMilestonesCommands.class.php:	    $guiObj->action_descr = sprintf(lang_get('edit_milestone'),$guiObj->milestone['name']);
lib/plan/planMilestonesCommands.class.php:      	$guiObj->template = $this->defaultTemplate;
lib/plan/planMilestonesCommands.class.php:      	$guiObj->submit_button_label = $this->submit_button_label;
lib/plan/planMilestonesCommands.class.php:		$guiObj->main_descr = lang_get('Milestone') . TITLE_SEP;
lib/plan/planMilestonesCommands.class.php:		$guiObj->action_descr = lang_get('create_milestone');
lib/plan/planMilestonesCommands.class.php:		$guiObj->submit_button_label=$this->submit_button_label;
lib/plan/planMilestonesCommands.class.php:		$guiObj->template = null;
lib/plan/planMilestonesCommands.class.php:      	$name_exists = $this->milestone_mgr->check_name_existence($argsObj->tplan_id,$argsObj->name);
lib/plan/planMilestonesCommands.class.php:			$guiObj->user_feedback = sprintf(lang_get('milestone_name_already_exists'),$argsObj->name);
lib/plan/planMilestonesCommands.class.php:			$timestamp['target'] = strtotime($argsObj->target_date . " 23:59:59");
lib/plan/planMilestonesCommands.class.php:				$guiObj->user_feedback = lang_get('warning_milestone_date');
lib/plan/planMilestonesCommands.class.php:	        $argsObj->id = $this->milestone_mgr->create($argsObj->tplan_id,$argsObj->name,
lib/plan/planMilestonesCommands.class.php:	                                                    $argsObj->target_date,$argsObj->start_date,
lib/plan/planMilestonesCommands.class.php:	                                                    $argsObj->low_priority_tcases,
lib/plan/planMilestonesCommands.class.php:	                                                    $argsObj->medium_priority_tcases,
lib/plan/planMilestonesCommands.class.php:	                                                    $argsObj->high_priority_tcases);
lib/plan/planMilestonesCommands.class.php:		      $guiObj->user_feedback = 'ok';
lib/plan/planMilestonesCommands.class.php:		      if($argsObj->id > 0)
lib/plan/planMilestonesCommands.class.php:		      	logAuditEvent(TLS("audit_milestone_created",$argsObj->tplan_name,$argsObj->name),
lib/plan/planMilestonesCommands.class.php:		      	              "CREATE",$argsObj->id,"milestones");
lib/plan/planMilestonesCommands.class.php:		      	$guiObj->user_feedback = sprintf(lang_get('milestone_created'), $argsObj->name);
lib/plan/planMilestonesCommands.class.php:  		      	$guiObj->template = $basehref . $this->viewAction;
lib/plan/planMilestonesCommands.class.php:	    $obj=$this->edit($argsObj);
lib/plan/planMilestonesCommands.class.php:      	$obj->user_feedback = 'ok';
lib/plan/planMilestonesCommands.class.php:		$obj->template = null;
lib/plan/planMilestonesCommands.class.php:      	$dummy = $this->milestone_mgr->get_by_id($argsObj->id);
lib/plan/planMilestonesCommands.class.php:	    $originalMilestone = $dummy[$argsObj->id];
lib/plan/planMilestonesCommands.class.php:      	$name_exists = $this->milestone_mgr->check_name_existence($originalMilestone['testplan_id'],
lib/plan/planMilestonesCommands.class.php:                                                                  $argsObj->name,$argsObj->id);
lib/plan/planMilestonesCommands.class.php:			    $obj->user_feedback = sprintf(lang_get('milestone_name_already_exists'),$argsObj->name);
lib/plan/planMilestonesCommands.class.php:			$timestamp['target'] = strtotime($argsObj->target_date ." 23:59:59");
lib/plan/planMilestonesCommands.class.php:			    	$obj->user_feedback = lang_get('warning_milestone_date');
lib/plan/planMilestonesCommands.class.php:          $op_ok = $this->milestone_mgr->update($argsObj->id,$argsObj->name,$argsObj->target_date,
lib/plan/planMilestonesCommands.class.php:                                                $argsObj->start_date,
lib/plan/planMilestonesCommands.class.php:                                                $argsObj->low_priority_tcases,$argsObj->medium_priority_tcases,
lib/plan/planMilestonesCommands.class.php:                                                $argsObj->high_priority_tcases);
lib/plan/planMilestonesCommands.class.php:          	$obj->main_descr = '';
lib/plan/planMilestonesCommands.class.php:		  	$obj->action_descr='';
lib/plan/planMilestonesCommands.class.php:          	$obj->template = "planMilestonesView.php";
lib/plan/planMilestonesCommands.class.php:		  	logAuditEvent(TLS("audit_milestone_saved",$argsObj->tplan_name,$argsObj->name),
lib/plan/planMilestonesCommands.class.php:		  	                    "SAVE",$argsObj->id,"milestones");
lib/plan/planMilestonesCommands.class.php:			$obj->main_descr = $descr_prefix . $originalMilestone[$argsObj->id]['name'];
lib/plan/planMilestonesCommands.class.php:		$dummy = $this->milestone_mgr->get_by_id($argsObj->id);
lib/plan/planMilestonesCommands.class.php:    	$milestone = $dummy[$argsObj->id];
lib/plan/planMilestonesCommands.class.php:		$this->milestone_mgr->delete($argsObj->id);
lib/plan/planMilestonesCommands.class.php:		              "DELETE",$argsObj->id,"milestones");
lib/plan/planMilestonesCommands.class.php:		$obj->template = $basehref . $this->viewAction;
lib/plan/planMilestonesCommands.class.php:		$obj->user_feedback = sprintf(lang_get('milestone_deleted'),$milestone['name']);
lib/plan/planMilestonesCommands.class.php:		$obj->main_descr = null;
lib/plan/planMilestonesCommands.class.php:		$obj->title = lang_get('delete_milestone');
lib/plan/planMilestonesEdit.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/plan/planMilestonesEdit.php:$pFn = $args->doAction;
lib/plan/planMilestonesEdit.php:	$op = $commandMgr->$pFn($args,$_SESSION['basehref']);
lib/plan/planMilestonesEdit.php:  	$args->target_date = null;
lib/plan/planMilestonesEdit.php:    $args->start_date = null;
lib/plan/planMilestonesEdit.php:  	    $args->target_date = $target_date_Year . "-" . $target_date_Month . "-" . $target_date_Day;
lib/plan/planMilestonesEdit.php:  	    $args->start_date = $start_date_Year . "-" . $start_date_Month . "-" . $start_date_Day;
lib/plan/planMilestonesEdit.php:  	    $args->$key = isset($_REQUEST[$key]) ? intval($_REQUEST[$key]) : 0;     
lib/plan/planMilestonesEdit.php:	$args->id = isset($_REQUEST['id']) ? $_REQUEST['id'] : 0;
lib/plan/planMilestonesEdit.php:	$args->name = isset($_REQUEST['milestone_name']) ? $_REQUEST['milestone_name'] : null;
lib/plan/planMilestonesEdit.php:	$args->doAction = isset($_REQUEST['doAction']) ? $_REQUEST['doAction'] : null;
lib/plan/planMilestonesEdit.php:	$args->basehref=$_SESSION['basehref'];
lib/plan/planMilestonesEdit.php:	$args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/plan/planMilestonesEdit.php:	$args->tproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : "";
lib/plan/planMilestonesEdit.php:	$args->tplan_name = '';
lib/plan/planMilestonesEdit.php:	$args->tplan_id = isset($_REQUEST['tplan_id']) ? $_REQUEST['tplan_id'] : 0;
lib/plan/planMilestonesEdit.php:	if( $args->tplan_id == 0 )
lib/plan/planMilestonesEdit.php:	    $args->tplan_id = isset($_SESSION['testplanID']) ? $_SESSION['testplanID'] : 0;
lib/plan/planMilestonesEdit.php:	if( $args->tplan_id > 0 )
lib/plan/planMilestonesEdit.php:	    $info = $tplan_mgr->get_by_id($args->tplan_id);
lib/plan/planMilestonesEdit.php:	    $args->tplan_name = $info['name'];
lib/plan/planMilestonesEdit.php:    // When template is used for create -> operation: doCreate.
lib/plan/planMilestonesEdit.php:    // When template is used for edit -> operation: doUpdate.
lib/plan/planMilestonesEdit.php:    // used to set value of: $guiObj->operation
lib/plan/planMilestonesEdit.php:    switch($argsObj->doAction)
lib/plan/planMilestonesEdit.php:                $guiObj->$key = $value;
lib/plan/planMilestonesEdit.php:            $guiObj->operation = $actionOperation[$argsObj->doAction];
lib/plan/planMilestonesEdit.php:            $tplDir = (!isset($opObj->template_dir)  || is_null($opObj->template_dir)) ? $templateCfg->template_dir : $opObj->template_dir;
lib/plan/planMilestonesEdit.php:            $tpl = is_null($opObj->template) ? $templateCfg->default_template : $opObj->template;
lib/plan/planMilestonesEdit.php:        	$smartyObj->assign('gui',$guiObj);
lib/plan/planMilestonesEdit.php:		    $smartyObj->display($tpl);
lib/plan/planMilestonesEdit.php:  args : -
lib/plan/planMilestonesEdit.php:    $gui->user_feedback = null;
lib/plan/planMilestonesEdit.php:    $gui->main_descr = lang_get('req_spec');
lib/plan/planMilestonesEdit.php:    $gui->action_descr = null;
lib/plan/planMilestonesEdit.php:    $gui->grants = new stdClass();
lib/plan/planMilestonesEdit.php:    $gui->grants->milestone_mgmt = has_rights($dbHandler,"testplan_planning");
lib/plan/planMilestonesEdit.php:	$gui->grants->mgt_view_events = has_rights($dbHandler,"mgt_view_events");
lib/plan/planMilestonesEdit.php:	return ($user->hasRight($db,"testplan_planning"));
lib/plan/planView.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/plan/planView.php:$gui->tproject_id = $args->tproject_id;
lib/plan/planView.php:$gui->tplans = null;
lib/plan/planView.php:$gui->user_feedback = '';
lib/plan/planView.php:$gui->grants = new stdClass();
lib/plan/planView.php:$gui->grants->testplan_create=has_rights($db,"mgt_testplan_create");
lib/plan/planView.php:$gui->main_descr = lang_get('testplan_title_tp_management'). " - " . 
lib/plan/planView.php:                   lang_get('testproject') . ' ' . $args->tproject_name;
lib/plan/planView.php:if($args->tproject_id)
lib/plan/planView.php:	$gui->tplans = $tproject_mgr->get_all_testplans($args->tproject_id);
lib/plan/planView.php:$smarty->assign('gui',$gui);
lib/plan/planView.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/plan/planView.php:    $args->tproject_id = isset($_SESSION['testprojectID']) ? intval($_SESSION['testprojectID']) : 0 ;
lib/plan/planView.php:    $args->tproject_name = isset($_SESSION['testprojectName']) ? trim($_SESSION['testprojectName']) : '' ;
lib/plan/planView.php:	return $user->hasRight($db,'mgt_testplan_create');
lib/plan/buildEdit.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/plan/buildEdit.php: *	20100820 - franciscom - init_source_build_selector() - refactoring
lib/plan/buildEdit.php: *  20100726 - asimon - added number of existing assignments to source build selection
lib/plan/buildEdit.php: *  20100707 - asimon - BUGID 3406: copy user assignments from other builds
lib/plan/buildEdit.php: *	20100706 - franciscom - BUGID 3581 added better check on release date
lib/plan/buildEdit.php: *	20091121 - franciscom - BUGID - contribution
lib/plan/buildEdit.php: *  20090509 - franciscom - BUGID - release_date
lib/plan/buildEdit.php: *  20080827 - franciscom - BUGID 1692
lib/plan/buildEdit.php:$op->user_feedback = '';
lib/plan/buildEdit.php:$op->buttonCfg = new stdClass();
lib/plan/buildEdit.php:$op->buttonCfg->name = "";
lib/plan/buildEdit.php:$op->buttonCfg->value = "";
lib/plan/buildEdit.php:$gui->main_descr = lang_get('title_build_2') . config_get('gui_title_separator_2') . 
lib/plan/buildEdit.php:                   lang_get('test_plan') . config_get('gui_title_separator_1') . $args->tplan_name;
lib/plan/buildEdit.php:$of->Value = getItemTemplateContents('build_template', $of->InstanceName, $args->notes);
lib/plan/buildEdit.php:switch($args->do_action)
lib/plan/buildEdit.php:        $gui->closed_on_date = $args->closed_on_date;
lib/plan/buildEdit.php:		$of->Value = $op->notes;
lib/plan/buildEdit.php:        $gui->closed_on_date = $args->closed_on_date;
lib/plan/buildEdit.php:		$of->Value = $op->notes;
lib/plan/buildEdit.php:		$templateCfg->template = $op->template;
lib/plan/buildEdit.php:		$of->Value = $op->notes;
lib/plan/buildEdit.php:		$templateCfg->template = $op->template;
lib/plan/buildEdit.php:$gui->release_date = $args->release_date;
lib/plan/buildEdit.php:$gui->operation_descr = $op->operation_descr;
lib/plan/buildEdit.php:$gui->user_feedback = $op->user_feedback;
lib/plan/buildEdit.php:$gui->buttonCfg = $op->buttonCfg;
lib/plan/buildEdit.php:$gui->mgt_view_events = $_SESSION['currentUser']->hasRight($db,"mgt_view_events");
lib/plan/buildEdit.php:$gui->editorType = $editorCfg['type'];
lib/plan/buildEdit.php:if(trim($gui->release_date) == '')
lib/plan/buildEdit.php:    $gui->release_date = '0000-00-00';
lib/plan/buildEdit.php: * super-global hashes.
lib/plan/buildEdit.php: *   20100707 - asimon - BUGID 3406 - added source_build_id and copy_tester_assignments
lib/plan/buildEdit.php:		$args->$value = isset($request_hash[$value]) ? $request_hash[$value] : null;
lib/plan/buildEdit.php:	// BUGID 3406 - added source_build_id
lib/plan/buildEdit.php:		$args->$key = isset($request_hash[$key]) ? intval($request_hash[$key]) : $value;
lib/plan/buildEdit.php:	// BUGID 3406 - added copy_tester_assignments
lib/plan/buildEdit.php:		$args->$key = isset($request_hash[$key]) ? 1 : $value;
lib/plan/buildEdit.php:    $args->release_date = '';
lib/plan/buildEdit.php:    $args->closed_on_date = isset($request_hash['closed_on_date']) ? $request_hash['closed_on_date'] : null;
lib/plan/buildEdit.php:        $args->release_date = $release_date_Year . "-" . $release_date_Month . "-" . $release_date_Day;
lib/plan/buildEdit.php:	$args->tplan_id	= isset($session_hash['testplanID']) ? $session_hash['testplanID']: 0;
lib/plan/buildEdit.php:	$args->tplan_name = isset($session_hash['testplanName']) ? $session_hash['testplanName']: '';
lib/plan/buildEdit.php:	$args->testprojectID = $session_hash['testprojectID'];
lib/plan/buildEdit.php:	$args->testprojectName = $session_hash['testprojectName'];
lib/plan/buildEdit.php:	$args->userID = $session_hash['userID'];
lib/plan/buildEdit.php:	$binfo = $buildMgr->get_by_id($argsObj->build_id);
lib/plan/buildEdit.php:	$op->buttonCfg = new stdClass();
lib/plan/buildEdit.php:	$op->buttonCfg->name = "do_update";
lib/plan/buildEdit.php:	$op->buttonCfg->value = lang_get('btn_save');
lib/plan/buildEdit.php:	$op->notes = $binfo['notes'];
lib/plan/buildEdit.php:	$op->user_feedback = '';
lib/plan/buildEdit.php:	$argsObj->build_name = $binfo['name'];
lib/plan/buildEdit.php:	$argsObj->is_active = $binfo['active'];
lib/plan/buildEdit.php:	$argsObj->is_open = $binfo['is_open'];
lib/plan/buildEdit.php:	$argsObj->release_date = $binfo['release_date'];
lib/plan/buildEdit.php:	    $argsObj->closed_on_date = mktime(0, 0, 0, date("m")  , date("d"), date("Y"));
lib/plan/buildEdit.php:	    $datePieces = explode("-",$binfo['closed_on_date']);
lib/plan/buildEdit.php:	    $argsObj->closed_on_date = mktime(0,0,0,$datePieces[1],$datePieces[2],$datePieces[0]);
lib/plan/buildEdit.php:	$op->operation_descr=lang_get('title_build_edit') . TITLE_SEP_TYPE3 . $argsObj->build_name;
lib/plan/buildEdit.php:    $op->operation_descr = lang_get('title_build_create');
lib/plan/buildEdit.php:	$op->buttonCfg = new stdClass();
lib/plan/buildEdit.php:	$op->buttonCfg->name = "do_create";
lib/plan/buildEdit.php:	$op->buttonCfg->value = lang_get('btn_create');
lib/plan/buildEdit.php:	$op->user_feedback = '';
lib/plan/buildEdit.php:	$argsObj->is_active = 1;
lib/plan/buildEdit.php:	$argsObj->is_open = 1;
lib/plan/buildEdit.php:	$argsObj->closed_on_date = mktime(0, 0, 0, date("m")  , date("d"), date("Y"));
lib/plan/buildEdit.php:    $op->user_feedback = '';
lib/plan/buildEdit.php:    $op->operation_descr = '';
lib/plan/buildEdit.php:    $op->buttonCfg = null;
lib/plan/buildEdit.php:	$build = $buildMgr->get_by_id($argsObj->build_id);
lib/plan/buildEdit.php:	if (!$buildMgr->delete($argsObj->build_id))
lib/plan/buildEdit.php:		$op->user_feedback = lang_get("cannot_delete_build");
lib/plan/buildEdit.php:		logAuditEvent(TLS("audit_build_deleted",$argsObj->testprojectName,$argsObj->tplan_name,$build['name']),
lib/plan/buildEdit.php:		              "DELETE",$argsObj->build_id,"builds");
lib/plan/buildEdit.php:    switch($argsObj->do_action)
lib/plan/buildEdit.php:    		$tpl = is_null($templateCfg->template) ? 'buildView.tpl' : $templateCfg->template;
lib/plan/buildEdit.php:    		$tpl = is_null($templateCfg->template) ? $templateCfg->default_template : $templateCfg->template;
lib/plan/buildEdit.php:      	$enable_copy = ($argsObj->do_action == 'create' || $argsObj->do_action == 'do_create') ? 1 : 0;
lib/plan/buildEdit.php:   		$guiObj->buildSet=$tplanMgr->get_builds($argsObj->tplan_id);
lib/plan/buildEdit.php:   		$guiObj->tplan_name=$argsObj->tplan_name;
lib/plan/buildEdit.php:    	$guiObj->build_id = $argsObj->build_id;
lib/plan/buildEdit.php:    	$guiObj->build_name = $argsObj->build_name;
lib/plan/buildEdit.php:    	$guiObj->is_active = $argsObj->is_active;
lib/plan/buildEdit.php:    	$guiObj->is_open = $argsObj->is_open;
lib/plan/buildEdit.php:    	$guiObj->notes = $owebeditor->CreateHTML();
lib/plan/buildEdit.php:    	$guiObj->enable_copy = $enable_copy;
lib/plan/buildEdit.php:    	$guiObj->source_build = $html_menu;
lib/plan/buildEdit.php:    	$guiObj->copy_tester_assignments = $argsObj->copy_tester_assignments;
lib/plan/buildEdit.php:   		$smartyObj->assign('gui',$guiObj);
lib/plan/buildEdit.php:  		$smartyObj->display($templateCfg->template_dir . $tpl);
lib/plan/buildEdit.php:    20100722 - asimon - BUGID 3406 - using assignment_mgr of tplan_mgr instead of new one
lib/plan/buildEdit.php:    20100707 - asimon - BUGID 3406 - added assignment_mgr to copy assignments
lib/plan/buildEdit.php:	$op->operation_descr = '';
lib/plan/buildEdit.php:	$op->user_feedback = '';
lib/plan/buildEdit.php:	$op->template = "buildEdit.tpl";
lib/plan/buildEdit.php:	$op->notes = $argsObj->notes;
lib/plan/buildEdit.php:	$op->status_ok = false;
lib/plan/buildEdit.php:	$op->buttonCfg = null;
lib/plan/buildEdit.php:	if($check->status_ok)
lib/plan/buildEdit.php:		$buildID = $buildMgr->create($argsObj->tplan_id,$argsObj->build_name,$argsObj->notes,
lib/plan/buildEdit.php:		                             $argsObj->is_active,$argsObj->is_open,$argsObj->release_date);
lib/plan/buildEdit.php:		    if($argsObj->is_open == 1)
lib/plan/buildEdit.php:		        $targetDate=date("Y-m-d",$argsObj->closed_on_date);    
lib/plan/buildEdit.php:	        $buildMgr->setClosedOnDate($buildID,$targetDate);    
lib/plan/buildEdit.php:	        // BUGID 3406 - copy tester assignments from chosen source build
lib/plan/buildEdit.php:	        if ($argsObj->copy_tester_assignments && $argsObj->source_build_id) {
lib/plan/buildEdit.php:	        	$tplanMgr->assignment_mgr->copy_assignments($argsObj->source_build_id, $buildID, $argsObj->userID);
lib/plan/buildEdit.php:			$op->user_feedback = '';
lib/plan/buildEdit.php:			$op->notes = '';
lib/plan/buildEdit.php:			$op->template = null;
lib/plan/buildEdit.php:			$op->status_ok = true;
lib/plan/buildEdit.php:			logAuditEvent(TLS("audit_build_created",$argsObj->testprojectName,$argsObj->tplan_name,$argsObj->build_name),
lib/plan/buildEdit.php:	if(!$op->status_ok)
lib/plan/buildEdit.php:		$op->buttonCfg = new stdClass();
lib/plan/buildEdit.php:		$op->buttonCfg->name = "do_create";
lib/plan/buildEdit.php:		$op->buttonCfg->value = lang_get('btn_create');
lib/plan/buildEdit.php:		$op->user_feedback = $check->user_feedback;
lib/plan/buildEdit.php:	elseif($argsObj->copy_to_all_tplans)
lib/plan/buildEdit.php:	$op->operation_descr = '';
lib/plan/buildEdit.php:	$op->user_feedback = '';
lib/plan/buildEdit.php:	$op->template = "buildEdit.tpl";
lib/plan/buildEdit.php:	$op->notes = $argsObj->notes;
lib/plan/buildEdit.php:	$op->status_ok = false;
lib/plan/buildEdit.php:	$op->buttonCfg = null;
lib/plan/buildEdit.php:    $oldObjData = $buildMgr->get_by_id($argsObj->build_id);
lib/plan/buildEdit.php:	if($check->status_ok)
lib/plan/buildEdit.php:		if ($buildMgr->update($argsObj->build_id,$argsObj->build_name,$argsObj->notes,
lib/plan/buildEdit.php:		                      $argsObj->is_active,$argsObj->is_open,$argsObj->release_date))
lib/plan/buildEdit.php:		    if( $argsObj->closed_on_date == '')
lib/plan/buildEdit.php:	            $argsObj->closed_on_date = mktime(0, 0, 0, date("m")  , date("d"), date("Y"));
lib/plan/buildEdit.php:   		    if($argsObj->is_open == 1)
lib/plan/buildEdit.php:		        $targetDate=date("Y-m-d",$argsObj->closed_on_date);    
lib/plan/buildEdit.php:            $buildMgr->setClosedOnDate($argsObj->build_id,$targetDate);    
lib/plan/buildEdit.php:			$op->user_feedback = '';
lib/plan/buildEdit.php:			$op->notes = '';
lib/plan/buildEdit.php:			$op->template = null;
lib/plan/buildEdit.php:			$op->status_ok = true;
lib/plan/buildEdit.php:			logAuditEvent(TLS("audit_build_saved",$argsObj->testprojectName,$argsObj->tplan_name,$argsObj->build_name),
lib/plan/buildEdit.php:			              "SAVE",$argsObj->build_id,"builds");
lib/plan/buildEdit.php:	if(!$op->status_ok)
lib/plan/buildEdit.php:		$op->operation_descr = lang_get('title_build_edit') . TITLE_SEP_TYPE3 . $oldname;
lib/plan/buildEdit.php:		$op->buttonCfg = new stdClass();
lib/plan/buildEdit.php:		$op->buttonCfg->name = "do_update";
lib/plan/buildEdit.php:		$op->buttonCfg->value = lang_get('btn_save');
lib/plan/buildEdit.php:		$op->user_feedback = $check->user_feedback;
lib/plan/buildEdit.php:            - name already exists in this testplan?
lib/plan/buildEdit.php:  returns: -
lib/plan/buildEdit.php:  20100706 - franciscom - BUGID 3581		
lib/plan/buildEdit.php:	$op->user_feedback = '';
lib/plan/buildEdit.php:	$op->status_ok = 1;
lib/plan/buildEdit.php:	$buildID = ($argsObj->do_action == 'do_update') ? $argsObj->build_id : null;
lib/plan/buildEdit.php:	if( $tplanMgr->check_build_name_existence($argsObj->tplan_id,$argsObj->build_name,$buildID) )
lib/plan/buildEdit.php:	    $op->user_feedback = lang_get("warning_duplicate_build") . TITLE_SEP_TYPE3 . $argsObj->build_name;
lib/plan/buildEdit.php:	    $op->status_ok = 0;
lib/plan/buildEdit.php:	if( $op->status_ok )
lib/plan/buildEdit.php:		$datestring = 'YYYY-MM-DD';
lib/plan/buildEdit.php:		$rdate = trim($argsObj->release_date);
lib/plan/buildEdit.php:	    	$op->status_ok = 0;
lib/plan/buildEdit.php:	    	$date_pieces = explode('-',$rdate);
lib/plan/buildEdit.php:	    		$op->status_ok = $status_ok ? 1 : 0;	
lib/plan/buildEdit.php:	    if( $op->status_ok == 0 )
lib/plan/buildEdit.php:	    	$op->user_feedback = lang_get("invalid_release_date");
lib/plan/buildEdit.php:            - name already exists in this testplan?
lib/plan/buildEdit.php:  returns: -
lib/plan/buildEdit.php:    $tprojectMgr = new testproject($tplanMgr->db);
lib/plan/buildEdit.php:    $filters = array('tplan2exclude' => $argsObj->tplan_id);
lib/plan/buildEdit.php:    $tplanset = $tprojectMgr->get_all_testplans($argsObj->testprojectID,$filters);
lib/plan/buildEdit.php:            if(!$tplanMgr->check_build_name_existence($id,$argsObj->build_name))
lib/plan/buildEdit.php:                $buildMgr->create($id,$argsObj->build_name,$argsObj->notes,
lib/plan/buildEdit.php:                                  $argsObj->is_active,$argsObj->is_open);
lib/plan/buildEdit.php:	return $user->hasRight($db,'testplan_create_build');
lib/plan/buildEdit.php: * 20100820 - franciscom - refactoring to remove unneeded support/temp variables and 
lib/plan/buildEdit.php:	$htmlMenu['items'] = $testplan_mgr->get_builds_for_html_options($argsObj->tplan_id);
lib/plan/buildEdit.php:			$count = $testplan_mgr->assignment_mgr->get_count_of_assignments_for_build_id($key);
lib/plan/buildEdit.php:		if( !$argsObj->source_build_id )
lib/execute/bugAdd.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/execute/bugAdd.php:$gui->interface_bugs = config_get('interface_bugs');
lib/execute/bugAdd.php:if( $gui->interface_bugs != 'NO' )
lib/execute/bugAdd.php:if($args->bug_id != "")
lib/execute/bugAdd.php:	if ($g_bugInterface->checkBugID($args->bug_id))
lib/execute/bugAdd.php:		if ($g_bugInterface->checkBugID_existence($args->bug_id))
lib/execute/bugAdd.php:			if (write_execution_bug($db,$args->exec_id, $args->bug_id))
lib/execute/bugAdd.php:				logAuditEvent(TLS("audit_executionbug_added",$args->bug_id),"CREATE",$args->exec_id,"executions");
lib/execute/bugAdd.php:$smarty->assign('bugIDMaxLength',$g_bugInterface->getBugIDMaxLength());
lib/execute/bugAdd.php:$smarty->assign('bts_url', $g_bugInterface->getEnterBugURL());
lib/execute/bugAdd.php:$smarty->assign('msg',$msg);
lib/execute/bugAdd.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/execute/bugAdd.php:		             "bug_id" => array("POST",tlInputParameter::STRING_N,0,$bugInterface->getBugIDMaxLength()));
lib/execute/bugAdd.php:	if ($args->exec_id)
lib/execute/bugAdd.php:		$_SESSION['bugAdd_execID'] = $args->exec_id;
lib/execute/bugAdd.php:		$args->exec_id = isset($_SESSION['bugAdd_execID']) ? $_SESSION['bugAdd_execID'] : 0;
lib/execute/bugAdd.php:		$hasRights = $user->hasRight($db,"testplan_execute");
lib/execute/getExecNotes.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/execute/getExecNotes.php: * 20100312 - BUGID 3269 - asimon
lib/execute/getExecNotes.php: * 20100129 - BUGID 3113 - franciscom
lib/execute/getExecNotes.php: * 20090530: franciscom - try to improve usability in order to allow edit online
lib/execute/getExecNotes.php:$map = get_execution($db,$args->exec_id);
lib/execute/getExecNotes.php://    $notesContent=createExecNotesWebEditor($args->exec_id,$_SESSION['basehref'],$webeditorCfg,$map[0]['notes']);
lib/execute/getExecNotes.php:$readonly = $args->readonly > 0 ? 'readonly="readonly"' : ''; 
lib/execute/getExecNotes.php:$smarty->assign('notes',$notesContent);
lib/execute/getExecNotes.php:$smarty->assign('webeditorType',$webeditorCfg['type']);
lib/execute/getExecNotes.php:$smarty->assign('readonly',$readonly);
lib/execute/getExecNotes.php:$smarty->assign('editor_instance','exec_notes_' . $args->exec_id);
lib/execute/getExecNotes.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/execute/getExecNotes.php:    $of->Value = $content;
lib/execute/getExecNotes.php:    $editor=$of->CreateHTML(10,60);         
lib/execute/execNavigator.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/execute/execNavigator.php: * @copyright 	2007-2009, TestLink community
lib/execute/execNavigator.php: * 20100628 - asimon - removal of constants from filter control class
lib/execute/execNavigator.php: * 20100624 - asimon - CVS merge (experimental branch to HEAD)
lib/execute/execNavigator.php: * 20100622 - asimon - huge refactoring for new filter design,
lib/execute/execNavigator.php: * 20100609 - eloff - Prevent selection of invalid platform
lib/execute/execNavigator.php: * 20100428 - asimon - BUGID 3301 and related issues - changed name or case
lib/execute/execNavigator.php: * 20100417 - franciscom - BUGID 3380 execution type filter
lib/execute/execNavigator.php: * 20100409 - eloff - BUGID 3050 - remember selected platform and build in session
lib/execute/execNavigator.php: * 20100222 - asimon - fixes in initializeGui() for testplan select box when there are no builds
lib/execute/execNavigator.php: * 20100217 - asimon - added check for open builds on initBuildInfo()
lib/execute/execNavigator.php: * 20100202 - asimon - changed filtering, BUGID 2455, BUGID 3026
lib/execute/execNavigator.php: * 20090828 - franciscom - added contribution platform feature
lib/execute/execNavigator.php: * 20090828 - franciscom - BUGID 2296 - filter by Last Exec Result on Any of previous builds
lib/execute/execNavigator.php: * 20081227 - franciscom - BUGID 1913 - filter by same results on ALL previous builds
lib/execute/execNavigator.php: * 20081220 - franciscom - advanced/simple filters
lib/execute/execNavigator.php: * 20081217 - franciscom - only users that have effective role with right
lib/execute/execNavigator.php: * 20080517 - franciscom - fixed testcase filter bug
lib/execute/execNavigator.php: * 20080428 - franciscom - keyword filter can be done on multiple keywords
lib/execute/execNavigator.php: * 20080224 - franciscom - refactoring
lib/execute/execNavigator.php: * 20080224 - franciscom - BUGID 1056
lib/execute/execNavigator.php:$control->build_tree_menu($gui);
lib/execute/execNavigator.php:$smarty->assign('gui',$gui);
lib/execute/execNavigator.php:$smarty->assign('control', $control);
lib/execute/execNavigator.php:$smarty->assign('menuUrl',$gui->menuUrl);
lib/execute/execNavigator.php:$smarty->assign('args', $gui->args);
lib/execute/execNavigator.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/execute/execNavigator.php:	$gui->menuUrl = 'lib/execute/execSetResults.php';
lib/execute/execNavigator.php:	$gui->args = $control->get_argument_string();
lib/execute/execNavigator.php:	$gui->src_workframe = $control->args->basehref . $gui->menuUrl .
lib/execute/execNavigator.php:	                "?edit=testproject&id={$control->args->testproject_id}" . $gui->args;
lib/execute/execNavigator.php://$exec_cfield_mgr = new exec_cfield_mgr($db,$args->tproject_id);
lib/execute/execNavigator.php://$platform_mgr = new tlPlatform($db, $args->tproject_id);
lib/execute/execNavigator.php://$gui->tree = $treeMenu->menustring;
lib/execute/execNavigator.php://if( !is_null($treeMenu->rootnode) )
lib/execute/execNavigator.php://    $gui->ajaxTree = new stdClass();
lib/execute/execNavigator.php://    $gui->ajaxTree->loader = '';
lib/execute/execNavigator.php://    $gui->ajaxTree->root_node = new stdClass();
lib/execute/execNavigator.php://    $gui->ajaxTree->root_node = $treeMenu->rootnode;
lib/execute/execNavigator.php://    $gui->ajaxTree->children = $treeMenu->menustring;
lib/execute/execNavigator.php://    $gui->ajaxTree->cookiePrefix = 'exec_tplan_id_' . $args->tplan_id;
lib/execute/execNavigator.php://$smarty->assign('gui',$gui);
lib/execute/execNavigator.php://$smarty->assign('menuUrl',$gui->menuUrl);
lib/execute/execNavigator.php://$smarty->assign('args',$gui->args);
lib/execute/execNavigator.php://$smarty->assign('additionalArgs',$gui->additionalArgs);
lib/execute/execNavigator.php://$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/execute/execNavigator.php://    $args->tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
lib/execute/execNavigator.php://    $args->tproject_name = isset($_SESSION['testprojectName']) ? $_SESSION['testprojectName'] : '';
lib/execute/execNavigator.php://    $args->user = $_SESSION['currentUser'];
lib/execute/execNavigator.php://    $args->tplan_id = isset($_SESSION['testplanID']) ? intval($_SESSION['testplanID']) : 0;
lib/execute/execNavigator.php://    $args->tplan_name = isset($_SESSION['testplanName']) ? $_SESSION['testplanName'] : '';
lib/execute/execNavigator.php://    if($args->tplan_id != 0)
lib/execute/execNavigator.php://		    $args->tplan_id = isset($_REQUEST['tplan_id']) ? $_REQUEST['tplan_id'] : $_SESSION['testplanID'];
lib/execute/execNavigator.php://		    $tplan_info = $tplanMgr->get_by_id($args->tplan_id);
lib/execute/execNavigator.php://		    $args->tplan_name = $tplan_info['name'];
lib/execute/execNavigator.php://    if($args->tplan_id != $_SESSION['testplanID']) {
lib/execute/execNavigator.php://    	$arrPlans = $currentUser->getAccessibleTestPlans($dbHandler,$args->tproject_id);
lib/execute/execNavigator.php://			if ($plan['id'] == $args->tplan_id) {
lib/execute/execNavigator.php://	// 20100524 - can not find where is used
lib/execute/execNavigator.php://    // $args->treeColored = (isset($_REQUEST['colored']) && ($_REQUEST['colored'] == 'result')) ? 'selected="selected"' : null;
lib/execute/execNavigator.php://    $args->tcase_id = isset($_REQUEST['tcase_id']) ? intval($_REQUEST['tcase_id']) : null;
lib/execute/execNavigator.php://    $args->$key = isset($_REQUEST[$key]) ? $_REQUEST[$key] : 0;
lib/execute/execNavigator.php://    $args->$key = isset($_REQUEST[$key]) ? $_REQUEST[$key] : 0;
lib/execute/execNavigator.php://    $args->keywordsFilterType = isset($_REQUEST['keywordsFilterType']) ? $_REQUEST['keywordsFilterType'] : 'OR';
lib/execute/execNavigator.php://    $args->doUpdateTree = isset($_REQUEST['doUpdateTree']) ? 1 : 0;
lib/execute/execNavigator.php://    // 20081220 - franciscom
lib/execute/execNavigator.php://    $args->$key = isset($_REQUEST[$key]) ? (array)$_REQUEST[$key] : null;
lib/execute/execNavigator.php://    if( !is_null($args->$key) )
lib/execute/execNavigator.php://        if( in_array($cfgObj->results['status_code']['all'], $args->$key) )
lib/execute/execNavigator.php://            $args->$key = array($cfgObj->results['status_code']['all']);
lib/execute/execNavigator.php://        else if( !$args->panelFiltersAdvancedFilterMode && count($args->$key) > 0)
lib/execute/execNavigator.php://            $args->$key=array($args->$key[0]);
lib/execute/execNavigator.php://    $args->filter_method_selected = isset($_REQUEST['filter_method']) ?
lib/execute/execNavigator.php://    switch($cfgObj->exec->user_filter_default)
lib/execute/execNavigator.php://        	$user_filter_default = $args->user->dbID;
lib/execute/execNavigator.php://    $args->filter_assigned_to = isset($_REQUEST['filter_assigned_to']) ? $_REQUEST['filter_assigned_to'] : $user_filter_default;
lib/execute/execNavigator.php://    if( !is_null($args->filter_assigned_to) )
lib/execute/execNavigator.php://        $args->filter_assigned_to = (array)$args->filter_assigned_to;
lib/execute/execNavigator.php://        if(in_array(TL_USER_ANYBODY, $args->filter_assigned_to))
lib/execute/execNavigator.php://            $args->filter_assigned_to = array(TL_USER_ANYBODY);  
lib/execute/execNavigator.php://        else if(in_array(TL_USER_NOBODY, $args->filter_assigned_to))
lib/execute/execNavigator.php://            $args->filter_assigned_to = array(TL_USER_NOBODY);    
lib/execute/execNavigator.php://        else if(!$args->panelFiltersAdvancedFilterMode && count($args->filter_assigned_to) > 0)
lib/execute/execNavigator.php://            $args->filter_assigned_to=array($args->filter_assigned_to[0]);
lib/execute/execNavigator.php://    $args->urgencyImportance = isset($_REQUEST['urgencyImportance']) ? intval($_REQUEST['urgencyImportance']) : null;
lib/execute/execNavigator.php://    if ($args->urgencyImportance == 0)
lib/execute/execNavigator.php://    	$args->urgencyImportance = null;
lib/execute/execNavigator.php://	$args->optPlatformSelected = isset($_REQUEST['platform_id']) ? $_REQUEST['platform_id'] : null;
lib/execute/execNavigator.php://	if (is_null($args->optPlatformSelected) && isset($_SESSION['platformID']))
lib/execute/execNavigator.php://		$args->optPlatformSelected = intval($_SESSION['platformID']);
lib/execute/execNavigator.php://	$platforms = $tplanMgr->getPlatforms($args->tplan_id,
lib/execute/execNavigator.php://	if (!array_key_exists($args->optPlatformSelected, $platforms))
lib/execute/execNavigator.php://		$args->optPlatformSelected = null;
lib/execute/execNavigator.php://	// BUGID 3301 - added isset() checks in if statements for undefined errors in log 
lib/execute/execNavigator.php://	// BUGID 3350 - inverted logic, working correctly now
lib/execute/execNavigator.php://	if (!isset($_SESSION['platformID']) || $args->optPlatformSelected != $_SESSION['platformID'])
lib/execute/execNavigator.php://		$_SESSION['platformID'] = $args->optPlatformSelected;
lib/execute/execNavigator.php://	$args->optBuildSelected = isset($_REQUEST['build_id']) ? $_REQUEST['build_id'] : -1;
lib/execute/execNavigator.php://	if ($args->optBuildSelected == -1 && isset($_SESSION['buildID']))
lib/execute/execNavigator.php://		$args->optBuildSelected = intval($_SESSION['buildID']);
lib/execute/execNavigator.php://	if (!isset($_SESSION['buildID']) || $args->optBuildSelected != $_SESSION['buildID'])
lib/execute/execNavigator.php://		$_SESSION['buildID'] = $args->optBuildSelected;
lib/execute/execNavigator.php://	$args->optFilterBuildSelected = isset($_REQUEST['filter_build_id']) ? $_REQUEST['filter_build_id'] : -1;
lib/execute/execNavigator.php://	$args->include_unassigned = isset($_REQUEST['include_unassigned']) ? $_REQUEST['include_unassigned'] : 0;
lib/execute/execNavigator.php://    $args->$key = isset($_REQUEST[$key]) ? intval($_REQUEST[$key]) : 0;
lib/execute/execNavigator.php://    // BUGID 3301 - refresh on action logic borrowed from listTestCases.php
lib/execute/execNavigator.php://    $args->tcspec_refresh_on_action = isset($_REQUEST['tcspec_refresh_on_action']) ? 
lib/execute/execNavigator.php://    $args->hidden_tcspec_refresh_on_action = isset($_REQUEST['hidden_tcspec_refresh_on_action']) ? 
lib/execute/execNavigator.php://    $args->do_refresh = "no";
lib/execute/execNavigator.php://    if (!is_null($args->hidden_tcspec_refresh_on_action))
lib/execute/execNavigator.php://    	if (!is_null($args->tcspec_refresh_on_action))
lib/execute/execNavigator.php://    		$args->do_refresh = $args->tcspec_refresh_on_action ? "yes" : "no";
lib/execute/execNavigator.php://    	$args->do_refresh = ($_SESSION["tcspec_refresh_on_action"] == "yes") ? "yes" : "no";
lib/execute/execNavigator.php://    	$args->do_refresh = ($cfgObj->spec->automatic_tree_refresh > 0) ? "yes": "no";
lib/execute/execNavigator.php://	$_SESSION['tcspec_refresh_on_action'] = $args->do_refresh;
lib/execute/execNavigator.php:// * 20090815 - franciscom - added platform feature (contribution)
lib/execute/execNavigator.php://    $settings = '&build_id=' . $argsObj->optBuildSelected .
lib/execute/execNavigator.php://                '&platform_id=' . $argsObj->optPlatformSelected .
lib/execute/execNavigator.php://  	            '&include_unassigned=' . $argsObj->include_unassigned;
lib/execute/execNavigator.php://    if(is_array($argsObj->panelFiltersKeyword) && !in_array(0, $argsObj->panelFiltersKeyword))
lib/execute/execNavigator.php://       $kl = implode(',',$argsObj->panelFiltersKeyword);
lib/execute/execNavigator.php://    else if(!is_array($argsObj->panelFiltersKeyword) && $argsObj->panelFiltersKeyword > 0)
lib/execute/execNavigator.php://    	  $settings .= '&keyword_id='.$argsObj->panelFiltersKeyword;
lib/execute/execNavigator.php://    $settings .= '&keywordsFilterType='.$argsObj->keywordsFilterType;
lib/execute/execNavigator.php://    if($argsObj->tcase_id != 0)
lib/execute/execNavigator.php://        $settings .= '&tc_id='.$argsObj->tcase_id;
lib/execute/execNavigator.php://    if ($argsObj->urgencyImportance > 0)
lib/execute/execNavigator.php://    	$settings .= "&urgencyImportance={$argsObj->urgencyImportance}";
lib/execute/execNavigator.php://    if( !is_null($argsObj->filter_assigned_to) &&
lib/execute/execNavigator.php://        !in_array(TL_USER_ANYBODY,$argsObj->filter_assigned_to) )
lib/execute/execNavigator.php://    	  $settings .= '&filter_assigned_to='. serialize($argsObj->filter_assigned_to);
lib/execute/execNavigator.php://    if( !is_null($argsObj->panelFiltersExecStatus) && 
lib/execute/execNavigator.php://        !in_array($cfgObj->results['status_code']['all'],$argsObj->panelFiltersExecStatus) )
lib/execute/execNavigator.php://        $settings .= '&filter_status='. serialize($argsObj->panelFiltersExecStatus);
lib/execute/execNavigator.php://    $cfg->gui = config_get('gui');
lib/execute/execNavigator.php://    $cfg->exec = config_get('exec_cfg');
lib/execute/execNavigator.php://    $cfg->results = config_get('results');
lib/execute/execNavigator.php://    $cfg->spec = config_get('spec_cfg');
lib/execute/execNavigator.php://    $guiObj->disable_filter_assigned_to = false;
lib/execute/execNavigator.php://    $guiObj->assigned_to_user = '';
lib/execute/execNavigator.php://    $effective_role = $argsObj->user->getEffectiveRole($dbHandler,$argsObj->tproject_id,$argsObj->tplan_id);
lib/execute/execNavigator.php://    // 20081217 - franciscom
lib/execute/execNavigator.php://    // 1- Check again a set of configurable roles
lib/execute/execNavigator.php://    // 2- Create a set of execute rights, one that allows limited execution that is affected by
lib/execute/execNavigator.php://    //    exec->view_mode and exec->exec_mode, and other that is immune.
lib/execute/execNavigator.php://    // 3- on execSetResults.php has been done 
lib/execute/execNavigator.php://    // 4- we can support option 1 and 2, or 1 and 3
lib/execute/execNavigator.php://    $simple_tester_roles = array_flip($cfgObj->exec->simple_tester_roles);
lib/execute/execNavigator.php:// 	$can_execute = $effective_role->hasRight('testplan_execute');
lib/execute/execNavigator.php://	$can_manage = $effective_role->hasRight('testplan_planning');
lib/execute/execNavigator.php://    $use_exec_cfg = isset($simple_tester_roles[$effective_role->dbID]) || ($can_execute && !$can_manage);
lib/execute/execNavigator.php://    $exec_view_mode = $use_exec_cfg ? $cfgObj->exec->view_mode->tester : 'all';
lib/execute/execNavigator.php:// 		    $guiObj->filterAssignedTo = is_null($argsObj->filter_assigned_to) ? null : $argsObj->filter_assigned_to;
lib/execute/execNavigator.php://    		$guiObj->disable_filter_assigned_to = true;
lib/execute/execNavigator.php://    		$argsObj->filter_assigned_to = (array)$argsObj->user->dbID;
lib/execute/execNavigator.php://            $guiObj->filterAssignedTo = $argsObj->filter_assigned_to;
lib/execute/execNavigator.php://    		$guiObj->assigned_to_user = $argsObj->user->getDisplayName();
lib/execute/execNavigator.php:// * @return array $htmlSelect HTML-Select for build to execute selection
lib/execute/execNavigator.php:// * 20100217 - asimon - added also check for open status of builds,
lib/execute/execNavigator.php://    $htmlSelect['items'] = $tplanMgr->get_builds_for_html_options($argsObj->tplan_id,
lib/execute/execNavigator.php://    $maxBuildID = $tplanMgr->get_max_build_id($argsObj->tplan_id,
lib/execute/execNavigator.php://    $argsObj->optBuildSelected = $argsObj->optBuildSelected > 0 ? $argsObj->optBuildSelected : $maxBuildID;
lib/execute/execNavigator.php://    if (!$argsObj->optBuildSelected && sizeof($htmlSelect['items']))
lib/execute/execNavigator.php://    	$argsObj->optBuildSelected = key($htmlSelect['items']);
lib/execute/execNavigator.php://    $htmlSelect['selected'] = $argsObj->optBuildSelected;
lib/execute/execNavigator.php:// * @return initialize HTML-Select for filter methods
lib/execute/execNavigator.php://    $htmlSelect['items'] = $tplanMgr->get_builds_for_html_options($argsObj->tplan_id,
lib/execute/execNavigator.php://    $maxBuildID = $tplanMgr->get_max_build_id($argsObj->tplan_id, testplan::GET_ACTIVE_BUILD);
lib/execute/execNavigator.php://    $argsObj->optFilterBuildSelected = $argsObj->optFilterBuildSelected > 0 ? $argsObj->optFilterBuildSelected : $maxBuildID;
lib/execute/execNavigator.php://    if (!$argsObj->optFilterBuildSelected && sizeof($htmlSelect['items']))
lib/execute/execNavigator.php://    	$argsObj->optFilterBuildSelected = key($htmlSelect['items']);
lib/execute/execNavigator.php://    $htmlSelect['selected'] = $argsObj->optFilterBuildSelected;
lib/execute/execNavigator.php://    $htmlSelect['items'] = $platformMgr->getLinkedToTestplanAsMap($argsObj->tplan_id);
lib/execute/execNavigator.php://    	if (is_null($argsObj->optPlatformSelected)) 
lib/execute/execNavigator.php://    	    $argsObj->optPlatformSelected = key($htmlSelect['items']);
lib/execute/execNavigator.php://    	$htmlSelect['selected'] = $argsObj->optPlatformSelected;
lib/execute/execNavigator.php://    $filters->keyword = buildKeywordsFilter($argsObj->panelFiltersKeyword,$guiObj);
lib/execute/execNavigator.php://    $filters->keywordsFilterType = $argsObj->keywordsFilterType;
lib/execute/execNavigator.php://    $filters->include_unassigned = $guiObj->includeUnassigned;
lib/execute/execNavigator.php://    $filters->tc_id = $argsObj->tcase_id;	
lib/execute/execNavigator.php://    $filters->build_id = $argsObj->optBuildSelected;
lib/execute/execNavigator.php://    $filters->filter_build_id = $argsObj->optFilterBuildSelected;
lib/execute/execNavigator.php://    $filters->exec_type = $argsObj->panelFiltersExecType > 0 ? $argsObj->panelFiltersExecType : null;
lib/execute/execNavigator.php://    $filters->method = $argsObj->filter_method_selected;
lib/execute/execNavigator.php://    $filters->assignedTo = $guiObj->filterAssignedTo;
lib/execute/execNavigator.php://    if( !is_null($filters->assignedTo) )
lib/execute/execNavigator.php://        if( in_array(TL_USER_ANYBODY, $guiObj->filterAssignedTo) )
lib/execute/execNavigator.php://            $filters->assignedTo = null;
lib/execute/execNavigator.php://            $dummy = array_flip($guiObj->filterAssignedTo);
lib/execute/execNavigator.php://            $filters->assignedTo = $dummy;
lib/execute/execNavigator.php://    $filters->filter_status = null;
lib/execute/execNavigator.php://    if( !is_null($argsObj->panelFiltersExecStatus) )
lib/execute/execNavigator.php://        if( !in_array($cfgObj->results['status_code']['all'], $argsObj->panelFiltersExecStatus) )
lib/execute/execNavigator.php://            $dummy = array_flip($argsObj->panelFiltersExecStatus);
lib/execute/execNavigator.php://            $filters->filter_status = $dummy;
lib/execute/execNavigator.php://    $filters->hide_testcases = false;
lib/execute/execNavigator.php://    $filters->show_testsuite_contents = $cfgObj->exec->show_testsuite_contents;
lib/execute/execNavigator.php://    $filters->urgencyImportance = $argsObj->urgencyImportance;
lib/execute/execNavigator.php://    $filters->platform_id = $argsObj->optPlatformSelected;
lib/execute/execNavigator.php://    $filters->cf_hash = $exec_cfield_mgr->get_set_values();
lib/execute/execNavigator.php://    $guiObj->args = initializeGetArguments($argsObj,$cfgObj,$filters->cf_hash);
lib/execute/execNavigator.php://    $additionalInfo->useCounters = $cfgObj->exec->enable_tree_testcase_counters;
lib/execute/execNavigator.php://    $additionalInfo->useColours = new stdClass();
lib/execute/execNavigator.php://    $additionalInfo->useColours->testcases = $cfgObj->exec->enable_tree_testcases_colouring;
lib/execute/execNavigator.php://    $additionalInfo->useColours->counters = $cfgObj->exec->enable_tree_counters_colouring;
lib/execute/execNavigator.php://    if($argsObj->doUpdateTree)
lib/execute/execNavigator.php://	     $guiObj->src_workframe = $_SESSION['basehref']. $guiObj->menuUrl . 
lib/execute/execNavigator.php://	                              "?level=testproject&id={$argsObj->tproject_id}" . $guiObj->args;
lib/execute/execNavigator.php://    $guiObj->additionalArgs = '';   
lib/execute/execNavigator.php://    list($treeMenu, $guiObj->additionalArgs) = generateExecTree($dbHandler,$guiObj->menuUrl,
lib/execute/execNavigator.php://                                                                $argsObj->tproject_id,$argsObj->tproject_name,
lib/execute/execNavigator.php://                                                                $argsObj->tplan_id,$argsObj->tplan_name,
lib/execute/execNavigator.php://  rev: 20080429 - franciscom
lib/execute/execNavigator.php://    $gui->tcSpecRefreshOnAction = $argsObj->do_refresh;
lib/execute/execNavigator.php://    $gui->design_time_cfields = $exec_cfield_mgr->html_table_of_custom_field_inputs(30);
lib/execute/execNavigator.php://    $gui->menuUrl = 'lib/execute/execSetResults.php';
lib/execute/execNavigator.php://    $gui->src_workframe = null;    
lib/execute/execNavigator.php://    $gui->getArguments = null;
lib/execute/execNavigator.php://    $initValues['keywords'] = "testplan,{$argsObj->tplan_id}";
lib/execute/execNavigator.php://    $gui->controlPanel = new tlControlPanel($dbHandler,$argsObj,$initValues);
lib/execute/execNavigator.php://    // $gui->treeColored = $argsObj->treeColored;
lib/execute/execNavigator.php://    $tplans = $_SESSION['currentUser']->getAccessibleTestPlans($dbHandler,$argsObj->tproject_id);
lib/execute/execNavigator.php://    $gui->mapTPlans = array();
lib/execute/execNavigator.php://    	$items = $tplanMgr->get_builds($value['id'],
lib/execute/execNavigator.php://    		$gui->mapTPlans[$value['id']] = $value['name'];
lib/execute/execNavigator.php://    $gui->tPlanID = $argsObj->tplan_id;
lib/execute/execNavigator.php://    $gui->tPlanName = $argsObj->tplan_name;
lib/execute/execNavigator.php://    $gui->includeUnassigned = $argsObj->include_unassigned;
lib/execute/execNavigator.php://    $gui->urgencyImportance = $argsObj->urgencyImportance;
lib/execute/execNavigator.php://    $gui->urgencyImportanceSelectable = TRUE; // TODO should this depend on project settings?
lib/execute/execNavigator.php://    $gui->optBuild = initBuildInfo($dbHandler,$argsObj,$tplanMgr);
lib/execute/execNavigator.php://    $gui->optFilterBuild = initFilterBuildInfo($dbHandler,$argsObj,$tplanMgr);
lib/execute/execNavigator.php://    $gui->optPlatform = initPlatformInfo($dbHandler,$argsObj,$platformMgr);
lib/execute/execNavigator.php://    $gui->buildCount = count($gui->optBuild['items']);
lib/execute/execNavigator.php://    $gui->filterBuildCount = count($gui->optFilterBuild['items']);
lib/execute/execNavigator.php://    // 20090517 - francisco.mancardi@gruppotesi.com
lib/execute/execNavigator.php://	// BUGID 3301: $gui->users --> $gui->testers
lib/execute/execNavigator.php://    $gui->testers = getTestersForHtmlOptions($dbHandler,$argsObj->tplan_id,$argsObj->tproject_id,
lib/execute/execNavigator.php://	                                       $users,array(TL_USER_ANYBODY => $gui->controlPanel->strOption['any'],
lib/execute/execNavigator.php://	                                       TL_USER_NOBODY => $gui->controlPanel->strOption['none'],
lib/execute/execNavigator.php://	                                       TL_USER_SOMEBODY => $gui->controlPanel->strOption['somebody']),'any' );
lib/execute/execNavigator.php://    $gui->tcase_id=intval($argsObj->tcase_id) > 0 ? $argsObj->tcase_id : '';
lib/execute/execNavigator.php://    $gui->optResult=createResultsMenu();
lib/execute/execNavigator.php://    $gui->optResult[$cfgObj->results['status_code']['all']] = $gui->controlPanel->strOption['any'];
lib/execute/execNavigator.php://    $gui->filterMethods = createExecutionFilterMethodMenu();
lib/execute/execNavigator.php://	$gui->optFilterMethodSelected = $argsObj->filter_method_selected;
lib/execute/execNavigator.php://	$gui->filterMethodSpecificBuild = $filter_cfg['status_code']['specific_build'];
lib/execute/execNavigator.php://	$gui->filterMethodCurrentBuild = $filter_cfg['status_code']['current_build'];
lib/execute/execNavigator.php://    // $gui->advancedFilterMode=$argsObj->advancedFilterMode;
lib/execute/execNavigator.php://    if($gui->controlPanel->advancedFilterMode)
lib/execute/execNavigator.php://   	$gui->statusFilterItemQty = $qty;   
lib/execute/execNavigator.php://    $gui->assigneeFilterItemQty = $qty;
lib/execute/execNavigator.php://    $gui->toggleFilterModeLabel=lang_get($label);
lib/execute/execSetResults.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/execute/execSetResults.php: *	20100821 - franciscom - code layout refactoring
lib/execute/execSetResults.php: *  20100812 - asimon - BUGID 3672
lib/execute/execSetResults.php: *  20100709 - asimon - BUGID 3590, BUGID 3574: build_id set to 0 as default instead of null
lib/execute/execSetResults.php: *  20100628 - asimon - removal of constants from filter control class
lib/execute/execSetResults.php: *  20100625 - asimon - added parameters $bugInterfaceOn, $bugInterface to exec_additional_info()
lib/execute/execSetResults.php: *  20100624 - asimon - CVS merge (experimental branch to HEAD)
lib/execute/execSetResults.php: *  20100624 - asimon - refactoring for new filters
lib/execute/execSetResults.php: *	20100527 - franciscom - BUGID 3479: Bulk Execution - Custom Fields Bulk Assignment
lib/execute/execSetResults.php: *  20100527 - Julian - platform description is now shown/hidden according to setting on config
lib/execute/execSetResults.php: *	20100520 - franciscom - BUGID 3478  Testcase ID not updated when using save and move next
lib/execute/execSetResults.php: *  20100428 - asimon - BUGID 3301 and related, added logic to refresh tree after tc execution
lib/execute/execSetResults.php: *  20100313 - franciscom - BUGID 3276
lib/execute/execSetResults.php: *  20100204 - asimon - BUGID 2455 & 3026, little changes for filtering
lib/execute/execSetResults.php: *  20100121 - franciscom - missing platform feature refactoring
lib/execute/execSetResults.php: *	20091205 - franciscom - BUGID 0002469: CFG-Parameters to show notes/details on test-execution
lib/execute/execSetResults.php: *  20091111 - franciscom - BUGID 2938 - Feature: Save and Go to next test case in test suite.
lib/execute/execSetResults.php: *  20090922 - franciscom - added contribution idea, when using bulk operation
lib/execute/execSetResults.php: *	20090913 - franciscom - fixed bug on filter_status initialization
lib/execute/execSetResults.php: *	20090815 - franciscom - platform feature	
lib/execute/execSetResults.php: *  20090808 - franciscom - gen_spec_view call refactoring
lib/execute/execSetResults.php: *  20090526 - franciscom - now custom fields for testplan_design are managed
lib/execute/execSetResults.php: *  20090419 - franciscom - BUGID 2364 - added management of refreshTree
lib/execute/execSetResults.php: *  20090409 - amkhullar - updated code not written properly.
lib/execute/execSetResults.php: *  20090330 - franciscom - fixed bug on test plan custom field get.
lib/execute/execSetResults.php: *  20090325 - amkhullar - BUGID 2267
lib/execute/execSetResults.php: *  20090210 - amkhullar - BUGID 2068
lib/execute/execSetResults.php: *  20080827 - franciscom - BUGID 1692
lib/execute/execSetResults.php: *  20080811 - franciscom - BUGID 1650 (REQ)
lib/execute/execSetResults.php: *  20080104 - franciscom - REQ 1232 - web editor on execution notes
lib/execute/execSetResults.php:require_once(require_web_editor($cfg->editorCfg['type']));
lib/execute/execSetResults.php:if($cfg->bts_type != 'NO')
lib/execute/execSetResults.php:$exec_cfield_mgr = new exec_cfield_mgr($db,$args->tproject_id);
lib/execute/execSetResults.php:$_SESSION['history_on'] = $gui->history_on;
lib/execute/execSetResults.php:$do_show_instructions = ($args->level == "" || $args->level == 'testproject') ? 1 : 0;
lib/execute/execSetResults.php:// ---------------------------------------------------------
lib/execute/execSetResults.php:if($args->doExec == 1)
lib/execute/execSetResults.php:	if(!is_null($args->tc_versions) && count($args->tc_versions))
lib/execute/execSetResults.php:		$status_and_notes=do_remote_execution($db,$args->tc_versions);
lib/execute/execSetResults.php:// -----------------------------------------------------------
lib/execute/execSetResults.php:// When nullify filter_status - 20080504 - DO NOT REMOVE -
lib/execute/execSetResults.php:// 20080224 - franciscom - BUGID 1056
lib/execute/execSetResults.php:// 20070306 - franciscom - BUGID 705
lib/execute/execSetResults.php:// 20070914 - jbarchibald - added $cf_selected parameter
lib/execute/execSetResults.php:// 20081221 - franciscom                              
lib/execute/execSetResults.php:				 'include_unassigned' => $args->include_unassigned,
lib/execute/execSetResults.php:                 'user_assignments_per_build' => $args->build_id);
lib/execute/execSetResults.php:if(is_null($args->filter_status) || in_array($cfg->tc_status['not_run'],$args->filter_status))
lib/execute/execSetResults.php:$filters = array('tcase_id' => $args->tc_id,  'keyword_id' => $args->keyword_id,
lib/execute/execSetResults.php:                 'assigned_to' => $args->filter_assigned_to, 'exec_status' => $args->filter_status,
lib/execute/execSetResults.php:                 'build_id' => $args->build_id, 'cf_hash' => $args->cf_selected,
lib/execute/execSetResults.php:                 'platform_id' => $args->platform_id);
lib/execute/execSetResults.php:$linked_tcversions = $tplan_mgr->get_linked_tcversions($args->tplan_id,$filters,$options);
lib/execute/execSetResults.php:    if($args->level == 'testcase')
lib/execute/execSetResults.php:    	// Warning!!! - $gui is passed by reference to be updated inside function
lib/execute/execSetResults.php:    $gui->map_last_exec = getLastExecution($db,$tcase_id,$tcversion_id,$gui,$args,$tcase_mgr);
lib/execute/execSetResults.php:    // --------------------------------------------------------------------------------------------
lib/execute/execSetResults.php:    if ($args->save_results || $args->do_bulk_save || $args->save_and_next)
lib/execute/execSetResults.php:    	$args->save_results = $args->save_and_next ? $args->save_and_next : $args->save_results;
lib/execute/execSetResults.php:    	$_REQUEST['save_results'] = $args->save_results;
lib/execute/execSetResults.php:    	$submitResult = write_execution($db,$args,$_REQUEST,$gui->map_last_exec);
lib/execute/execSetResults.php:        // Need to re-read to update test case status
lib/execute/execSetResults.php:        if ($args->save_and_next) 
lib/execute/execSetResults.php:			$nextItem = $tplan_mgr->getTestCaseNextSibling($args->tplan_id,$tcversion_id,$args->platform_id);
lib/execute/execSetResults.php:        $gui->map_last_exec=getLastExecution($db,$tcase_id,$tcversion_id,$gui,$args,$tcase_mgr);
lib/execute/execSetResults.php:    if ($args->doDelete)
lib/execute/execSetResults.php:    	delete_execution($db,$args->exec_to_delete);
lib/execute/execSetResults.php:    // --------------------------------------------------------------------------------------------
lib/execute/execSetResults.php:    $gui->map_last_exec_any_build = null;
lib/execute/execSetResults.php:    $gui->other_execs=null;
lib/execute/execSetResults.php:    if($args->level == 'testcase')
lib/execute/execSetResults.php:    	// @TODO 20090815 - franciscom check what to do with platform
lib/execute/execSetResults.php:    	if( $cfg->exec_cfg->show_last_exec_any_build )
lib/execute/execSetResults.php:    		// 20090716 - franciscom - get_last_execution() interface changes
lib/execute/execSetResults.php:    	    $gui->map_last_exec_any_build = $tcase_mgr->get_last_execution($tcase_id,$tcversion_id,$args->tplan_id,
lib/execute/execSetResults.php:    	                                                                   $args->platform_id,$options);
lib/execute/execSetResults.php:    	    $tc_current = $gui->map_last_exec_any_build;
lib/execute/execSetResults.php:    	$gui->req_details = $req_mgr->get_all_for_tcase($tcase_id); //Bug 2068
lib/execute/execSetResults.php:    	$gui->other_execs=getOtherExecutions($db,$tcase_id,$tcversion_id,$gui,$args,$cfg,$tcase_mgr);
lib/execute/execSetResults.php:    	if(!is_null($gui->other_execs))
lib/execute/execSetResults.php:			  foreach ($gui->other_execs as $key => $execution)
lib/execute/execSetResults.php:		  // asimon - added $g_bugInterfaceOn, $g_bugInterface
lib/execute/execSetResults.php:    	  $other_info=exec_additional_info($db,$attachmentRepository,$tcase_mgr,$gui->other_execs,
lib/execute/execSetResults.php:    	  $args->tplan_id,$args->tproject_id, $g_bugInterfaceOn, $g_bugInterface);
lib/execute/execSetResults.php:    	  $gui->attachments=$other_info['attachment'];
lib/execute/execSetResults.php:    	  $gui->bugs=$other_info['bugs'];
lib/execute/execSetResults.php:    	  $gui->other_exec_cfields=$other_info['cfexec_values'];
lib/execute/execSetResults.php:    	  if( is_array($tcversion_id) && (count($gui->other_execs) != count($gui->map_last_exec)) )
lib/execute/execSetResults.php:    	        if( !isset($gui->other_execs[$version_id]) )
lib/execute/execSetResults.php:    	            $gui->other_execs[$version_id]=null;  
lib/execute/execSetResults.php:    	} // if(!is_null($gui->other_execs))
lib/execute/execSetResults.php:smarty_assign_tsuite_info($smarty,$_REQUEST,$db,$tree_mgr,$tcase_id,$args->tproject_id);
lib/execute/execSetResults.php:if (!is_null($args->testcases_to_show) && $args->level == 'testsuite') {
lib/execute/execSetResults.php:	foreach($gui->map_last_exec as $key => $tc) {
lib/execute/execSetResults.php:		if (!in_array($tc['testcase_id'], $args->testcases_to_show)) {
lib/execute/execSetResults.php:			unset($gui->map_last_exec[$key]); // tc shall not be displayed
lib/execute/execSetResults.php:	$gui->map_last_exec = array_values($gui->map_last_exec);
lib/execute/execSetResults.php:// $gui->can_use_bulk_op=$args->level == 'testsuite' && (!is_null($gui->map_last_exec) && count($gui->map_last_exec) > 1) ? 1 : 0;
lib/execute/execSetResults.php:$gui->can_use_bulk_op = ($args->level == 'testsuite' && count($gui->map_last_exec) > 1) ? 1 : 0;
lib/execute/execSetResults.php:if( $gui->can_use_bulk_op )
lib/execute/execSetResults.php:    $gui->execStatusValues=createResultsMenu();
lib/execute/execSetResults.php:    if( isset($gui->execStatusValues[$cfg->tc_status['all']]) )
lib/execute/execSetResults.php:        unset($gui->execStatusValues[$cfg->tc_status['all']]);
lib/execute/execSetResults.php:    $of=web_editor("bulk_exec_notes",$_SESSION['basehref'],$cfg->editorCfg);
lib/execute/execSetResults.php:   	$of->Value = getItemTemplateContents('execution_template', $of->InstanceName, null);
lib/execute/execSetResults.php:    $gui->bulk_exec_notes_editor=$of->CreateHTML(10,60);         
lib/execute/execSetResults.php:    $gui->exec_notes_editors=createExecNotesWebEditor($gui->map_last_exec,$_SESSION['basehref'],$cfg->editorCfg);
lib/execute/execSetResults.php:$smarty->assign('test_automation_enabled',0);
lib/execute/execSetResults.php:$smarty->assign('cfg',$cfg);
lib/execute/execSetResults.php:$smarty->assign('users',tlUser::getByIDs($db,$userSet,'id'));
lib/execute/execSetResults.php:$smarty->assign('gui',$gui);
lib/execute/execSetResults.php:$smarty->assign('g_bugInterface', $g_bugInterface);
lib/execute/execSetResults.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/execute/execSetResults.php:	20100625 - asimon - fixed a little bug in platform id initializing when no platform is used
lib/execute/execSetResults.php:	20090913 - franciscom - fixed bug on filter_status initialization
lib/execute/execSetResults.php:	$args->doExec = isset($_REQUEST['execute_cases']) ? 1 : 0;
lib/execute/execSetResults.php:	$args->doDelete = isset($_REQUEST['do_delete']) ? $_REQUEST['do_delete'] : 0;
lib/execute/execSetResults.php:	$args->cf_selected = isset($_REQUEST['cfields']) ? unserialize($_REQUEST['cfields']) : null;
lib/execute/execSetResults.php:	$args->tc_versions = isset($_REQUEST['tc_version']) ? $_REQUEST['tc_version'] : null;  
lib/execute/execSetResults.php:		$args->$key = isset($session_data[$sessionKey]) ? $session_data[$sessionKey] : null;
lib/execute/execSetResults.php:	if (is_null($args->build_id)) {
lib/execute/execSetResults.php:		$args->build_id = (isset($_REQUEST['build_id']) && is_numeric($_REQUEST['build_id'])) ? $_REQUEST['build_id'] : 0;
lib/execute/execSetResults.php:	if (is_null($args->platform_id)) {
lib/execute/execSetResults.php:		$args->platform_id = (isset($_REQUEST['platform_id']) && is_numeric($_REQUEST['platform_id'])) ? $_REQUEST['platform_id'] : 0;
lib/execute/execSetResults.php:		$args->$key = isset($_REQUEST[$key]) ? $_REQUEST[$key] : $value;
lib/execute/execSetResults.php:    // See details on: "When nullify filter_status - 20080504" in this file
lib/execute/execSetResults.php:    if(is_null($args->filter_status) || trim($args->filter_status) || $args->level == 'testcase')
lib/execute/execSetResults.php:        $args->filter_status = null;  
lib/execute/execSetResults.php:        $args->filter_status = unserialize($args->filter_status);
lib/execute/execSetResults.php: 	$args->id = isset($_REQUEST['id']) ? intval($_REQUEST['id']) : 0;
lib/execute/execSetResults.php:		    switch($cfgObj->exec_cfg->expand_collapse->$cfgKey )
lib/execute/execSetResults.php:					$key2loop[$key] = $cfgObj->exec_cfg->expand_collapse->$cfgKey;
lib/execute/execSetResults.php: 		$args->$key = isset($_REQUEST[$key]) ? intval($_REQUEST[$key]) : $value;
lib/execute/execSetResults.php:			setcookie($cookiePrefix . $key,$args->$key,TL_COOKIE_KEEPTIME, '/');
lib/execute/execSetResults.php:    switch($args->level)
lib/execute/execSetResults.php:        $args->tc_id = isset($_REQUEST['id']) ? intval($_REQUEST['id']) : null;
lib/execute/execSetResults.php:        if( !is_null($args->tc_versions) )
lib/execute/execSetResults.php:        	$args->tc_id = current($args->tc_versions);
lib/execute/execSetResults.php:        	$args->id = $args->tc_id;
lib/execute/execSetResults.php:        	$args->version_id = key($args->tc_versions);
lib/execute/execSetResults.php:        $args->tsuite_id = null;
lib/execute/execSetResults.php:        $args->tsuite_id = isset($_REQUEST['id']) ? intval($_REQUEST['id']) : null;
lib/execute/execSetResults.php:        $args->tc_id = null;
lib/execute/execSetResults.php:	$args->keyword_id = 0;
lib/execute/execSetResults.php:		$args->keyword_id = $session_data['filter_keywords'];
lib/execute/execSetResults.php:		if (is_array($args->keyword_id) && count($args->keyword_id) == 1) {
lib/execute/execSetResults.php:			$args->keyword_id = $args->keyword_id[0];
lib/execute/execSetResults.php:	$args->keywordsFilterType = null;
lib/execute/execSetResults.php:		$args->keywordsFilterType = $session_data['filter_keywords_filter_type'];
lib/execute/execSetResults.php:    $args->include_unassigned = isset($session_data['filter_assigned_user_include_unassigned']) 
lib/execute/execSetResults.php:    // 20090419 - franciscom - BUGID
lib/execute/execSetResults.php:    // BUGID 3301 and related - asimon - changed refresh tree logic 
lib/execute/execSetResults.php:    $args->refreshTree = isset($session_data['setting_refresh_tree_on_action'])
lib/execute/execSetResults.php:	$args->tproject_id = isset($_REQUEST['tproject_id']) ? $_REQUEST['tproject_id'] : $_SESSION['testprojectID'];
lib/execute/execSetResults.php:	$args->tplan_id = isset($_REQUEST['tplan_id']) ? $_REQUEST['tplan_id'] : $_SESSION['testplanID'];
lib/execute/execSetResults.php:	$args->user = $_SESSION['currentUser'];
lib/execute/execSetResults.php:    $args->user_id = $args->user->dbID;
lib/execute/execSetResults.php:   	$args->testcases_to_show = null;
lib/execute/execSetResults.php:		$args->testcases_to_show = $session_data['testcases_to_show'];
lib/execute/execSetResults.php:        $history_on = $exec_cfg->history_on;
lib/execute/execSetResults.php:		$rs = $db->fetchRowsIntoMap($sql,'tc_id');
lib/execute/execSetResults.php:  $fpath=$tree_mgr->get_full_path_verbose($tcase_id, array('output_format' => 'id_name'));
lib/execute/execSetResults.php:  $smarty->assign('tsuite_info',$tsuite_info);
lib/execute/execSetResults.php:  // --------------------------------------------------------------------------------
lib/execute/execSetResults.php:			    switch($exec_cfg->expand_collapse->testsuite_details)
lib/execute/execSetResults.php:						$expand_collapse = $exec_cfg->expand_collapse->testsuite_details;
lib/execute/execSetResults.php:    	  		$cached_cf[$tsuite_id] = $tsuite_mgr->html_table_of_custom_field_values($tsuite_id,'design',null,$tproject_id);
lib/execute/execSetResults.php:    	$smarty->assign('tsd_div_id_list',implode(",",$a_ts));
lib/execute/execSetResults.php:    	$smarty->assign('tsd_hidden_id_list',implode(",",$a_tsvw));
lib/execute/execSetResults.php:    	$smarty->assign('tsd_val_for_hidden_list',implode(",",$a_tsval));
lib/execute/execSetResults.php:		$smarty->assign('ts_cf_smarty',$ts_cf_smarty);
lib/execute/execSetResults.php:// --------------------------------------------------------------------------------
lib/execute/execSetResults.php:  20100625 - asimon - added parameters $bugInterfaceOn, $bugInterface 
lib/execute/execSetResults.php:      $cfexec_values[$exec_id] = $tcase_mgr->html_table_of_custom_field_values($tcversion_id,'execution',null,
lib/execute/execSetResults.php:			if ($myResult != -1 && $myNotes != -1) {
lib/execute/execSetResults.php:				$db_now = $db->db_now();
lib/execute/execSetResults.php:				$my_notes = $db->prepare_string(trim($myNotes));
lib/execute/execSetResults.php:				$db->exec_query($sql);
lib/execute/execSetResults.php:    $simple_tester_roles=array_flip($exec_cfg->simple_tester_roles);
lib/execute/execSetResults.php:    $effective_role = $userObj->getEffectiveRole($db,$tproject_id,$tplan_id);
lib/execute/execSetResults.php:	// 20080104 - franciscom - Please explain why do you think will not work ok ?
lib/execute/execSetResults.php:	// role will not do the desired effect of putting the logged in user in tester-view-mode
lib/execute/execSetResults.php:	// 20080310 - franciscom - 
lib/execute/execSetResults.php:	$can_execute = $effective_role->hasRight('testplan_execute');
lib/execute/execSetResults.php:	$can_manage = $effective_role->hasRight('testplan_planning');
lib/execute/execSetResults.php:	// 20081217 - franciscom
lib/execute/execSetResults.php:	// $use_exec_cfg = $effective_role->dbID == TL_ROLES_TESTER || ($can_execute && !$can_manage);
lib/execute/execSetResults.php:    $use_exec_cfg = isset($simple_tester_roles[$effective_role->dbID]) || ($can_execute && !$can_manage);
lib/execute/execSetResults.php:    return  $use_exec_cfg ? $exec_cfg->exec_mode->tester : 'all';
lib/execute/execSetResults.php:  rev: 20100121 - franciscom - platform refactoring
lib/execute/execSetResults.php:		$p3 = $tcase_mgr->get_version_exec_assignment($version_id,$tplan_id);
lib/execute/execSetResults.php:				$exec_info[$version_id]['assigned_user']= $user->getDisplayName();  
lib/execute/execSetResults.php:  rev : 20080104 - creation  
lib/execute/execSetResults.php:        return null;  // nothing todo >>>------> bye!  
lib/execute/execSetResults.php:        $of->Value = $itemTemplateValue;
lib/execute/execSetResults.php:        $editors[$tcase_id]=$of->CreateHTML(10,60);         
lib/execute/execSetResults.php:    $cfg->exec_cfg = config_get('exec_cfg');
lib/execute/execSetResults.php:    $cfg->gui_cfg = config_get('gui');
lib/execute/execSetResults.php:    $cfg->bts_type = config_get('interface_bugs');
lib/execute/execSetResults.php:    $cfg->tc_status = $results['status_code'];
lib/execute/execSetResults.php:    $cfg->testcase_cfg = config_get('testcase_cfg'); 
lib/execute/execSetResults.php:    $cfg->editorCfg = getWebEditorCfg('execution');
lib/execute/execSetResults.php:    $grants->execute = $userObj->hasRight($dbHandler,"testplan_execute",$tproject_id,$tplan_id);
lib/execute/execSetResults.php:    $grants->execute = $grants->execute=="yes" ? 1 : 0;
lib/execute/execSetResults.php:    $grants->delete_execution=$exec_cfg->can_delete_execution;
lib/execute/execSetResults.php:    $grants->edit_exec_notes = $grants->execute && $exec_cfg->edit_notes;
lib/execute/execSetResults.php:    // 20090419 - franciscom - BUGID 
lib/execute/execSetResults.php:    $grants->edit_testcase = $userObj->hasRight($dbHandler,"mgt_modify_tc",$tproject_id,$tplan_id);
lib/execute/execSetResults.php:    $grants->edit_testcase = $grants->edit_testcase=="yes" ? 1 : 0;
lib/execute/execSetResults.php:  rev: 20080429 - franciscom
lib/execute/execSetResults.php:    $platformMgr = new tlPlatform($dbHandler,$argsObj->tproject_id);
lib/execute/execSetResults.php:    $gui->tplan_id=$argsObj->tplan_id;
lib/execute/execSetResults.php:    $gui->tproject_id=$argsObj->tproject_id;
lib/execute/execSetResults.php:    $gui->build_id = $argsObj->build_id;
lib/execute/execSetResults.php:    $gui->platform_id = $argsObj->platform_id;
lib/execute/execSetResults.php:    $gui->execStatusValues=null;
lib/execute/execSetResults.php:    $gui->can_use_bulk_op=0;
lib/execute/execSetResults.php:    $gui->exec_notes_editors=null;
lib/execute/execSetResults.php:    $gui->bulk_exec_notes_editor=null;
lib/execute/execSetResults.php:    $gui->req_details=null;
lib/execute/execSetResults.php:    $gui->attachmentInfos=null;
lib/execute/execSetResults.php:    $gui->bugs=null;
lib/execute/execSetResults.php:    $gui->other_exec_cfields=null;
lib/execute/execSetResults.php:    $gui->ownerDisplayName = null;
lib/execute/execSetResults.php:    $gui->editorType=$cfgObj->editorCfg['type'];
lib/execute/execSetResults.php:    $gui->filter_assigned_to=$argsObj->filter_assigned_to;
lib/execute/execSetResults.php:    $gui->tester_id=$argsObj->user_id;
lib/execute/execSetResults.php:    $gui->include_unassigned=$argsObj->include_unassigned;
lib/execute/execSetResults.php:    $gui->tpn_view_status=$argsObj->tpn_view_status;
lib/execute/execSetResults.php:    $gui->bn_view_status=$argsObj->bn_view_status;
lib/execute/execSetResults.php:    $gui->bc_view_status=$argsObj->bc_view_status;
lib/execute/execSetResults.php:    $gui->platform_notes_view_status=$argsObj->platform_notes_view_status;
lib/execute/execSetResults.php:    $gui->refreshTree = $argsObj->refreshTree;
lib/execute/execSetResults.php:    if (!$argsObj->status || $argsObj->status == $cfgObj->tc_status['not_run']) {
lib/execute/execSetResults.php:    	$gui->refreshTree = 0;
lib/execute/execSetResults.php:    $gui->map_last_exec_any_build=null;
lib/execute/execSetResults.php:    $gui->map_last_exec=null;
lib/execute/execSetResults.php:    // 20081122 - franciscom
lib/execute/execSetResults.php:    $gui->tcasePrefix = $tprojectMgr->getTestCasePrefix($argsObj->tproject_id);
lib/execute/execSetResults.php:    $build_info = $buildMgr->get_by_id($argsObj->build_id);
lib/execute/execSetResults.php:    $gui->build_notes=$build_info['notes'];
lib/execute/execSetResults.php:    $gui->build_is_open=($build_info['is_open'] == 1 ? 1 : 0);
lib/execute/execSetResults.php:    $gui->execution_types=$tcaseMgr->get_execution_types();
lib/execute/execSetResults.php:    if($argsObj->filter_assigned_to)
lib/execute/execSetResults.php:    	$userSet = tlUser::getByIds($dbHandler,array_values($argsObj->filter_assigned_to));
lib/execute/execSetResults.php:    	        $gui->ownerDisplayName[$key] = $userObj->getDisplayName();
lib/execute/execSetResults.php:    // ------------------------------------------------------------------
lib/execute/execSetResults.php:    $the_builds = $tplanMgr->get_builds_for_html_options($argsObj->tplan_id);
lib/execute/execSetResults.php:    $gui->build_name = isset($the_builds[$argsObj->build_id]) ? $the_builds[$argsObj->build_id] : '';
lib/execute/execSetResults.php:    // 20090419 - franciscom
lib/execute/execSetResults.php:    $gui->grants = initializeRights($dbHandler,$argsObj->user,$argsObj->tproject_id,$argsObj->tplan_id);
lib/execute/execSetResults.php:    $gui->exec_mode = initializeExecMode($dbHandler,$cfgObj->exec_cfg,
lib/execute/execSetResults.php:                                         $argsObj->user,$argsObj->tproject_id,$argsObj->tplan_id);
lib/execute/execSetResults.php:    $rs = $tplanMgr->get_by_id($argsObj->tplan_id);
lib/execute/execSetResults.php:    $gui->testplan_notes = $rs['notes'];
lib/execute/execSetResults.php:    $gui->testplan_cfields = $tplanMgr->html_table_of_custom_field_values($argsObj->tplan_id,'design',
lib/execute/execSetResults.php:    $gui->history_on = manage_history_on($_REQUEST,$_SESSION,$cfgObj->exec_cfg,
lib/execute/execSetResults.php:    $gui->history_status_btn_name = $gui->history_on ? 'btn_history_off' : 'btn_history_on';
lib/execute/execSetResults.php:    $dummy = $platformMgr->getLinkedToTestplan($argsObj->tplan_id);
lib/execute/execSetResults.php:    $gui->has_platforms = !is_null($dummy) ? 1 : 0;
lib/execute/execSetResults.php:    $gui->platform_info['id']=0;
lib/execute/execSetResults.php:    $gui->platform_info['name']='';
lib/execute/execSetResults.php:    if(!is_null($argsObj->platform_id) && $argsObj->platform_id > 0 )
lib/execute/execSetResults.php:    	$gui->platform_info = $platformMgr->getByID($argsObj->platform_id);
lib/execute/execSetResults.php:    20090913 - franciscom - changes due to platform feature
lib/execute/execSetResults.php:  	20090718 - franciscom - cfield location management
lib/execute/execSetResults.php:  	20080811 - franciscom - BUGID 1650 (REQ)
lib/execute/execSetResults.php:    $locationFilters=$tcaseMgr->buildCFLocationMap();
lib/execute/execSetResults.php:    $guiObj->design_time_cfields='';
lib/execute/execSetResults.php:  	$guiObj->testplan_design_time_cfields='';
lib/execute/execSetResults.php:  	$tcase_id = isset($tcase['tcase_id']) ? $tcase['tcase_id'] : $argsObj->id;
lib/execute/execSetResults.php:  	$guiObj->tcAttachments[$tcase_id] = getAttachmentInfos($docRepository,$tcase_id,'nodes_hierarchy',1);
lib/execute/execSetResults.php:		// 20090718 - franciscom
lib/execute/execSetResults.php:    	$guiObj->design_time_cfields[$tcase_id][$locationKey] = 
lib/execute/execSetResults.php:  		         $tcaseMgr->html_table_of_custom_field_values($tcase_id,'design',$finalFilters,
lib/execute/execSetResults.php:  		                                                      null,null,$argsObj->tproject_id);
lib/execute/execSetResults.php:    	// 20090718 - franciscom - TO BE refactored
lib/execute/execSetResults.php:    	$guiObj->testplan_design_time_cfields[$tcase_id] = 
lib/execute/execSetResults.php:  		         $tcaseMgr->html_table_of_custom_field_values($tcversion_id,'testplan_design',$cf_filters,
lib/execute/execSetResults.php:  		                                                      null,null,$argsObj->tproject_id,null,$link_id);
lib/execute/execSetResults.php:  	if($guiObj->grants->execute)
lib/execute/execSetResults.php:  	   $guiObj->execution_time_cfields[$tcase_id] = 
lib/execute/execSetResults.php:  	            $tcaseMgr->html_table_of_custom_field_inputs($tcase_id,null,'execution',"_{$tcase_id}",null,
lib/execute/execSetResults.php:  	                                                         null,$argsObj->tproject_id);
lib/execute/execSetResults.php:    $tc_info=$treeMgr->get_node_hierarchy_info($tcase_id);
lib/execute/execSetResults.php:	$guiObj->tSuiteAttachments[$tc_info['parent_id']] = getAttachmentInfos($docRepository,$tc_info['parent_id'],
lib/execute/execSetResults.php:	// 20090716 - franciscom - get_last_execution() interface changes
lib/execute/execSetResults.php:    $last_exec = $tcaseMgr->get_last_execution($tcase_id,$tcversion_id,$argsObj->tplan_id,
lib/execute/execSetResults.php:                                               $argsObj->build_id,$argsObj->platform_id,$options);
lib/execute/execSetResults.php:                                       $argsObj->tplan_id,$argsObj->platform_id);
lib/execute/execSetResults.php:        $can_execute=$guiObj->grants->execute && ($guiObj->build_is_open);
lib/execute/execSetResults.php:        $last_exec=setCanExecute($last_exec,$guiObj->exec_mode,
lib/execute/execSetResults.php:                                 $can_execute,$argsObj->user_id);
lib/execute/execSetResults.php:    if($guiObj->history_on)
lib/execute/execSetResults.php:		$filters['build_id'] = $argsObj->build_id;
lib/execute/execSetResults.php:      	$filters['platform_id'] = $argsObj->platform_id;
lib/execute/execSetResults.php:      	if($cfgObj->exec_cfg->show_history_all_builds )
lib/execute/execSetResults.php:      	if($cfgObj->exec_cfg->show_history_all_platforms )
lib/execute/execSetResults.php:      	$options = array('exec_id_order' => $cfgObj->exec_cfg->history_order);
lib/execute/execSetResults.php:      	$other_execs = $tcaseMgr->get_executions($tcase_id,$tcversion_id,$argsObj->tplan_id,
lib/execute/execSetResults.php:        $aux_map = $tcaseMgr->get_last_execution($tcase_id,$tcversion_id,$argsObj->tplan_id,
lib/execute/execSetResults.php:                                                 $argsObj->build_id,$argsObj->platform_id);
lib/execute/execSetResults.php:  rev: 20080811 - franciscom - BUGID 1650 (REQ)
lib/execute/execSetResults.php:    $locationFilters=$tcaseMgr->buildCFLocationMap();
lib/execute/execSetResults.php:    $tsuite_data = $tsuite_mgr->get_by_id($argsObj->id);
lib/execute/execSetResults.php:    // @TODO - 20090815 - franciscom
lib/execute/execSetResults.php:    $filters = array('keywords' => $argsObj->keyword_id);
lib/execute/execSetResults.php:    $out = gen_spec_view($dbHandler,'testplan',$argsObj->tplan_id,$argsObj->id,$tsuite_data['name'],
lib/execute/execSetResults.php:    $testSet->tcase_id = array();
lib/execute/execSetResults.php:    $testSet->tcversion_id = array();
lib/execute/execSetResults.php:         $testSet->tcase_id[]=$xkey;
lib/execute/execSetResults.php:         $testSet->tcversion_id[]=$xvalue['linked_version_id'];
lib/execute/execSetResults.php:    // ---------------------------------------------------------------------------------
lib/execute/execSetResults.php:    $testCaseQty = count($testSet->tcase_id);
lib/execute/execSetResults.php:		$dummy = $tcaseMgr->cfield_mgr->getLocations();
lib/execute/execSetResults.php:		$dummy_id = current($testSet->tcase_id);
lib/execute/execSetResults.php:				$tcaseMgr->html_table_of_custom_field_inputs($dummy_id,$argsObj->tproject_id,'execution',$suffix,
lib/execute/execSetResults.php:	            	                               			 null,null,$argsObj->tproject_id);
lib/execute/execSetResults.php:		$guiObj->execution_time_cfields[$index] = $execution_time_cfields;
lib/execute/execSetResults.php:        foreach($testSet->tcase_id as $testcase_id)
lib/execute/execSetResults.php:            $path_f = $treeMgr->get_path($testcase_id,null,'full');
lib/execute/execSetResults.php:            	if( $path_elem['parent_id'] == $argsObj->id )
lib/execute/execSetResults.php:            		// ID of branch starting node is in $argsObj->id
lib/execute/execSetResults.php:            		$guiObj->tcAttachments[$testcase_id] = getAttachmentInfos($docRepository,$testcase_id,
lib/execute/execSetResults.php:            			$guiObj->design_time_cfields[$testcase_id][$locationKey] = 
lib/execute/execSetResults.php:            				$tcaseMgr->html_table_of_custom_field_values($testcase_id,'design',$finalFilters);
lib/execute/execSetResults.php:                		$guiObj->testplan_design_time_cfields[$testcase_id] = 
lib/execute/execSetResults.php:  	            		        $tcaseMgr->html_table_of_custom_field_values($testcase_id,'testplan_design',$cf_filters,
lib/execute/execSetResults.php:  	            		                                                     null,null,$argsObj->tproject_id);
lib/execute/execSetResults.php:                	if($guiObj->grants->execute)
lib/execute/execSetResults.php:            				$guiObj->execution_time_cfields[$testcase_id] = 
lib/execute/execSetResults.php:            				$tcaseMgr->html_table_of_custom_field_inputs($testcase_id, null,'execution',   
lib/execute/execSetResults.php:            				                                             $argsObj->tproject_id);
lib/execute/execSetResults.php:            	} // if( $path_elem['parent_id'] == $argsObj->id )
lib/execute/execSetResults.php:              	if($path_elem['node_table'] == 'testsuites' && !isset($guiObj->tSuiteAttachments[$path_elem['id']]))
lib/execute/execSetResults.php:              		$guiObj->tSuiteAttachments[$path_elem['id']] = 
lib/execute/execSetResults.php:    return array($testSet->tcase_id,$testSet->tcversion_id);  
lib/execute/bugDelete.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/execute/bugDelete.php:if ($args->exec_id && $args->bug_id != "")
lib/execute/bugDelete.php:	if (write_execution_bug($db,$args->exec_id, $args->bug_id,true))
lib/execute/bugDelete.php:		logAuditEvent(TLS("audit_executionbug_deleted",$args->bug_id),"DELETE",$args->exec_id,"executions");
lib/execute/bugDelete.php:$smarty->assign('msg',$msg);
lib/execute/bugDelete.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/execute/bugDelete.php:		"bug_id" => array("GET",tlInputParameter::STRING_N,0,$g_bugInterface->getBugIDMaxLength()),
lib/execute/bugDelete.php:		$hasRights = $user->hasRight($db,"testplan_execute");
lib/execute/execNotes.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/execute/execNotes.php: * rev: 20080827 - franciscom - BUGID 1692
lib/execute/execNotes.php:switch ($args->doAction)
lib/execute/execNotes.php:$map = get_execution($db,$args->exec_id);
lib/execute/execNotes.php:$owebeditor->Value = $map[0]['notes'];
lib/execute/execNotes.php:$smarty->assign('notes',$owebeditor->CreateHTML());
lib/execute/execNotes.php:$smarty->assign('editorType',$editorCfg['type']);
lib/execute/execNotes.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/execute/execNotes.php:           " SET notes='" . $dbHandler->prepare_string($argsObj->notes) . "' " .
lib/execute/execNotes.php:           " WHERE id={$argsObj->exec_id} ";
lib/execute/execNotes.php:    $dbHandler->exec_query($sql);     
lib/execute/editExecution.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/execute/editExecution.php: * rev: 20090530 - franciscom - BUGID 
lib/execute/editExecution.php:$gui->exec_id = $args->exec_id;
lib/execute/editExecution.php:$gui->tcversion_id = $args->tcversion_id;
lib/execute/editExecution.php:$gui->tplan_id = $args->tplan_id;
lib/execute/editExecution.php:$gui->tproject_id = $args->tproject_id;
lib/execute/editExecution.php:$owebeditor = web_editor('notes',$args->basehref,$editorCfg);
lib/execute/editExecution.php:switch ($args->doAction)
lib/execute/editExecution.php:$map = get_execution($db,$args->exec_id);
lib/execute/editExecution.php:$owebeditor->Value = $map[0]['notes'];
lib/execute/editExecution.php:$gui->cfields_exec = $tcase_mgr->html_table_of_custom_field_inputs($args->tcversion_id,null,'execution','_cf',
lib/execute/editExecution.php:                                                                   $args->exec_id,$args->tplan_id,$args->tproject_id);
lib/execute/editExecution.php:$gui->notes = $owebeditor->CreateHTML();
lib/execute/editExecution.php:$gui->editorType = $editorCfg['type'];
lib/execute/editExecution.php:$smarty->assign('gui',$gui);
lib/execute/editExecution.php:$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
lib/execute/editExecution.php: 	updateExecutionNotes($db,$args->exec_id,$args->notes);
lib/execute/editExecution.php:    $cfield_mgr->execution_values_to_db($request,$args->tcversion_id,$args->exec_id,$args->tplan_id);
lib/execute/editExecution.php:    $args->basehref = $_SESSION['basehref'];
lib/execute/editExecution.php:	if ($execCfg->edit_notes != 1)
lib/execute/editExecution.php:	return $user->hasRight($db,"testplan_execute");
lib/ajax/getrequirementnodes.php:* 	TestLink Open Source Project - http://testlink.sourceforge.net/
lib/ajax/getrequirementnodes.php:*   - Create test suites, test cases on test project
lib/ajax/getrequirementnodes.php:*   - Assign keywords to test cases
lib/ajax/getrequirementnodes.php:*   - Assign requirements to test cases
lib/ajax/getrequirementnodes.php:*	20100306 - franciscom - BUGID 0003003: EXTJS does not count # req's
lib/ajax/getrequirementnodes.php:*	20091208 - franciscom - added management of new attribute 'forbidden_parent'
lib/ajax/getrequirementnodes.php:*	20091122 - franciscom - manage rep spec doc id
lib/ajax/getrequirementnodes.php:*	20090502 - franciscom - BUGID 2309 - display requirement doc id
lib/ajax/getrequirementnodes.php:// for debug - file_put_contents('d:\request.txt', serialize($_REQUEST));
lib/ajax/getrequirementnodes.php:	if($cfg->child_requirements_mgmt)
lib/ajax/getrequirementnodes.php:    $nodeSet = $dbHandler->get_recordset($sql);
lib/ajax/getrequirementnodes.php:        $requirements = $dbHandler->fetchRowsIntoMap($sql,'id');
lib/ajax/getrequirementnodes.php:	    $ntypes = $treeMgr->get_available_node_types();
lib/ajax/getrequirementnodes.php:	                $treeMgr->getAllItemsID($row['id'],$req_list,$peerTypes);
lib/ajax/dragdroprequirementnodes.php:* 	TestLink Open Source Project - http://testlink.sourceforge.net/
lib/ajax/dragdroprequirementnodes.php:*   rev: 20080605 - franciscom
lib/ajax/dragdroprequirementnodes.php:switch($args->doAction)
lib/ajax/dragdroprequirementnodes.php:        $treeMgr->change_parent($args->nodeid,$args->newparentid);
lib/ajax/dragdroprequirementnodes.php:        // 20080831 - franciscom
lib/ajax/dragdroprequirementnodes.php:             " SET srs_id={$args->newparentid} " .
lib/ajax/dragdroprequirementnodes.php:             " WHERE id={$args->nodeid}";
lib/ajax/dragdroprequirementnodes.php:        $db->exec_query($sql);
lib/ajax/dragdroprequirementnodes.php:        $dummy=explode(',',$args->nodelist);
lib/ajax/dragdroprequirementnodes.php:        $treeMgr->change_order_bulk($dummy);
lib/ajax/dragdroprequirementnodes.php:        $args->$key=isset($_REQUEST[$key]) ? $_REQUEST[$key] : null;   
lib/ajax/dragdroptreenodes.php:* 	TestLink Open Source Project - http://testlink.sourceforge.net/
lib/ajax/dragdroptreenodes.php:*   rev: 20080605 - franciscom
lib/ajax/dragdroptreenodes.php:switch($args->doAction)
lib/ajax/dragdroptreenodes.php:        $treeMgr->change_parent($args->nodeid,$args->newparentid);
lib/ajax/dragdroptreenodes.php:        $dummy=explode(',',$args->nodelist);
lib/ajax/dragdroptreenodes.php:        $treeMgr->change_order_bulk($dummy);
lib/ajax/dragdroptreenodes.php:        $args->$key=isset($_REQUEST[$key]) ? $_REQUEST[$key] : null;   
lib/ajax/dragdroptprojectnodes.php:* 	TestLink Open Source Project - http://testlink.sourceforge.net/
lib/ajax/dragdroptprojectnodes.php:*   rev: 20080605 - franciscom
lib/ajax/dragdroptprojectnodes.php:switch($args->doAction)
lib/ajax/dragdroptprojectnodes.php:        $treeMgr->change_parent($args->nodeid,$args->newparentid);
lib/ajax/dragdroptprojectnodes.php:        $dummy=explode(',',$args->nodelist);
lib/ajax/dragdroptprojectnodes.php:        $treeMgr->change_order_bulk($dummy);
lib/ajax/dragdroptprojectnodes.php:        $args->$key=isset($_REQUEST[$key]) ? $_REQUEST[$key] : null;   
lib/ajax/gettprojectnodes.php:* 	TestLink Open Source Project - http://testlink.sourceforge.net/
lib/ajax/gettprojectnodes.php:*   - Create test suites, test cases on test project
lib/ajax/gettprojectnodes.php:*   - Assign keywords to test cases
lib/ajax/gettprojectnodes.php:*   - Assign requirements to test cases
lib/ajax/gettprojectnodes.php:* 	EXT-JS - Important:
lib/ajax/gettprojectnodes.php:* 	Custom keys can be added, and will be access on EXT-JS code using
lib/ajax/gettprojectnodes.php:*   rev: 20100530 - franciscom - added custom node attribute: tlNodeType
lib/ajax/gettprojectnodes.php:*		 20081213 - franciscom - BUGID 1928 - contribution
lib/ajax/gettprojectnodes.php:*        20080820 - franciscom - added operation argument
lib/ajax/gettprojectnodes.php:*        20080817 - franciscom - added logic to display test case quantity on
lib/ajax/gettprojectnodes.php:*        20080622 - franciscom - added new argument (show_tcases), 
lib/ajax/gettprojectnodes.php:*        20080603 - franciscom - added external id on test case nodes
lib/ajax/gettprojectnodes.php:// 20080622 - franciscom - useful only for feature: test plan add test case
lib/ajax/gettprojectnodes.php:// for debug - file_put_contents('d:\request.txt', serialize($_REQUEST));                            
lib/ajax/gettprojectnodes.php:    $nodeSet = $dbHandler->get_recordset($sql);
lib/ajax/gettprojectnodes.php:        $external = $dbHandler->fetchRowsIntoMap($sql,'parent_id');
lib/ajax/gettprojectnodes.php:	                // 20080817 - franciscom - 
lib/ajax/gettprojectnodes.php:	                $tcase_qty = $tproject_mgr->count_testcases($row['id']);
lib/ajax/gettestcasesummary.php:* 	TestLink Open Source Project - http://testlink.sourceforge.net/
lib/ajax/gettestcasesummary.php:*	20091109 - franciscom - BUGID  0002937: add/remove test case hover over test case 
lib/ajax/gettestcasesummary.php:		$tcase = $tcase_mgr->get_by_id($tcase_id,$tcversion_id);
lib/ajax/gettestcasesummary.php:		$tcase = $tcase_mgr->get_last_version_info($tcase_id);
lib/ajax/getUsersWithRight.php: * TestLink Open Source Project - http://testlink.sourceforge.net/ 
lib/ajax/getUsersWithRight.php:		"right" => array(tlInputParameter::STRING_N,0,100,'/^[a-z0-9_]+$/')
lib/ajax/getUsersWithRight.php:	$data['rows'] = $tlUser->getNamesForProjectRight($db,$args['right'],$_SESSION['testprojectID']);
lib/ajax/checkDuplicateName.php: * TestLink Open Source Project - http://testlink.sourceforge.net/
lib/ajax/checkDuplicateName.php: * if non-unique test case name is entered.
lib/ajax/checkDuplicateName.php: * 20100225 - eloff - initial commit
lib/ajax/checkDuplicateName.php:	$node_types_descr_id=$tree_manager->get_available_node_types();
lib/ajax/checkDuplicateName.php:	$check = $tree_manager->nodeNameExists($name, $my_node_type, $tc_id);
